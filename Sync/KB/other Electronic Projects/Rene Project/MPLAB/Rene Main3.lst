MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;------------------------------------------------------------------- 
                      00002 ; 
                      00003 ; Binary-to-BCD.  Written by John Payson. 
                      00004 ; 
                      00005 ; Enter with 16-bit binary number in NumH:NumL. 
                      00006 ; Exits with BCD equivalent in TenK:Thou:Hund:Tens:Ones. 
                      00007 ; 
                      00008         LIST P=16F628, R=DEC   ; Use the PIC16F628 and Hexidecimal system 
                      00009         #include "P16F628.INC"  ; Include header file 
                      00001         LIST
                      00002 ; P16F628.INC  Standard Header File, Version 1.01    Microchip Technology, Inc.
                      00261         LIST
2007   3F70           00010         __config  _INTRC_OSC_NOCLKOUT & _LVP_OFF & _WDT_OFF & _PWRTE_ON & _BODEN_ON     
                      00011         
                      00012         
                      00013         CBLOCK 0x20   
  00000020            00014                 NumH,NumL
  00000022            00015                 counter:2       
  00000024            00016                 TenK,Thou,Hund,Tens,Ones
  00000029            00017                 DiC,BiC,BitCount,DigitCount
  0000002D            00018                 Scaler
  0000002E            00019         Counter1
  0000002F            00020         Counter2        
  00000030            00021                 CountA
  00000031            00022                 CountB
  00000032            00023                 CountC
                      00024         endc
                      00025   
                      00026 ; 
                      00027 ; ----------- 
                      00028 ; INITIALIZE 
                      00029 ; ----------- 
                      00030 ; 
0000                  00031         ORG    0x000            ; Program starts at 0x000 
0000   20A6           00032                 Call LDelay                             ; a delay to allow chips to stabalize
0001   0185           00033         CLRF   PORTA            ; Initialize port A 
0002   0186           00034         CLRF   PORTB            ; Initialize port B 
0003   1683           00035                 BSF    STATUS,RP0       ; RAM bank 1 
0004   3005           00036         MOVLW   0X05                    ;set pins RA0 and Ra2 to inputs 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0005   0085           00037         MOVWF   TRISA                   ;all other PortA pins to output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0006   0186           00038         CLRF   TRISB            ; All pins port B output 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0007   1506           00039                 BSF             TRISB,2
0008   1283           00040                 BCF    STATUS,RP0       ; RAM bank 0 
                      00041                        
                      00042         
                      00043 ; 
                      00044 ; ----------- 
                      00045 ; Main Program 
                      00046 ; ----------- 
                      00047 ;        
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00048                
0009   01A0           00049 Start   CLRF    NumH
000A   01A1           00050                 CLRF    NumL 
000B   2052           00051                 Call    InitDeltaSigA2D
000C   205A           00052         Call    DeltaSigA2D
000D   20BA           00053         Call    Convert
                      00054         
000E   3025           00055         movlw   0x25    ;set Indirect Address to
000F   0084           00056         movwf   FSR             ;Thou Place
0010   3004           00057         movlw   4               ;set counter to number 
0011   00A9           00058                 movwf   DiC             ;of digits of converted number
0012   3000           00059                 movlw   0                                       ;Set top of digits
0013   00AC           00060                 movwf   DigitCount                      ;to be displayed (0 =0 to 3 and 4 = 4 to 7)
0014   207A           00061                 Call    Display
                      00062                 
0015   01A0           00063                 CLRF    NumH
0016   01A1           00064                 CLRF    NumL 
0017   2021           00065                 Call    GetTemp
0018   20BA           00066                 Call    Convert
0019   3025           00067                 movlw   0x25    ;set Indirect Address to
001A   0084           00068         movwf   FSR             ;Thou Place
001B   3004           00069         movlw   4               ;set counter to number 
001C   00A9           00070                 movwf   DiC             ;of digits of converted number
001D   3004           00071                 movlw   4                                       ;Set top of digits
001E   00AC           00072                 movwf   DigitCount                      ;to be displayed (0 =0 to 3 and 4 = 4 to 7)
001F   207A           00073                 Call    Display 
0020   2809           00074                 Goto    Start
                      00075 
                      00076 
                      00077 ;--- END Main Program -------
                      00078 
                      00079 
                      00080 ;----------------
                      00081 ;GET TEMP Routine
                      00082 ;----------------
0021                  00083 GetTemp 
0021   20B5           00084                         Call Flash
                      00085                         ; Here we would normally read first bit and it should be zero
                      00086                         
0022   204D           00087                         Call GetNextBit
0023   1906           00088                         BTFSC   PORTB,2
0024   15A0           00089                         BSF             NumH,3
0025   204D           00090                         Call GetNextBit
0026   1906           00091                         BTFSC   PORTB,2
0027   1520           00092                         BSF             NumH,2
0028   204D           00093                         Call GetNextBit
0029   1906           00094                         BTFSC   PORTB,2
002A   14A0           00095                         BSF             NumH,1
002B   204D           00096                         Call GetNextBit
002C   1906           00097                         BTFSC   PORTB,2
002D   1420           00098                         BSF             NumH,0
002E   204D           00099                         Call GetNextBit
002F   1906           00100                         BTFSC   PORTB,2
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0030   17A1           00101                         BSF             NumL,7
0031   204D           00102                         Call GetNextBit
0032   1906           00103                         BTFSC   PORTB,2
0033   1721           00104                         BSF             NumL,6
0034   204D           00105                         Call GetNextBit
0035   1906           00106                         BTFSC   PORTB,2
0036   16A1           00107                         BSF             NumL,5
0037   204D           00108                         Call GetNextBit
0038   1906           00109                         BTFSC   PORTB,2
0039   1621           00110                         BSF             NumL,4
003A   204D           00111                         Call GetNextBit
003B   1906           00112                         BTFSC   PORTB,2
003C   15A1           00113                         BSF             NumL,3
003D   204D           00114                         Call GetNextBit
003E   1906           00115                         BTFSC   PORTB,2
003F   1521           00116                         BSF             NumL,2
0040   204D           00117                         Call GetNextBit
0041   1906           00118                         BTFSC   PORTB,2
0042   14A1           00119                         BSF             NumL,1
0043   204D           00120                         Call GetNextBit
0044   1906           00121                         BTFSC   PORTB,2
0045   1421           00122                         BSF             NumL,0  
                      00123                         ; here we would read the next bit for an open thermocouple
                      00124                 
0046   1003           00125                         BCF             STATUS,0        ;divide the Low and
0047   0CA0           00126                         RRF             NumH,1          ;high parts of
0048   0CA1           00127                         RRF             NumL,1          ;4 (Shift both twice)
0049   1003           00128                         BCF             STATUS,0        
004A   0CA0           00129                         RRF             NumH,1          
004B   0CA1           00130                         RRF             NumL,1
004C   0008           00131                         Return                                  
                      00132                         
                      00133                         
                      00134                         
                      00135                                                                                 
                      00136 ;--------------
                      00137 ;GetNextBit Routine
                      00138 ;--------------
                      00139 
004D                  00140 GetNextBit      
004D   20A0           00141                         Call SDelay
004E   1486           00142                         BSF             PORTB,1 ; Clock High
004F   20A0           00143                         Call    SDelay
0050   1086           00144                         BCF             PORTB,1 ; Clock low again and ready to read TEMP bit
0051   0008           00145                         Return
                      00146                                 
                      00147 ;* InitDeltaSigA2D sets up the voltage reference and comparator
                      00148 ;* in the "idle" state.
                      00149 
0052                  00150 InitDeltaSigA2D
0052   1683           00151                 bsf     STATUS,RP0
0053   30EC           00152                 movlw   0xEC            ;set voltage reference on with 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0054   009F           00153                 movwf   VRCON           ; Voltage reference output on RA2 pin (Low Range)
0055   1185           00154                 bcf     PORTA,3         ;set comparator pin to output
0056   1283           00155                 bcf     STATUS,RP0
0057   3006           00156                 movlw   0x06            ;set up for 2 analog comparators with 
0058   009F           00157                 movwf   CMCON           ;common reference
0059   0008           00158                 return
                      00159 ;---END InitDeltaSigA2D------------
                      00160 
                      00161 
                      00162 ; Delta Sigma A2D
                      00163 ; The code below contains a lot of nops and goto next instruction. These
                      00164 ; are necessary to ensure that each pass through the loop takes the same
                      00165 ; amount of time, no matter the path through the code.
                      00166 ;
005A                  00167 DeltaSigA2D
005A   01A2           00168         clrf    counter
005B   01A3           00169         clrf    counter+1
005C   01A1           00170         clrf    NumL
005D   01A0           00171         clrf    NumH
005E   3003           00172         movlw   0x03                    ; set up for 2 analog comparators with common reference
005F   009F           00173         movwf   CMCON
0060                  00174 loop
0060   1B1F           00175         btfsc   CMCON,C1OUT     ; Is comparator high or low?
0061   2868           00176         goto    complow                 ; Go the low route
0062                  00177 comphigh
0062   0000           00178         nop                                     ; necessary to keep timing even
0063   1185           00179         bcf     PORTA,3                 ; PORTA.3 = 0
0064   0FA1           00180         incfsz  NumL,f          ; bump counter
0065   286B           00181         goto    eat2cycles 
0066   0AA0           00182         incf    NumH,f 
0067   286C           00183         goto    endloop 
0068                  00184 complow
0068   1585           00185         bsf     PORTA,3                 ; Comparator is low
0069   0000           00186         nop                                     ; necessary to keep timing even
006A   286B           00187         goto eat2cycles                         ; same here
006B                  00188 eat2cycles
006B   286C           00189         goto    endloop                 ; eat 2 more cycles
006C                  00190 endloop
006C   0FA2           00191         incfsz  counter,f               ; Count this lap through the loop.
006D   2874           00192         goto    eat5cycles 
006E   0AA3           00193         incf    counter+1,f 
006F   0823           00194         movf    counter+1,w 
0070   3904           00195         andlw   0x04                    ; Are we done? (We're done when bit2 of
0071   1903           00196         btfsc   STATUS,Z                ; the high order byte overflows to 1).
0072   2860           00197         goto    loop 
0073   2877           00198         goto    exit
0074                  00199 eat5cycles
0074   2875           00200         goto    $+1                     ; more wasted time to keep the loops even
0075   0000           00201         nop ;
0076   2860           00202         goto loop 
0077                  00203 exit
0077   3006           00204         movlw   0x06                    ; set up for 2 analog comparators with common reference
0078   009F           00205         movwf   CMCON
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00206 
0079   0008           00207         return
                      00208 ;---END Delta Sigma A2D-------------
                      00209 
                      00210 ;---Display Routine------
007A   0800           00211 Display         movf    INDF,0          ;Get Current digit fron Indirect Address
007B   00AA           00212                         movwf   BiC                     ; and place it in variable BiC          
007C   2092           00213                         Call    Shift           
007D   1706           00214                         BSF             PORTB,6         ;Set B-enable Bit
007E   20A6           00215                         Call    LDelay
007F   1306           00216                         BCF             PORTB,6         ;Clear the B-enable BIT
0080   20A6           00217                         Call    LDelay          
0081   11AC           00218                         BCF             DigitCount,3            ;Clear hold bit for digit Display       
                                    
0082   208A           00219                         Call    SetDigit                
0083   15AC           00220                         BSF             DigitCount,3            ;Set hold bit for digit display         
0084   208A           00221                         Call    SetDigit                        
0085   0AAC           00222                         incf    DigitCount,1
0086   0A84           00223                         incf    FSR,1                           ;Get next Digit
0087   0BA9           00224                         decfsz  DiC,1   ;are we finished?
0088   287A           00225                         goto    Display                 ; if not, then do another digit
0089   0008           00226                 Return
                      00227 ;---END of Display-----------
                      00228 
                      00229 
                      00230 ;-----Set Digit Routine---
                      00231 
008A   082C           00232 SetDigit                movf    DigitCount,0            ;Get digit to be displayed
008B   00AA           00233                                 movwf   BiC                     ; and place it in variable BiC
008C   2092           00234                                 Call    Shift
008D   1386           00235                                 BCF             PORTB,7         ;Clear D-enable Bit
008E   20A6           00236                                 Call    LDelay
008F   1786           00237                                 BSF             PORTB,7         ;Set the D-enable BIT
0090   20A6           00238                                 Call    LDelay
0091   0008           00239                                 Return
                      00240 
                      00241 ;----END Set Digit Routine---
                      00242 
                      00243 
                      00244 ;---Shift Routine---        
                      00245                 
0092                  00246 Shift   
0092   0EAA           00247                 swapf   BiC,1           ; Move Lower bits to HIGH position
0093   3004           00248                 MOVLW   4                       ;Place the count of 4 into
0094   00AB           00249                 MOVWF   BitCount        ;variable BitCount
0095   1206           00250 LP1             BCF             PORTB,4         ;Clear PortB, pin 4
0096   0DAA           00251                 RLF             BiC,1           ;Rotate Bic through Carry
0097   1803           00252                 BTFSC   STATUS,C        ;check the carry for a '1'
0098   1606           00253                 BSF             PORTB,4         ; and set the PortB, pin 4 if the carry is a 1
0099   1686           00254                 BSF             PORTB,5         ;Set shift Bit
009A   20A6           00255                 Call    LDelay
009B   1286           00256                 BCF             PORTB,5         ;Clear the shift BIT
009C   20A6           00257                 Call    LDelay
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009D   0BAB           00258                 DECFSZ  BitCount,1      ;dec the bit count      
009E   2895           00259                 GoTo    LP1                     ; get next bit if count is not zero
009F   0008           00260                 Return
                      00261         
                      00262 ;---END of Shift Routine---             
                      00263         
                      00264 
                      00265 ;--- 1 Millisec Delay----
                      00266 
00A0   30F9           00267 SDelay                  MOVLW 0F9h          ;put 249 into W          
00A1   0000           00268                 NOP
00A2   3EFF           00269 SDL                     ADDLW 0FFh          ;This is effectively subtracting 1 from W
00A3   1D03           00270                 BTFSS 03,2            ;Look at the zero bit of the Status register. Skip when Zero bit i
                            s SET.
00A4   28A2           00271                 GOTO SDL
00A5   0008           00272                 RETURN 
                      00273 ;--- END 1 MilliSec Delay---    
                      00274 
                      00275         
                      00276 ;----- 250 Millisec Delay--- 
                      00277 
00A6   3003           00278 LDelay          MOVLW 003H          ;put 249 into W          
00A7   0000           00279                 NOP
00A8   3EFF           00280 LDL             ADDLW 0FFh          ;This is effectively subtracting 1 from W
00A9   1D03           00281                 BTFSS 03,2            ;Look at the zero bit of the Status register. Skip when Zero bit i
                            s SET.
00AA   28A8           00282                 GOTO LDL
00AB   0008           00283                 RETURN  
                      00284 
                      00285 ;---END 250 Millisec Delay-----
                      00286                 
                      00287 ;--- Flash Delay----------              
                      00288                 
00AC   3001           00289 SLDelay         MOVLW 1h        ;Set Number for deley  
00AD   00B2           00290             MOVWF CountC  
00AE   0BB0           00291 Delay1      DECFSZ CountA,1  
00AF   28AE           00292             GOTO Delay1  
00B0   0BB1           00293             DECFSZ CountB,1  
00B1   28AE           00294             GOTO Delay1  
00B2   0BB2           00295             DECFSZ CountC,1  
00B3   28AE           00296             GOTO Delay1  
00B4   0008           00297             RETURN 
                      00298 ;-----END 2 Sec Delay-----------
                      00299 
                      00300 ;----Led Flash Routine------
00B5   1705           00301 Flash    BSF    PORTA,6       ; Turn on LED 
00B6   20AC           00302         CALL    SLDelay 
00B7   1305           00303         BCF     PORTA,6       ; Turn off LED  
00B8   20AC           00304         CALL    SLDelay 
00B9   0008           00305         Return
                      00306 
                      00307 ;-----Convert Routine-----
                      00308  
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00BA                  00309 Convert                      
00BA   0E20           00310         swapf   NumH,w                          ;Takes number in NumH:NumL 
00BB   390F           00311                 andlw   0x0F                            ; Returns decimal in 
00BC   3EF0           00312                 addlw   0xF0                            ; TenK:Thou:Hund:Tens:Ones             
00BD   00A5           00313         movwf   Thou 
00BE   07A5           00314         addwf   Thou,f 
00BF   3EE2           00315         addlw   0xE2 
00C0   00A6           00316         movwf   Hund 
00C1   3E32           00317         addlw   0x32 
00C2   00A8           00318         movwf   Ones 
                      00319 
00C3   0820           00320         movf    NumH,w 
00C4   390F           00321         andlw   0x0F 
00C5   07A6           00322         addwf   Hund,f 
00C6   07A6           00323         addwf   Hund,f 
00C7   07A8           00324         addwf   Ones,f 
00C8   3EE9           00325         addlw   0xE9 
00C9   00A7           00326         movwf   Tens 
00CA   07A7           00327         addwf   Tens,f 
00CB   07A7           00328         addwf   Tens,f 
                      00329 
00CC   0E21           00330         swapf   NumL,w 
00CD   390F           00331         andlw   0x0F 
00CE   07A7           00332         addwf   Tens,f 
00CF   07A8           00333         addwf   Ones,f 
                      00334 
00D0   0DA7           00335         rlf     Tens,f 
00D1   0DA8           00336         rlf     Ones,f 
00D2   09A8           00337         comf    Ones,f 
00D3   0DA8           00338         rlf     Ones,f 
                      00339 
00D4   0821           00340         movf    NumL,w 
00D5   390F           00341         andlw   0x0F 
00D6   07A8           00342         addwf   Ones,f 
00D7   0DA5           00343         rlf     Thou,f 
                      00344 
00D8   3007           00345         movlw   0x07 
00D9   00A4           00346         movwf   TenK 
                      00347 
                      00348                         ; At this point, the original number is 
                      00349                         ; equal to TenK*10000+Thou*1000+Hund*100+Tens*10+Ones 
                      00350                         ; if those entities are regarded as two's compliment 
                      00351                         ; binary.  To be precise, all of them are negative 
                      00352                         ; except TenK.  Now the number needs to be normal- 
                      00353                         ; ized, but this can all be done with simple byte 
                      00354                         ; arithmetic. 
                      00355 
00DA   300A           00356         movlw   0x0A     ; Ten 
00DB                  00357 Lb1 
00DB   07A8           00358         addwf   Ones,f 
00DC   03A7           00359         decf    Tens,f 
00DD   1C03           00360         btfss   3,0 
00DE   28DB           00361          goto   Lb1 
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DF                  00362 Lb2 
00DF   07A7           00363         addwf   Tens,f 
00E0   03A6           00364         decf    Hund,f 
00E1   1C03           00365         btfss   3,0 
00E2   28DF           00366          goto   Lb2 
00E3                  00367 Lb3 
00E3   07A6           00368         addwf   Hund,f 
00E4   03A5           00369         decf    Thou,f 
00E5   1C03           00370         btfss   3,0 
00E6   28E3           00371          goto   Lb3 
00E7                  00372 Lb4 
00E7   07A5           00373         addwf   Thou,f 
00E8   03A4           00374         decf    TenK,f 
00E9   1C03           00375         btfss   3,0 
00EA   28E7           00376          goto   Lb4 
                      00377 
00EB   3400           00378         retlw   0
                      00379                 END
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

ADEN                              00000003
BRGH                              00000002
BiC                               0000002A
BitCount                          0000002B
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000001F
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
Convert                           000000BA
CountA                            00000030
CountB                            00000031
CountC                            00000032
Counter1                          0000002E
Counter2                          0000002F
DC                                00000001
Delay1                            000000AE
DeltaSigA2D                       0000005A
DiC                               00000029
DigitCount                        0000002C
Display                           0000007A
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
Flash                             000000B5
GIE                               00000007
GetNextBit                        0000004D
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

GetTemp                           00000021
Hund                              00000026
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
InitDeltaSigA2D                   00000052
LDL                               000000A8
LDelay                            000000A6
LP1                               00000095
Lb1                               000000DB
Lb2                               000000DF
Lb3                               000000E3
Lb4                               000000E7
NOT_BO                            00000000
NOT_BOD                           00000000
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NumH                              00000020
NumL                              00000021
OERR                              00000001
OPTION_REG                        00000081
OSCF                              00000003
Ones                              00000028
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RBIE                              00000003
RBIF                              00000000
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RP0                               00000005
RP1                               00000006
RX9                               00000006
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

RX9D                              00000000
SDL                               000000A2
SDelay                            000000A0
SLDelay                           000000AC
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
STATUS                            00000003
SYNC                              00000004
Scaler                            0000002D
SetDigit                          0000008A
Shift                             00000092
Start                             00000009
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRMT                              00000001
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
TenK                              00000024
Tens                              00000027
Thou                              00000025
VR0                               00000000
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             0000009F
VREN                              00000007
VROE                              00000006
VRR                               00000005
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CP_50                            00002BFF
_CP_75                            000017FF
_CP_ALL                           000003FF
_CP_OFF                           00003FFF
_DATA_CP_OFF                      00003FFF
_DATA_CP_ON                       00003EFF
_ER_OSC_CLKOUT                    00003FFF
_ER_OSC_NOCLKOUT                  00003FFE
_EXTCLK_OSC                       00003FEF
_HS_OSC                           00003FEE
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FEC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FED
__16F628                          00000001
comphigh                          00000062
complow                           00000068
counter                           00000022
eat2cycles                        0000006B
eat5cycles                        00000074
endloop                           0000006C
exit                              00000077
loop                              00000060
MPASM 03.60 Released                           RENE MAIN3.ASM   3-27-2004  5:59:42         PAGE 13


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXX---- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   236
Program Memory Words Free:  1812


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     4 reported,     0 suppressed

