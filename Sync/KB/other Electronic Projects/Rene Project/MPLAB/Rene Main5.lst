MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;------------------------------------------------------------------- 
                      00002 ; 
                      00003 
                      00004 ; 
                      00005         LIST P=16F628, R=DEC   ; Use the PIC16F628 and Hexidecimal system 
                      00006         #include "P16F628.INC"  ; Include header file 
                      00001         LIST
                      00002 ; P16F628.INC  Standard Header File, Version 1.01    Microchip Technology, Inc.
                      00261         LIST
2007   3F70           00007         __config  _INTRC_OSC_NOCLKOUT & _LVP_OFF & _WDT_OFF & _PWRTE_ON & _BODEN_ON     
                      00008         
                      00009         
                      00010         CBLOCK 0x20   
  00000020            00011                 NumH,NumL
  00000022            00012                 counter:2       
  00000024            00013                 TenK,Thou,Hund,Tens,Ones
  00000029            00014                 DiC,BiC,BitCount,DigitCount
  0000002D            00015                 Scaler
  0000002E            00016         Counter1
  0000002F            00017         Counter2        
  00000030            00018                 CountA
  00000031            00019                 CountB
  00000032            00020                 CountC
  00000033            00021                 UserH,UserL
  00000035            00022                 ProbeH,ProbeL
                      00023         endc
                      00024   
                      00025 ; 
                      00026 ; ----------- 
                      00027 ; INITIALIZE 
                      00028 ; ----------- 
                      00029 ; 
                      00030         ORG    0x000            ; Program starts at 0x000 
0000   2???           00031                 Call LDelay                             ; a delay to allow chips to stabalize
0001   0185           00032         CLRF   PORTA            ; Initialize port A 
0002   0186           00033         CLRF   PORTB            ; Initialize port B 
0003   1683           00034                 BSF    STATUS,RP0       ; RAM bank 1 
0004   3005           00035         MOVLW   0X05                    ;set pins RA0 and Ra2 to inputs 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0005   0085           00036         MOVWF   TRISA                   ;all other PortA pins to output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0006   0186           00037         CLRF   TRISB            ; All pins port B output 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0007   1506           00038                 BSF             TRISB,2
0008   1283           00039                 BCF    STATUS,RP0       ; RAM bank 0 
                      00040                        
                      00041         
                      00042 ; 
                      00043 ; ----------- 
                      00044 ; Main Program 
                      00045 ; ----------- 
                      00046 ;        
                      00047                
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009   01A0           00048 Start   CLRF    NumH
000A   01A1           00049                 CLRF    NumL 
000B   2???           00050                 Call    InitDeltaSigA2D ; Initialize 
000C   2???           00051         Call    DeltaSigA2D             ; Read Variable resistor into 16-bit binary number in NumH:NumL 
                                    
                      00052        
000D   0820           00053         movfw   NumH
000E   00B3           00054         movwf   UserH
000F   0821           00055         Movfw   NumL
0010   00B4           00056         movwf   UserL
                      00057        
0011   2???           00058         Call    Convert                 ; Convert above reading into BCD equivalent in TenK:Thou:Hund:Te
                            ns:Ones.       
0012   3025           00059         movlw   0x25    ;set Indirect Address to
0013   0084           00060         movwf   FSR             ;Thou Place
0014   3004           00061         movlw   4               ;set counter to number 
0015   00A9           00062                 movwf   DiC             ;of digits of converted number
0016   3000           00063                 movlw   0                                       ;Set top of digits
0017   00AC           00064                 movwf   DigitCount                      ;to be displayed (0 =0 to 3 and 4 = 4 to 7)
0018   2???           00065                 Call    Display 
0019   2???           00066                 Call    GetTemp
                      00067                 
001A   0820           00068                 movfw   NumH
001B   00B5           00069         movwf   ProbeH
001C   0821           00070         Movfw   NumL
001D   00B6           00071         movwf   ProbeL
                      00072                 
001E   2???           00073                 Call    Convert
001F   3025           00074                 movlw   0x25    ;set Indirect Address to
0020   0084           00075         movwf   FSR             ;Thou Place
0021   3004           00076         movlw   4               ;set counter to number 
0022   00A9           00077                 movwf   DiC             ;of digits of converted number
0023   3004           00078                 movlw   4                                       ;Set top of digits
0024   00AC           00079                 movwf   DigitCount                      ;to be displayed (0 =0 to 3 and 4 = 4 to 7)
0025   2???           00080                 Call    Display 
0026   2???           00081                 Goto    Start
                      00082 
                      00083 
                      00084 ;--- END Main Program -------
                      00085 
                      00086 ;----------------
                      00087 ;GET TEMP Routine
                      00088 ;----------------
0027   01A0           00089 GetTemp         CLRF    NumH
0028   01A1           00090                         CLRF    NumL 
                      00091                         
0029   2???           00092                         Call Flash
                      00093                         ; Here we would normally read first bit and it should be zero
002A   300B           00094                         MOVLW   0XB
002B   00AB           00095                         MOVWF   BitCount                        
002C   2???           00096 BitLoop         Call GetNextBit
002D   1906           00097                         BTFSC   PORTB,2
002E   1421           00098                         BSF             NumL,0
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002F   1003           00099                         BCF             STATUS,0
Message[305]: Using default destination of 1 (file).
0030   0DA1           00100                         RLF             NumL
Message[305]: Using default destination of 1 (file).
0031   0DA0           00101                         RLF             NumH
Message[305]: Using default destination of 1 (file).
0032   0BAB           00102                         DECFSZ  BitCount
0033   2???           00103                         GOTO    BitLoop
0034   2???           00104                         Call GetNextBit
0035   1906           00105                         BTFSC   PORTB,2
0036   1421           00106                         BSF             NumL,0
                      00107                         ; Bit D2 would be high if the thermocouple is open.
                      00108                 
0037   1003           00109                         BCF             STATUS,0        ;divide the Low and
0038   0CA0           00110                         RRF             NumH,1          ;high parts of
0039   0CA1           00111                         RRF             NumL,1          ;4 (Shift both twice)
003A   1003           00112                         BCF             STATUS,0        
003B   0CA0           00113                         RRF             NumH,1          
003C   0CA1           00114                         RRF             NumL,1
003D   0008           00115                         Return                                  
                      00116                         
                      00117                         
                      00118                         
                      00119                                                                                 
                      00120 ;--------------
                      00121 ;GetNextBit Routine
                      00122 ;--------------
                      00123 
003E                  00124 GetNextBit      
003E   2???           00125                         Call SDelay
003F   1486           00126                         BSF             PORTB,1 ; Clock High
0040   2???           00127                         Call    SDelay
0041   1086           00128                         BCF             PORTB,1 ; Clock low again and ready to read TEMP bit
0042   0008           00129                         Return
                      00130                                 
                      00131 ;* InitDeltaSigA2D sets up the voltage reference and comparator
                      00132 ;* in the "idle" state.
                      00133 
0043                  00134 InitDeltaSigA2D
0043   1683           00135                 bsf     STATUS,RP0
0044   30EC           00136                 movlw   0xEC            ;set voltage reference on with 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0045   009F           00137                 movwf   VRCON           ; Voltage reference output on RA2 pin (Low Range)
0046   1185           00138                 bcf     PORTA,3         ;set comparator pin to output
0047   1283           00139                 bcf     STATUS,RP0
0048   3006           00140                 movlw   0x06            ;set up for 2 analog comparators with 
0049   009F           00141                 movwf   CMCON           ;common reference
004A   0008           00142                 return
                      00143 ;---END InitDeltaSigA2D------------
                      00144 
                      00145 
                      00146 ; Delta Sigma A2D
                      00147 ; The code below contains a lot of nops and goto next instruction. These
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00148 ; are necessary to ensure that each pass through the loop takes the same
                      00149 ; amount of time, no matter the path through the code.
                      00150 ;
004B                  00151 DeltaSigA2D
004B   01A2           00152         clrf    counter
004C   01A3           00153         clrf    counter+1
004D   01A1           00154         clrf    NumL
004E   01A0           00155         clrf    NumH
004F   3003           00156         movlw   0x03                    ; set up for 2 analog comparators with common reference
0050   009F           00157         movwf   CMCON
0051                  00158 loop
0051   1B1F           00159         btfsc   CMCON,C1OUT     ; Is comparator high or low?
0052   2???           00160         goto    complow                 ; Go the low route
0053                  00161 comphigh
0053   0000           00162         nop                                     ; necessary to keep timing even
0054   1185           00163         bcf     PORTA,3                 ; PORTA.3 = 0
0055   0FA1           00164         incfsz  NumL,f          ; bump counter
0056   2???           00165         goto    eat2cycles 
0057   0AA0           00166         incf    NumH,f 
0058   2???           00167         goto    endloop 
0059                  00168 complow
0059   1585           00169         bsf     PORTA,3                 ; Comparator is low
005A   0000           00170         nop                                     ; necessary to keep timing even
005B   2???           00171         goto eat2cycles                         ; same here
005C                  00172 eat2cycles
005C   2???           00173         goto    endloop                 ; eat 2 more cycles
005D                  00174 endloop
005D   0FA2           00175         incfsz  counter,f               ; Count this lap through the loop.
005E   2???           00176         goto    eat5cycles 
005F   0AA3           00177         incf    counter+1,f 
0060   0823           00178         movf    counter+1,w 
0061   3904           00179         andlw   0x04                    ; Are we done? (We're done when bit2 of
0062   1903           00180         btfsc   STATUS,Z                ; the high order byte overflows to 1).
0063   2???           00181         goto    loop 
0064   2???           00182         goto    exit
0065                  00183 eat5cycles
0065   2???           00184         goto    $+1                     ; more wasted time to keep the loops even
0066   0000           00185         nop ;
0067   2???           00186         goto loop 
0068                  00187 exit
0068   3006           00188         movlw   0x06                    ; set up for 2 analog comparators with common reference
0069   009F           00189         movwf   CMCON
                      00190 
006A   0008           00191         return
                      00192 ;---END Delta Sigma A2D-------------
                      00193 
                      00194 ;---Display Routine------
006B   0800           00195 Display         movf    INDF,0          ;Get Current digit fron Indirect Address
006C   00AA           00196                         movwf   BiC                     ; and place it in variable BiC          
006D   2???           00197                         Call    Shift           
006E   1706           00198                         BSF             PORTB,6         ;Set B-enable Bit
006F   2???           00199                         Call    LDelay
0070   1306           00200                         BCF             PORTB,6         ;Clear the B-enable BIT
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0071   2???           00201                         Call    LDelay          
0072   11AC           00202                         BCF             DigitCount,3            ;Clear hold bit for digit Display       
                                    
0073   2???           00203                         Call    SetDigit                
0074   15AC           00204                         BSF             DigitCount,3            ;Set hold bit for digit display         
0075   2???           00205                         Call    SetDigit                        
0076   0AAC           00206                         incf    DigitCount,1
0077   0A84           00207                         incf    FSR,1                           ;Get next Digit
0078   0BA9           00208                         decfsz  DiC,1   ;are we finished?
0079   2???           00209                         goto    Display                 ; if not, then do another digit
007A   0008           00210                 Return
                      00211 ;---END of Display-----------
                      00212 
                      00213 
                      00214 ;-----Set Digit Routine---
                      00215 
007B   082C           00216 SetDigit                movf    DigitCount,0            ;Get digit to be displayed
007C   00AA           00217                                 movwf   BiC                     ; and place it in variable BiC
007D   2???           00218                                 Call    Shift
007E   1386           00219                                 BCF             PORTB,7         ;Clear D-enable Bit
007F   2???           00220                                 Call    LDelay
0080   1786           00221                                 BSF             PORTB,7         ;Set the D-enable BIT
0081   2???           00222                                 Call    LDelay
0082   0008           00223                                 Return
                      00224 
                      00225 ;----END Set Digit Routine---
                      00226 
                      00227 
                      00228 ;---Shift Routine---        
                      00229                 
0083                  00230 Shift   
0083   0EAA           00231                 swapf   BiC,1           ; Move Lower bits to HIGH position
0084   3004           00232                 MOVLW   4                       ;Place the count of 4 into
0085   00AB           00233                 MOVWF   BitCount        ;variable BitCount
0086   1206           00234 LP1             BCF             PORTB,4         ;Clear PortB, pin 4
0087   0DAA           00235                 RLF             BiC,1           ;Rotate Bic through Carry
0088   1803           00236                 BTFSC   STATUS,C        ;check the carry for a '1'
0089   1606           00237                 BSF             PORTB,4         ; and set the PortB, pin 4 if the carry is a 1
008A   1686           00238                 BSF             PORTB,5         ;Set shift Bit
008B   2???           00239                 Call    LDelay
008C   1286           00240                 BCF             PORTB,5         ;Clear the shift BIT
008D   2???           00241                 Call    LDelay
008E   0BAB           00242                 DECFSZ  BitCount,1      ;dec the bit count      
008F   2???           00243                 GoTo    LP1                     ; get next bit if count is not zero
0090   0008           00244                 Return
                      00245         
                      00246 ;---END of Shift Routine---             
                      00247         
                      00248 
                      00249 ;--- 1 Millisec Delay----
                      00250 
0091   30F9           00251 SDelay                  MOVLW 0F9h          ;put 249 into W          
0092   0000           00252                 NOP
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0093   3EFF           00253 SDL                     ADDLW 0FFh          ;This is effectively subtracting 1 from W
0094   1D03           00254                 BTFSS 03,2            ;Look at the zero bit of the Status register. Skip when Zero bit i
                            s SET.
0095   2???           00255                 GOTO SDL
0096   0008           00256                 RETURN 
                      00257 ;--- END 1 MilliSec Delay---    
                      00258 
                      00259         
                      00260 ;----- 250 Millisec Delay--- 
                      00261 
0097   3003           00262 LDelay          MOVLW 003H          ;put 249 into W          
0098   0000           00263                 NOP
0099   3EFF           00264 LDL             ADDLW 0FFh          ;This is effectively subtracting 1 from W
009A   1D03           00265                 BTFSS 03,2            ;Look at the zero bit of the Status register. Skip when Zero bit i
                            s SET.
009B   2???           00266                 GOTO LDL
009C   0008           00267                 RETURN  
                      00268 
                      00269 ;---END 250 Millisec Delay-----
                      00270                 
                      00271 ;--- Flash Delay----------              
                      00272                 
009D   3001           00273 SLDelay         MOVLW 1h        ;Set Number for deley  
009E   00B2           00274             MOVWF CountC  
009F   0BB0           00275 Delay1      DECFSZ CountA,1  
00A0   2???           00276             GOTO Delay1  
00A1   0BB1           00277             DECFSZ CountB,1  
00A2   2???           00278             GOTO Delay1  
00A3   0BB2           00279             DECFSZ CountC,1  
00A4   2???           00280             GOTO Delay1  
00A5   0008           00281             RETURN 
                      00282 ;-----END 2 Sec Delay-----------
                      00283 
                      00284 ;----Led Flash Routine------
00A6   1705           00285 Flash    BSF    PORTA,6       ; Turn on LED 
00A7   2???           00286         CALL    SLDelay 
00A8   1305           00287         BCF     PORTA,6       ; Turn off LED  
00A9   2???           00288         CALL    SLDelay 
00AA   0008           00289         Return
                      00290 
                      00291 ;-----Convert Routine-----
                      00292 ; Binary-to-BCD.  Written by John Payson. 
                      00293 ; 
                      00294 ; Enter with 16-bit binary number in NumH:NumL. 
                      00295 ; Exits with BCD equivalent in TenK:Thou:Hund:Tens:Ones. 
                      00296 
00AB                  00297 Convert                      
00AB   0E20           00298         swapf   NumH,w                          ;Takes number in NumH:NumL 
00AC   390F           00299                 andlw   0x0F                            ; Returns decimal in 
00AD   3EF0           00300                 addlw   0xF0                            ; TenK:Thou:Hund:Tens:Ones             
00AE   00A5           00301         movwf   Thou 
00AF   07A5           00302         addwf   Thou,f 
00B0   3EE2           00303         addlw   0xE2 
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B1   00A6           00304         movwf   Hund 
00B2   3E32           00305         addlw   0x32 
00B3   00A8           00306         movwf   Ones 
                      00307 
00B4   0820           00308         movf    NumH,w 
00B5   390F           00309         andlw   0x0F 
00B6   07A6           00310         addwf   Hund,f 
00B7   07A6           00311         addwf   Hund,f 
00B8   07A8           00312         addwf   Ones,f 
00B9   3EE9           00313         addlw   0xE9 
00BA   00A7           00314         movwf   Tens 
00BB   07A7           00315         addwf   Tens,f 
00BC   07A7           00316         addwf   Tens,f 
                      00317 
00BD   0E21           00318         swapf   NumL,w 
00BE   390F           00319         andlw   0x0F 
00BF   07A7           00320         addwf   Tens,f 
00C0   07A8           00321         addwf   Ones,f 
                      00322 
00C1   0DA7           00323         rlf     Tens,f 
00C2   0DA8           00324         rlf     Ones,f 
00C3   09A8           00325         comf    Ones,f 
00C4   0DA8           00326         rlf     Ones,f 
                      00327 
00C5   0821           00328         movf    NumL,w 
00C6   390F           00329         andlw   0x0F 
00C7   07A8           00330         addwf   Ones,f 
00C8   0DA5           00331         rlf     Thou,f 
                      00332 
00C9   3007           00333         movlw   0x07 
00CA   00A4           00334         movwf   TenK 
                      00335 
                      00336                         ; At this point, the original number is 
                      00337                         ; equal to TenK*10000+Thou*1000+Hund*100+Tens*10+Ones 
                      00338                         ; if those entities are regarded as two's compliment 
                      00339                         ; binary.  To be precise, all of them are negative 
                      00340                         ; except TenK.  Now the number needs to be normal- 
                      00341                         ; ized, but this can all be done with simple byte 
                      00342                         ; arithmetic. 
                      00343 
00CB   300A           00344         movlw   0x0A     ; Ten 
00CC                  00345 Lb1 
00CC   07A8           00346         addwf   Ones,f 
00CD   03A7           00347         decf    Tens,f 
00CE   1C03           00348         btfss   3,0 
00CF   2???           00349          goto   Lb1 
00D0                  00350 Lb2 
00D0   07A7           00351         addwf   Tens,f 
00D1   03A6           00352         decf    Hund,f 
00D2   1C03           00353         btfss   3,0 
00D3   2???           00354          goto   Lb2 
00D4                  00355 Lb3 
00D4   07A6           00356         addwf   Hund,f 
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D5   03A5           00357         decf    Thou,f 
00D6   1C03           00358         btfss   3,0 
00D7   2???           00359          goto   Lb3 
00D8                  00360 Lb4 
00D8   07A5           00361         addwf   Thou,f 
00D9   03A4           00362         decf    TenK,f 
00DA   1C03           00363         btfss   3,0 
00DB   2???           00364          goto   Lb4 
                      00365 
00DC   3400           00366         retlw   0
                      00367                 END
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

ADEN                              00000003
BRGH                              00000002
BiC                               0000002A
BitCount                          0000002B
BitLoop                           0000002C
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000001F
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
Convert                           000000AB
CountA                            00000030
CountB                            00000031
CountC                            00000032
Counter1                          0000002E
Counter2                          0000002F
DC                                00000001
Delay1                            0000009F
DeltaSigA2D                       0000004B
DiC                               00000029
DigitCount                        0000002C
Display                           0000006B
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
Flash                             000000A6
GIE                               00000007
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

GetNextBit                        0000003E
GetTemp                           00000027
Hund                              00000026
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
InitDeltaSigA2D                   00000043
LDL                               00000099
LDelay                            00000097
LP1                               00000086
Lb1                               000000CC
Lb2                               000000D0
Lb3                               000000D4
Lb4                               000000D8
NOT_BO                            00000000
NOT_BOD                           00000000
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NumH                              00000020
NumL                              00000021
OERR                              00000001
OPTION_REG                        00000081
OSCF                              00000003
Ones                              00000028
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
ProbeH                            00000035
ProbeL                            00000036
RBIE                              00000003
RBIF                              00000000
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
SDL                               00000093
SDelay                            00000091
SLDelay                           0000009D
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
STATUS                            00000003
SYNC                              00000004
Scaler                            0000002D
SetDigit                          0000007B
Shift                             00000083
Start                             00000009
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRMT                              00000001
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
TenK                              00000024
MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

Tens                              00000027
Thou                              00000025
UserH                             00000033
UserL                             00000034
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             0000009F
VREN                              00000007
VROE                              00000006
VRR                               00000005
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_.org_0_0065                      00000065
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CP_50                            00002BFF
_CP_75                            000017FF
_CP_ALL                           000003FF
_CP_OFF                           00003FFF
_DATA_CP_OFF                      00003FFF
_DATA_CP_ON                       00003EFF
_ER_OSC_CLKOUT                    00003FFF
_ER_OSC_NOCLKOUT                  00003FFE
_EXTCLK_OSC                       00003FEF
_HS_OSC                           00003FEE
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FEC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FED
__16F628                          00000001
comphigh                          00000053
complow                           00000059
counter                           00000022
eat2cycles                        0000005C
eat5cycles                        00000065
endloop                           0000005D
exit                              00000068
loop                              00000051

MPASM 03.60 Released                           RENE MAIN5.ASM   12-3-2004  14:32:33         PAGE 13





Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     7 reported,     0 suppressed

