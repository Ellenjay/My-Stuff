MPASM  5.06                      V25RFI~1.ASM   4-4-2010  17:25:33         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;----------------------------------------------------------
                      00002 ; Code Produced by the PROTON+ Compiler. Version 3.2.5.5
                      00003 ; Copyright Rosetta Technologies/Crownhill Associates
                      00004 ; Written by Les Johnson. February 2007
                      00005 ;----------------------------------------------------------
                      00007  LIST
                      00008         LIST
                      00009 ;{
                      00010 ;FILE F1 = C:\PROTON V2.5 RFID 2ND GENERATION\V2.5 RFID 2ND GENERATION.BAS
                      00011 ;FILE F2 = C:\PROTON V2.5 RFID 2ND GENERATION\V2.5 RFID 2ND GENERATION.PRP
                      00012 ;FILE F3 = C:\PROTON V2.5 RFID 2ND GENERATION\V2.5 RFID 2ND GENERATION_FWD.PBP
                      00013 ;FILE F4 = C:\PROTON V2.5 RFID 2ND GENERATION\V2.5 RFID 2ND GENERATION_LIB.PBP
                      00014 ;FILE F5 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\READ TAG.INC
                      00015 ;FILE F6 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\READ SD.INC
                      00016 ;FILE F7 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE SD.INC
                      00017 ;FILE F8 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\INIT SD.INC
                      00018 ;FILE F9 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\CHECK TAG.INC
                      00019 ;FILE F10 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE_U_H.INC
                      00020 ;FILE F11 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE_M_H.INC
                      00021 ;FILE F12 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE_M_SD.INC
                      00022 ;FILE F13 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE_USERS_SD.INC
                      00023 ;FILE F14 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\READ_MOD.INC
                      00024 ;FILE F15 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\GOSLEEP.INC
                      00025 ;}
                      00026 ;[Variable Listing]
                      00027 ;SD_BYTER,0032,DT_BYTE,1
                      00028 ;SD_IDX,0033,DT_BYTE,1
                      00029 ;SD_SECTOR_NUM,0034,DT_DWORD,4
                      00030 ;SD_ADDRESS,0038,DT_DWORD,4
                      00031 ;SD_SEEK_RESPONSE_IDX,003C,DT_WORD,2
                      00032 ;SD_SEEK_RESPONSE_REQD,003E,DT_BYTE,1
                      00033 ;SD_SEEK_RESPONSE_RETURN,003F,DT_BYTE,1
                      00034 ;SD_RETURN,0040,DT_BYTE,1
                      00035 ;SD_BUFFER0,0041,DT_BYTE,256
                      00036 ;SD_BUFFER1,0141,DT_BYTE,256
                      00037 ;SD_BYTE0,0241,DT_BYTE,1
                      00038 ;SD_BYTE1,0242,DT_BYTE,1
                      00039 ;SD_BYTE2,0243,DT_BYTE,1
                      00040 ;SD_BYTE3,0244,DT_BYTE,1
                      00041 ;SD_BYTE4,0245,DT_BYTE,1
                      00042 ;SD_BYTE5,0246,DT_BYTE,1
                      00043 ;SD_BUFFER_IDX,0247,DT_WORD,2
                      00044 ;SD_BYTE_RW,0249,DT_BYTE,1
                      00045 ;SD_RW_OPTION,024A,DT_BYTE,1
                      00046 ;SD_EXTENDED_RETURN,024B,DT_BYTE,1
                      00047 ;SD_EXTENDED_RETURN_ROOT_DIR,024C,DT_BYTE,1
                      00048 ;SD_DATA_IO,024D,DT_BYTE,1
                      00049 ;SD_BUFFER_POS,024E,DT_WORD,2
                      00050 ;SD_ROOT_DIR_FILE_POS,0250,DT_BYTE,1
                      00051 ;SD_SEC_NUM,0251,DT_DWORD,4
                      00052 ;SD_SECS_PER_CLUSTER,0255,DT_BYTE,1
                      00053 ;SD_RESERVED_SECS,0256,DT_WORD,2
                      00054 ;SD_SECS_PER_FAT,0258,DT_WORD,2
MPASM  5.06                      V25RFI~1.ASM   4-4-2010  17:25:33         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00055 ;SD_NUM_OF_FATS,025A,DT_BYTE,1
                      00056 ;SD_NUM_OF_SECS,025B,DT_DWORD,4
                      00057 ;SD_BYTES_PER_SEC,025F,DT_WORD,2
                      00058 ;SD_NUM_OF_ROOT_ENTRIES,0261,DT_WORD,2
                      00059 ;SD_SECS_IN_ROOT,0263,DT_WORD,2
                      00060 ;SD_BOOT_RECORD,0265,DT_WORD,2
                      00061 ;SD_FAT1,0267,DT_DWORD,4
                      00062 ;SD_FAT2,026B,DT_DWORD,4
                      00063 ;SD_ROOT_DIR,026F,DT_DWORD,4
                      00064 ;SD_DATA_AREA,0273,DT_DWORD,4
                      00065 ;SD_FAT_ENTRY,0277,DT_WORD,2
                      00066 ;SD_FAT_SEC,0279,DT_DWORD,4
                      00067 ;SD_FAT_BUFFER_POS,027D,DT_WORD,2
                      00068 ;SD_FAT_SEC_PREV,027F,DT_DWORD,4
                      00069 ;SD_FAT_BUFFER_POS_PREV,0283,DT_WORD,2
                      00070 ;SD_ROOT_DIR_SEC,0285,DT_DWORD,4
                      00071 ;SD_ROOT_DIR_POS,0289,DT_WORD,2
                      00072 ;SD_DATA_SEC,028B,DT_DWORD,4
                      00073 ;SD_DATA_BUFFER_POS,028F,DT_WORD,2
                      00074 ;SD_FILE_NAME,0291,DT_STRING,9
                      00075 ;SD_FILE_EXT,029A,DT_STRING,4
                      00076 ;SD_ROOT_DIR_FILE,029E,DT_BYTE,32
                      00077 ;SD_WRITE_SEC_NUM,02BE,DT_DWORD,4
                      00078 ;SD_WRITE_BUFFER_POS,02C2,DT_WORD,2
                      00079 ;SD_NULL_F,02C4,DT_BYTE,1
                      00080 ;SD_CLUSTER_NUM,02C5,DT_WORD,2
                      00081 ;SD_CLUSTER_NUM_PREV,02C7,DT_WORD,2
                      00082 ;SD_LAST_CLUSTER,02C9,DT_WORD,2
                      00083 ;SD_SEC_IN_CLUSTER,02CB,DT_BYTE,1
                      00084 ;SD_FILE_SIZE,02CC,DT_DWORD,4
                      00085 ;SD_IO_BYTE,02D0,DT_BYTE,1
                      00086 ;SD_TEMP_BYTE,02D1,DT_BYTE,1
                      00087 ;SD_TEMP,02D2,DT_WORD,2
                      00088 ;SD_TEMP_DWORD,02D4,DT_DWORD,4
                      00089 ;SD_CLUSTER_SEQ_NUM,02D8,DT_WORD,2
                      00090 ;SD_CLUSTER_SEQ_IDX,02DA,DT_WORD,2
                      00091 ;SD_CLUSTER_SEQ_NUM_PREV,02DC,DT_WORD,2
                      00092 ;SD_CLUSTER_SEQ_IDX_PREV,02DE,DT_WORD,2
                      00093 ;SD_FIND_ROOT_DIR_ENTRY_F,02E0,DT_BYTE,1
                      00094 ;SD_BYTES_READ,02E1,DT_DWORD,4
                      00095 ;_B#VR1,0000,DT_BYTE,1
                      00096 ;SD_FILE_NUM,02E6,DT_WORD,2
                      00097 ;SD_DIR_DIRECTION,02E8,DT_BYTE,1
                      00098 ;SD_EXTENDED_RETURN_INT,02E9,DT_BYTE,1
                      00099 ;SD_FILE_SIZE_LEFT,02EA,DT_DWORD,4
                      00100 ;SD_TIMEOUT,02EE,DT_BYTE,1
                      00101 ;SD_DAY,02EF,DT_BYTE,1
                      00102 ;SD_MONTH,02F0,DT_BYTE,1
                      00103 ;SD_YEAR,02F1,DT_BYTE,1
                      00104 ;SD_MSECONDS,02F2,DT_BYTE,1
                      00105 ;SD_SECONDS,02F3,DT_BYTE,1
                      00106 ;SD_MINUTES,02F4,DT_BYTE,1
                      00107 ;SD_HOURS,02F5,DT_BYTE,1
MPASM  5.06                      V25RFI~1.ASM   4-4-2010  17:25:33         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00108 ;SD_IS_DIRTY,02F6,DT_BYTE,1
                      00109 ;SD_SSPSTAT,02F7,DT_BYTE,1
                      00110 ;SD_RETURN_F,02F8,DT_BYTE,1
                      00111 ;SD_IO_STRING_LENGTH,02F9,DT_BYTE,1
                      00112 ;SD_IO_STRING_POS,02FA,DT_BYTE,1
                      00113 ;SD_IO_STRING,02FB,DT_STRING,201
                      00114 ;USER_POINTER,03C4,DT_WORD,2
                      00115 ;TAGIN,03C6,DT_BYTE,10
                      00116 ;USERIN,03D0,DT_BYTE,4
                      00117 ;UTAG,03D4,DT_BYTE,16
                      00118 ;MODNUM,03E4,DT_BYTE,7
                      00119 ;RESPONSE,03EB,DT_BYTE,1
                      00120 ;MYCOUNT,03EC,DT_BYTE,1
                      00121 ;INDEX,03ED,DT_BYTE,1
                      00122 ;INDEX2,03EE,DT_BYTE,1
                      00123 ;TV1,03EF,DT_BYTE,1
                      00124 ;WORD_VAR,03F0,DT_WORD,2
                      00125 ;MYNUM,03F2,DT_STRING,4
                      00126 ;SD_CS,0F82.2,DT_BIT
                      00127 ;SD_DI,0F82.5,DT_BIT
                      00128 ;SD_CLK,0F82.3,DT_BIT
                      00129 ;SD_DO,0F82.4,DT_BIT
                      00130 ;SD_EOF,02E5.0,DT_BIT
                      00131 ;SD_RW_PTR,02E1,DT_DWORD,4
                      00132 ;SD_FREE_CLUSTER_NUM,02D8,DT_WORD,2
                      00133 ;SD_FREE_SPACE_KB,02E1,DT_DWORD,4
                      00134 ;SD_DISK_SIZE_KB,02E1,DT_DWORD,4
                      00135 ;SD_SPI_BF,0FC7.0,DT_BIT
                      00136 ;SD_SPI_IF,0F9E.3,DT_BIT
                      00137 ;SD_DETECT,0F81.0,DT_BIT
                      00138 ;RFIDENABLE,0F83.4,DT_BIT
                      00139 ;[End Listing]
                      00140  #DEFINE CONFIG_REQ 1
                      00141  #DEFINE _USELFSR 1
Message[308]: Warning level superseded by command line value. (2)
                      00142  LIST  P = 18F4525,F = INHX32 ,W = 2, X = ON, R = DEC, MM = ON, N = 0, C = 255
                      00143  #INCLUDE "C:\PROGRA~1\CROWNH~1\pds\INC\P18F4525.lpb"
                      00001 
                      00962  LIST
                      00144  #DEFINE __18F4525 1
                      00145  #DEFINE XTAL 4
                      00146  #DEFINE _CORE 16
                      00147  #DEFINE _MAXRAM 3968
                      00148  #DEFINE _RAM_END 3839
                      00149  #DEFINE _MAXMEM 49152
                      00150  #DEFINE _ADC 13
                      00151  #DEFINE _ADC_RES 10
                      00152  #DEFINE _EEPROM 1024
                      00153  #DEFINE RAM_BANKS 15
                      00154  #DEFINE _USART 1
                      00155  #DEFINE _USB 0
                      00156  #DEFINE _FLASH 1
                      00157  #DEFINE _CWRITE_BLOCK 8
                      00158  #DEFINE BANK0_START 128
                      00159  #DEFINE BANK0_END 255
                      00160  #DEFINE BANK1_START 256
                      00161  #DEFINE BANK1_END 511
                      00162  #DEFINE BANK2_START 512
                      00163  #DEFINE BANK2_END 767
                      00164  #DEFINE BANK3_START 768
                      00165  #DEFINE BANK3_END 1023
                      00166  #DEFINE BANK4_START 1024
                      00167  #DEFINE BANK4_END 1279
                      00168  #DEFINE BANK5_START 1280
                      00169  #DEFINE BANK5_END 1535
                      00170  #DEFINE BANK6_START 1536
                      00171  #DEFINE BANK6_END 1791
                      00172  #DEFINE BANK7_START 1792
                      00173  #DEFINE BANK7_END 2047
                      00174  #DEFINE BANK8_START 2048
                      00175  #DEFINE BANK8_END 2303
                      00176  #DEFINE BANK9_START 2304
                      00177  #DEFINE BANK9_END 2559
                      00178  #DEFINE BANK10_START 2560
                      00179  #DEFINE BANK10_END 2815
                      00180  #DEFINE BANK11_START 2816
                      00181  #DEFINE BANK11_END 3071
                      00182  #DEFINE BANK12_START 3072
                      00183  #DEFINE BANK12_END 3200
                      00184  #DEFINE BANK13_START 3328
                      00185  #DEFINE BANK13_END 3583
                      00186  #DEFINE BANK14_START 3584
                      00187  #DEFINE BANK14_END 3839
                      00188  #DEFINE BANKA_START 0
                      00189  #DEFINE BANKA_END 127
                      00190  #DEFINE _SYSTEM_VARIABLE_COUNT 50
  00000000            00191 RAM_BANK = 0
                      00192  #DEFINE LCD#DTPORT PORTD
                      00193  #DEFINE LCD#DTPIN 0
                      00194  #DEFINE LCD#RSPORT PORTD
                      00195  #DEFINE LCD#RSPIN 7
                      00196  #DEFINE LCD#ENPORT PORTD
                      00197  #DEFINE LCD#ENPIN 6
                      00198  #DEFINE LCD#INTERFACE 4
                      00199  #DEFINE LCD#LINES 2
                      00200  #DEFINE LCD#TYPE 0
                      00201  IFDEF HLVDCON
                      00202   IFNDEF LVDCON
                      00203    #DEFINE LVDCON HLVDCON
                      00204   ENDIF
                      00205  ENDIF
                      00206  #DEFINE SD_INIT_MSSP#REQ 1
                      00207  #DEFINE SD_CLOSE_FILE#REQ 1
                      00208  #DEFINE SD_OPEN_FILE#REQ 1
                      00209  #DEFINE SD_READ_BYTE_FROM_FILE#REQ 1
                      00210  #DEFINE SD_CHECK_FOR_FILE#REQ 1
                      00211  #DEFINE SD_NEW_FILE#REQ 1
                      00212  #DEFINE SD_APPEND_FILE#REQ 1
                      00213  #DEFINE SD_DELETE_FILE#REQ 1
                      00214  #DEFINE SD_INIT_FS_MSSP#REQ 1
                      00215  #DEFINE SD_WRITE_BYTE_TO_FILE#REQ 1
                      00216  #DEFINE SD_WRITE_STRING_TO_FILE#REQ 1
  00000001            00217 INT@3232_REQ = 1
                      00218  #INCLUDE "C:\PROGRA~1\CROWNH~1\pds\INC\REG_LD16.INC"
                      00001 
                      00002 ; 16Cxxx Substitutions
                      00003 
                      00004  #DEFINE CLRW CLRF WREG ; PIC16Cxxx code substitution (WREG is addressable)
                      00005  #DEFINE NEGW NEGF WREG ; PIC16Cxxx code substitution (WREG is addressable)
                      00006 
                      00007  #DEFINE SKPC BTFSS STATUS,C
                      00008  #DEFINE SKPNC BTFSC STATUS,C
                      00009  #DEFINE CLRC BCF STATUS,C
                      00010  #DEFINE SETC BSF STATUS,C 
                      00011  #DEFINE SKPZ BTFSS STATUS,Z
                      00012  #DEFINE SKPNZ BTFSC STATUS,Z
                      00013  #DEFINE CLRZ BCF STATUS,Z
                      00014  #DEFINE SETZ BSF STATUS,Z
                      00015  
                      00016 ;------------------------------------------------------------------------------------------------- 
                      00017 MOVFW MACRO M#VARIN
                      00018         MOVF M#VARIN,W  
                      00019         ENDM
                      00020 ;-------------------------------------------------------------------------------------------------
                      00021 RLF MACRO M#VARIN,M#DEST
                      00022     RLCF M#VARIN,M#DEST
                      00023     ENDM
                      00024 ;-------------------------------------------------------------------------------------------------
                      00025 RRF MACRO M#VARIN,M#DEST
                      00026     RRCF M#VARIN,M#DEST
                      00027     ENDM
                      00028 ;-------------------------------------------------------------------------------------------------
                      00029 JUMP MACRO LABEL
                      00030         GOTO LABEL
                      00031         ENDM
                      00032 ;-------------------------------------------------------------------------------------------------      
                      00033 F@CALL MACRO M#DEST
                      00034     IF (M#DEST < 1)
                      00035         CALL M#DEST
                      00036     ELSE
                      00037       IF (M#DEST > $)
                      00038         CALL M#DEST
                      00039       ELSE
                      00040         IF (M#DEST < ($ - 0X03FF))
                      00041             CALL M#DEST
                      00042         ELSE
                      00043             RCALL M#DEST
                      00044         ENDIF
                      00045       ENDIF
                      00046     ENDIF
                      00047     ENDM 
                      00048 ;-------------------------------------------------------------------------------------------------
                      00049 F@JUMP MACRO M#DEST
                      00050 
                      00051     IFDEF WATCHDOG_REQ
                      00052         IF ($ == M#DEST)
                      00053                 CLRWDT          ; Walk the dog
                      00054         ENDIF
                      00055         ENDIF
                      00056     IF (M#DEST < 1)
                      00057         GOTO M#DEST
                      00058     ELSE
                      00059       IF ((M#DEST) > $)
                      00060         GOTO M#DEST
                      00061       ELSE
                      00062         IF ((M#DEST) < ($ - 0X03FF))
                      00063             GOTO M#DEST
                      00064         ELSE
                      00065             BRA M#DEST
                      00066         ENDIF
                      00067       ENDIF
                      00068     ENDIF
                      00069     ENDM
                      00070 ;-------------------------------------------------------------------------------------------------
                      00071     IFDEF WATCHDOG_REQ
                      00072                 CHK@SLF MACRO M#DEST
                      00073                         IF ($ == M#DEST)
                      00074                         CLRWDT          ; Walk the dog
                      00075                 ENDIF
                      00076                 ENDM
                      00077         ENDIF
                      00078 
                      00079 G@OTO MACRO M#DEST
                      00080     IF (M#DEST < 1)
                      00081         BTFSC STATUS,OV
                      00082         GOTO M#DEST
                      00083     ELSE
                      00084         IF (M#DEST > $)
                      00085                 BTFSC STATUS,OV
                      00086             GOTO M#DEST
                      00087         ELSE
                      00088                 IF (M#DEST < ($ - 127))
                      00089                 BTFSC STATUS,OV
                      00090                 GOTO M#DEST
                      00091             ELSE
                      00092                 BOV M#DEST
                      00093             ENDIF
                      00094         ENDIF
                      00095     ENDIF
                      00096     ENDM
                      00097 
                      00098 GO@TO MACRO M#DEST
                      00099     IF (M#DEST < 1)
                      00100         GOTO M#DEST
                      00101     ELSE
                      00102         IF (M#DEST > $)
                      00103                 GOTO M#DEST
                      00104         ELSE
                      00105                 IF (M#DEST < ($ - 0X03FF))
                      00106                 GOTO M#DEST
                      00107             ELSE
                      00108                 BRA M#DEST
                      00109             ENDIF
                      00110         ENDIF
                      00111     ENDIF
                      00112     ENDM
                      00113 ;-------------------------------------------------------------------------------------------------
                      00114 S@B MACRO M#VARIN
                      00115     IF ((M#VARIN > BANKA_END) & (M#VARIN < 0X0F80))
                      00116       IF ((M#VARIN & 0X0F00) != (RAM_BANK << 8))
                      00117         MOVLB (M#VARIN >> 8)
                      00118                 RAM_BANK = (M#VARIN >> 8)
                      00119       ENDIF
                      00120     ENDIF
                      00121     ENDM
                      00122 ;-------------------------------------------------------------------------------------------------
                      00123 R@B MACRO
                      00124     IF(RAM_BANK != 0)
                      00125         MOVLB 0
                      00126                 RAM_BANK = 0
                      00127     ENDIF
                      00128     ENDM
                      00129 ;-------------------------------------------------------------------------------------------------
                      00130 WREG_BYTE MACRO M#BYTEOUT
                      00131     MOVFF WREG,M#BYTEOUT
                      00132     ENDM
                      00133 ;-------------------------------------------------------------------------------------------------
                      00134 WREG_BIT MACRO M#VAROUT,M#BITOUT
                      00135     S@B M#VAROUT
                      00136     BTFSC WREG,0
                      00137     BSF M#VAROUT,M#BITOUT
                      00138     BTFSS WREG,0
                      00139     BCF M#VAROUT,M#BITOUT
                      00140     R@B                                                 ; Reset the bank when the macro is finished
                      00141     ENDM
                      00142 ;-------------------------------------------------------------------------------------------------
                      00143 WREG_WORD MACRO M#WORDOUT
                      00144     MOVFF WREG,M#WORDOUT
                      00145     MOVLW 0
                      00146     MOVFF WREG,M#WORDOUT + 1
                      00147     ENDM
                      00148 ;-------------------------------------------------------------------------------------------------
                      00149 WREG_DWORD MACRO M#DWORDOUT
                      00150     MOVFF WREG,M#DWORDOUT
                      00151     MOVLW 0
                      00152     MOVFF WREG,M#DWORDOUT + 3
                      00153     MOVFF WREG,M#DWORDOUT + 2
                      00154     MOVFF WREG,M#DWORDOUT + 1
                      00155     ENDM
                      00156 ;-------------------------------------------------------------------------------------------------
                      00157 BYTE_WREG MACRO M#BYTEIN
                      00158     MOVFF M#BYTEIN,WREG
                      00159     ENDM
                      00160 ;-------------------------------------------------------------------------------------------------
                      00161 NUM_WREG MACRO M#NUMIN
                      00162     MOVLW (M#NUMIN & 255)
                      00163     ENDM
                      00164 ;-------------------------------------------------------------------------------------------------
                      00165 NUM_BYTE MACRO M#NUMIN,M#BYTEOUT
                      00166     MOVLW (M#NUMIN & 255)
                      00167     MOVFF WREG,M#BYTEOUT
                      00168     ENDM
                      00169 ;-------------------------------------------------------------------------------------------------
                      00170 NUM_BIT MACRO M#NUMIN,M#VAROUT,M#BITOUT
                      00171     S@B M#VAROUT
                      00172     IF((M#NUMIN & 1) == 1)
                      00173         BSF M#VAROUT,M#BITOUT
                      00174     ELSE
                      00175         BCF M#VAROUT,M#BITOUT
                      00176         ENDIF
                      00177     R@B                                                 ; Reset the bank when the macro is finished
                      00178     ENDM
                      00179 ;-------------------------------------------------------------------------------------------------
                      00180 NUM_WORD MACRO M#NUMIN,M#WORDOUT
                      00181 
                      00182     IFDEF _USELFSR
                      00183         IF(M#WORDOUT == FSR0L)
                      00184                 LFSR 0,M#NUMIN
                      00185                 EXITM
                      00186         ENDIF
                      00187         
                      00188         IF(M#WORDOUT == FSR1L)
                      00189                 LFSR 1,M#NUMIN
                      00190                 EXITM
                      00191         ENDIF
                      00192         
                      00193         IF(M#WORDOUT == FSR2L)
                      00194                 LFSR 2,M#NUMIN
                      00195                 EXITM
                      00196         ENDIF
                      00197     ENDIF
                      00198     
                      00199     S@B M#WORDOUT
                      00200         MOVLW (M#NUMIN & 255)
                      00201         MOVWF M#WORDOUT
                      00202 
                      00203     S@B M#WORDOUT + 1
                      00204         MOVLW ((M#NUMIN >> 8) & 255)
                      00205         MOVWF M#WORDOUT + 1
                      00206     R@B                                                 ; Reset the bank when the macro is finished
                      00207     ENDM
                      00208 ;-------------------------------------------------------------------------------------------------
                      00209 NUM_DWORD MACRO M#NUMIN,M#DWORDOUT
                      00210         S@B M#DWORDOUT
                      00211     MOVLW (M#NUMIN & 255)
                      00212     MOVWF M#DWORDOUT
                      00213     S@B M#DWORDOUT + 1
                      00214     MOVLW ((M#NUMIN >> 8) & 255)
                      00215     MOVWF M#DWORDOUT + 1
                      00216     S@B M#DWORDOUT + 2
                      00217     MOVLW ((M#NUMIN >> 16) & 255)
                      00218     MOVWF M#DWORDOUT + 2
                      00219     S@B M#DWORDOUT + 3
                      00220     MOVLW ((M#NUMIN >> 24) & 255)
                      00221     MOVWF M#DWORDOUT + 3
                      00222     R@B                                                 ; Reset the bank when the macro is finished
                      00223     ENDM
                      00224 ;-------------------------------------------------------------------------------------------------
                      00225 BIT_WREG MACRO M#VARIN,M#BITIN
                      00226     S@B M#VARIN
                      00227     CLRW
                      00228     BTFSC M#VARIN,M#BITIN
                      00229     MOVLW 1
                      00230     R@B                                                 ; Reset the bank when the macro is finished
                      00231     ENDM
                      00232 ;-------------------------------------------------------------------------------------------------
                      00233 BIT_BYTE MACRO M#VARIN,M#BITIN,M#BYTEOUT
                      00234     S@B M#VARIN
                      00235     CLRW
                      00236     BTFSC M#VARIN,M#BITIN
                      00237     MOVLW 1
                      00238     S@B M#BYTEOUT
                      00239     MOVWF M#BYTEOUT
                      00240     R@B                                                 ; Reset the bank when the macro is finished
                      00241     ENDM
                      00242 ;-------------------------------------------------------------------------------------------------
                      00243 BIT_BIT MACRO M#VARIN,M#BITIN,M#VAROUT,M#BITOUT
                      00244     IF ((M#VARIN & 0X0F00) == (M#VAROUT & 0X0F00))
                      00245         S@B M#VARIN
                      00246         BTFSC M#VARIN,M#BITIN
                      00247         BSF M#VAROUT,M#BITOUT
                      00248         BTFSS M#VARIN,M#BITIN
                      00249         BCF M#VAROUT,M#BITOUT
                      00250         ELSE
                      00251                 IF ((M#VARIN <= BANKA_END) | (M#VARIN >= 0X0F80))
                      00252                         S@B M#VAROUT
                      00253                         BTFSC M#VARIN,M#BITIN
                      00254                         BSF M#VAROUT,M#BITOUT
                      00255                         BTFSS M#VARIN,M#BITIN
                      00256                         BCF M#VAROUT,M#BITOUT
                      00257                         ELSE
                      00258                                 IF ((M#VAROUT <= BANKA_END) | (M#VAROUT >= 0X0F80))
                      00259                                         S@B M#VARIN
                      00260                                         BTFSC M#VARIN,M#BITIN
                      00261                                         BSF M#VAROUT,M#BITOUT
                      00262                                         BTFSS M#VARIN,M#BITIN
                      00263                                         BCF M#VAROUT,M#BITOUT
                      00264                                         ELSE
                      00265                                         S@B M#VARIN
                      00266                                         CLRDC
                      00267                                         BTFSC M#VARIN,M#BITIN
                      00268                                         SETDC
                      00269                                         S@B M#VAROUT
                      00270                                         SKPNDC
                      00271                                         BSF M#VAROUT,M#BITOUT
                      00272                                         SKPDC
                      00273                                         BCF M#VAROUT,M#BITOUT
                      00274                                 ENDIF
                      00275                         ENDIF
                      00276         ENDIF
                      00277         R@B                                                     ; Reset the bank when the macro is finished
                      00278     ENDM
                      00279 ;-------------------------------------------------------------------------------------------------
                      00280 BIT_WORD MACRO M#VARIN,M#BITIN,M#WORDOUT
                      00281     S@B M#WORDOUT + 1
                      00282     CLRF M#WORDOUT + 1
                      00283     BIT_BYTE M#VARIN,M#BITIN,M#WORDOUT
                      00284     ENDM
                      00285 ;-------------------------------------------------------------------------------------------------
                      00286 BIT_DWORD MACRO M#VARIN,M#BITIN,M#DWORDOUT
                      00287     S@B M#DWORDOUT + 3
                      00288     CLRF M#DWORDOUT + 3
                      00289     S@B M#DWORDOUT + 2
                      00290     CLRF M#DWORDOUT + 2
                      00291     S@B M#DWORDOUT + 1
                      00292     CLRF M#DWORDOUT + 1
                      00293         BIT_BYTE M#VARIN,M#BITIN,M#DWORDOUT
                      00294     ENDM
                      00295 ;-------------------------------------------------------------------------------------------------
                      00296 WORD_WREG MACRO M#WORDIN
                      00297     BYTE_WREG M#WORDIN
                      00298     ENDM
                      00299 ;-------------------------------------------------------------------------------------------------
                      00300 WORD_BYTE MACRO M#WORDIN,M#BYTEOUT
                      00301     BYTE_BYTE M#WORDIN,M#BYTEOUT
                      00302     ENDM
                      00303 ;-------------------------------------------------------------------------------------------------
                      00304 WORD_BIT MACRO M#WORDIN,M#VAROUT,M#BITOUT
                      00305     BYTE_BIT M#WORDIN, M#VAROUT, M#BITOUT
                      00306     ENDM
                      00307 ;-------------------------------------------------------------------------------------------------
                      00308 WORD_WORD MACRO M#WORDIN,M#WORDOUT
                      00309     MOVFF M#WORDIN + 1,M#WORDOUT + 1
                      00310     MOVFF M#WORDIN,M#WORDOUT
                      00311     ENDM
                      00312 ;-------------------------------------------------------------------------------------------------
                      00313 WORD_DWORD MACRO M#WORDIN,M#DWORDOUT
                      00314     MOVLW 0
                      00315     MOVFF WREG,M#DWORDOUT + 3
                      00316     MOVFF WREG,M#DWORDOUT + 2
                      00317     WORD_WORD M#WORDIN,M#DWORDOUT
                      00318     ENDM
                      00319 ;-------------------------------------------------------------------------------------------------
                      00320 BYTE_BYTE MACRO M#BYTEIN,M#BYTEOUT
                      00321     MOVFF M#BYTEIN,M#BYTEOUT
                      00322     ENDM
                      00323 ;-------------------------------------------------------------------------------------------------
                      00324 BYTE_WORD MACRO M#BYTEIN,M#WORDOUT
                      00325     MOVLW 0
                      00326     MOVFF WREG,M#WORDOUT + 1
                      00327     BYTE_BYTE M#BYTEIN,M#WORDOUT
                      00328     ENDM
                      00329 ;-------------------------------------------------------------------------------------------------
                      00330 BYTE_DWORD MACRO M#BYTEIN,M#DWORDOUT
                      00331     MOVLW 0
                      00332     MOVFF WREG,M#DWORDOUT + 3
                      00333     MOVFF WREG,M#DWORDOUT + 2
                      00334     MOVFF WREG,M#DWORDOUT + 1
                      00335     BYTE_BYTE M#BYTEIN,M#DWORDOUT
                      00336     ENDM
                      00337 ;-------------------------------------------------------------------------------------------------
                      00338 BYTE_BIT MACRO M#BYTEIN,M#VAROUT,M#BITOUT
                      00339     IF ((M#BYTEIN & 0X0F00) == (M#VAROUT & 0X0F00))
                      00340         S@B M#BYTEIN
                      00341         BTFSC M#BYTEIN,0
                      00342         BSF M#VAROUT,M#BITOUT
                      00343         BTFSS M#BYTEIN,0
                      00344         BCF M#VAROUT,M#BITOUT
                      00345     ELSE
                      00346       IF ((M#BYTEIN <= BANKA_END) | (M#BYTEIN >= 0X0F80))
                      00347         S@B M#VAROUT
                      00348         BTFSC M#BYTEIN,0
                      00349         BSF M#VAROUT,M#BITOUT
                      00350         BTFSS M#BYTEIN,0
                      00351         BCF M#VAROUT,M#BITOUT
                      00352       ELSE
                      00353           IF ((M#VAROUT <= BANKA_END) | (M#VAROUT >= 0X0F80))
                      00354         S@B M#BYTEIN
                      00355         BTFSC M#BYTEIN,0
                      00356         BSF M#VAROUT,M#BITOUT
                      00357         BTFSS M#BYTEIN,0
                      00358         BCF M#VAROUT,M#BITOUT
                      00359           ELSE
                      00360         S@B M#BYTEIN
                      00361         RRF M#BYTEIN,W
                      00362         S@B M#VAROUT
                      00363         SKPNC
                      00364         BSF M#VAROUT,M#BITOUT
                      00365         SKPC
                      00366         BCF M#VAROUT,M#BITOUT
                      00367         ENDIF
                      00368       ENDIF
                      00369     ENDIF
                      00370     R@B                                                 ; Reset the bank when the macro is finished
                      00371     ENDM
                      00372 ;-------------------------------------------------------------------------------------------------
                      00373 DWORD_WREG MACRO M#DWORDIN
                      00374     BYTE_WREG M#DWORDIN
                      00375         ENDM
                      00376 ;-------------------------------------------------------------------------------------------------
                      00377 DWORD_BYTE MACRO M#DWORDIN,M#BYTEOUT
                      00378     BYTE_BYTE M#DWORDIN,M#BYTEOUT
                      00379         ENDM
                      00380 ;-------------------------------------------------------------------------------------------------
                      00381 DWORD_WORD MACRO M#DWORDIN,M#WORDOUT
                      00382     MOVFF M#DWORDIN + 1,M#WORDOUT + 1
                      00383     MOVFF M#DWORDIN,M#WORDOUT
                      00384         ENDM
                      00385 ;-------------------------------------------------------------------------------------------------
                      00386 DWORD_DWORD MACRO M#DWORDIN,M#DWORDOUT
                      00387     MOVFF M#DWORDIN + 3,M#DWORDOUT + 3
                      00388     MOVFF M#DWORDIN + 2,M#DWORDOUT + 2
                      00389     MOVFF M#DWORDIN + 1,M#DWORDOUT + 1
                      00390     MOVFF M#DWORDIN,M#DWORDOUT
                      00391         ENDM
                      00392 ;-------------------------------------------------------------------------------------------------
                      00393 DWORD_BIT MACRO M#DWORDIN,M#VAROUT,M#BITOUT
                      00394     BYTE_BIT M#DWORDIN,M#VAROUT,M#BITOUT
                      00395         ENDM
                      00396 ;-------------------------------------------------------------------------------------------------
                      00397 NUM_FLOAT MACRO M#NUMIN,FLOATOUT
                      00398         NUM_BYTE M#NUMIN,FLOATOUT + 3
                      00399         NUM_BYTE ((M#NUMIN >> 8) & 255),FLOATOUT + 2
                      00400         NUM_BYTE ((M#NUMIN >> 16) & 255),FLOATOUT + 1
                      00401         NUM_BYTE ((M#NUMIN >> 24) & 255),FLOATOUT
                      00402         ENDM
                      00403 ;-------------------------------------------------------------------------------------------------
                      00404 WREG_FLOAT MACRO FLOATOUT
                      00405     CALL FLO@0832U
                      00406         MOVFF PBP_AARG,FLOATOUT
                      00407         MOVFF PBP_AARGH,FLOATOUT + 1
                      00408         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00409         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00410     ENDM
                      00411 ;-------------------------------------------------------------------------------------------------
                      00412 BIT_FLOAT MACRO M#VARIN,M#BITIN,FLOATOUT
                      00413     BIT_WREG M#VARIN,M#BITIN
                      00414     CALL FLO@0832U
                      00415         MOVFF PBP_AARG,FLOATOUT
                      00416         MOVFF PBP_AARGH,FLOATOUT + 1
                      00417         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00418         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00419     ENDM
                      00420 ;-------------------------------------------------------------------------------------------------
                      00421 BYTE_FLOAT MACRO M#BYTEIN,FLOATOUT
                      00422     BYTE_WREG M#BYTEIN
                      00423     CALL FLO@0832U
                      00424         MOVFF PBP_AARG,FLOATOUT
                      00425         MOVFF PBP_AARGH,FLOATOUT + 1
                      00426         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00427         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00428     ENDM
                      00429 ;-------------------------------------------------------------------------------------------------
                      00430 WORD_FLOAT MACRO M#WORDIN,FLOATOUT
                      00431     BYTE_BYTE M#WORDIN PBP_AARG
                      00432     BYTE_BYTE M#WORDIN + 1 PBP_AARGH
                      00433     CALL FLO@1632U
                      00434         MOVFF PBP_AARG,FLOATOUT
                      00435         MOVFF PBP_AARGH,FLOATOUT + 1
                      00436         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00437         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00438     ENDM
                      00439 ;-------------------------------------------------------------------------------------------------
                      00440 DWORD_FLOAT MACRO M#DWORDIN,FLOATOUT                    
                      00441         MOVFF M#DWORDIN,PBP_AARG
                      00442         MOVFF M#DWORDIN + 1,PBP_AARGH
                      00443         MOVFF M#DWORDIN + 2,PBP_AARGHH
                      00444         MOVFF M#DWORDIN + 3,PBP_AARGHHH
                      00445         CALL FLO@3232S
                      00446         MOVFF PBP_AARG,FLOATOUT
                      00447         MOVFF PBP_AARGH,FLOATOUT + 1
                      00448         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00449         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00450         ENDM
                      00451 ;-------------------------------------------------------------------------------------------------
                      00452 FLOAT_FLOAT MACRO FLOATIN,FLOATOUT      
                      00453         MOVFF FLOATIN,FLOATOUT
                      00454         MOVFF FLOATIN + 1,FLOATOUT + 1
                      00455         MOVFF FLOATIN + 2,FLOATOUT + 2
                      00456         MOVFF FLOATIN + 3,FLOATOUT + 3
                      00457         ENDM
                      00458 ;-------------------------------------------------------------------------------------------------
                      00459 FLOAT_WREG MACRO FLOATIN
                      00460 
                      00461         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00462         CALL INT@3232
                      00463         ENDM
                      00464 ;-------------------------------------------------------------------------------------------------
                      00465 FLOAT_BIT MACRO FLOATIN,M#VAROUT,M#BITOUT
                      00466         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00467         CALL INT@3232
                      00468         WREG_BIT M#VAROUT,M#BITOUT
                      00469         ENDM
                      00470 ;-------------------------------------------------------------------------------------------------
                      00471 FLOAT_BYTE MACRO FLOATIN,M#BYTEOUT
                      00472         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00473         CALL INT@3232
                      00474         WREG_BYTE M#BYTEOUT
                      00475         ENDM
                      00476 ;-------------------------------------------------------------------------------------------------
                      00477 FLOAT_WORD MACRO FLOATIN,M#WORDOUT
                      00478         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00479         CALL INT@3232
                      00480         MOVFF PBP_AARGHHH,M#WORDOUT
                      00481         MOVFF PBP_AARGHH,M#WORDOUT + 1
                      00482         ENDM
                      00483 ;-------------------------------------------------------------------------------------------------
                      00484 FLOAT_DWORD MACRO FLOATIN,M#DWORDOUT
                      00485         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00486         CALL INT@3232
                      00487         MOVFF PBP_AARGHHH,M#DWORDOUT
                      00488         MOVFF PBP_AARGHH,M#DWORDOUT + 1
                      00489         MOVFF PBP_AARGH,M#DWORDOUT + 2
                      00490         MOVFF PBP_AARG,M#DWORDOUT + 3
                      00491         ENDM
                      00492 ;-------------------------------------------------------------------------------------------------
                      00493 ; Macros for Library Manager
                      00494 NUM_FSR0 MACRO M#NUMIN
                      00495     LFSR 0, M#NUMIN
                      00496     ENDM
                      00497 ;-------------------------------------------------------------------------------------------------
                      00498 NUM_FSR1 MACRO M#NUMIN
                      00499     LFSR 1, M#NUMIN
                      00500     ENDM
                      00501 ;-------------------------------------------------------------------------------------------------
                      00502 NUM_FSR2 MACRO M#NUMIN
                      00503     LFSR 2, M#NUMIN
                      00504     ENDM 
                      00505 ;-------------------------------------------------------------------------------------------------
                      00506 LABEL_WORD MACRO LABELIN,M#WORDOUT  
                      00507     MOVLW (LABELIN & 255)
                      00508     MOVFF WREG, M#WORDOUT
                      00509     MOVLW ((LABELIN >> 8) & 255)
                      00510     MOVFF WREG, M#WORDOUT + 1
                      00511     ENDM
  00000000            00219 BPF = 0
  00000001            00220 BPFH = 1
  00000002            00221 GEN = 2
  00000003            00222 GEN3H = 3
  00000004            00223 GEN4 = 4
  00000005            00224 GEN4H = 5
  00000006            00225 GENH = 6
  00000007            00226 GPR = 7
  00000008            00227 PBP#VAR0 = 8
  00000009            00228 PBP#VAR0H = 9
  0000000A            00229 PBP#VAR0HH = 10
  0000000B            00230 PBP#VAR0HHH = 11
  0000000C            00231 PBP#VAR1 = 12
  0000000D            00232 PBP_AARG = 13
  0000000E            00233 PBP_AARGH = 14
  0000000F            00234 PBP_AARGHH = 15
  00000010            00235 PBP_AARGHHH = 16
  00000011            00236 PP0 = 17
  00000012            00237 PP0H = 18
  00000013            00238 PP0HH = 19
  00000014            00239 PP0HHH = 20
  00000015            00240 PP1 = 21
  00000016            00241 PP1H = 22
  00000017            00242 PP1HH = 23
  00000018            00243 PP1HHH = 24
  00000019            00244 PP2 = 25
  0000001A            00245 PP2H = 26
  0000001B            00246 PP2HH = 27
  0000001C            00247 PP2HHH = 28
  0000001D            00248 PP3 = 29
  0000001E            00249 PP3H = 30
  0000001F            00250 PP4 = 31
  00000020            00251 PP5 = 32
  00000021            00252 PP6 = 33
  00000022            00253 PP6H = 34
  00000023            00254 PP7 = 35
  00000024            00255 PP7H = 36
  00000025            00256 PP7HH = 37
  00000026            00257 PP7HHH = 38
  00000027            00258 PP8 = 39
  00000028            00259 PP8H = 40
  00000029            00260 PPZ = 41
  0000002A            00261 PPZH = 42
  0000002B            00262 PPZHH = 43
  0000002C            00263 PPZHHH = 44
  0000002D            00264 SP#P9 = 45
  0000002E            00265 _AEXP = 46
  0000002F            00266 _FP_FLAGS = 47
  00000030            00267 _FP_TEMP = 48
  00000031            00268 _SIGN = 49
  000002E5            00269 _B#VR1 = 741
  00000006            00270 HSERIAL_SPBRG = 6
  00000020            00271 HSERIAL_TXSTA = 32
  00000090            00272 HSERIAL_RCSTA = 144
  00002580            00273 HSERIAL_BAUD = 9600
000000                00274         ORG 0X00
000000 EFE8 F002      00275         GOTO START@
000008                00276         ORG 0X08
000008                00277 T@EB
000008 6A12           00278         CLRF 18
00000A                00279 T@EW
00000A 6A16           00280         CLRF 22
00000C                00281 T@E
00000C 6E15           00282         MOVWF 21
00000E 0E02           00283         MOVLW 2
000010 D003           00284         BRA T@ST
000012                00285 T@GE
000012 6E15           00286         MOVWF 21
000014 0E03           00287         MOVLW 3
000016 D000           00288         BRA T@ST
000018                00289 T@ST
000018 6E07           00290         MOVWF 7
00001A 5016           00291         MOVF 22,W
00001C 5C12           00292         SUBWF 18,W
00001E E102           00293         BNZ CN@EQ
000020 5015           00294         MOVF 21,W
000022 5C11           00295         SUBWF 17,W
000024                00296 CN@EQ
000024 0E04           00297         MOVLW 4
000026 B0D8           00298         BTFSC 4056,0
000028 0E01           00299         MOVLW 1
00002A B4D8           00300         BTFSC 4056,2
00002C 0E02           00301         MOVLW 2
00002E 1407           00302         ANDWF 7,W
000030 A4D8           00303         BTFSS 4056,2
000032 0E01           00304         MOVLW 1
000034 0012           00305         RETURN
000036                00306 LCD@CLS
000036 0E80           00307         MOVLW 128
000038 6E01           00308         MOVWF 1
00003A                00309 CLS
00003A 0EFE           00310         MOVLW 254
00003C ECF2 F000      00311         CALL CH@SND
000040 0E01           00312         MOVLW 1
000042 ECF2 F000      00313         CALL CH@SND
000046 0E75           00314         MOVLW 117
000048 6E12           00315         MOVWF 18
00004A 0E30           00316         MOVLW 48
00004C EF32 F001      00317         GOTO DLUS@W
000050                00318 LCD@CRS
000050 6A01           00319         CLRF 1
000052 8E01           00320         BSF 1,7
000054                00321 CURS@
000054 6E20           00322         MOVWF 32
000056 0EFE           00323         MOVLW 254
000058 ECF2 F000      00324         CALL CH@SND
00005C 5020           00325         MOVF 32,W
00005E EFF2 F000      00326         GOTO CH@SND
000062                00327 OUT@DECB
000062 6A05           00328         CLRF 5
000064                00329 OUT@DECC
000064 6E19           00330         MOVWF 25
000066 6A1A           00331         CLRF 26
000068                00332 OUT@DEC
000068 9600           00333         BCF 0,3
00006A 5005           00334         MOVF 5,W
00006C B4D8           00335         BTFSC 4056,2
00006E 8600           00336         BSF 0,3
000070 0E05           00337         MOVLW 5
000072 6E04           00338         MOVWF 4
000074 0E27           00339         MOVLW 39
000076 6E16           00340         MOVWF 22
000078 0E10           00341         MOVLW 16
00007A D80C           00342         RCALL D@DIG
00007C 0E03           00343         MOVLW 3
00007E 6E16           00344         MOVWF 22
000080 0EE8           00345         MOVLW 232
000082 D808           00346         RCALL D@DIG
000084 6A16           00347         CLRF 22
000086 0E64           00348         MOVLW 100
000088 D805           00349         RCALL D@DIG
00008A 6A16           00350         CLRF 22
00008C 0E0A           00351         MOVLW 10
00008E D802           00352         RCALL D@DIG
000090 5019           00353         MOVF 25,W
000092 D008           00354         BRA SEND@IT
000094                00355 D@DIG
000094 6E15           00356         MOVWF 21
000096 501A           00357         MOVF 26,W
000098 6E12           00358         MOVWF 18
00009A 5019           00359         MOVF 25,W
00009C 6E11           00360         MOVWF 17
00009E ECA3 F001      00361         CALL D@VD
0000A2 5011           00362         MOVF 17,W
0000A4                00363 SEND@IT
0000A4 6E11           00364         MOVWF 17
0000A6 4E04           00365         DCFSNZ 4,F
0000A8 9600           00366         BCF 0,3
0000AA 5005           00367         MOVF 5,W
0000AC E003           00368         BZ $ + 8
0000AE 5C04           00369         SUBWF 4,W
0000B0 B0D8           00370         BTFSC 4056,0
0000B2 D008           00371         BRA EX@SEND@IT
0000B4 5011           00372         MOVF 17,W
0000B6 A4D8           00373         BTFSS 4056,2
0000B8 9600           00374         BCF 0,3
0000BA B600           00375         BTFSC 0,3
0000BC D003           00376         BRA EX@SEND@IT
0000BE 0F30           00377         ADDLW 48
0000C0 EFF2 F000      00378         GOTO CH@SND
0000C4                00379 EX@SEND@IT
0000C4 0012           00380         RETURN
0000C6                00381 SB@STROUT
0000C6 6E19           00382         MOVWF 25
0000C8                00383 SB@STROUTLP
0000C8 5004           00384         MOVF 4,W
0000CA B4D8           00385         BTFSC 4056,2
0000CC 0012           00386         RETURN
0000CE C019 FFE9      00387         MOVFF 25,4073
0000D2 C01A FFEA      00388         MOVFF 26,4074
0000D6 50EF           00389         MOVF 4079,W
0000D8 B4D8           00390         BTFSC 4056,2
0000DA 0012           00391         RETURN
0000DC ECF2 F000      00392         CALL CH@SND
0000E0 4A19           00393         INFSNZ 25,F
0000E2 2A1A           00394         INCF 26,F
0000E4 0604           00395         DECF 4,F
0000E6 D7F0           00396         BRA SB@STROUTLP
0000E8                00397 PRINT@MSTR
0000E8                00398 PRINT@MSTRL
0000E8 6AA6           00399         CLRF 4006
0000EA 8EA6           00400         BSF 4006,EEPGD
0000EC                00401 PRT@MTL1
0000EC 0009           00402         TBLRD*+
0000EE 50F5           00403         MOVF 4085,W
0000F0 E002           00404         BZ PRT@MTEXT
0000F2 D802           00405         RCALL PRINT
0000F4 D7FB           00406         BRA PRT@MTL1
0000F6                00407 PRT@MTEXT
0000F6 0012           00408         RETURN
0000F8                00409 PRINT
0000F8 6E1E           00410         MOVWF 30
0000FA 9C83           00411         BCF 3971,6
0000FC 9E83           00412         BCF 3971,7
0000FE 9C95           00413         BCF 3989,6
000100 9E95           00414         BCF 3989,7
000102 0EF0           00415         MOVLW 240
000104 1695           00416         ANDWF 3989,F
000106 501E           00417         MOVF 30,W
000108 B200           00418         BTFSC 0,1
00010A EFA9 F000      00419         GOTO PRT@1
00010E 0E3A           00420         MOVLW 58
000110 6E12           00421         MOVWF 18
000112 0E98           00422         MOVLW 152
000114 EC32 F001      00423         CALL DLUS@W
000118 0E33           00424         MOVLW 51
00011A 6E1D           00425         MOVWF 29
00011C D82E           00426         RCALL PR@LP
00011E 0E13           00427         MOVLW 19
000120 6E12           00428         MOVWF 18
000122 0E88           00429         MOVLW 136
000124 EC32 F001      00430         CALL DLUS@W
000128 D828           00431         RCALL PR@LP
00012A 0E64           00432         MOVLW 100
00012C EC31 F001      00433         CALL DL@US
000130 D824           00434         RCALL PR@LP
000132 0E64           00435         MOVLW 100
000134 EC31 F001      00436         CALL DL@US
000138 0E22           00437         MOVLW 34
00013A 6E1D           00438         MOVWF 29
00013C D81E           00439         RCALL PR@LP
00013E 0E28           00440         MOVLW 40
000140 D807           00441         RCALL PR@CM
000142 0E0C           00442         MOVLW 12
000144 D805           00443         RCALL PR@CM
000146 0E06           00444         MOVLW 6
000148 D803           00445         RCALL PR@CM
00014A 8200           00446         BSF 0,1
00014C 501E           00447         MOVF 30,W
00014E D001           00448         BRA PRT@1
000150                00449 PR@CM
000150 8000           00450         BSF 0,0
000152                00451 PRT@1
000152 6E1D           00452         MOVWF 29
000154 A000           00453         BTFSS 0,0
000156 D00B           00454         BRA PR@CC
000158 9E83           00455         BCF 3971,7
00015A 0803           00456         SUBLW 3
00015C E30C           00457         BNC PR@SD
00015E D80B           00458         RCALL PR@SD
000160 0E07           00459         MOVLW 7
000162 6E12           00460         MOVWF 18
000164 0ED0           00461         MOVLW 208
000166 EC32 F001      00462         CALL DLUS@W
00016A 80D8           00463         BSF 4056,0
00016C 0012           00464         RETURN
00016E                00465 PR@CC
00016E 8000           00466         BSF 0,0
000170 08FE           00467         SUBLW 254
000172 E012           00468         BZ PR@EX
000174 8E83           00469         BSF 3971,7
000176                00470 PR@SD
000176 3A1D           00471         SWAPF 29,F
000178 A000           00472         BTFSS 0,0
00017A                00473 PR@LP
00017A 9000           00474         BCF 0,0
00017C 8C83           00475         BSF 3971,6
00017E 0EF0           00476         MOVLW 240
000180 1683           00477         ANDWF 3971,F
000182 501D           00478         MOVF 29,W
000184 0B0F           00479         ANDLW 15
000186 1283           00480         IORWF 3971,F
000188 9C83           00481         BCF 3971,6
00018A 3A1D           00482         SWAPF 29,F
00018C B000           00483         BTFSC 0,0
00018E D7F5           00484         BRA PR@LP
000190 0E32           00485         MOVLW 50
000192 EC31 F001      00486         CALL DL@US
000196 80D8           00487         BSF 4056,0
000198                00488 PR@EX
000198 501E           00489         MOVF 30,W
00019A 0012           00490         RETURN
00019C                00491 HRSIN2
00019C B2AB           00492         BTFSC 4011,OERR
00019E 98AB           00493         BCF 4011,CREN
0001A0 88AB           00494         BSF 4011,CREN
0001A2 C002 F011      00495         MOVFF 2,17
0001A6 C006 F012      00496         MOVFF 6,18
0001AA 6A15           00497         CLRF 21
0001AC 6A16           00498         CLRF 22
0001AE                00499 HRI@L0
0001AE 0000           00500         NOP
0001B0 D000           00501         BRA $ + 2
0001B2                00502 HRI@L
0001B2 0000           00503         NOP
0001B4 BA9E           00504         BTFSC 3998,RCIF
0001B6 D013           00505         BRA H@RSIN
0001B8 68E8           00506         SETF 4072
0001BA 2615           00507         ADDWF 21,F
0001BC 2216           00508         ADDWFC 22,F
0001BE 2211           00509         ADDWFC 17,F
0001C0 2212           00510         ADDWFC 18,F
0001C2 A0D8           00511         BTFSS 4056,0
0001C4 0012           00512         RETURN
0001C6 4815           00513         INFSNZ 21,W
0001C8 3C16           00514         INCFSZ 22,W
0001CA D7F1           00515         BRA HRI@L0
0001CC 0E3D           00516         MOVLW 61
0001CE 6E15           00517         MOVWF 21
0001D0 6A16           00518         CLRF 22
0001D2 D7EF           00519         BRA HRI@L
0001D4                00520 HRSIN
0001D4 B2AB           00521         BTFSC 4011,OERR
0001D6 98AB           00522         BCF 4011,CREN
0001D8 88AB           00523         BSF 4011,CREN
0001DA AA9E           00524         BTFSS 3998,RCIF
0001DC D7FE           00525         BRA $ - 2
0001DE                00526 H@RSIN
0001DE 50AE           00527         MOVF 4014,W
0001E0 80D8           00528         BSF 4056,0
0001E2 0012           00529         RETURN
0001E4                00530 CH@SND
0001E4 BE01           00531         BTFSC 1,7
0001E6 EF7C F000      00532         GOTO PRINT
0001EA A201           00533         BTFSS 1,1
0001EC D005           00534         BRA $ + 12
0001EE B001           00535         BTFSC 1,0
0001F0 D003           00536         BRA $ + 8
0001F2 B201           00537         BTFSC 1,1
0001F4 6EEE           00538         MOVWF 4078
0001F6 0012           00539         RETURN
0001F8                00540 EE@RD
0001F8 6AAA           00541         CLRF 4010
0001FA 6EA9           00542         MOVWF 4009
0001FC                00543 EE@RD@W
0001FC 6AA6           00544         CLRF 4006
0001FE 80A6           00545         BSF     4006,RD
000200 50A8           00546         MOVF 4008,W
000202 4AA9           00547         INFSNZ 4009,F
000204 2AAA           00548         INCF 4010,F
000206 0012           00549         RETURN
000208                00550 EE@WR
000208 6AAA           00551         CLRF 4010
00020A                00552 EE@WR@W
00020A 6EA8           00553         MOVWF 4008
00020C 6AA6           00554         CLRF 4006
00020E 84A6           00555         BSF     4006,WREN
000210 0E55           00556         MOVLW 85
000212 6EA7           00557         MOVWF 4007
000214 0EAA           00558         MOVLW 170
000216 6EA7           00559         MOVWF 4007
000218 82A6           00560         BSF     4006,WR
00021A B2A6           00561         BTFSC 4006,WR
00021C D7FE           00562         BRA $ - 2
00021E 94A6           00563         BCF     4006,WREN
000220 4AA9           00564         INFSNZ 4009,F
000222 2AAA           00565         INCF 4010,F
000224 0012           00566         RETURN
000226                00567 C@WRITE
000226 6EF5           00568         MOVWF 4085
000228 000C           00569         TBLWT*
00022A 28F6           00570         INCF 4086,W
00022C 0B07           00571         ANDLW 7
00022E E109           00572         BNZ CR@EXIT
000230 0E84           00573         MOVLW 132
000232 6EA6           00574         MOVWF 4006
000234 0E55           00575         MOVLW 85
000236 6EA7           00576         MOVWF 4007
000238 0EAA           00577         MOVLW 170
00023A 6EA7           00578         MOVWF 4007
00023C 82A6           00579         BSF 4006,WR
00023E D000           00580         BRA $ + 2
000240 94A6           00581         BCF 4006,WREN
000242                00582 CR@EXIT
000242 4AF6           00583         INFSNZ 4086,F
000244 2AF7           00584         INCF 4087,F
000246 0012           00585         RETURN
000248                00586 DL@MS
000248 6A16           00587         CLRF 22
00024A                00588 DLY@W
00024A 6E15           00589         MOVWF 21
00024C                00590 DLY@P
00024C 0EFF           00591         MOVLW 255
00024E 2615           00592         ADDWF 21,F
000250 2216           00593         ADDWFC 22,F
000252 D000           00594         BRA $ + 2
000254 A0D8           00595         BTFSS 4056,0
000256 0012           00596         RETURN
000258 0E03           00597         MOVLW 3
00025A 6E12           00598         MOVWF 18
00025C 0EDF           00599         MOVLW 223
00025E D802           00600         RCALL DLUS@W
000260 D7F5           00601         BRA DLY@P
000262                00602 DL@US
000262 6A12           00603         CLRF 18
000264                00604 DLUS@W
000264 0FE8           00605         ADDLW 232
000266 6E11           00606         MOVWF 17
000268 1E12           00607         COMF 18,F
00026A 0EFC           00608         MOVLW 252
00026C A0D8           00609         BTFSS 4056,0
00026E D003           00610         BRA DL@H
000270                00611 DLUS@LP
000270 2611           00612         ADDWF 17,F
000272 B0D8           00613         BTFSC 4056,0
000274 D7FD           00614         BRA DLUS@LP
000276                00615 DL@H
000276 2611           00616         ADDWF 17,F
000278 0000           00617         NOP
00027A 3E12           00618         INCFSZ 18,F
00027C D7F9           00619         BRA DLUS@LP
00027E B011           00620         BTFSC 17,0
000280 D000           00621         BRA $ + 2
000282 A211           00622         BTFSS 17,1
000284 D002           00623         BRA DLUS@D
000286 0000           00624         NOP
000288 D000           00625         BRA $ + 2
00028A                00626 DLUS@D
00028A 0012           00627         RETURN
00028C                00628 L@DIV
00028C                00629 L@MOD
00028C 5014           00630         MOVF 20,W
00028E 181C           00631         XORWF 28,W
000290 0B80           00632         ANDLW 128
000292 6EF4           00633         MOVWF 4084
000294 AE14           00634         BTFSS 20,7
000296 D006           00635         BRA DIVS@32X32SKIP1
000298 80D8           00636         BSF 4056,C
00029A 0E00           00637         MOVLW 0
00029C 5611           00638         SUBFWB 17,F
00029E 5612           00639         SUBFWB 18,F
0002A0 5613           00640         SUBFWB 19,F
0002A2 5614           00641         SUBFWB 20,F
0002A4                00642 DIVS@32X32SKIP1
0002A4 AE1C           00643         BTFSS 28,7
0002A6 D006           00644         BRA DIVS@32X32SKIP2
0002A8 80D8           00645         BSF 4056,C
0002AA 0E00           00646         MOVLW 0
0002AC 5619           00647         SUBFWB 25,F
0002AE 561A           00648         SUBFWB 26,F
0002B0 561B           00649         SUBFWB 27,F
0002B2 561C           00650         SUBFWB 28,F
0002B4                00651 DIVS@32X32SKIP2
0002B4 6A15           00652         CLRF 21
0002B6 6A16           00653         CLRF 22
0002B8 6A17           00654         CLRF 23
0002BA 6A18           00655         CLRF 24
0002BC 6A29           00656         CLRF 41
0002BE 6A2A           00657         CLRF 42
0002C0 6A2B           00658         CLRF 43
0002C2 6A2C           00659         CLRF 44
0002C4 501C           00660         MOVF 28,W
0002C6 101B           00661         IORWF 27,W
0002C8 101A           00662         IORWF 26,W
0002CA 1019           00663         IORWF 25,W
0002CC E023           00664         BZ DIVS@32X32SKIP5
0002CE 0E20           00665         MOVLW 32
0002D0 6EF3           00666         MOVWF 4083
0002D2                00667 DIVS@32X32LOOP
0002D2 90D8           00668         BCF 4056,C
0002D4 3611           00669         RLCF 17,F
0002D6 3612           00670         RLCF 18,F
0002D8 3613           00671         RLCF 19,F
0002DA 3614           00672         RLCF 20,F
0002DC 3629           00673         RLCF 41,F
0002DE 362A           00674         RLCF 42,F
0002E0 362B           00675         RLCF 43,F
0002E2 362C           00676         RLCF 44,F
0002E4 5019           00677         MOVF 25,W
0002E6 5C29           00678         SUBWF 41,W
0002E8 501A           00679         MOVF 26,W
0002EA 582A           00680         SUBWFB 42,W
0002EC 501B           00681         MOVF 27,W
0002EE 582B           00682         SUBWFB 43,W
0002F0 501C           00683         MOVF 28,W
0002F2 582C           00684         SUBWFB 44,W
0002F4 E309           00685         BNC DIVS@32X32SKIP4
0002F6 5019           00686         MOVF 25,W
0002F8 5E29           00687         SUBWF 41,F
0002FA 501A           00688         MOVF 26,W
0002FC 5A2A           00689         SUBWFB 42,F
0002FE 501B           00690         MOVF 27,W
000300 5A2B           00691         SUBWFB 43,F
000302 501C           00692         MOVF 28,W
000304 5A2C           00693         SUBWFB 44,F
000306 80D8           00694         BSF 4056,C
000308                00695 DIVS@32X32SKIP4
000308 3615           00696         RLCF 21,F
00030A 3616           00697         RLCF 22,F
00030C 3617           00698         RLCF 23,F
00030E 3618           00699         RLCF 24,F
000310 2EF3           00700         DECFSZ 4083,F
000312 D7DF           00701         BRA DIVS@32X32LOOP
000314                00702 DIVS@32X32SKIP5
000314 AEF4           00703         BTFSS 4084,7
000316 D006           00704         BRA DIVS@32X32EXIT
000318 80D8           00705         BSF 4056,C
00031A 0E00           00706         MOVLW 0
00031C 5615           00707         SUBFWB 21,F
00031E 5616           00708         SUBFWB 22,F
000320 5617           00709         SUBFWB 23,F
000322 5618           00710         SUBFWB 24,F
000324                00711 DIVS@32X32EXIT
000324 C015 F011      00712         MOVFF 21,17
000328 C016 F012      00713         MOVFF 22,18
00032C C017 F013      00714         MOVFF 23,19
000330 C018 F014      00715         MOVFF 24,20
000334 C029 F019      00716         MOVFF 41,25
000338 C02A F01A      00717         MOVFF 42,26
00033C C02B F01B      00718         MOVFF 43,27
000340 C02C F01C      00719         MOVFF 44,28
000344 0012           00720         RETURN
000346                00721 D@VD
000346 6A1A           00722         CLRF 26
000348 6A19           00723         CLRF 25
00034A                00724 D@VD2
00034A 0E10           00725         MOVLW 16
00034C 6EF3           00726         MOVWF 4083
00034E                00727 DV@LP
00034E 3412           00728         RLCF 18,W
000350 3619           00729         RLCF 25,F
000352 361A           00730         RLCF 26,F
000354 5015           00731         MOVF 21,W
000356 5C19           00732         SUBWF 25,W
000358 5016           00733         MOVF 22,W
00035A 581A           00734         SUBWFB 26,W
00035C E305           00735         BNC D@K
00035E 5015           00736         MOVF 21,W
000360 5E19           00737         SUBWF 25,F
000362 5016           00738         MOVF 22,W
000364 5A1A           00739         SUBWFB 26,F
000366 80D8           00740         BSF 4056,0
000368                00741 D@K
000368 3611           00742         RLCF 17,F
00036A 3612           00743         RLCF 18,F
00036C 2EF3           00744         DECFSZ 4083,F
00036E D7EF           00745         BRA DV@LP
000370 5011           00746         MOVF 17,W
000372 0012           00747         RETURN
000374                00748 AL@MUL
000374 0E20           00749         MOVLW 32
000376 6E1D           00750         MOVWF 29
000378 6A29           00751         CLRF 41
00037A 6A2A           00752         CLRF 42
00037C 6A2B           00753         CLRF 43
00037E 6A2C           00754         CLRF 44
000380                00755 MLT32@LP
000380 90D8           00756         BCF 4056,0
000382 A011           00757         BTFSS 17,0
000384 D00E           00758         BRA MLT32@BR
000386 5019           00759         MOVF 25,W
000388 2629           00760         ADDWF 41,F
00038A 501A           00761         MOVF 26,W
00038C B0D8           00762         BTFSC 4056,0
00038E 3C1A           00763         INCFSZ 26,W
000390 262A           00764         ADDWF 42,F
000392 501B           00765         MOVF 27,W
000394 B0D8           00766         BTFSC 4056,0
000396 3C1B           00767         INCFSZ 27,W
000398 262B           00768         ADDWF 43,F
00039A 501C           00769         MOVF 28,W
00039C B0D8           00770         BTFSC 4056,0
00039E 3C1C           00771         INCFSZ 28,W
0003A0 262C           00772         ADDWF 44,F
0003A2                00773 MLT32@BR
0003A2 322C           00774         RRCF 44,F
0003A4 322B           00775         RRCF 43,F
0003A6 322A           00776         RRCF 42,F
0003A8 3229           00777         RRCF 41,F
0003AA 3214           00778         RRCF 20,F
0003AC 3213           00779         RRCF 19,F
0003AE 3212           00780         RRCF 18,F
0003B0 3211           00781         RRCF 17,F
0003B2 2E1D           00782         DECFSZ 29,F
0003B4 D7E5           00783         BRA MLT32@LP
0003B6 0012           00784         RETURN
0003B8                00785 LOAD@MSTR
0003B8                00786 LOAD@MSTRL
0003B8 6AA6           00787         CLRF 4006
0003BA 8EA6           00788         BSF 4006,EEPGD
0003BC 0009           00789         TBLRD*+
0003BE 50F5           00790         MOVF 4085,W
0003C0 E002           00791         BZ $ + 6
0003C2 6EEE           00792         MOVWF 4078
0003C4 D7FB           00793         BRA $ - 8
0003C6 0012           00794         RETURN
                      00795  #INCLUDE "C:\PROGRA~1\CROWNH~1\pds\INC\FL_SRC.INC"
                      00958 LIST
0003C8                00959 INT@3232
0003C8 C00E F031      00960         MOVFF PBP_AARGH,_SIGN                                   
0003CC 0E7F           00961         MOVLW 127                                       
0003CE 5C0D           00962         SUBWF PBP_AARG,W
0003D0 6E30           00963         MOVWF _FP_TEMP  
0003D2 E33F           00964         BNC FTO@I_RES0                                                  
0003D4 8E0E           00965         BSF PBP_AARGH,7                                         
0003D6 6A0D           00966         CLRF PBP_AARG                                   
0003D8 6A29           00967         CLRF PPZ,0                                              
0003DA 0817           00968         SUBLW 23
0003DC 6E30           00969         MOVWF _FP_TEMP                                                  
0003DE E20B           00970         BC FTO@I_1                                                      
0003E0 0E08           00971         MOVLW 8
0003E2 2630           00972         ADDWF _FP_TEMP,F                                                
0003E4 E338           00973         BNC FTO@I_OVERFLOW                                      
0003E6 C00E F00D      00974         MOVFF PBP_AARGH,PBP_AARG                        
0003EA C00F F00E      00975         MOVFF PBP_AARGHH,PBP_AARGH                      
0003EE C010 F00F      00976         MOVFF PBP_AARGHHH,PBP_AARGHH                                    
0003F2 6A10           00977         CLRF PBP_AARGHHH                                
0003F4 D00C           00978         BRA FTO@I_3                     
0003F6                00979 FTO@I_1 
0003F6 0E08           00980         MOVLW 8                                                                 
0003F8 5E30           00981         SUBWF _FP_TEMP,F                        
0003FA E308           00982         BNC FTO@I_2                                                     
0003FC C010 F029      00983         MOVFF PBP_AARGHHH,PPZ                                   
000400 C00F F010      00984         MOVFF PBP_AARGHH,PBP_AARGHHH                                    
000404 C00E F00F      00985         MOVFF PBP_AARGH,PBP_AARGHH                      
000408 6A0E           00986         CLRF PBP_AARGH                  
00040A D7F5           00987         BRA FTO@I_1                     
00040C                00988 FTO@I_2 
00040C 2630           00989         ADDWF _FP_TEMP,F                                        
00040E                00990 FTO@I_3 
00040E 5230           00991         MOVF _FP_TEMP,F
000410 E008           00992         BZ FTO@I_5                                                                                      
000412                00993 FTO@I_4                                         
000412 90D8           00994         BCF STATUS,C                                            
000414 320D           00995         RRCF PBP_AARG,F                                         
000416 320E           00996         RRCF PBP_AARGH,F                        
000418 320F           00997         RRCF PBP_AARGHH,F
00041A 3210           00998         RRCF PBP_AARGHHH,F                      
00041C 3229           00999         RRCF PPZ,F,0                            
00041E 2E30           01000         DECFSZ _FP_TEMP,F
000420 D7F8           01001         BRA FTO@I_4                                                     
000422                01002 FTO@I_5 
000422 BE0D           01003         BTFSC PBP_AARG,7                
000424 D018           01004         BRA FTO@I_OVERFLOW
000426 AC2F           01005         BTFSS _FP_FLAGS,6       
000428 D00B           01006         BRA FTO@I_6
00042A AE29           01007         BTFSS PPZ,7
00042C D009           01008         BRA FTO@I_6
00042E 3E10           01009         INCFSZ PBP_AARGHHH,F
000430 D007           01010         BRA FTO@I_6
000432 3E0F           01011         INCFSZ PBP_AARGHH,F
000434 D005           01012         BRA FTO@I_6
000436 3E0E           01013         INCFSZ PBP_AARGH,F
000438 D003           01014         BRA FTO@I_6                     
00043A 2A0E           01015         INCF PBP_AARGH,F                                                
00043C BE0D           01016         BTFSC PBP_AARG,7                
00043E D00B           01017         BRA FTO@I_OVERFLOW                      
000440                01018 FTO@I_6 
000440 AE31           01019         BTFSS _SIGN,7                   
000442 D010           01020         BRA FTO@I_RETURN                        
000444 80D8           01021         BSF STATUS,C                            
000446 0E00           01022         MOVLW 0
000448 5610           01023         SUBFWB PBP_AARGHHH,F
00044A 560F           01024         SUBFWB PBP_AARGHH,F
00044C 560E           01025         SUBFWB PBP_AARGH,F
00044E 560D           01026         SUBFWB PBP_AARG,F
000450 D009           01027         BRA FTO@I_RETURN        
000452                01028 FTO@I_RES0      
000452 0E00           01029         MOVLW 0
000454 D002           01030         BRA FTO@I_ASSIGNW                       
000456                01031 FTO@I_OVERFLOW  
000456 822F           01032         BSF _FP_FLAGS,1                         
000458 0EFF           01033         MOVLW 255                                                               
00045A                01034 FTO@I_ASSIGNW   
00045A 6E0D           01035         MOVWF PBP_AARG                                          
00045C 6E0E           01036         MOVWF PBP_AARGH                                         
00045E 6E0F           01037         MOVWF PBP_AARGHH                                        
000460 6E10           01038         MOVWF PBP_AARGHHH                                               
000462 9E0D           01039         BCF PBP_AARG,7                                          
000464                01040 FTO@I_RETURN    
000464 5010           01041         MOVF PBP_AARGHHH,W                      
000466 0012           01042         RETURN
                      01208  LIST
                      00796 ;---------------------------------------------
                      00797 ; Null Terminated Strings
                      00798 
                      00799 ; String         
000468                00800 STR@LB1
000468 2020 2020 2020 00801         DB 32,32,32,32,32,32,32,32,0
       2020 0000 
                      00802 ;---------------------------------------------
                      00803 ; String Starting!
000472                00804 STR@LB2
000472 7453 7261 6974 00805         DB 83,116,97,114,116,105,110,103,33,0
       676E 0021 
                      00806 ;---------------------------------------------
                      00807 ; String SD Detected!
00047C                00808 STR@LB3
00047C 4453 4420 7465 00809         DB 83,68,32,68,101,116,101,99,116,101,100,33,0
       6365 6574 2164 
       0000 
                      00810 ;---------------------------------------------
                      00811 ; String No SD..
00048A                00812 STR@LB4
00048A 6F4E 5320 2E44 00813         DB 78,111,32,83,68,46,46,0
       002E 
                      00814 ;---------------------------------------------
                      00815 ; String Checking TAG
000492                00816 STR@LB5
000492 6843 6365 696B 00817         DB 67,104,101,99,107,105,110,103,32,84,65,71,0
       676E 5420 4741 
       0000 
                      00818 ;---------------------------------------------
                      00819 ; String Got a match
0004A0                00820 STR@LB6
0004A0 6F47 2074 2061 00821         DB 71,111,116,32,97,32,109,97,116,99,104,0
       616D 6374 0068 
                      00822 ;---------------------------------------------
                      00823 ; String History DONE!
0004AC                00824 STR@LB7
0004AC 6948 7473 726F 00825         DB 72,105,115,116,111,114,121,32,68,79,78,69,33,0
       2079 4F44 454E 
       0021 
                      00826 ;---------------------------------------------
                      00827 ; String No Match
0004BA                00828 STR@LB8
0004BA 6F4E 4D20 7461 00829         DB 78,111,32,77,97,116,99,104,0
       6863 0000 
                      00830 ;---------------------------------------------
                      00831 ; String ATTEMPTING TO
0004C4                00832 STR@LB9
0004C4 5441 4554 504D 00833         DB 65,84,84,69,77,80,84,73,78,71,32,84,79,0
       4954 474E 5420 
       004F 
                      00834 ;---------------------------------------------
                      00835 ; String READ TAG....
0004D2                00836 STR@LB10
0004D2 4552 4441 5420 00837         DB 82,69,65,68,32,84,65,71,46,46,46,46,0
       4741 2E2E 2E2E 
       0000 
                      00838 ;---------------------------------------------
                      00839 ; String Thank You
0004E0                00840 STR@LB11
0004E0 6854 6E61 206B 00841         DB 84,104,97,110,107,32,89,111,117,0
       6F59 0075 
                      00842 ;---------------------------------------------
                      00843 ; String No Tag Detected
0004EA                00844 STR@LB12
0004EA 6F4E 5420 6761 00845         DB 78,111,32,84,97,103,32,68,101,116,101,99,116,101,100,0
       4420 7465 6365 
       6574 0064 
                      00846 ;---------------------------------------------
                      00847 ; String File not found
0004FA                00848 STR@LB13
0004FA 6946 656C 6E20 00849         DB 70,105,108,101,32,110,111,116,32,102,111,117,110,100,0
       746F 6620 756F 
       646E 0000 
                      00850 ;---------------------------------------------
                      00851 ; String No 5E (^)
00050A                00852 STR@LB14
00050A 6F4E 3520 2045 00853         DB 78,111,32,53,69,32,40,94,41,0
       5E28 0029 
                      00854 ;---------------------------------------------
                      00855 ; String Stopped!
000514                00856 STR@LB15
000514 7453 706F 6570 00857         DB 83,116,111,112,112,101,100,33,0
       2164 0000 
                      00858 ;---------------------------------------------
                      00859 ; String No 3A (:)..
00051E                00860 STR@LB16
00051E 6F4E 3320 2041 00861         DB 78,111,32,51,65,32,40,58,41,46,46,0
       3A28 2E29 002E 
                      00862 ;---------------------------------------------
                      00863 ; String Stopped!
00052A                00864 STR@LB17
00052A 7453 706F 6570 00865         DB 83,116,111,112,112,101,100,33,0
       2164 0000 
                      00866 ;---------------------------------------------
                      00867 ; String File not found
000534                00868 STR@LB18
000534 6946 656C 6E20 00869         DB 70,105,108,101,32,110,111,116,32,102,111,117,110,100,0
       746F 6620 756F 
       646E 0000 
                      00870 ;---------------------------------------------
                      00871 ; String Init done!
000544                00872 STR@LB19
000544 6E49 7469 6420 00873         DB 73,110,105,116,32,100,111,110,101,33,0
       6E6F 2165 0000 
                      00874 ;---------------------------------------------
                      00875 ; String No Init!
000550                00876 STR@LB20
000550 6F4E 4920 696E 00877         DB 78,111,32,73,110,105,116,33,0
       2174 0000 
                      00878 ;---------------------------------------------
                      00879 ; String No Users
00055A                00880 STR@LB21
00055A 6F4E 5520 6573 00881         DB 78,111,32,85,115,101,114,115,0
       7372 0000 
                      00882 ;---------------------------------------------
                      00883 ; String Manager Done
000564                00884 STR@LB22
000564 614D 616E 6567 00885         DB 77,97,110,97,103,101,114,32,68,111,110,101,0
       2072 6F44 656E 
       0000 
                      00886 ;---------------------------------------------
                      00887 ; String No Manager History
000572                00888 STR@LB23
000572 6F4E 4D20 6E61 00889         DB 78,111,32,77,97,110,97,103,101,114,32,72,105,115,116,111,114,121,0
       6761 7265 4820 
       7369 6F74 7972 
       0000 
                      00890 ;---------------------------------------------
                      00891 ; String No Users
000586                00892 STR@LB24
000586 6F4E 5520 6573 00893         DB 78,111,32,85,115,101,114,115,0
       7372 0000 
                      00894 ;---------------------------------------------
                      00895 ; String No Users Exist
000590                00896 STR@LB25
000590 6F4E 5520 6573 00897         DB 78,111,32,85,115,101,114,115,32,69,120,105,115,116,0
       7372 4520 6978 
       7473 0000 
                      00898 ;---------------------------------------------
                      00899 ; String Done Users
0005A0                00900 STR@LB26
0005A0 6F44 656E 5520 00901         DB 68,111,110,101,32,85,115,101,114,115,0
       6573 7372 0000 
                      00902 ;---------------------------------------------
                      00903 ; String Going to sleep..
0005AC                00904 STR@LB27
0005AC 6F47 6E69 2067 00905         DB 71,111,105,110,103,32,116,111,32,115,108,101,101,112,46,46,0
       6F74 7320 656C 
       7065 2E2E 0000 
                      00906 ;---------------------------------------------
                      00907 ; String I just woke up!!
0005BE                00908 STR@LB28
0005BE 2049 756A 7473 00909         DB 73,32,106,117,115,116,32,119,111,107,101,32,117,112,33,33,0
       7720 6B6F 2065 
       7075 2121 0000 
                      00910 ;---------------------------------------------
                      00911 ; User Constants
  00000004            00912 __XTAL = 4
  00000000            00913 __LCD_TYPE = 0
  00000000            00914 __LCD_DTPIN = 0
  00000006            00915 __LCD_ENPIN = 6
  00000007            00916 __LCD_RSPIN = 7
  00000004            00917 __LCD_INTERFACE = 4
  00000002            00918 __LCD_LINES = 2
  00002580            00919 __HSERIAL_BAUD = 9600
  00000090            00920 __HSERIAL_RCSTA = 144
  00000020            00921 __HSERIAL_TXSTA = 32
0005D0                00922 START@
0005D0 6AF8           00923         CLRF 4088
0005D2 0E40           00924         MOVLW B'01000000'
0005D4 6E2F           00925         MOVWF 47
0005D6 6A00           00926         CLRF 0
0005D8 0E06           00927         MOVLW 6
0005DA 6EAF           00928         MOVWF 4015
0005DC 0E20           00929         MOVLW 32
0005DE 6EAC           00930         MOVWF 4012
0005E0 0E90           00931         MOVLW 144
0005E2 6EAB           00932         MOVWF 4011
                      00933  LIST
0005E4                00934 MAIN@PROG@START
                      00008  LIST
                      00009 
  00000032            00010  SD_BYTER = 50
  00000033            00011  SD_IDX = 51
  00000034            00012  SD_SECTOR_NUM = 52
  00000035            00013  SD_SECTOR_NUMH = 53
  00000036            00014  SD_SECTOR_NUMHH = 54
  00000037            00015  SD_SECTOR_NUMHHH = 55
  00000038            00016  SD_ADDRESS = 56
  00000039            00017  SD_ADDRESSH = 57
  0000003A            00018  SD_ADDRESSHH = 58
  0000003B            00019  SD_ADDRESSHHH = 59
  0000003C            00020  SD_SEEK_RESPONSE_IDX = 60
  0000003D            00021  SD_SEEK_RESPONSE_IDXH = 61
  0000003E            00022  SD_SEEK_RESPONSE_REQD = 62
  0000003F            00023  SD_SEEK_RESPONSE_RETURN = 63
  00000040            00024  SD_RETURN = 64
  00000041            00025  SD_BUFFER0 = 65
  0041                00026  VARIABLE SD_BUFFER0#0=65,SD_BUFFER0#1=66,SD_BUFFER0#2=67,SD_BUFFER0#3=68
  0045                00027  VARIABLE SD_BUFFER0#4=69,SD_BUFFER0#5=70,SD_BUFFER0#6=71,SD_BUFFER0#7=72
  0049                00028  VARIABLE SD_BUFFER0#8=73,SD_BUFFER0#9=74,SD_BUFFER0#10=75,SD_BUFFER0#11=76
  004D                00029  VARIABLE SD_BUFFER0#12=77,SD_BUFFER0#13=78,SD_BUFFER0#14=79,SD_BUFFER0#15=80
  0051                00030  VARIABLE SD_BUFFER0#16=81,SD_BUFFER0#17=82,SD_BUFFER0#18=83,SD_BUFFER0#19=84
  0055                00031  VARIABLE SD_BUFFER0#20=85,SD_BUFFER0#21=86,SD_BUFFER0#22=87,SD_BUFFER0#23=88
  0059                00032  VARIABLE SD_BUFFER0#24=89,SD_BUFFER0#25=90,SD_BUFFER0#26=91,SD_BUFFER0#27=92
  005D                00033  VARIABLE SD_BUFFER0#28=93,SD_BUFFER0#29=94,SD_BUFFER0#30=95,SD_BUFFER0#31=96
  0061                00034  VARIABLE SD_BUFFER0#32=97,SD_BUFFER0#33=98,SD_BUFFER0#34=99,SD_BUFFER0#35=100
  0065                00035  VARIABLE SD_BUFFER0#36=101,SD_BUFFER0#37=102,SD_BUFFER0#38=103,SD_BUFFER0#39=104
  0069                00036  VARIABLE SD_BUFFER0#40=105,SD_BUFFER0#41=106,SD_BUFFER0#42=107,SD_BUFFER0#43=108
  006D                00037  VARIABLE SD_BUFFER0#44=109,SD_BUFFER0#45=110,SD_BUFFER0#46=111,SD_BUFFER0#47=112
  0071                00038  VARIABLE SD_BUFFER0#48=113,SD_BUFFER0#49=114,SD_BUFFER0#50=115,SD_BUFFER0#51=116
  0075                00039  VARIABLE SD_BUFFER0#52=117,SD_BUFFER0#53=118,SD_BUFFER0#54=119,SD_BUFFER0#55=120
  0079                00040  VARIABLE SD_BUFFER0#56=121,SD_BUFFER0#57=122,SD_BUFFER0#58=123,SD_BUFFER0#59=124
  007D                00041  VARIABLE SD_BUFFER0#60=125,SD_BUFFER0#61=126,SD_BUFFER0#62=127,SD_BUFFER0#63=128
  0081                00042  VARIABLE SD_BUFFER0#64=129,SD_BUFFER0#65=130,SD_BUFFER0#66=131,SD_BUFFER0#67=132
  0085                00043  VARIABLE SD_BUFFER0#68=133,SD_BUFFER0#69=134,SD_BUFFER0#70=135,SD_BUFFER0#71=136
  0089                00044  VARIABLE SD_BUFFER0#72=137,SD_BUFFER0#73=138,SD_BUFFER0#74=139,SD_BUFFER0#75=140
  008D                00045  VARIABLE SD_BUFFER0#76=141,SD_BUFFER0#77=142,SD_BUFFER0#78=143,SD_BUFFER0#79=144
  0091                00046  VARIABLE SD_BUFFER0#80=145,SD_BUFFER0#81=146,SD_BUFFER0#82=147,SD_BUFFER0#83=148
  0095                00047  VARIABLE SD_BUFFER0#84=149,SD_BUFFER0#85=150,SD_BUFFER0#86=151,SD_BUFFER0#87=152
  0099                00048  VARIABLE SD_BUFFER0#88=153,SD_BUFFER0#89=154,SD_BUFFER0#90=155,SD_BUFFER0#91=156
  009D                00049  VARIABLE SD_BUFFER0#92=157,SD_BUFFER0#93=158,SD_BUFFER0#94=159,SD_BUFFER0#95=160
  00A1                00050  VARIABLE SD_BUFFER0#96=161,SD_BUFFER0#97=162,SD_BUFFER0#98=163,SD_BUFFER0#99=164
  00A5                00051  VARIABLE SD_BUFFER0#100=165,SD_BUFFER0#101=166,SD_BUFFER0#102=167,SD_BUFFER0#103=168
  00A9                00052  VARIABLE SD_BUFFER0#104=169,SD_BUFFER0#105=170,SD_BUFFER0#106=171,SD_BUFFER0#107=172
  00AD                00053  VARIABLE SD_BUFFER0#108=173,SD_BUFFER0#109=174,SD_BUFFER0#110=175,SD_BUFFER0#111=176
  00B1                00054  VARIABLE SD_BUFFER0#112=177,SD_BUFFER0#113=178,SD_BUFFER0#114=179,SD_BUFFER0#115=180
  00B5                00055  VARIABLE SD_BUFFER0#116=181,SD_BUFFER0#117=182,SD_BUFFER0#118=183,SD_BUFFER0#119=184
  00B9                00056  VARIABLE SD_BUFFER0#120=185,SD_BUFFER0#121=186,SD_BUFFER0#122=187,SD_BUFFER0#123=188
  00BD                00057  VARIABLE SD_BUFFER0#124=189,SD_BUFFER0#125=190,SD_BUFFER0#126=191,SD_BUFFER0#127=192
  00C1                00058  VARIABLE SD_BUFFER0#128=193,SD_BUFFER0#129=194,SD_BUFFER0#130=195,SD_BUFFER0#131=196
  00C5                00059  VARIABLE SD_BUFFER0#132=197,SD_BUFFER0#133=198,SD_BUFFER0#134=199,SD_BUFFER0#135=200
  00C9                00060  VARIABLE SD_BUFFER0#136=201,SD_BUFFER0#137=202,SD_BUFFER0#138=203,SD_BUFFER0#139=204
  00CD                00061  VARIABLE SD_BUFFER0#140=205,SD_BUFFER0#141=206,SD_BUFFER0#142=207,SD_BUFFER0#143=208
  00D1                00062  VARIABLE SD_BUFFER0#144=209,SD_BUFFER0#145=210,SD_BUFFER0#146=211,SD_BUFFER0#147=212
  00D5                00063  VARIABLE SD_BUFFER0#148=213,SD_BUFFER0#149=214,SD_BUFFER0#150=215,SD_BUFFER0#151=216
  00D9                00064  VARIABLE SD_BUFFER0#152=217,SD_BUFFER0#153=218,SD_BUFFER0#154=219,SD_BUFFER0#155=220
  00DD                00065  VARIABLE SD_BUFFER0#156=221,SD_BUFFER0#157=222,SD_BUFFER0#158=223,SD_BUFFER0#159=224
  00E1                00066  VARIABLE SD_BUFFER0#160=225,SD_BUFFER0#161=226,SD_BUFFER0#162=227,SD_BUFFER0#163=228
  00E5                00067  VARIABLE SD_BUFFER0#164=229,SD_BUFFER0#165=230,SD_BUFFER0#166=231,SD_BUFFER0#167=232
  00E9                00068  VARIABLE SD_BUFFER0#168=233,SD_BUFFER0#169=234,SD_BUFFER0#170=235,SD_BUFFER0#171=236
  00ED                00069  VARIABLE SD_BUFFER0#172=237,SD_BUFFER0#173=238,SD_BUFFER0#174=239,SD_BUFFER0#175=240
  00F1                00070  VARIABLE SD_BUFFER0#176=241,SD_BUFFER0#177=242,SD_BUFFER0#178=243,SD_BUFFER0#179=244
  00F5                00071  VARIABLE SD_BUFFER0#180=245,SD_BUFFER0#181=246,SD_BUFFER0#182=247,SD_BUFFER0#183=248
  00F9                00072  VARIABLE SD_BUFFER0#184=249,SD_BUFFER0#185=250,SD_BUFFER0#186=251,SD_BUFFER0#187=252
  00FD                00073  VARIABLE SD_BUFFER0#188=253,SD_BUFFER0#189=254,SD_BUFFER0#190=255,SD_BUFFER0#191=256
  0101                00074  VARIABLE SD_BUFFER0#192=257,SD_BUFFER0#193=258,SD_BUFFER0#194=259,SD_BUFFER0#195=260
  0105                00075  VARIABLE SD_BUFFER0#196=261,SD_BUFFER0#197=262,SD_BUFFER0#198=263,SD_BUFFER0#199=264
  0109                00076  VARIABLE SD_BUFFER0#200=265,SD_BUFFER0#201=266,SD_BUFFER0#202=267,SD_BUFFER0#203=268
  010D                00077  VARIABLE SD_BUFFER0#204=269,SD_BUFFER0#205=270,SD_BUFFER0#206=271,SD_BUFFER0#207=272
  0111                00078  VARIABLE SD_BUFFER0#208=273,SD_BUFFER0#209=274,SD_BUFFER0#210=275,SD_BUFFER0#211=276
  0115                00079  VARIABLE SD_BUFFER0#212=277,SD_BUFFER0#213=278,SD_BUFFER0#214=279,SD_BUFFER0#215=280
  0119                00080  VARIABLE SD_BUFFER0#216=281,SD_BUFFER0#217=282,SD_BUFFER0#218=283,SD_BUFFER0#219=284
  011D                00081  VARIABLE SD_BUFFER0#220=285,SD_BUFFER0#221=286,SD_BUFFER0#222=287,SD_BUFFER0#223=288
  0121                00082  VARIABLE SD_BUFFER0#224=289,SD_BUFFER0#225=290,SD_BUFFER0#226=291,SD_BUFFER0#227=292
  0125                00083  VARIABLE SD_BUFFER0#228=293,SD_BUFFER0#229=294,SD_BUFFER0#230=295,SD_BUFFER0#231=296
  0129                00084  VARIABLE SD_BUFFER0#232=297,SD_BUFFER0#233=298,SD_BUFFER0#234=299,SD_BUFFER0#235=300
  012D                00085  VARIABLE SD_BUFFER0#236=301,SD_BUFFER0#237=302,SD_BUFFER0#238=303,SD_BUFFER0#239=304
  0131                00086  VARIABLE SD_BUFFER0#240=305,SD_BUFFER0#241=306,SD_BUFFER0#242=307,SD_BUFFER0#243=308
  0135                00087  VARIABLE SD_BUFFER0#244=309,SD_BUFFER0#245=310,SD_BUFFER0#246=311,SD_BUFFER0#247=312
  0139                00088  VARIABLE SD_BUFFER0#248=313,SD_BUFFER0#249=314,SD_BUFFER0#250=315,SD_BUFFER0#251=316
  013D                00089  VARIABLE SD_BUFFER0#252=317,SD_BUFFER0#253=318,SD_BUFFER0#254=319,SD_BUFFER0#255=320
  00000141            00090  SD_BUFFER1 = 321
  0141                00091  VARIABLE SD_BUFFER1#0=321,SD_BUFFER1#1=322,SD_BUFFER1#2=323,SD_BUFFER1#3=324
  0145                00092  VARIABLE SD_BUFFER1#4=325,SD_BUFFER1#5=326,SD_BUFFER1#6=327,SD_BUFFER1#7=328
  0149                00093  VARIABLE SD_BUFFER1#8=329,SD_BUFFER1#9=330,SD_BUFFER1#10=331,SD_BUFFER1#11=332
  014D                00094  VARIABLE SD_BUFFER1#12=333,SD_BUFFER1#13=334,SD_BUFFER1#14=335,SD_BUFFER1#15=336
  0151                00095  VARIABLE SD_BUFFER1#16=337,SD_BUFFER1#17=338,SD_BUFFER1#18=339,SD_BUFFER1#19=340
  0155                00096  VARIABLE SD_BUFFER1#20=341,SD_BUFFER1#21=342,SD_BUFFER1#22=343,SD_BUFFER1#23=344
  0159                00097  VARIABLE SD_BUFFER1#24=345,SD_BUFFER1#25=346,SD_BUFFER1#26=347,SD_BUFFER1#27=348
  015D                00098  VARIABLE SD_BUFFER1#28=349,SD_BUFFER1#29=350,SD_BUFFER1#30=351,SD_BUFFER1#31=352
  0161                00099  VARIABLE SD_BUFFER1#32=353,SD_BUFFER1#33=354,SD_BUFFER1#34=355,SD_BUFFER1#35=356
  0165                00100  VARIABLE SD_BUFFER1#36=357,SD_BUFFER1#37=358,SD_BUFFER1#38=359,SD_BUFFER1#39=360
  0169                00101  VARIABLE SD_BUFFER1#40=361,SD_BUFFER1#41=362,SD_BUFFER1#42=363,SD_BUFFER1#43=364
  016D                00102  VARIABLE SD_BUFFER1#44=365,SD_BUFFER1#45=366,SD_BUFFER1#46=367,SD_BUFFER1#47=368
  0171                00103  VARIABLE SD_BUFFER1#48=369,SD_BUFFER1#49=370,SD_BUFFER1#50=371,SD_BUFFER1#51=372
  0175                00104  VARIABLE SD_BUFFER1#52=373,SD_BUFFER1#53=374,SD_BUFFER1#54=375,SD_BUFFER1#55=376
  0179                00105  VARIABLE SD_BUFFER1#56=377,SD_BUFFER1#57=378,SD_BUFFER1#58=379,SD_BUFFER1#59=380
  017D                00106  VARIABLE SD_BUFFER1#60=381,SD_BUFFER1#61=382,SD_BUFFER1#62=383,SD_BUFFER1#63=384
  0181                00107  VARIABLE SD_BUFFER1#64=385,SD_BUFFER1#65=386,SD_BUFFER1#66=387,SD_BUFFER1#67=388
  0185                00108  VARIABLE SD_BUFFER1#68=389,SD_BUFFER1#69=390,SD_BUFFER1#70=391,SD_BUFFER1#71=392
  0189                00109  VARIABLE SD_BUFFER1#72=393,SD_BUFFER1#73=394,SD_BUFFER1#74=395,SD_BUFFER1#75=396
  018D                00110  VARIABLE SD_BUFFER1#76=397,SD_BUFFER1#77=398,SD_BUFFER1#78=399,SD_BUFFER1#79=400
  0191                00111  VARIABLE SD_BUFFER1#80=401,SD_BUFFER1#81=402,SD_BUFFER1#82=403,SD_BUFFER1#83=404
  0195                00112  VARIABLE SD_BUFFER1#84=405,SD_BUFFER1#85=406,SD_BUFFER1#86=407,SD_BUFFER1#87=408
  0199                00113  VARIABLE SD_BUFFER1#88=409,SD_BUFFER1#89=410,SD_BUFFER1#90=411,SD_BUFFER1#91=412
  019D                00114  VARIABLE SD_BUFFER1#92=413,SD_BUFFER1#93=414,SD_BUFFER1#94=415,SD_BUFFER1#95=416
  01A1                00115  VARIABLE SD_BUFFER1#96=417,SD_BUFFER1#97=418,SD_BUFFER1#98=419,SD_BUFFER1#99=420
  01A5                00116  VARIABLE SD_BUFFER1#100=421,SD_BUFFER1#101=422,SD_BUFFER1#102=423,SD_BUFFER1#103=424
  01A9                00117  VARIABLE SD_BUFFER1#104=425,SD_BUFFER1#105=426,SD_BUFFER1#106=427,SD_BUFFER1#107=428
  01AD                00118  VARIABLE SD_BUFFER1#108=429,SD_BUFFER1#109=430,SD_BUFFER1#110=431,SD_BUFFER1#111=432
  01B1                00119  VARIABLE SD_BUFFER1#112=433,SD_BUFFER1#113=434,SD_BUFFER1#114=435,SD_BUFFER1#115=436
  01B5                00120  VARIABLE SD_BUFFER1#116=437,SD_BUFFER1#117=438,SD_BUFFER1#118=439,SD_BUFFER1#119=440
  01B9                00121  VARIABLE SD_BUFFER1#120=441,SD_BUFFER1#121=442,SD_BUFFER1#122=443,SD_BUFFER1#123=444
  01BD                00122  VARIABLE SD_BUFFER1#124=445,SD_BUFFER1#125=446,SD_BUFFER1#126=447,SD_BUFFER1#127=448
  01C1                00123  VARIABLE SD_BUFFER1#128=449,SD_BUFFER1#129=450,SD_BUFFER1#130=451,SD_BUFFER1#131=452
  01C5                00124  VARIABLE SD_BUFFER1#132=453,SD_BUFFER1#133=454,SD_BUFFER1#134=455,SD_BUFFER1#135=456
  01C9                00125  VARIABLE SD_BUFFER1#136=457,SD_BUFFER1#137=458,SD_BUFFER1#138=459,SD_BUFFER1#139=460
  01CD                00126  VARIABLE SD_BUFFER1#140=461,SD_BUFFER1#141=462,SD_BUFFER1#142=463,SD_BUFFER1#143=464
  01D1                00127  VARIABLE SD_BUFFER1#144=465,SD_BUFFER1#145=466,SD_BUFFER1#146=467,SD_BUFFER1#147=468
  01D5                00128  VARIABLE SD_BUFFER1#148=469,SD_BUFFER1#149=470,SD_BUFFER1#150=471,SD_BUFFER1#151=472
  01D9                00129  VARIABLE SD_BUFFER1#152=473,SD_BUFFER1#153=474,SD_BUFFER1#154=475,SD_BUFFER1#155=476
  01DD                00130  VARIABLE SD_BUFFER1#156=477,SD_BUFFER1#157=478,SD_BUFFER1#158=479,SD_BUFFER1#159=480
  01E1                00131  VARIABLE SD_BUFFER1#160=481,SD_BUFFER1#161=482,SD_BUFFER1#162=483,SD_BUFFER1#163=484
  01E5                00132  VARIABLE SD_BUFFER1#164=485,SD_BUFFER1#165=486,SD_BUFFER1#166=487,SD_BUFFER1#167=488
  01E9                00133  VARIABLE SD_BUFFER1#168=489,SD_BUFFER1#169=490,SD_BUFFER1#170=491,SD_BUFFER1#171=492
  01ED                00134  VARIABLE SD_BUFFER1#172=493,SD_BUFFER1#173=494,SD_BUFFER1#174=495,SD_BUFFER1#175=496
  01F1                00135  VARIABLE SD_BUFFER1#176=497,SD_BUFFER1#177=498,SD_BUFFER1#178=499,SD_BUFFER1#179=500
  01F5                00136  VARIABLE SD_BUFFER1#180=501,SD_BUFFER1#181=502,SD_BUFFER1#182=503,SD_BUFFER1#183=504
  01F9                00137  VARIABLE SD_BUFFER1#184=505,SD_BUFFER1#185=506,SD_BUFFER1#186=507,SD_BUFFER1#187=508
  01FD                00138  VARIABLE SD_BUFFER1#188=509,SD_BUFFER1#189=510,SD_BUFFER1#190=511,SD_BUFFER1#191=512
  0201                00139  VARIABLE SD_BUFFER1#192=513,SD_BUFFER1#193=514,SD_BUFFER1#194=515,SD_BUFFER1#195=516
  0205                00140  VARIABLE SD_BUFFER1#196=517,SD_BUFFER1#197=518,SD_BUFFER1#198=519,SD_BUFFER1#199=520
  0209                00141  VARIABLE SD_BUFFER1#200=521,SD_BUFFER1#201=522,SD_BUFFER1#202=523,SD_BUFFER1#203=524
  020D                00142  VARIABLE SD_BUFFER1#204=525,SD_BUFFER1#205=526,SD_BUFFER1#206=527,SD_BUFFER1#207=528
  0211                00143  VARIABLE SD_BUFFER1#208=529,SD_BUFFER1#209=530,SD_BUFFER1#210=531,SD_BUFFER1#211=532
  0215                00144  VARIABLE SD_BUFFER1#212=533,SD_BUFFER1#213=534,SD_BUFFER1#214=535,SD_BUFFER1#215=536
  0219                00145  VARIABLE SD_BUFFER1#216=537,SD_BUFFER1#217=538,SD_BUFFER1#218=539,SD_BUFFER1#219=540
  021D                00146  VARIABLE SD_BUFFER1#220=541,SD_BUFFER1#221=542,SD_BUFFER1#222=543,SD_BUFFER1#223=544
  0221                00147  VARIABLE SD_BUFFER1#224=545,SD_BUFFER1#225=546,SD_BUFFER1#226=547,SD_BUFFER1#227=548
  0225                00148  VARIABLE SD_BUFFER1#228=549,SD_BUFFER1#229=550,SD_BUFFER1#230=551,SD_BUFFER1#231=552
  0229                00149  VARIABLE SD_BUFFER1#232=553,SD_BUFFER1#233=554,SD_BUFFER1#234=555,SD_BUFFER1#235=556
  022D                00150  VARIABLE SD_BUFFER1#236=557,SD_BUFFER1#237=558,SD_BUFFER1#238=559,SD_BUFFER1#239=560
  0231                00151  VARIABLE SD_BUFFER1#240=561,SD_BUFFER1#241=562,SD_BUFFER1#242=563,SD_BUFFER1#243=564
  0235                00152  VARIABLE SD_BUFFER1#244=565,SD_BUFFER1#245=566,SD_BUFFER1#246=567,SD_BUFFER1#247=568
  0239                00153  VARIABLE SD_BUFFER1#248=569,SD_BUFFER1#249=570,SD_BUFFER1#250=571,SD_BUFFER1#251=572
  023D                00154  VARIABLE SD_BUFFER1#252=573,SD_BUFFER1#253=574,SD_BUFFER1#254=575,SD_BUFFER1#255=576
  00000241            00155  SD_BYTE0 = 577
  00000242            00156  SD_BYTE1 = 578
  00000243            00157  SD_BYTE2 = 579
  00000244            00158  SD_BYTE3 = 580
  00000245            00159  SD_BYTE4 = 581
  00000246            00160  SD_BYTE5 = 582
  00000247            00161  SD_BUFFER_IDX = 583
  00000248            00162  SD_BUFFER_IDXH = 584
  00000249            00163  SD_BYTE_RW = 585
  0000024A            00164  SD_RW_OPTION = 586
  0000024B            00165  SD_EXTENDED_RETURN = 587
  0000024C            00166  SD_EXTENDED_RETURN_ROOT_DIR = 588
  0000024D            00167  SD_DATA_IO = 589
  0000024E            00168  SD_BUFFER_POS = 590
  0000024F            00169  SD_BUFFER_POSH = 591
  00000250            00170  SD_ROOT_DIR_FILE_POS = 592
  00000251            00171  SD_SEC_NUM = 593
  00000252            00172  SD_SEC_NUMH = 594
  00000253            00173  SD_SEC_NUMHH = 595
  00000254            00174  SD_SEC_NUMHHH = 596
  00000255            00175  SD_SECS_PER_CLUSTER = 597
  00000256            00176  SD_RESERVED_SECS = 598
  00000257            00177  SD_RESERVED_SECSH = 599
  00000258            00178  SD_SECS_PER_FAT = 600
  00000259            00179  SD_SECS_PER_FATH = 601
  0000025A            00180  SD_NUM_OF_FATS = 602
  0000025B            00181  SD_NUM_OF_SECS = 603
  0000025C            00182  SD_NUM_OF_SECSH = 604
  0000025D            00183  SD_NUM_OF_SECSHH = 605
  0000025E            00184  SD_NUM_OF_SECSHHH = 606
  0000025F            00185  SD_BYTES_PER_SEC = 607
  00000260            00186  SD_BYTES_PER_SECH = 608
  00000261            00187  SD_NUM_OF_ROOT_ENTRIES = 609
  00000262            00188  SD_NUM_OF_ROOT_ENTRIESH = 610
  00000263            00189  SD_SECS_IN_ROOT = 611
  00000264            00190  SD_SECS_IN_ROOTH = 612
  00000265            00191  SD_BOOT_RECORD = 613
  00000266            00192  SD_BOOT_RECORDH = 614
  00000267            00193  SD_FAT1 = 615
  00000268            00194  SD_FAT1H = 616
  00000269            00195  SD_FAT1HH = 617
  0000026A            00196  SD_FAT1HHH = 618
  0000026B            00197  SD_FAT2 = 619
  0000026C            00198  SD_FAT2H = 620
  0000026D            00199  SD_FAT2HH = 621
  0000026E            00200  SD_FAT2HHH = 622
  0000026F            00201  SD_ROOT_DIR = 623
  00000270            00202  SD_ROOT_DIRH = 624
  00000271            00203  SD_ROOT_DIRHH = 625
  00000272            00204  SD_ROOT_DIRHHH = 626
  00000273            00205  SD_DATA_AREA = 627
  00000274            00206  SD_DATA_AREAH = 628
  00000275            00207  SD_DATA_AREAHH = 629
  00000276            00208  SD_DATA_AREAHHH = 630
  00000277            00209  SD_FAT_ENTRY = 631
  00000278            00210  SD_FAT_ENTRYH = 632
  00000279            00211  SD_FAT_SEC = 633
  0000027A            00212  SD_FAT_SECH = 634
  0000027B            00213  SD_FAT_SECHH = 635
  0000027C            00214  SD_FAT_SECHHH = 636
  0000027D            00215  SD_FAT_BUFFER_POS = 637
  0000027E            00216  SD_FAT_BUFFER_POSH = 638
  0000027F            00217  SD_FAT_SEC_PREV = 639
  00000280            00218  SD_FAT_SEC_PREVH = 640
  00000281            00219  SD_FAT_SEC_PREVHH = 641
  00000282            00220  SD_FAT_SEC_PREVHHH = 642
  00000283            00221  SD_FAT_BUFFER_POS_PREV = 643
  00000284            00222  SD_FAT_BUFFER_POS_PREVH = 644
  00000285            00223  SD_ROOT_DIR_SEC = 645
  00000286            00224  SD_ROOT_DIR_SECH = 646
  00000287            00225  SD_ROOT_DIR_SECHH = 647
  00000288            00226  SD_ROOT_DIR_SECHHH = 648
  00000289            00227  SD_ROOT_DIR_POS = 649
  0000028A            00228  SD_ROOT_DIR_POSH = 650
  0000028B            00229  SD_DATA_SEC = 651
  0000028C            00230  SD_DATA_SECH = 652
  0000028D            00231  SD_DATA_SECHH = 653
  0000028E            00232  SD_DATA_SECHHH = 654
  0000028F            00233  SD_DATA_BUFFER_POS = 655
  00000290            00234  SD_DATA_BUFFER_POSH = 656
  00000291            00235  SD_FILE_NAME = 657
  0291                00236  VARIABLE SD_FILE_NAME#0=657,SD_FILE_NAME#1=658,SD_FILE_NAME#2=659,SD_FILE_NAME#3=660
  0295                00237  VARIABLE SD_FILE_NAME#4=661,SD_FILE_NAME#5=662,SD_FILE_NAME#6=663,SD_FILE_NAME#7=664
  0299                00238  VARIABLE SD_FILE_NAME#8=665
  0000029A            00239  SD_FILE_EXT = 666
  029A                00240  VARIABLE SD_FILE_EXT#0=666,SD_FILE_EXT#1=667,SD_FILE_EXT#2=668,SD_FILE_EXT#3=669
  0000029E            00241  SD_ROOT_DIR_FILE = 670
  029E                00242  VARIABLE SD_ROOT_DIR_FILE#0=670,SD_ROOT_DIR_FILE#1=671,SD_ROOT_DIR_FILE#2=672,SD_ROOT_DIR_FILE#3=673
  02A2                00243  VARIABLE SD_ROOT_DIR_FILE#4=674,SD_ROOT_DIR_FILE#5=675,SD_ROOT_DIR_FILE#6=676,SD_ROOT_DIR_FILE#7=677
  02A6                00244  VARIABLE SD_ROOT_DIR_FILE#8=678,SD_ROOT_DIR_FILE#9=679,SD_ROOT_DIR_FILE#10=680,SD_ROOT_DIR_FILE#11=681
  02AA                00245  VARIABLE SD_ROOT_DIR_FILE#12=682,SD_ROOT_DIR_FILE#13=683,SD_ROOT_DIR_FILE#14=684,SD_ROOT_DIR_FILE#15=685
  02AE                00246  VARIABLE SD_ROOT_DIR_FILE#16=686,SD_ROOT_DIR_FILE#17=687,SD_ROOT_DIR_FILE#18=688,SD_ROOT_DIR_FILE#19=689
  02B2                00247  VARIABLE SD_ROOT_DIR_FILE#20=690,SD_ROOT_DIR_FILE#21=691,SD_ROOT_DIR_FILE#22=692,SD_ROOT_DIR_FILE#23=693
  02B6                00248  VARIABLE SD_ROOT_DIR_FILE#24=694,SD_ROOT_DIR_FILE#25=695,SD_ROOT_DIR_FILE#26=696,SD_ROOT_DIR_FILE#27=697
  02BA                00249  VARIABLE SD_ROOT_DIR_FILE#28=698,SD_ROOT_DIR_FILE#29=699,SD_ROOT_DIR_FILE#30=700,SD_ROOT_DIR_FILE#31=701
  000002BE            00250  SD_WRITE_SEC_NUM = 702
  000002BF            00251  SD_WRITE_SEC_NUMH = 703
  000002C0            00252  SD_WRITE_SEC_NUMHH = 704
  000002C1            00253  SD_WRITE_SEC_NUMHHH = 705
  000002C2            00254  SD_WRITE_BUFFER_POS = 706
  000002C3            00255  SD_WRITE_BUFFER_POSH = 707
  000002C4            00256  SD_NULL_F = 708
  000002C5            00257  SD_CLUSTER_NUM = 709
  000002C6            00258  SD_CLUSTER_NUMH = 710
  000002C7            00259  SD_CLUSTER_NUM_PREV = 711
  000002C8            00260  SD_CLUSTER_NUM_PREVH = 712
  000002C9            00261  SD_LAST_CLUSTER = 713
  000002CA            00262  SD_LAST_CLUSTERH = 714
  000002CB            00263  SD_SEC_IN_CLUSTER = 715
  000002CC            00264  SD_FILE_SIZE = 716
  000002CD            00265  SD_FILE_SIZEH = 717
  000002CE            00266  SD_FILE_SIZEHH = 718
  000002CF            00267  SD_FILE_SIZEHHH = 719
  000002D0            00268  SD_IO_BYTE = 720
  000002D1            00269  SD_TEMP_BYTE = 721
  000002D2            00270  SD_TEMP = 722
  000002D3            00271  SD_TEMPH = 723
  000002D4            00272  SD_TEMP_DWORD = 724
  000002D5            00273  SD_TEMP_DWORDH = 725
  000002D6            00274  SD_TEMP_DWORDHH = 726
  000002D7            00275  SD_TEMP_DWORDHHH = 727
  000002D8            00276  SD_CLUSTER_SEQ_NUM = 728
  000002D9            00277  SD_CLUSTER_SEQ_NUMH = 729
  000002DA            00278  SD_CLUSTER_SEQ_IDX = 730
  000002DB            00279  SD_CLUSTER_SEQ_IDXH = 731
  000002DC            00280  SD_CLUSTER_SEQ_NUM_PREV = 732
  000002DD            00281  SD_CLUSTER_SEQ_NUM_PREVH = 733
  000002DE            00282  SD_CLUSTER_SEQ_IDX_PREV = 734
  000002DF            00283  SD_CLUSTER_SEQ_IDX_PREVH = 735
  000002E0            00284  SD_FIND_ROOT_DIR_ENTRY_F = 736
  000002E1            00285  SD_BYTES_READ = 737
  000002E2            00286  SD_BYTES_READH = 738
  000002E3            00287  SD_BYTES_READHH = 739
  000002E4            00288  SD_BYTES_READHHH = 740
  000002E6            00289  SD_FILE_NUM = 742
  000002E7            00290  SD_FILE_NUMH = 743
  000002E8            00291  SD_DIR_DIRECTION = 744
  000002E9            00292  SD_EXTENDED_RETURN_INT = 745
  000002EA            00293  SD_FILE_SIZE_LEFT = 746
  000002EB            00294  SD_FILE_SIZE_LEFTH = 747
  000002EC            00295  SD_FILE_SIZE_LEFTHH = 748
  000002ED            00296  SD_FILE_SIZE_LEFTHHH = 749
  000002EE            00297  SD_TIMEOUT = 750
  000002EF            00298  SD_DAY = 751
  000002F0            00299  SD_MONTH = 752
  000002F1            00300  SD_YEAR = 753
  000002F2            00301  SD_MSECONDS = 754
  000002F3            00302  SD_SECONDS = 755
  000002F4            00303  SD_MINUTES = 756
  000002F5            00304  SD_HOURS = 757
  000002F6            00305  SD_IS_DIRTY = 758
  000002F7            00306  SD_SSPSTAT = 759
  000002F8            00307  SD_RETURN_F = 760
  000002F9            00308  SD_IO_STRING_LENGTH = 761
  000002FA            00309  SD_IO_STRING_POS = 762
  000002FB            00310  SD_IO_STRING = 763
  02FB                00311  VARIABLE SD_IO_STRING#0=763,SD_IO_STRING#1=764,SD_IO_STRING#2=765,SD_IO_STRING#3=766
  02FF                00312  VARIABLE SD_IO_STRING#4=767,SD_IO_STRING#5=768,SD_IO_STRING#6=769,SD_IO_STRING#7=770
  0303                00313  VARIABLE SD_IO_STRING#8=771,SD_IO_STRING#9=772,SD_IO_STRING#10=773,SD_IO_STRING#11=774
  0307                00314  VARIABLE SD_IO_STRING#12=775,SD_IO_STRING#13=776,SD_IO_STRING#14=777,SD_IO_STRING#15=778
  030B                00315  VARIABLE SD_IO_STRING#16=779,SD_IO_STRING#17=780,SD_IO_STRING#18=781,SD_IO_STRING#19=782
  030F                00316  VARIABLE SD_IO_STRING#20=783,SD_IO_STRING#21=784,SD_IO_STRING#22=785,SD_IO_STRING#23=786
  0313                00317  VARIABLE SD_IO_STRING#24=787,SD_IO_STRING#25=788,SD_IO_STRING#26=789,SD_IO_STRING#27=790
  0317                00318  VARIABLE SD_IO_STRING#28=791,SD_IO_STRING#29=792,SD_IO_STRING#30=793,SD_IO_STRING#31=794
  031B                00319  VARIABLE SD_IO_STRING#32=795,SD_IO_STRING#33=796,SD_IO_STRING#34=797,SD_IO_STRING#35=798
  031F                00320  VARIABLE SD_IO_STRING#36=799,SD_IO_STRING#37=800,SD_IO_STRING#38=801,SD_IO_STRING#39=802
  0323                00321  VARIABLE SD_IO_STRING#40=803,SD_IO_STRING#41=804,SD_IO_STRING#42=805,SD_IO_STRING#43=806
  0327                00322  VARIABLE SD_IO_STRING#44=807,SD_IO_STRING#45=808,SD_IO_STRING#46=809,SD_IO_STRING#47=810
  032B                00323  VARIABLE SD_IO_STRING#48=811,SD_IO_STRING#49=812,SD_IO_STRING#50=813,SD_IO_STRING#51=814
  032F                00324  VARIABLE SD_IO_STRING#52=815,SD_IO_STRING#53=816,SD_IO_STRING#54=817,SD_IO_STRING#55=818
  0333                00325  VARIABLE SD_IO_STRING#56=819,SD_IO_STRING#57=820,SD_IO_STRING#58=821,SD_IO_STRING#59=822
  0337                00326  VARIABLE SD_IO_STRING#60=823,SD_IO_STRING#61=824,SD_IO_STRING#62=825,SD_IO_STRING#63=826
  033B                00327  VARIABLE SD_IO_STRING#64=827,SD_IO_STRING#65=828,SD_IO_STRING#66=829,SD_IO_STRING#67=830
  033F                00328  VARIABLE SD_IO_STRING#68=831,SD_IO_STRING#69=832,SD_IO_STRING#70=833,SD_IO_STRING#71=834
  0343                00329  VARIABLE SD_IO_STRING#72=835,SD_IO_STRING#73=836,SD_IO_STRING#74=837,SD_IO_STRING#75=838
  0347                00330  VARIABLE SD_IO_STRING#76=839,SD_IO_STRING#77=840,SD_IO_STRING#78=841,SD_IO_STRING#79=842
  034B                00331  VARIABLE SD_IO_STRING#80=843,SD_IO_STRING#81=844,SD_IO_STRING#82=845,SD_IO_STRING#83=846
  034F                00332  VARIABLE SD_IO_STRING#84=847,SD_IO_STRING#85=848,SD_IO_STRING#86=849,SD_IO_STRING#87=850
  0353                00333  VARIABLE SD_IO_STRING#88=851,SD_IO_STRING#89=852,SD_IO_STRING#90=853,SD_IO_STRING#91=854
  0357                00334  VARIABLE SD_IO_STRING#92=855,SD_IO_STRING#93=856,SD_IO_STRING#94=857,SD_IO_STRING#95=858
  035B                00335  VARIABLE SD_IO_STRING#96=859,SD_IO_STRING#97=860,SD_IO_STRING#98=861,SD_IO_STRING#99=862
  035F                00336  VARIABLE SD_IO_STRING#100=863,SD_IO_STRING#101=864,SD_IO_STRING#102=865,SD_IO_STRING#103=866
  0363                00337  VARIABLE SD_IO_STRING#104=867,SD_IO_STRING#105=868,SD_IO_STRING#106=869,SD_IO_STRING#107=870
  0367                00338  VARIABLE SD_IO_STRING#108=871,SD_IO_STRING#109=872,SD_IO_STRING#110=873,SD_IO_STRING#111=874
  036B                00339  VARIABLE SD_IO_STRING#112=875,SD_IO_STRING#113=876,SD_IO_STRING#114=877,SD_IO_STRING#115=878
  036F                00340  VARIABLE SD_IO_STRING#116=879,SD_IO_STRING#117=880,SD_IO_STRING#118=881,SD_IO_STRING#119=882
  0373                00341  VARIABLE SD_IO_STRING#120=883,SD_IO_STRING#121=884,SD_IO_STRING#122=885,SD_IO_STRING#123=886
  0377                00342  VARIABLE SD_IO_STRING#124=887,SD_IO_STRING#125=888,SD_IO_STRING#126=889,SD_IO_STRING#127=890
  037B                00343  VARIABLE SD_IO_STRING#128=891,SD_IO_STRING#129=892,SD_IO_STRING#130=893,SD_IO_STRING#131=894
  037F                00344  VARIABLE SD_IO_STRING#132=895,SD_IO_STRING#133=896,SD_IO_STRING#134=897,SD_IO_STRING#135=898
  0383                00345  VARIABLE SD_IO_STRING#136=899,SD_IO_STRING#137=900,SD_IO_STRING#138=901,SD_IO_STRING#139=902
  0387                00346  VARIABLE SD_IO_STRING#140=903,SD_IO_STRING#141=904,SD_IO_STRING#142=905,SD_IO_STRING#143=906
  038B                00347  VARIABLE SD_IO_STRING#144=907,SD_IO_STRING#145=908,SD_IO_STRING#146=909,SD_IO_STRING#147=910
  038F                00348  VARIABLE SD_IO_STRING#148=911,SD_IO_STRING#149=912,SD_IO_STRING#150=913,SD_IO_STRING#151=914
  0393                00349  VARIABLE SD_IO_STRING#152=915,SD_IO_STRING#153=916,SD_IO_STRING#154=917,SD_IO_STRING#155=918
  0397                00350  VARIABLE SD_IO_STRING#156=919,SD_IO_STRING#157=920,SD_IO_STRING#158=921,SD_IO_STRING#159=922
  039B                00351  VARIABLE SD_IO_STRING#160=923,SD_IO_STRING#161=924,SD_IO_STRING#162=925,SD_IO_STRING#163=926
  039F                00352  VARIABLE SD_IO_STRING#164=927,SD_IO_STRING#165=928,SD_IO_STRING#166=929,SD_IO_STRING#167=930
  03A3                00353  VARIABLE SD_IO_STRING#168=931,SD_IO_STRING#169=932,SD_IO_STRING#170=933,SD_IO_STRING#171=934
  03A7                00354  VARIABLE SD_IO_STRING#172=935,SD_IO_STRING#173=936,SD_IO_STRING#174=937,SD_IO_STRING#175=938
  03AB                00355  VARIABLE SD_IO_STRING#176=939,SD_IO_STRING#177=940,SD_IO_STRING#178=941,SD_IO_STRING#179=942
  03AF                00356  VARIABLE SD_IO_STRING#180=943,SD_IO_STRING#181=944,SD_IO_STRING#182=945,SD_IO_STRING#183=946
  03B3                00357  VARIABLE SD_IO_STRING#184=947,SD_IO_STRING#185=948,SD_IO_STRING#186=949,SD_IO_STRING#187=950
  03B7                00358  VARIABLE SD_IO_STRING#188=951,SD_IO_STRING#189=952,SD_IO_STRING#190=953,SD_IO_STRING#191=954
  03BB                00359  VARIABLE SD_IO_STRING#192=955,SD_IO_STRING#193=956,SD_IO_STRING#194=957,SD_IO_STRING#195=958
  03BF                00360  VARIABLE SD_IO_STRING#196=959,SD_IO_STRING#197=960,SD_IO_STRING#198=961,SD_IO_STRING#199=962
  03C3                00361  VARIABLE SD_IO_STRING#200=963
  000003C4            00362  USER_POINTER = 964
  000003C5            00363  USER_POINTERH = 965
  000003C6            00364  TAGIN = 966
  03C6                00365  VARIABLE TAGIN#0=966,TAGIN#1=967,TAGIN#2=968,TAGIN#3=969
  03CA                00366  VARIABLE TAGIN#4=970,TAGIN#5=971,TAGIN#6=972,TAGIN#7=973
  03CE                00367  VARIABLE TAGIN#8=974,TAGIN#9=975
  000003D0            00368  USERIN = 976
  03D0                00369  VARIABLE USERIN#0=976,USERIN#1=977,USERIN#2=978,USERIN#3=979
  000003D4            00370  UTAG = 980
  03D4                00371  VARIABLE UTAG#0=980,UTAG#1=981,UTAG#2=982,UTAG#3=983
  03D8                00372  VARIABLE UTAG#4=984,UTAG#5=985,UTAG#6=986,UTAG#7=987
  03DC                00373  VARIABLE UTAG#8=988,UTAG#9=989,UTAG#10=990,UTAG#11=991
  03E0                00374  VARIABLE UTAG#12=992,UTAG#13=993,UTAG#14=994,UTAG#15=995
  000003E4            00375  MODNUM = 996
  03E4                00376  VARIABLE MODNUM#0=996,MODNUM#1=997,MODNUM#2=998,MODNUM#3=999
  03E8                00377  VARIABLE MODNUM#4=1000,MODNUM#5=1001,MODNUM#6=1002
  000003EB            00378  RESPONSE = 1003
  000003EC            00379  MYCOUNT = 1004
  000003ED            00380  INDEX = 1005
  000003EE            00381  INDEX2 = 1006
  000003EF            00382  TV1 = 1007
  000003F0            00383  WORD_VAR = 1008
  000003F1            00384  WORD_VARH = 1009
  000003F2            00385  MYNUM = 1010
  03F2                00386  VARIABLE MYNUM#0=1010,MYNUM#1=1011,MYNUM#2=1012,MYNUM#3=1013
                      00387         #DEFINE SD_CS PORTC,2
                      00388         #DEFINE SD_DI PORTC,5
                      00389         #DEFINE SD_CLK PORTC,3
                      00390         #DEFINE SD_DO PORTC,4
                      00391         #DEFINE SD_EOF _B#VR1,0
                      00392         #DEFINE SD_RW_PTR SD_BYTES_READ
                      00393         #DEFINE SD_RW_PTRH SD_BYTES_READH
                      00394         #DEFINE SD_RW_PTRHH SD_BYTES_READHH
                      00395         #DEFINE SD_RW_PTRHHH SD_BYTES_READHHH
                      00396         #DEFINE SD_FREE_CLUSTER_NUM SD_CLUSTER_SEQ_NUM
                      00397         #DEFINE SD_FREE_CLUSTER_NUMH SD_CLUSTER_SEQ_NUMH
                      00398         #DEFINE SD_FREE_SPACE_KB SD_BYTES_READ
                      00399         #DEFINE SD_FREE_SPACE_KBH SD_BYTES_READH
                      00400         #DEFINE SD_FREE_SPACE_KBHH SD_BYTES_READHH
                      00401         #DEFINE SD_FREE_SPACE_KBHHH SD_BYTES_READHHH
                      00402         #DEFINE SD_DISK_SIZE_KB SD_BYTES_READ
                      00403         #DEFINE SD_DISK_SIZE_KBH SD_BYTES_READH
                      00404         #DEFINE SD_DISK_SIZE_KBHH SD_BYTES_READHH
                      00405         #DEFINE SD_DISK_SIZE_KBHHH SD_BYTES_READHHH
                      00406         #DEFINE SD_FIRST 0
                      00407         #DEFINE SD_NEXT 1
                      00408         #DEFINE SD_PREVIOUS 2
                      00409         #DEFINE SD_SPI_BF SSPSTAT,0
                      00410         #DEFINE SD_SPI_IF PIR1,3
                      00411         #DEFINE SD_SPI_FOSC_64 2
                      00412         #DEFINE SD_SPI_FOSC_16 1
                      00413         #DEFINE SD_SPI_FOSC_04 0
                      00414         #DEFINE __LCD_DTPORT PORTD
                      00415         #DEFINE __LCD_ENPORT PORTD
                      00416         #DEFINE __LCD_RSPORT PORTD
                      00417         #DEFINE SD_DETECT PORTB,0
                      00418         #DEFINE RFIDENABLE PORTD,4
                      00419         #DEFINE BUA 40016
                      00420         #DEFINE BUAH 156
                      00421         #DEFINE UPA_L 0
                      00422         #DEFINE UPA_H 1
                      00423         #DEFINE NOU 2
                      00424         #DEFINE NUM_UHE 3
                      00425         #DEFINE NUM_MHE 4
                      00426         #DEFINE TAGOFFSET 4
                      00427         #DEFINE UHA 16
                      00428         #DEFINE MHA 912
                      00429         #DEFINE MHAH 3
                      00430         #DEFINE NUM_UH 200
                      00431         #DEFINE NUM_MH 10
  000005E4            00432 F2_SOF EQU $ ; V2.5 RFID 2ND GENERATION.PRP
  000005E4            00433 F3_SOF EQU $ ; V2.5 RFID 2ND GENERATION_FWD.PBP
  000005E4            00434 F3_EOF EQU $ ; V2.5 RFID 2ND GENERATION_FWD.PBP
  000005E4            00435 F4_SOF EQU $ ; V2.5 RFID 2ND GENERATION_LIB.PBP
  000005E4            00436 F4_000001 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoTo OverLibCode
                      00437         F@JUMP OVERLIBCODE
0005E8                00438 SD_WRITE_SUB
  000005E8            00439 F4_000109 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx > $FF Then
0005E8 0E01           00440         MOVLW 1
0005EA 0102           00441         MOVLB 2
  00000002            00442 RAM_BANK = 2
0005EC 5D48           00443         SUBWF SD_BUFFER_IDXH,W
0005EE 0100           00444         MOVLB 0
  00000000            00445 RAM_BANK = 0
0005F0 A0D8           00446         BTFSS STATUS,0,0
                      00447         GO@TO BC@LL2
  000005F6            00448 F4_000110 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Buffer_Idx - $100] = SD_Byte_RW
0005F6 0102           00449         MOVLB 2
  00000002            00450 RAM_BANK = 2
0005F8 5147           00451         MOVF SD_BUFFER_IDX,W
0005FA EE01 F041      00452         LFSR 0,SD_BUFFER1
0005FE 26E9           00453         ADDWF FSR0L,F,0
000600 0E00           00454         MOVLW 0
000602 22EA           00455         ADDWFC FSR0H,F,0
000604 C249 FFEF      00456         MOVFF SD_BYTE_RW,INDF0
000608 0100           00457         MOVLB 0
  00000000            00458 RAM_BANK = 0
                      00459         F@JUMP BC@LL3
00060E                00460 BC@LL2
  0000060E            00461 F4_000111 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  0000060E            00462 F4_000112 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Buffer_Idx] = SD_Byte_RW
00060E EE00 F041      00463         LFSR 0,SD_BUFFER0
000612 0102           00464         MOVLB 2
  00000002            00465 RAM_BANK = 2
000614 5147           00466         MOVF SD_BUFFER_IDX,W
000616 26E9           00467         ADDWF FSR0L,F,0
000618 0E00           00468         MOVLW 0
00061A 22EA           00469         ADDWFC FSR0H,F,0
00061C C249 FFEF      00470         MOVFF SD_BYTE_RW,INDF0
  00000620            00471 F4_000113 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000620                00472 BC@LL3
000620 0100           00473         MOVLB 0
  00000000            00474 RAM_BANK = 0
  00000622            00475 F4_000114 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 1
000622 0E01           00476         MOVLW 1
000624 0102           00477         MOVLB 2
  00000002            00478 RAM_BANK = 2
000626 6FF6           00479         MOVWF SD_IS_DIRTY
  00000628            00480 F4_000115 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx = $1FF Then
000628 2947           00481         INCF SD_BUFFER_IDX,W
00062A 0E01           00482         MOVLW 1
00062C B4D8           00483         BTFSC STATUS,2,0
00062E 1948           00484         XORWF SD_BUFFER_IDXH,W
000630 0100           00485         MOVLB 0
  00000000            00486 RAM_BANK = 0
000632 A4D8           00487         BTFSS STATUS,2,0
                      00488         GO@TO BC@LL5
  00000638            00489 F4_000116 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Repeat
000638                00490 BC@LL6
  00000638            00491 F4_000117 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      00492         F@CALL SD_WRITE_SECTOR
  0000063C            00493 F4_000118 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Until SD_Return = 0
00063C 5240           00494         MOVF SD_RETURN,F,0
00063E A4D8           00495         BTFSS STATUS,2,0
                      00496         GO@TO BC@LL6
000642                00497 BC@LL7
  00000642            00498 F4_000119 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 0
000642 0102           00499         MOVLB 2
  00000002            00500 RAM_BANK = 2
000644 6BF6           00501         CLRF SD_IS_DIRTY
  00000646            00502 F4_000120 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
000646 6B48           00503         CLRF SD_BUFFER_IDXH
000648 6B47           00504         CLRF SD_BUFFER_IDX
  0000064A            00505 F4_000121 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sector_Num
00064A 2A34           00506         INCF SD_SECTOR_NUM,F,0
00064C 0E00           00507         MOVLW 0
00064E 2235           00508         ADDWFC SD_SECTOR_NUMH,F,0
000650 2236           00509         ADDWFC SD_SECTOR_NUMHH,F,0
000652 2237           00510         ADDWFC SD_SECTOR_NUMHHH,F,0
000654 0100           00511         MOVLB 0
  00000000            00512 RAM_BANK = 0
                      00513         F@JUMP BC@LL8
00065A                00514 BC@LL5
  0000065A            00515 F4_000122 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  0000065A            00516 F4_000123 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = SD_Buffer_Idx + 1
00065A 0102           00517         MOVLB 2
  00000002            00518 RAM_BANK = 2
00065C 4B47           00519         INFSNZ SD_BUFFER_IDX,F
00065E 2B48           00520         INCF SD_BUFFER_IDXH,F
  00000660            00521 F4_000124 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000660                00522 BC@LL8
000660 0100           00523         MOVLB 0
  00000000            00524 RAM_BANK = 0
  00000662            00525 F4_000125 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
000662 0012           00526         RETURN 0
000664                00527 SD_SECTOR_SUB
  00000664            00528 F4_000128 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
000664 0102           00529         MOVLB 2
  00000002            00530 RAM_BANK = 2
000666 6B48           00531         CLRF SD_BUFFER_IDXH
000668 6B47           00532         CLRF SD_BUFFER_IDX
  0000066A            00533 F4_000129 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_RW_Option = 0 Then
00066A 534A           00534         MOVF SD_RW_OPTION,F
00066C 0100           00535         MOVLB 0
  00000000            00536 RAM_BANK = 0
00066E A4D8           00537         BTFSS STATUS,2,0
                      00538         GO@TO BC@LL10
  00000674            00539 F4_000130 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000674 6A33           00540         CLRF SD_IDX,0
000676                00541 FR@LB12
  00000676            00542 F4_000131 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Idx] = 0
000676 EE00 F041      00543         LFSR 0,SD_BUFFER0
00067A 5033           00544         MOVF SD_IDX,W,0
00067C 26E9           00545         ADDWF FSR0L,F,0
00067E 0E00           00546         MOVLW 0
000680 22EA           00547         ADDWFC FSR0H,F,0
000682 6AEF           00548         CLRF INDF0,0
  00000684            00549 F4_000132 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Idx] = 0
000684 EE01 F041      00550         LFSR 0,SD_BUFFER1
000688 5033           00551         MOVF SD_IDX,W,0
00068A 26E9           00552         ADDWF FSR0L,F,0
00068C 0E00           00553         MOVLW 0
00068E 22EA           00554         ADDWFC FSR0H,F,0
000690 6AEF           00555         CLRF INDF0,0
  00000692            00556 F4_000133 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
000692 2A33           00557         INCF SD_IDX,F,0
000694 A4D8           00558         BTFSS STATUS,2,0
                      00559         GO@TO FR@LB12
000698                00560 NX@LB13
                      00561         F@JUMP BC@LL13
00069C                00562 BC@LL10
  0000069C            00563 F4_000134 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  0000069C            00564 F4_000135 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_Sector
                      00565         F@CALL SD_READ_SECTOR
  000006A0            00566 F4_000136 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0006A0                00567 BC@LL13
  000006A0            00568 F4_000137 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0006A0 0012           00569         RETURN 0
0006A2                00570 SD_SEEK_RESPONSE
  000006A2            00571 F4_000151 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Repeat
0006A2                00572 BC@LL14
  000006A2            00573 F4_000152 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00574         F@CALL SD_RECEIVE_BYTE
  000006A6            00575 F4_000153 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Dec SD_Seek_Response_Idx
0006A6 063C           00576         DECF SD_SEEK_RESPONSE_IDX,F,0
0006A8 0E00           00577         MOVLW 0
0006AA 5A3D           00578         SUBWFB SD_SEEK_RESPONSE_IDXH,F,0
  000006AC            00579 F4_000154 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Until SD_ByteR = SD_Seek_Response_Reqd Or SD_Seek_Response_Idx = 0
0006AC C032 F011      00580         MOVFF SD_BYTER,PP0
0006B0 503E           00581         MOVF SD_SEEK_RESPONSE_REQD,W,0
                      00582         F@CALL T@EB
0006B6 6E2D           00583         MOVWF SP#P9,0
0006B8 503D           00584         MOVF SD_SEEK_RESPONSE_IDXH,W,0
0006BA 103C           00585         IORWF SD_SEEK_RESPONSE_IDX,W,0
0006BC B4D8           00586         BTFSC STATUS,2,0
                      00587         GO@TO CP@LB4
0006C2 0E00           00588         MOVLW 0
0006C4 D001           00589         BRA $ + 4
0006C6                00590 CP@LB4
0006C6 0E01           00591         MOVLW 1
0006C8 102D           00592         IORWF SP#P9,W,0
0006CA B4D8           00593         BTFSC STATUS,2,0
                      00594         GO@TO BC@LL14
0006CE                00595 BC@LL15
  000006CE            00596 F4_000155 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Idx = 0 Then
0006CE 503D           00597         MOVF SD_SEEK_RESPONSE_IDXH,W,0
0006D0 103C           00598         IORWF SD_SEEK_RESPONSE_IDX,W,0
0006D2 A4D8           00599         BTFSS STATUS,2,0
                      00600         GO@TO BC@LL17
  000006D8            00601 F4_000156 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Return = 1
0006D8 0E01           00602         MOVLW 1
0006DA 6E3F           00603         MOVWF SD_SEEK_RESPONSE_RETURN,0
                      00604         F@JUMP BC@LL18
0006E0                00605 BC@LL17
  000006E0            00606 F4_000157 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  000006E0            00607 F4_000158 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Return = 0
0006E0 6A3F           00608         CLRF SD_SEEK_RESPONSE_RETURN,0
  000006E2            00609 F4_000159 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0006E2                00610 BC@LL18
  000006E2            00611 F4_000160 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0006E2 0012           00612         RETURN 0
0006E4                00613 SD_WRITE_SECTOR
  000006E4            00614 F4_000163 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = 0
0006E4 0102           00615         MOVLB 2
  00000002            00616 RAM_BANK = 2
0006E6 6BEE           00617         CLRF SD_TIMEOUT
  000006E8            00618 F4_000164 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
0006E8 0E01           00619         MOVLW 1
0006EA 6E40           00620         MOVWF SD_RETURN,0
0006EC                00621 SD_WRITE_SECTOR_START
0006EC 0100           00622         MOVLB 0
  00000000            00623 RAM_BANK = 0
  000006EE            00624 F4_000166 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Address = SD_Sector_Num << 9
0006EE 90D8           00625         BCF STATUS,0,0
0006F0 6A38           00626         CLRF SD_ADDRESS,0
0006F2 3434           00627         RLCF SD_SECTOR_NUM,W,0
0006F4 6E39           00628         MOVWF SD_ADDRESSH,0
0006F6 3435           00629         RLCF SD_SECTOR_NUMH,W,0
0006F8 6E3A           00630         MOVWF SD_ADDRESSHH,0
0006FA 3436           00631         RLCF SD_SECTOR_NUMHH,W,0
0006FC 6E3B           00632         MOVWF SD_ADDRESSHHH,0
  000006FE            00633 F4_000168 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Low SD_CS
0006FE 9494           00634         BCF TRISC,2,0
000700 9482           00635         BCF PORTC,2,0
  00000702            00636 F4_000169 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $58
000702 0E58           00637         MOVLW 88
000704 0102           00638         MOVLB 2
  00000002            00639 RAM_BANK = 2
000706 6F41           00640         MOVWF SD_BYTE0
  00000708            00641 F4_000170 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = SD_Address.BYTE3
000708 C03B F242      00642         MOVFF SD_ADDRESSHHH,SD_BYTE1
  0000070C            00643 F4_000171 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = SD_Address.BYTE2
00070C C03A F243      00644         MOVFF SD_ADDRESSHH,SD_BYTE2
  00000710            00645 F4_000172 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = SD_Address.BYTE1
000710 C039 F244      00646         MOVFF SD_ADDRESSH,SD_BYTE3
  00000714            00647 F4_000173 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = SD_Address.BYTE0
000714 C038 F245      00648         MOVFF SD_ADDRESS,SD_BYTE4
  00000718            00649 F4_000174 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
000718 6946           00650         SETF SD_BYTE5
  0000071A            00651 F4_000175 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $00
00071A 6A3E           00652         CLRF SD_SEEK_RESPONSE_REQD,0
  0000071C            00653 F4_000176 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
00071C 683D           00654         SETF SD_SEEK_RESPONSE_IDXH,0
00071E 683C           00655         SETF SD_SEEK_RESPONSE_IDX,0
  00000720            00656 F4_000177 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
000720 0100           00657         MOVLB 0
  00000000            00658 RAM_BANK = 0
                      00659         F@CALL SD_SEND_CMD
  00000726            00660 F4_000178 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00661         F@CALL SD_SEEK_RESPONSE
  00000728            00662 F4_000179 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Write_Sector_Error
000728 0E01           00663         MOVLW 1
00072A 5C3F           00664         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
00072C A4D8           00665         BTFSS STATUS,2,0
                      00666         GO@TO BC@LL20
                      00667         F@JUMP SD_WRITE_SECTOR_ERROR
000736                00668 BC@LL20
  00000736            00669 F4_000181 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FE
000736 0EFE           00670         MOVLW 254
000738 0102           00671         MOVLB 2
  00000002            00672 RAM_BANK = 2
00073A 6F46           00673         MOVWF SD_BYTE5
  0000073C            00674 F4_000182 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
00073C 0100           00675         MOVLB 0
  00000000            00676 RAM_BANK = 0
                      00677         F@CALL SD_SEND_BYTE
  00000742            00678 F4_000184 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000742 6A33           00679         CLRF SD_IDX,0
000744                00680 FR@LB22
  00000744            00681 F4_000185 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = SD_Buffer0[SD_Idx]
000744 EE00 F041      00682         LFSR 0,SD_BUFFER0
000748 5033           00683         MOVF SD_IDX,W,0
00074A 26E9           00684         ADDWF FSR0L,F,0
00074C 0E00           00685         MOVLW 0
00074E 22EA           00686         ADDWFC FSR0H,F,0
000750 50EF           00687         MOVF INDF0,W,0
000752 0102           00688         MOVLB 2
  00000002            00689 RAM_BANK = 2
000754 6F46           00690         MOVWF SD_BYTE5
  00000756            00691 F4_000186 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000756 0100           00692         MOVLB 0
  00000000            00693 RAM_BANK = 0
                      00694         F@CALL SD_SEND_BYTE
  0000075C            00695 F4_000187 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
00075C 2A33           00696         INCF SD_IDX,F,0
00075E A4D8           00697         BTFSS STATUS,2,0
                      00698         GO@TO FR@LB22
000762                00699 NX@LB23
  00000762            00700 F4_000188 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000762 6A33           00701         CLRF SD_IDX,0
000764                00702 FR@LB24
  00000764            00703 F4_000189 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = SD_Buffer1[SD_Idx]
000764 EE01 F041      00704         LFSR 0,SD_BUFFER1
000768 5033           00705         MOVF SD_IDX,W,0
00076A 26E9           00706         ADDWF FSR0L,F,0
00076C 0E00           00707         MOVLW 0
00076E 22EA           00708         ADDWFC FSR0H,F,0
000770 50EF           00709         MOVF INDF0,W,0
000772 0102           00710         MOVLB 2
  00000002            00711 RAM_BANK = 2
000774 6F46           00712         MOVWF SD_BYTE5
  00000776            00713 F4_000190 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000776 0100           00714         MOVLB 0
  00000000            00715 RAM_BANK = 0
                      00716         F@CALL SD_SEND_BYTE
  0000077C            00717 F4_000191 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
00077C 2A33           00718         INCF SD_IDX,F,0
00077E A4D8           00719         BTFSS STATUS,2,0
                      00720         GO@TO FR@LB24
000782                00721 NX@LB25
  00000782            00722 F4_000193 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
000782 0102           00723         MOVLB 2
  00000002            00724 RAM_BANK = 2
000784 6946           00725         SETF SD_BYTE5
  00000786            00726 F4_000194 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000786 0100           00727         MOVLB 0
  00000000            00728 RAM_BANK = 0
                      00729         F@CALL SD_SEND_BYTE
  0000078C            00730 F4_000195 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
                      00731         F@CALL SD_SEND_BYTE
  00000790            00732 F4_000197 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $FF
000790 683E           00733         SETF SD_SEEK_RESPONSE_REQD,0
  00000792            00734 F4_000198 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
000792 683D           00735         SETF SD_SEEK_RESPONSE_IDXH,0
000794 683C           00736         SETF SD_SEEK_RESPONSE_IDX,0
  00000796            00737 F4_000199 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00738         F@CALL SD_RECEIVE_BYTE
  0000079A            00739 F4_000200 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Byte = SD_ByteR
00079A C032 F2D1      00740         MOVFF SD_BYTER,SD_TEMP_BYTE
  0000079E            00741 F4_000201 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00742         F@CALL SD_SEEK_RESPONSE
  000007A0            00743 F4_000202 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Byte = SD_Temp_Byte & $0F
0007A0 0E0F           00744         MOVLW 15
0007A2 0102           00745         MOVLB 2
  00000002            00746 RAM_BANK = 2
0007A4 17D1           00747         ANDWF SD_TEMP_BYTE,F
  000007A6            00748 F4_000203 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Temp_Byte <> $05 Then GoTo SD_Write_Sector_Error
0007A6 0E05           00749         MOVLW 5
0007A8 5DD1           00750         SUBWF SD_TEMP_BYTE,W
0007AA 0100           00751         MOVLB 0
  00000000            00752 RAM_BANK = 0
0007AC B4D8           00753         BTFSC STATUS,2,0
                      00754         GO@TO BC@LL26
                      00755         F@JUMP SD_WRITE_SECTOR_ERROR
0007B6                00756 BC@LL26
  000007B6            00757 F4_000204 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Write_Sector_Error
0007B6 0E01           00758         MOVLW 1
0007B8 5C3F           00759         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
0007BA A4D8           00760         BTFSS STATUS,2,0
                      00761         GO@TO BC@LL28
                      00762         F@JUMP SD_WRITE_SECTOR_ERROR
0007C4                00763 BC@LL28
  000007C4            00764 F4_000205 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Return = 0
0007C4 6A40           00765         CLRF SD_RETURN,0
  000007C6            00766 F4_000206 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0007C6 9494           00767         BCF TRISC,2,0
0007C8 8482           00768         BSF PORTC,2,0
  000007CA            00769 F4_000207 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Write_Sector_End
                      00770         F@JUMP SD_WRITE_SECTOR_END
0007CE                00771 SD_WRITE_SECTOR_ERROR
  000007CE            00772 F4_000209 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0007CE 9494           00773         BCF TRISC,2,0
0007D0 8482           00774         BSF PORTC,2,0
  000007D2            00775 F4_000210 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = SD_Timeout + 1
0007D2 0102           00776         MOVLB 2
  00000002            00777 RAM_BANK = 2
0007D4 2BEE           00778         INCF SD_TIMEOUT,F
  000007D6            00779 F4_000211 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Timeout < $03 Then
0007D6 0E03           00780         MOVLW 3
0007D8 5DEE           00781         SUBWF SD_TIMEOUT,W
0007DA 0100           00782         MOVLB 0
  00000000            00783 RAM_BANK = 0
0007DC B0D8           00784         BTFSC STATUS,0,0
                      00785         GO@TO BC@LL30
  000007E2            00786 F4_000212 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Write_Sector_Start
                      00787         F@JUMP SD_WRITE_SECTOR_START
  000007E4            00788 F4_000213 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0007E4                00789 BC@LL30
0007E4                00790 SD_WRITE_SECTOR_END
  000007E4            00791 F4_000215 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0007E4 0012           00792         RETURN 0
0007E6                00793 SD_READ_SECTOR
  000007E6            00794 F4_000218 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = 0
0007E6 0102           00795         MOVLB 2
  00000002            00796 RAM_BANK = 2
0007E8 6BEE           00797         CLRF SD_TIMEOUT
  000007EA            00798 F4_000219 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
0007EA 0E01           00799         MOVLW 1
0007EC 6E40           00800         MOVWF SD_RETURN,0
0007EE                00801 SD_READ_SECTOR_START
0007EE 0100           00802         MOVLB 0
  00000000            00803 RAM_BANK = 0
  000007F0            00804 F4_000221 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Address = SD_Sector_Num << 9
0007F0 90D8           00805         BCF STATUS,0,0
0007F2 6A38           00806         CLRF SD_ADDRESS,0
0007F4 3434           00807         RLCF SD_SECTOR_NUM,W,0
0007F6 6E39           00808         MOVWF SD_ADDRESSH,0
0007F8 3435           00809         RLCF SD_SECTOR_NUMH,W,0
0007FA 6E3A           00810         MOVWF SD_ADDRESSHH,0
0007FC 3436           00811         RLCF SD_SECTOR_NUMHH,W,0
0007FE 6E3B           00812         MOVWF SD_ADDRESSHHH,0
  00000800            00813 F4_000223 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Low SD_CS
000800 9494           00814         BCF TRISC,2,0
000802 9482           00815         BCF PORTC,2,0
  00000804            00816 F4_000224 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $51
000804 0E51           00817         MOVLW 81
000806 0102           00818         MOVLB 2
  00000002            00819 RAM_BANK = 2
000808 6F41           00820         MOVWF SD_BYTE0
  0000080A            00821 F4_000225 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = SD_Address.BYTE3
00080A C03B F242      00822         MOVFF SD_ADDRESSHHH,SD_BYTE1
  0000080E            00823 F4_000226 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = SD_Address.BYTE2
00080E C03A F243      00824         MOVFF SD_ADDRESSHH,SD_BYTE2
  00000812            00825 F4_000227 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = SD_Address.BYTE1
000812 C039 F244      00826         MOVFF SD_ADDRESSH,SD_BYTE3
  00000816            00827 F4_000228 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = SD_Address.BYTE0
000816 C038 F245      00828         MOVFF SD_ADDRESS,SD_BYTE4
  0000081A            00829 F4_000229 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
00081A 6946           00830         SETF SD_BYTE5
  0000081C            00831 F4_000230 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
00081C 0100           00832         MOVLB 0
  00000000            00833 RAM_BANK = 0
                      00834         F@CALL SD_SEND_CMD
  00000822            00835 F4_000231 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $00
000822 6A3E           00836         CLRF SD_SEEK_RESPONSE_REQD,0
  00000824            00837 F4_000232 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
000824 683D           00838         SETF SD_SEEK_RESPONSE_IDXH,0
000826 683C           00839         SETF SD_SEEK_RESPONSE_IDX,0
  00000828            00840 F4_000233 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00841         F@CALL SD_SEEK_RESPONSE
  0000082A            00842 F4_000234 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Read_Sector_Error
00082A 0E01           00843         MOVLW 1
00082C 5C3F           00844         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
00082E A4D8           00845         BTFSS STATUS,2,0
                      00846         GO@TO BC@LL32
                      00847         F@JUMP SD_READ_SECTOR_ERROR
000838                00848 BC@LL32
  00000838            00849 F4_000236 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $FE
000838 0EFE           00850         MOVLW 254
00083A 6E3E           00851         MOVWF SD_SEEK_RESPONSE_REQD,0
  0000083C            00852 F4_000237 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
00083C 683D           00853         SETF SD_SEEK_RESPONSE_IDXH,0
00083E 683C           00854         SETF SD_SEEK_RESPONSE_IDX,0
  00000840            00855 F4_000238 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00856         F@CALL SD_SEEK_RESPONSE
  00000842            00857 F4_000239 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Read_Sector_Error
000842 0E01           00858         MOVLW 1
000844 5C3F           00859         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
000846 A4D8           00860         BTFSS STATUS,2,0
                      00861         GO@TO BC@LL34
                      00862         F@JUMP SD_READ_SECTOR_ERROR
000850                00863 BC@LL34
  00000850            00864 F4_000241 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000850 6A33           00865         CLRF SD_IDX,0
000852                00866 FR@LB36
  00000852            00867 F4_000242 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00868         F@CALL SD_RECEIVE_BYTE
  00000856            00869 F4_000243 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Idx] = SD_ByteR
000856 EE00 F041      00870         LFSR 0,SD_BUFFER0
00085A 5033           00871         MOVF SD_IDX,W,0
00085C 26E9           00872         ADDWF FSR0L,F,0
00085E 0E00           00873         MOVLW 0
000860 22EA           00874         ADDWFC FSR0H,F,0
000862 C032 FFEF      00875         MOVFF SD_BYTER,INDF0
  00000866            00876 F4_000244 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
000866 2A33           00877         INCF SD_IDX,F,0
000868 A4D8           00878         BTFSS STATUS,2,0
                      00879         GO@TO FR@LB36
00086C                00880 NX@LB37
  0000086C            00881 F4_000245 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
00086C 6A33           00882         CLRF SD_IDX,0
00086E                00883 FR@LB38
  0000086E            00884 F4_000246 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00885         F@CALL SD_RECEIVE_BYTE
  00000872            00886 F4_000247 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Idx] = SD_ByteR
000872 EE01 F041      00887         LFSR 0,SD_BUFFER1
000876 5033           00888         MOVF SD_IDX,W,0
000878 26E9           00889         ADDWF FSR0L,F,0
00087A 0E00           00890         MOVLW 0
00087C 22EA           00891         ADDWFC FSR0H,F,0
00087E C032 FFEF      00892         MOVFF SD_BYTER,INDF0
  00000882            00893 F4_000248 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
000882 2A33           00894         INCF SD_IDX,F,0
000884 A4D8           00895         BTFSS STATUS,2,0
                      00896         GO@TO FR@LB38
000888                00897 NX@LB39
  00000888            00898 F4_000250 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00899         F@CALL SD_RECEIVE_BYTE
  0000088C            00900 F4_000251 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00901         F@CALL SD_RECEIVE_BYTE
  00000890            00902 F4_000252 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] High SD_CS
000890 9494           00903         BCF TRISC,2,0
000892 8482           00904         BSF PORTC,2,0
  00000894            00905 F4_000253 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
000894 0102           00906         MOVLB 2
  00000002            00907 RAM_BANK = 2
000896 6946           00908         SETF SD_BYTE5
  00000898            00909 F4_000254 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000898 0100           00910         MOVLB 0
  00000000            00911 RAM_BANK = 0
                      00912         F@CALL SD_SEND_BYTE
  0000089E            00913 F4_000255 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Return = 0
00089E 6A40           00914         CLRF SD_RETURN,0
  000008A0            00915 F4_000256 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Read_Sector_End
                      00916         F@JUMP SD_READ_SECTOR_END
0008A4                00917 SD_READ_SECTOR_ERROR
  000008A4            00918 F4_000258 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0008A4 9494           00919         BCF TRISC,2,0
0008A6 8482           00920         BSF PORTC,2,0
  000008A8            00921 F4_000259 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = SD_Timeout + 1
0008A8 0102           00922         MOVLB 2
  00000002            00923 RAM_BANK = 2
0008AA 2BEE           00924         INCF SD_TIMEOUT,F
  000008AC            00925 F4_000260 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Timeout < $03 Then
0008AC 0E03           00926         MOVLW 3
0008AE 5DEE           00927         SUBWF SD_TIMEOUT,W
0008B0 0100           00928         MOVLB 0
  00000000            00929 RAM_BANK = 0
0008B2 B0D8           00930         BTFSC STATUS,0,0
                      00931         GO@TO BC@LL40
  000008B8            00932 F4_000261 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Read_Sector_Start
                      00933         F@JUMP SD_READ_SECTOR_START
  000008BA            00934 F4_000262 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0008BA                00935 BC@LL40
0008BA                00936 SD_READ_SECTOR_END
  000008BA            00937 F4_000264 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0008BA 0012           00938         RETURN 0
0008BC                00939 SD_READ_FAT_ENTRY
  000008BC            00940 F4_000267 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Pos > $0FF Then
0008BC 0E01           00941         MOVLW 1
0008BE 0102           00942         MOVLB 2
  00000002            00943 RAM_BANK = 2
0008C0 5D4F           00944         SUBWF SD_BUFFER_POSH,W
0008C2 0100           00945         MOVLB 0
  00000000            00946 RAM_BANK = 0
0008C4 A0D8           00947         BTFSS STATUS,0,0
                      00948         GO@TO BC@LL42
  000008CA            00949 F4_000268 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE0 = SD_Buffer1[SD_Buffer_Pos - $100]
0008CA 0102           00950         MOVLB 2
  00000002            00951 RAM_BANK = 2
0008CC 514E           00952         MOVF SD_BUFFER_POS,W
0008CE EE01 F041      00953         LFSR 0,SD_BUFFER1
0008D2 26E9           00954         ADDWF FSR0L,F,0
0008D4 0E00           00955         MOVLW 0
0008D6 22EA           00956         ADDWFC FSR0H,F,0
0008D8 50EF           00957         MOVF INDF0,W,0
0008DA 6F77           00958         MOVWF SD_FAT_ENTRY
  000008DC            00959 F4_000269 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE1 = SD_Buffer1[SD_Buffer_Pos + 1 - $100]
0008DC 0E01           00960         MOVLW 1
0008DE 254E           00961         ADDWF SD_BUFFER_POS,W
0008E0 6E23           00962         MOVWF PP7,0
0008E2 0E00           00963         MOVLW 0
0008E4 214F           00964         ADDWFC SD_BUFFER_POSH,W
0008E6 6E24           00965         MOVWF PP7H,0
0008E8 5023           00966         MOVF PP7,W,0
0008EA EE01 F041      00967         LFSR 0,SD_BUFFER1
0008EE 26E9           00968         ADDWF FSR0L,F,0
0008F0 0E00           00969         MOVLW 0
0008F2 22EA           00970         ADDWFC FSR0H,F,0
0008F4 50EF           00971         MOVF INDF0,W,0
0008F6 6F78           00972         MOVWF SD_FAT_ENTRYH
0008F8 0100           00973         MOVLB 0
  00000000            00974 RAM_BANK = 0
                      00975         F@JUMP BC@LL43
0008FE                00976 BC@LL42
  000008FE            00977 F4_000270 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  000008FE            00978 F4_000271 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE0 = SD_Buffer0[SD_Buffer_Pos]
0008FE EE00 F041      00979         LFSR 0,SD_BUFFER0
000902 0102           00980         MOVLB 2
  00000002            00981 RAM_BANK = 2
000904 514E           00982         MOVF SD_BUFFER_POS,W
000906 26E9           00983         ADDWF FSR0L,F,0
000908 0E00           00984         MOVLW 0
00090A 22EA           00985         ADDWFC FSR0H,F,0
00090C 50EF           00986         MOVF INDF0,W,0
00090E 6F77           00987         MOVWF SD_FAT_ENTRY
  00000910            00988 F4_000272 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE1 = SD_Buffer0[SD_Buffer_Pos + 1]
000910 294E           00989         INCF SD_BUFFER_POS,W
000912 EE00 F041      00990         LFSR 0,SD_BUFFER0
000916 26E9           00991         ADDWF FSR0L,F,0
000918 0E00           00992         MOVLW 0
00091A 22EA           00993         ADDWFC FSR0H,F,0
00091C 50EF           00994         MOVF INDF0,W,0
00091E 6F78           00995         MOVWF SD_FAT_ENTRYH
  00000920            00996 F4_000273 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000920                00997 BC@LL43
000920 0100           00998         MOVLB 0
  00000000            00999 RAM_BANK = 0
  00000922            01000 F4_000274 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
000922 0012           01001         RETURN 0
000924                01002 SD_FIND_FREE_CLUSTER
  00000924            01003 F4_000277 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Dword = SD_FAT1 + SD_Secs_Per_FAT - 1
000924 0102           01004         MOVLB 2
  00000002            01005 RAM_BANK = 2
000926 5158           01006         MOVF SD_SECS_PER_FAT,W
000928 2567           01007         ADDWF SD_FAT1,W
00092A 6E23           01008         MOVWF PP7,0
00092C 5159           01009         MOVF SD_SECS_PER_FATH,W
00092E 2168           01010         ADDWFC SD_FAT1H,W
000930 6E24           01011         MOVWF PP7H,0
000932 0E00           01012         MOVLW 0
000934 2169           01013         ADDWFC SD_FAT1HH,W
000936 6E25           01014         MOVWF PP7HH,0
000938 0E00           01015         MOVLW 0
00093A 216A           01016         ADDWFC SD_FAT1HHH,W
00093C 6E26           01017         MOVWF PP7HHH,0
00093E 0423           01018         DECF PP7,W,0
000940 6FD4           01019         MOVWF SD_TEMP_DWORD
000942 0E00           01020         MOVLW 0
000944 5824           01021         SUBWFB PP7H,W,0
000946 6FD5           01022         MOVWF SD_TEMP_DWORDH
000948 0E00           01023         MOVLW 0
00094A 5825           01024         SUBWFB PP7HH,W,0
00094C 6FD6           01025         MOVWF SD_TEMP_DWORDHH
00094E 0E00           01026         MOVLW 0
000950 5826           01027         SUBWFB PP7HHH,W,0
000952 6FD7           01028         MOVWF SD_TEMP_DWORDHHH
  00000954            01029 F4_000278 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Sec_Num = (SD_FAT_Sec + SD_FAT1) To SD_Temp_Dword
000954 5167           01030         MOVF SD_FAT1,W
000956 2579           01031         ADDWF SD_FAT_SEC,W
000958 6F51           01032         MOVWF SD_SEC_NUM
00095A 5168           01033         MOVF SD_FAT1H,W
00095C 217A           01034         ADDWFC SD_FAT_SECH,W
00095E 6F52           01035         MOVWF SD_SEC_NUMH
000960 5169           01036         MOVF SD_FAT1HH,W
000962 217B           01037         ADDWFC SD_FAT_SECHH,W
000964 6F53           01038         MOVWF SD_SEC_NUMHH
000966 516A           01039         MOVF SD_FAT1HHH,W
000968 217C           01040         ADDWFC SD_FAT_SECHHH,W
00096A 6F54           01041         MOVWF SD_SEC_NUMHHH
00096C                01042 FR@LB45
00096C 0100           01043         MOVLB 0
  00000000            01044 RAM_BANK = 0
00096E 0102           01045         MOVLB 2
  00000002            01046 RAM_BANK = 2
000970 5151           01047         MOVF SD_SEC_NUM,W
000972 5DD4           01048         SUBWF SD_TEMP_DWORD,W
000974 5152           01049         MOVF SD_SEC_NUMH,W
000976 59D5           01050         SUBWFB SD_TEMP_DWORDH,W
000978 5153           01051         MOVF SD_SEC_NUMHH,W
00097A 59D6           01052         SUBWFB SD_TEMP_DWORDHH,W
00097C 5154           01053         MOVF SD_SEC_NUMHHH,W
00097E 59D7           01054         SUBWFB SD_TEMP_DWORDHHH,W
000980 5154           01055         MOVF SD_SEC_NUMHHH,W
000982 19D7           01056         XORWF SD_TEMP_DWORDHHH,W
000984 B0D8           01057         BTFSC STATUS,0,0
000986 0A80           01058         XORLW 128
000988 0100           01059         MOVLB 0
  00000000            01060 RAM_BANK = 0
00098A A8D8           01061         BTFSS STATUS,4,0
                      01062         GO@TO NX@LB46
  00000990            01063 F4_000279 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sec_Num
000990 C254 F037      01064         MOVFF SD_SEC_NUMHHH,SD_SECTOR_NUMHHH
000994 C253 F036      01065         MOVFF SD_SEC_NUMHH,SD_SECTOR_NUMHH
000998 C252 F035      01066         MOVFF SD_SEC_NUMH,SD_SECTOR_NUMH
00099C C251 F034      01067         MOVFF SD_SEC_NUM,SD_SECTOR_NUM
  000009A0            01068 F4_000280 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0009A0 0E01           01069         MOVLW 1
0009A2 0102           01070         MOVLB 2
  00000002            01071 RAM_BANK = 2
0009A4 6F4A           01072         MOVWF SD_RW_OPTION
  000009A6            01073 F4_000281 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0009A6 0100           01074         MOVLB 0
  00000000            01075 RAM_BANK = 0
                      01076         F@CALL SD_SECTOR_SUB
  000009AA            01077 F4_000283 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Buffer_Pos = $0000 To $1FF Step 2
0009AA 0102           01078         MOVLB 2
  00000002            01079 RAM_BANK = 2
0009AC 6B4F           01080         CLRF SD_BUFFER_POSH
0009AE 6B4E           01081         CLRF SD_BUFFER_POS
0009B0                01082 FR@LB47
0009B0 0100           01083         MOVLB 0
  00000000            01084 RAM_BANK = 0
0009B2 0E02           01085         MOVLW 2
0009B4 0102           01086         MOVLB 2
  00000002            01087 RAM_BANK = 2
0009B6 5D4F           01088         SUBWF SD_BUFFER_POSH,W
0009B8 0100           01089         MOVLB 0
  00000000            01090 RAM_BANK = 0
0009BA B0D8           01091         BTFSC STATUS,0,0
                      01092         GO@TO NX@LB48
  000009C0            01093 F4_000284 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Sec_Num > (SD_FAT_Sec + SD_FAT1) Or SD_Buffer_Pos >= (SD_FAT_Buffer_Pos + (2 * SD_Cluster_Seq_Num)) Then
0009C0 0102           01094         MOVLB 2
  00000002            01095 RAM_BANK = 2
0009C2 5167           01096         MOVF SD_FAT1,W
0009C4 2579           01097         ADDWF SD_FAT_SEC,W
0009C6 6E08           01098         MOVWF PBP#VAR0,0
0009C8 5168           01099         MOVF SD_FAT1H,W
0009CA 217A           01100         ADDWFC SD_FAT_SECH,W
0009CC 6E09           01101         MOVWF PBP#VAR0H,0
0009CE 5169           01102         MOVF SD_FAT1HH,W
0009D0 217B           01103         ADDWFC SD_FAT_SECHH,W
0009D2 6E0A           01104         MOVWF PBP#VAR0HH,0
0009D4 516A           01105         MOVF SD_FAT1HHH,W
0009D6 217C           01106         ADDWFC SD_FAT_SECHHH,W
0009D8 6E0B           01107         MOVWF PBP#VAR0HHH,0
0009DA 5151           01108         MOVF SD_SEC_NUM,W
0009DC 5C08           01109         SUBWF PBP#VAR0,W,0
0009DE 5152           01110         MOVF SD_SEC_NUMH,W
0009E0 5809           01111         SUBWFB PBP#VAR0H,W,0
0009E2 5153           01112         MOVF SD_SEC_NUMHH,W
0009E4 580A           01113         SUBWFB PBP#VAR0HH,W,0
0009E6 5154           01114         MOVF SD_SEC_NUMHHH,W
0009E8 580B           01115         SUBWFB PBP#VAR0HHH,W,0
0009EA 5154           01116         MOVF SD_SEC_NUMHHH,W
0009EC 180B           01117         XORWF PBP#VAR0HHH,W,0
0009EE B0D8           01118         BTFSC STATUS,0,0
0009F0 0A80           01119         XORLW 128
0009F2 0100           01120         MOVLB 0
  00000000            01121 RAM_BANK = 0
0009F4 A8D8           01122         BTFSS STATUS,4,0
                      01123         GO@TO CP@LB9
0009FA 0E00           01124         MOVLW 0
0009FC D001           01125         BRA $ + 4
0009FE                01126 CP@LB9
0009FE 0E01           01127         MOVLW 1
000A00 6E2D           01128         MOVWF SP#P9,0
000A02 90D8           01129         BCF STATUS,0,0
000A04 0102           01130         MOVLB 2
  00000002            01131 RAM_BANK = 2
000A06 35D8           01132         RLCF SD_CLUSTER_SEQ_NUM,W
000A08 6E23           01133         MOVWF PP7,0
000A0A 35D9           01134         RLCF SD_CLUSTER_SEQ_NUMH,W
000A0C 6E24           01135         MOVWF PP7H,0
000A0E 5023           01136         MOVF PP7,W,0
000A10 257D           01137         ADDWF SD_FAT_BUFFER_POS,W
000A12 6E08           01138         MOVWF PBP#VAR0,0
000A14 5024           01139         MOVF PP7H,W,0
000A16 217E           01140         ADDWFC SD_FAT_BUFFER_POSH,W
000A18 6E09           01141         MOVWF PBP#VAR0H,0
000A1A C24F F012      01142         MOVFF SD_BUFFER_POSH,PP0H
000A1E C24E F011      01143         MOVFF SD_BUFFER_POS,PP0
000A22 C009 F016      01144         MOVFF PBP#VAR0H,PP1H
000A26 5008           01145         MOVF PBP#VAR0,W,0
                      01146         F@CALL T@GE
000A2C 102D           01147         IORWF SP#P9,W,0
000A2E 0100           01148         MOVLB 0
  00000000            01149 RAM_BANK = 0
000A30 B4D8           01150         BTFSC STATUS,2,0
                      01151         GO@TO BC@LL49
  00000A36            01152 F4_000285 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      01153         F@CALL SD_READ_FAT_ENTRY
  00000A38            01154 F4_000286 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_FAT_Entry = $0000 Then GoTo SD_Store_FAT_Position
000A38 0102           01155         MOVLB 2
  00000002            01156 RAM_BANK = 2
000A3A 5178           01157         MOVF SD_FAT_ENTRYH,W
000A3C 1177           01158         IORWF SD_FAT_ENTRY,W
000A3E 0100           01159         MOVLB 0
  00000000            01160 RAM_BANK = 0
000A40 A4D8           01161         BTFSS STATUS,2,0
                      01162         GO@TO BC@LL51
                      01163         F@JUMP SD_STORE_FAT_POSITION
000A4A                01164 BC@LL51
  00000A4A            01165 F4_000287 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000A4A                01166 BC@LL49
  00000A4A            01167 F4_000288 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Buffer_Pos
000A4A 0E02           01168         MOVLW 2
000A4C 0102           01169         MOVLB 2
  00000002            01170 RAM_BANK = 2
000A4E 274E           01171         ADDWF SD_BUFFER_POS,F
000A50 0100           01172         MOVLB 0
  00000000            01173 RAM_BANK = 0
000A52 A0D8           01174         BTFSS STATUS,0,0
                      01175         GO@TO FR@LB47
000A56 0102           01176         MOVLB 2
  00000002            01177 RAM_BANK = 2
000A58 2B4F           01178         INCF SD_BUFFER_POSH,F
000A5A 0100           01179         MOVLB 0
  00000000            01180 RAM_BANK = 0
000A5C A4D8           01181         BTFSS STATUS,2,0
                      01182         GO@TO FR@LB47
000A60                01183 NX@LB48
  00000A60            01184 F4_000289 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Sec_Num
000A60 0102           01185         MOVLB 2
  00000002            01186 RAM_BANK = 2
000A62 2B51           01187         INCF SD_SEC_NUM,F
000A64 0E00           01188         MOVLW 0
000A66 2352           01189         ADDWFC SD_SEC_NUMH,F
000A68 2353           01190         ADDWFC SD_SEC_NUMHH,F
000A6A 2354           01191         ADDWFC SD_SEC_NUMHHH,F
000A6C 0100           01192         MOVLB 0
  00000000            01193 RAM_BANK = 0
000A6E A0D8           01194         BTFSS STATUS,0,0
                      01195         GO@TO FR@LB45
000A72                01196 NX@LB46
  00000A72            01197 F4_000290 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
000A72 0E01           01198         MOVLW 1
000A74 0102           01199         MOVLB 2
  00000002            01200 RAM_BANK = 2
000A76 6F4B           01201         MOVWF SD_EXTENDED_RETURN
  00000A78            01202 F4_000291 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
000A78 0100           01203         MOVLB 0
  00000000            01204 RAM_BANK = 0
000A7A 0012           01205         RETURN 0
000A7C                01206 SD_STORE_FAT_POSITION
  00000A7C            01207 F4_000293 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Sec_Num - SD_FAT1
000A7C 0102           01208         MOVLB 2
  00000002            01209 RAM_BANK = 2
000A7E 5167           01210         MOVF SD_FAT1,W
000A80 5D51           01211         SUBWF SD_SEC_NUM,W
000A82 6F79           01212         MOVWF SD_FAT_SEC
000A84 5168           01213         MOVF SD_FAT1H,W
000A86 5952           01214         SUBWFB SD_SEC_NUMH,W
000A88 6F7A           01215         MOVWF SD_FAT_SECH
000A8A 5169           01216         MOVF SD_FAT1HH,W
000A8C 5953           01217         SUBWFB SD_SEC_NUMHH,W
000A8E 6F7B           01218         MOVWF SD_FAT_SECHH
000A90 516A           01219         MOVF SD_FAT1HHH,W
000A92 5954           01220         SUBWFB SD_SEC_NUMHHH,W
000A94 6F7C           01221         MOVWF SD_FAT_SECHHH
  00000A96            01222 F4_000294 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Buffer_Pos
000A96 C24F F27E      01223         MOVFF SD_BUFFER_POSH,SD_FAT_BUFFER_POSH
000A9A C24E F27D      01224         MOVFF SD_BUFFER_POS,SD_FAT_BUFFER_POS
  00000A9E            01225 F4_000295 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Sec * $100)
000A9E C279 F2C6      01226         MOVFF SD_FAT_SEC,SD_CLUSTER_NUMH
000AA2 6BC5           01227         CLRF SD_CLUSTER_NUM
  00000AA4            01228 F4_000296 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Buffer_Pos / 2) + SD_Cluster_Num
000AA4 90D8           01229         BCF STATUS,0,0
000AA6 317E           01230         RRCF SD_FAT_BUFFER_POSH,W
000AA8 6E24           01231         MOVWF PP7H,0
000AAA 317D           01232         RRCF SD_FAT_BUFFER_POS,W
000AAC 6E23           01233         MOVWF PP7,0
000AAE 5023           01234         MOVF PP7,W,0
000AB0 27C5           01235         ADDWF SD_CLUSTER_NUM,F
000AB2 5024           01236         MOVF PP7H,W,0
000AB4 23C6           01237         ADDWFC SD_CLUSTER_NUMH,F
  00000AB6            01238 F4_000297 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 0
000AB6 6BD9           01239         CLRF SD_CLUSTER_SEQ_NUMH
000AB8 6BD8           01240         CLRF SD_CLUSTER_SEQ_NUM
  00000ABA            01241 F4_000298 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Buffer_Pos = SD_FAT_Buffer_Pos To $1FF Step 2
000ABA C27E F24F      01242         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
000ABE C27D F24E      01243         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
000AC2                01244 FR@LB53
000AC2 0100           01245         MOVLB 0
  00000000            01246 RAM_BANK = 0
000AC4 0E02           01247         MOVLW 2
000AC6 0102           01248         MOVLB 2
  00000002            01249 RAM_BANK = 2
000AC8 5D4F           01250         SUBWF SD_BUFFER_POSH,W
000ACA 0100           01251         MOVLB 0
  00000000            01252 RAM_BANK = 0
000ACC B0D8           01253         BTFSC STATUS,0,0
                      01254         GO@TO NX@LB54
  00000AD2            01255 F4_000299 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      01256         F@CALL SD_READ_FAT_ENTRY
  00000AD4            01257 F4_000300 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_FAT_Entry = $0000 Then
000AD4 0102           01258         MOVLB 2
  00000002            01259 RAM_BANK = 2
000AD6 5178           01260         MOVF SD_FAT_ENTRYH,W
000AD8 1177           01261         IORWF SD_FAT_ENTRY,W
000ADA 0100           01262         MOVLB 0
  00000000            01263 RAM_BANK = 0
000ADC A4D8           01264         BTFSS STATUS,2,0
                      01265         GO@TO BC@LL55
  00000AE2            01266 F4_000301 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Seq_Num
000AE2 0102           01267         MOVLB 2
  00000002            01268 RAM_BANK = 2
000AE4 4BD8           01269         INFSNZ SD_CLUSTER_SEQ_NUM,F
000AE6 2BD9           01270         INCF SD_CLUSTER_SEQ_NUMH,F
000AE8 0100           01271         MOVLB 0
  00000000            01272 RAM_BANK = 0
                      01273         F@JUMP BC@LL56
000AEE                01274 BC@LL55
  00000AEE            01275 F4_000302 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  00000AEE            01276 F4_000303 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Store_Cluster_Seq
                      01277         F@JUMP SD_STORE_CLUSTER_SEQ
  00000AF2            01278 F4_000304 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000AF2                01279 BC@LL56
  00000AF2            01280 F4_000305 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Buffer_Pos
000AF2 0E02           01281         MOVLW 2
000AF4 0102           01282         MOVLB 2
  00000002            01283 RAM_BANK = 2
000AF6 274E           01284         ADDWF SD_BUFFER_POS,F
000AF8 0100           01285         MOVLB 0
  00000000            01286 RAM_BANK = 0
000AFA A0D8           01287         BTFSS STATUS,0,0
                      01288         GO@TO FR@LB53
000AFE 0102           01289         MOVLB 2
  00000002            01290 RAM_BANK = 2
000B00 2B4F           01291         INCF SD_BUFFER_POSH,F
000B02 0100           01292         MOVLB 0
  00000000            01293 RAM_BANK = 0
000B04 A4D8           01294         BTFSS STATUS,2,0
                      01295         GO@TO FR@LB53
000B08                01296 NX@LB54
000B08                01297 SD_STORE_CLUSTER_SEQ
  00000B08            01298 F4_000307 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Idx = 1
000B08 0102           01299         MOVLB 2
  00000002            01300 RAM_BANK = 2
000B0A 6BDB           01301         CLRF SD_CLUSTER_SEQ_IDXH
000B0C 0E01           01302         MOVLW 1
000B0E 6FDA           01303         MOVWF SD_CLUSTER_SEQ_IDX
  00000B10            01304 F4_000308 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
000B10 6B4B           01305         CLRF SD_EXTENDED_RETURN
  00000B12            01306 F4_000309 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
000B12 0100           01307         MOVLB 0
  00000000            01308 RAM_BANK = 0
000B14 0012           01309         RETURN 0
000B16                01310 SD_MODIFY_FILE_NAME
  00000B16            01311 F4_000312 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 0
000B16 0102           01312         MOVLB 2
  00000002            01313 RAM_BANK = 2
000B18 6BC4           01314         CLRF SD_NULL_F
  00000B1A            01315 F4_000313 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
000B1A 6B50           01316         CLRF SD_ROOT_DIR_FILE_POS
000B1C                01317 FR@LB58
000B1C 0100           01318         MOVLB 0
  00000000            01319 RAM_BANK = 0
000B1E 0E08           01320         MOVLW 8
000B20 0102           01321         MOVLB 2
  00000002            01322 RAM_BANK = 2
000B22 5D50           01323         SUBWF SD_ROOT_DIR_FILE_POS,W
000B24 0100           01324         MOVLB 0
  00000000            01325 RAM_BANK = 0
000B26 B0D8           01326         BTFSC STATUS,0,0
                      01327         GO@TO NX@LB59
  00000B2C            01328 F4_000314 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Null_F = 1 Or SD_File_Name[SD_Root_Dir_File_Pos] = 0 Then
000B2C 0E01           01329         MOVLW 1
000B2E 0102           01330         MOVLB 2
  00000002            01331 RAM_BANK = 2
000B30 5DC4           01332         SUBWF SD_NULL_F,W
000B32 0E01           01333         MOVLW 1
000B34 A4D8           01334         BTFSS STATUS,2,0
000B36 0E00           01335         MOVLW 0
000B38 6E2D           01336         MOVWF SP#P9,0
000B3A EE02 F091      01337         LFSR 0,SD_FILE_NAME
000B3E 5150           01338         MOVF SD_ROOT_DIR_FILE_POS,W
000B40 50EB           01339         MOVF PLUSW0,W,0
000B42 6E08           01340         MOVWF PBP#VAR0,0
000B44 0E01           01341         MOVLW 1
000B46 5208           01342         MOVF PBP#VAR0,F,0
000B48 A4D8           01343         BTFSS STATUS,2,0
000B4A 0E00           01344         MOVLW 0
000B4C 102D           01345         IORWF SP#P9,W,0
000B4E 0100           01346         MOVLB 0
  00000000            01347 RAM_BANK = 0
000B50 B4D8           01348         BTFSC STATUS,2,0
                      01349         GO@TO BC@LL60
  00000B56            01350 F4_000315 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Name[SD_Root_Dir_File_Pos] = $20
000B56 0E20           01351         MOVLW 32
000B58 6EF3           01352         MOVWF PRODL,0
000B5A EE02 F091      01353         LFSR 0,SD_FILE_NAME
000B5E 0102           01354         MOVLB 2
  00000002            01355 RAM_BANK = 2
000B60 5150           01356         MOVF SD_ROOT_DIR_FILE_POS,W
000B62 CFF3 FFEB      01357         MOVFF PRODL,PLUSW0
  00000B66            01358 F4_000316 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000B66 0E01           01359         MOVLW 1
000B68 6FC4           01360         MOVWF SD_NULL_F
  00000B6A            01361 F4_000317 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000B6A                01362 BC@LL60
000B6A 0100           01363         MOVLB 0
  00000000            01364 RAM_BANK = 0
  00000B6C            01365 F4_000318 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000B6C 0102           01366         MOVLB 2
  00000002            01367 RAM_BANK = 2
000B6E 2B50           01368         INCF SD_ROOT_DIR_FILE_POS,F
000B70 0100           01369         MOVLB 0
  00000000            01370 RAM_BANK = 0
000B72 A4D8           01371         BTFSS STATUS,2,0
                      01372         GO@TO FR@LB58
000B76                01373 NX@LB59
  00000B76            01374 F4_000319 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 0
000B76 0102           01375         MOVLB 2
  00000002            01376 RAM_BANK = 2
000B78 6BC4           01377         CLRF SD_NULL_F
  00000B7A            01378 F4_000320 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
000B7A 0E08           01379         MOVLW 8
000B7C 6F50           01380         MOVWF SD_ROOT_DIR_FILE_POS
000B7E                01381 FR@LB62
000B7E 0100           01382         MOVLB 0
  00000000            01383 RAM_BANK = 0
000B80 0E0B           01384         MOVLW 11
000B82 0102           01385         MOVLB 2
  00000002            01386 RAM_BANK = 2
000B84 5D50           01387         SUBWF SD_ROOT_DIR_FILE_POS,W
000B86 0100           01388         MOVLB 0
  00000000            01389 RAM_BANK = 0
000B88 B0D8           01390         BTFSC STATUS,0,0
                      01391         GO@TO NX@LB63
  00000B8E            01392 F4_000321 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Null_F = 1 Or SD_File_Ext[SD_Root_Dir_File_Pos - $08] = 0 Then
000B8E 0E01           01393         MOVLW 1
000B90 0102           01394         MOVLB 2
  00000002            01395 RAM_BANK = 2
000B92 5DC4           01396         SUBWF SD_NULL_F,W
000B94 0E01           01397         MOVLW 1
000B96 A4D8           01398         BTFSS STATUS,2,0
000B98 0E00           01399         MOVLW 0
000B9A 6E2D           01400         MOVWF SP#P9,0
000B9C 0E08           01401         MOVLW 8
000B9E 5D50           01402         SUBWF SD_ROOT_DIR_FILE_POS,W
000BA0 EE02 F09A      01403         LFSR 0,SD_FILE_EXT
000BA4 50EB           01404         MOVF PLUSW0,W,0
000BA6 6E08           01405         MOVWF PBP#VAR0,0
000BA8 0E01           01406         MOVLW 1
000BAA 5208           01407         MOVF PBP#VAR0,F,0
000BAC A4D8           01408         BTFSS STATUS,2,0
000BAE 0E00           01409         MOVLW 0
000BB0 102D           01410         IORWF SP#P9,W,0
000BB2 0100           01411         MOVLB 0
  00000000            01412 RAM_BANK = 0
000BB4 B4D8           01413         BTFSC STATUS,2,0
                      01414         GO@TO BC@LL64
  00000BBA            01415 F4_000322 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Ext[SD_Root_Dir_File_Pos - $08] = $20
000BBA 0E08           01416         MOVLW 8
000BBC 0102           01417         MOVLB 2
  00000002            01418 RAM_BANK = 2
000BBE 5D50           01419         SUBWF SD_ROOT_DIR_FILE_POS,W
000BC0 0F9A           01420         ADDLW SD_FILE_EXT
000BC2 6EE9           01421         MOVWF FSR0L,0
000BC4 0E02           01422         MOVLW SD_FILE_EXT >> 8
000BC6 6AEA           01423         CLRF FSR0H,0
000BC8 22EA           01424         ADDWFC FSR0H,F,0
000BCA 0E20           01425         MOVLW 32
000BCC 6EEF           01426         MOVWF INDF0,0
  00000BCE            01427 F4_000323 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000BCE 0E01           01428         MOVLW 1
000BD0 6FC4           01429         MOVWF SD_NULL_F
  00000BD2            01430 F4_000324 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000BD2                01431 BC@LL64
000BD2 0100           01432         MOVLB 0
  00000000            01433 RAM_BANK = 0
  00000BD4            01434 F4_000325 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000BD4 0102           01435         MOVLB 2
  00000002            01436 RAM_BANK = 2
000BD6 2B50           01437         INCF SD_ROOT_DIR_FILE_POS,F
000BD8 0100           01438         MOVLB 0
  00000000            01439 RAM_BANK = 0
000BDA A4D8           01440         BTFSS STATUS,2,0
                      01441         GO@TO FR@LB62
000BDE                01442 NX@LB63
  00000BDE            01443 F4_000326 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
000BDE 0012           01444         RETURN 0
000BE0                01445 SD_FIND_ROOT_DIR_ENTRY
  00000BE0            01446 F4_000329 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Modify_File_Name
                      01447         F@CALL SD_MODIFY_FILE_NAME
  00000BE2            01448 F4_000330 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Root_Entries = 0
000BE2 0102           01449         MOVLB 2
  00000002            01450 RAM_BANK = 2
000BE4 6B62           01451         CLRF SD_NUM_OF_ROOT_ENTRIESH
000BE6 6B61           01452         CLRF SD_NUM_OF_ROOT_ENTRIES
  00000BE8            01453 F4_000331 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Dword = SD_Root_Dir + SD_Secs_in_Root - 1
000BE8 5163           01454         MOVF SD_SECS_IN_ROOT,W
000BEA 256F           01455         ADDWF SD_ROOT_DIR,W
000BEC 6E23           01456         MOVWF PP7,0
000BEE 5164           01457         MOVF SD_SECS_IN_ROOTH,W
000BF0 2170           01458         ADDWFC SD_ROOT_DIRH,W
000BF2 6E24           01459         MOVWF PP7H,0
000BF4 0E00           01460         MOVLW 0
000BF6 2171           01461         ADDWFC SD_ROOT_DIRHH,W
000BF8 6E25           01462         MOVWF PP7HH,0
000BFA 0E00           01463         MOVLW 0
000BFC 2172           01464         ADDWFC SD_ROOT_DIRHHH,W
000BFE 6E26           01465         MOVWF PP7HHH,0
000C00 0423           01466         DECF PP7,W,0
000C02 6FD4           01467         MOVWF SD_TEMP_DWORD
000C04 0E00           01468         MOVLW 0
000C06 5824           01469         SUBWFB PP7H,W,0
000C08 6FD5           01470         MOVWF SD_TEMP_DWORDH
000C0A 0E00           01471         MOVLW 0
000C0C 5825           01472         SUBWFB PP7HH,W,0
000C0E 6FD6           01473         MOVWF SD_TEMP_DWORDHH
000C10 0E00           01474         MOVLW 0
000C12 5826           01475         SUBWFB PP7HHH,W,0
000C14 6FD7           01476         MOVWF SD_TEMP_DWORDHHH
  00000C16            01477 F4_000332 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Sec_Num = SD_Root_Dir To SD_Temp_Dword
000C16 C272 F254      01478         MOVFF SD_ROOT_DIRHHH,SD_SEC_NUMHHH
000C1A C271 F253      01479         MOVFF SD_ROOT_DIRHH,SD_SEC_NUMHH
000C1E C270 F252      01480         MOVFF SD_ROOT_DIRH,SD_SEC_NUMH
000C22 C26F F251      01481         MOVFF SD_ROOT_DIR,SD_SEC_NUM
000C26                01482 FR@LB66
000C26 0100           01483         MOVLB 0
  00000000            01484 RAM_BANK = 0
000C28 0102           01485         MOVLB 2
  00000002            01486 RAM_BANK = 2
000C2A 5151           01487         MOVF SD_SEC_NUM,W
000C2C 5DD4           01488         SUBWF SD_TEMP_DWORD,W
000C2E 5152           01489         MOVF SD_SEC_NUMH,W
000C30 59D5           01490         SUBWFB SD_TEMP_DWORDH,W
000C32 5153           01491         MOVF SD_SEC_NUMHH,W
000C34 59D6           01492         SUBWFB SD_TEMP_DWORDHH,W
000C36 5154           01493         MOVF SD_SEC_NUMHHH,W
000C38 59D7           01494         SUBWFB SD_TEMP_DWORDHHH,W
000C3A 5154           01495         MOVF SD_SEC_NUMHHH,W
000C3C 19D7           01496         XORWF SD_TEMP_DWORDHHH,W
000C3E B0D8           01497         BTFSC STATUS,0,0
000C40 0A80           01498         XORLW 128
000C42 0100           01499         MOVLB 0
  00000000            01500 RAM_BANK = 0
000C44 A8D8           01501         BTFSS STATUS,4,0
                      01502         GO@TO NX@LB67
  00000C4A            01503 F4_000333 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sec_Num
000C4A C254 F037      01504         MOVFF SD_SEC_NUMHHH,SD_SECTOR_NUMHHH
000C4E C253 F036      01505         MOVFF SD_SEC_NUMHH,SD_SECTOR_NUMHH
000C52 C252 F035      01506         MOVFF SD_SEC_NUMH,SD_SECTOR_NUMH
000C56 C251 F034      01507         MOVFF SD_SEC_NUM,SD_SECTOR_NUM
  00000C5A            01508 F4_000334 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
000C5A 0E01           01509         MOVLW 1
000C5C 0102           01510         MOVLB 2
  00000002            01511 RAM_BANK = 2
000C5E 6F4A           01512         MOVWF SD_RW_OPTION
  00000C60            01513 F4_000335 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
000C60 0100           01514         MOVLB 0
  00000000            01515 RAM_BANK = 0
                      01516         F@CALL SD_SECTOR_SUB
  00000C66            01517 F4_000337 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Buffer_Pos = $000 To $1FF Step 32
000C66 0102           01518         MOVLB 2
  00000002            01519 RAM_BANK = 2
000C68 6B4F           01520         CLRF SD_BUFFER_POSH
000C6A 6B4E           01521         CLRF SD_BUFFER_POS
000C6C                01522 FR@LB68
000C6C 0100           01523         MOVLB 0
  00000000            01524 RAM_BANK = 0
000C6E 0E02           01525         MOVLW 2
000C70 0102           01526         MOVLB 2
  00000002            01527 RAM_BANK = 2
000C72 5D4F           01528         SUBWF SD_BUFFER_POSH,W
000C74 0100           01529         MOVLB 0
  00000000            01530 RAM_BANK = 0
000C76 B0D8           01531         BTFSC STATUS,0,0
                      01532         GO@TO NX@LB69
  00000C7C            01533 F4_000338 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = 0 To 31
000C7C 0102           01534         MOVLB 2
  00000002            01535 RAM_BANK = 2
000C7E 6B50           01536         CLRF SD_ROOT_DIR_FILE_POS
000C80                01537 FR@LB70
000C80 0100           01538         MOVLB 0
  00000000            01539 RAM_BANK = 0
000C82 0E20           01540         MOVLW 32
000C84 0102           01541         MOVLB 2
  00000002            01542 RAM_BANK = 2
000C86 5D50           01543         SUBWF SD_ROOT_DIR_FILE_POS,W
000C88 0100           01544         MOVLB 0
  00000000            01545 RAM_BANK = 0
000C8A B0D8           01546         BTFSC STATUS,0,0
                      01547         GO@TO NX@LB71
  00000C90            01548 F4_000339 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Temp = SD_Buffer_Pos + SD_Root_Dir_File_Pos
000C90 0102           01549         MOVLB 2
  00000002            01550 RAM_BANK = 2
000C92 5150           01551         MOVF SD_ROOT_DIR_FILE_POS,W
000C94 254E           01552         ADDWF SD_BUFFER_POS,W
000C96 6FD2           01553         MOVWF SD_TEMP
000C98 0E00           01554         MOVLW 0
000C9A 214F           01555         ADDWFC SD_BUFFER_POSH,W
000C9C 6FD3           01556         MOVWF SD_TEMPH
  00000C9E            01557 F4_000340 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Temp > $0FF Then
000C9E 0E01           01558         MOVLW 1
000CA0 5DD3           01559         SUBWF SD_TEMPH,W
000CA2 0100           01560         MOVLB 0
  00000000            01561 RAM_BANK = 0
000CA4 A0D8           01562         BTFSS STATUS,0,0
                      01563         GO@TO BC@LL72
  00000CAA            01564 F4_000341 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_File[SD_Root_Dir_File_Pos] = SD_Buffer1[SD_Temp - $100]
000CAA 0102           01565         MOVLB 2
  00000002            01566 RAM_BANK = 2
000CAC 51D2           01567         MOVF SD_TEMP,W
000CAE EE01 F041      01568         LFSR 0,SD_BUFFER1
000CB2 26E9           01569         ADDWF FSR0L,F,0
000CB4 0E00           01570         MOVLW 0
000CB6 22EA           01571         ADDWFC FSR0H,F,0
000CB8 CFEF F008      01572         MOVFF INDF0,PBP#VAR0
000CBC EE02 F09E      01573         LFSR 0,SD_ROOT_DIR_FILE
000CC0 5150           01574         MOVF SD_ROOT_DIR_FILE_POS,W
000CC2 C008 FFEB      01575         MOVFF PBP#VAR0,PLUSW0
000CC6 0100           01576         MOVLB 0
  00000000            01577 RAM_BANK = 0
                      01578         F@JUMP BC@LL73
000CCC                01579 BC@LL72
  00000CCC            01580 F4_000342 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  00000CCC            01581 F4_000343 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_File[SD_Root_Dir_File_Pos] = SD_Buffer0[SD_Temp]
000CCC EE00 F041      01582         LFSR 0,SD_BUFFER0
000CD0 0102           01583         MOVLB 2
  00000002            01584 RAM_BANK = 2
000CD2 51D2           01585         MOVF SD_TEMP,W
000CD4 26E9           01586         ADDWF FSR0L,F,0
000CD6 0E00           01587         MOVLW 0
000CD8 22EA           01588         ADDWFC FSR0H,F,0
000CDA CFEF F008      01589         MOVFF INDF0,PBP#VAR0
000CDE EE02 F09E      01590         LFSR 0,SD_ROOT_DIR_FILE
000CE2 5150           01591         MOVF SD_ROOT_DIR_FILE_POS,W
000CE4 C008 FFEB      01592         MOVFF PBP#VAR0,PLUSW0
  00000CE8            01593 F4_000344 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000CE8                01594 BC@LL73
000CE8 0100           01595         MOVLB 0
  00000000            01596 RAM_BANK = 0
  00000CEA            01597 F4_000345 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000CEA 0102           01598         MOVLB 2
  00000002            01599 RAM_BANK = 2
000CEC 2B50           01600         INCF SD_ROOT_DIR_FILE_POS,F
000CEE 0100           01601         MOVLB 0
  00000000            01602 RAM_BANK = 0
000CF0 A4D8           01603         BTFSS STATUS,2,0
                      01604         GO@TO FR@LB70
000CF4                01605 NX@LB71
  00000CF4            01606 F4_000346 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Select SD_Find_Root_Dir_Entry_F
  00000CF4            01607 F4_000347 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Case 0
000CF4 0102           01608         MOVLB 2
  00000002            01609 RAM_BANK = 2
000CF6 53E0           01610         MOVF SD_FIND_ROOT_DIR_ENTRY_F,F
000CF8 0100           01611         MOVLB 0
  00000000            01612 RAM_BANK = 0
000CFA A4D8           01613         BTFSS STATUS,2,0
                      01614         GO@TO BC@LL75
  00000D00            01615 F4_000348 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[0] = $00 Or SD_Root_Dir_File[0] = $E5 Then
000D00 0102           01616         MOVLB 2
  00000002            01617 RAM_BANK = 2
000D02 519E           01618         MOVF SD_ROOT_DIR_FILE#0,W
000D04 6E08           01619         MOVWF PBP#VAR0,0
000D06 0E01           01620         MOVLW 1
000D08 5208           01621         MOVF PBP#VAR0,F,0
000D0A A4D8           01622         BTFSS STATUS,2,0
000D0C 0E00           01623         MOVLW 0
000D0E 6E2D           01624         MOVWF SP#P9,0
000D10 519E           01625         MOVF SD_ROOT_DIR_FILE#0,W
000D12 6E08           01626         MOVWF PBP#VAR0,0
000D14 0EE5           01627         MOVLW 229
000D16 5C08           01628         SUBWF PBP#VAR0,W,0
000D18 0E01           01629         MOVLW 1
000D1A A4D8           01630         BTFSS STATUS,2,0
000D1C 0E00           01631         MOVLW 0
000D1E 102D           01632         IORWF SP#P9,W,0
000D20 0100           01633         MOVLB 0
  00000000            01634 RAM_BANK = 0
000D22 B4D8           01635         BTFSC STATUS,2,0
                      01636         GO@TO BC@LL78
  00000D28            01637 F4_000349 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Store_Root_Direct_Position
                      01638         F@JUMP SD_STORE_ROOT_DIRECT_POSITION
  00000D2C            01639 F4_000350 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000D2C                01640 BC@LL78
                      01641         F@JUMP BC@LL74
000D30                01642 BC@LL75
  00000D30            01643 F4_000351 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Case 1
000D30 0E01           01644         MOVLW 1
000D32 0102           01645         MOVLB 2
  00000002            01646 RAM_BANK = 2
000D34 5DE0           01647         SUBWF SD_FIND_ROOT_DIR_ENTRY_F,W
000D36 0100           01648         MOVLB 0
  00000000            01649 RAM_BANK = 0
000D38 A4D8           01650         BTFSS STATUS,2,0
                      01651         GO@TO BC@LL80
  00000D3E            01652 F4_000352 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 0
000D3E 0102           01653         MOVLB 2
  00000002            01654 RAM_BANK = 2
000D40 6BC4           01655         CLRF SD_NULL_F
  00000D42            01656 F4_000353 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
000D42 6B50           01657         CLRF SD_ROOT_DIR_FILE_POS
000D44                01658 FR@LB82
000D44 0100           01659         MOVLB 0
  00000000            01660 RAM_BANK = 0
000D46 0E08           01661         MOVLW 8
000D48 0102           01662         MOVLB 2
  00000002            01663 RAM_BANK = 2
000D4A 5D50           01664         SUBWF SD_ROOT_DIR_FILE_POS,W
000D4C 0100           01665         MOVLB 0
  00000000            01666 RAM_BANK = 0
000D4E B0D8           01667         BTFSC STATUS,0,0
                      01668         GO@TO NX@LB83
  00000D54            01669 F4_000354 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[SD_Root_Dir_File_Pos] <> SD_File_Name[SD_Root_Dir_File_Pos] Then
000D54 EE02 F09E      01670         LFSR 0,SD_ROOT_DIR_FILE
000D58 0102           01671         MOVLB 2
  00000002            01672 RAM_BANK = 2
000D5A 5150           01673         MOVF SD_ROOT_DIR_FILE_POS,W
000D5C 50EB           01674         MOVF PLUSW0,W,0
000D5E 6E08           01675         MOVWF PBP#VAR0,0
000D60 EE02 F091      01676         LFSR 0,SD_FILE_NAME
000D64 5150           01677         MOVF SD_ROOT_DIR_FILE_POS,W
000D66 50EB           01678         MOVF PLUSW0,W,0
000D68 6E0C           01679         MOVWF PBP#VAR1,0
000D6A 5008           01680         MOVF PBP#VAR0,W,0
000D6C 5C0C           01681         SUBWF PBP#VAR1,W,0
000D6E 0100           01682         MOVLB 0
  00000000            01683 RAM_BANK = 0
000D70 B4D8           01684         BTFSC STATUS,2,0
                      01685         GO@TO BC@LL84
  00000D76            01686 F4_000355 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000D76 0E01           01687         MOVLW 1
000D78 0102           01688         MOVLB 2
  00000002            01689 RAM_BANK = 2
000D7A 6FC4           01690         MOVWF SD_NULL_F
  00000D7C            01691 F4_000356 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Break
000D7C 0100           01692         MOVLB 0
  00000000            01693 RAM_BANK = 0
                      01694         F@JUMP NX@LB83
  00000D82            01695 F4_000357 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000D82                01696 BC@LL84
  00000D82            01697 F4_000358 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000D82 0102           01698         MOVLB 2
  00000002            01699 RAM_BANK = 2
000D84 2B50           01700         INCF SD_ROOT_DIR_FILE_POS,F
000D86 0100           01701         MOVLB 0
  00000000            01702 RAM_BANK = 0
000D88 A4D8           01703         BTFSS STATUS,2,0
                      01704         GO@TO FR@LB82
000D8C                01705 NX@LB83
  00000D8C            01706 F4_000359 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
000D8C 0E08           01707         MOVLW 8
000D8E 0102           01708         MOVLB 2
  00000002            01709 RAM_BANK = 2
000D90 6F50           01710         MOVWF SD_ROOT_DIR_FILE_POS
000D92                01711 FR@LB86
000D92 0100           01712         MOVLB 0
  00000000            01713 RAM_BANK = 0
000D94 0E0B           01714         MOVLW 11
000D96 0102           01715         MOVLB 2
  00000002            01716 RAM_BANK = 2
000D98 5D50           01717         SUBWF SD_ROOT_DIR_FILE_POS,W
000D9A 0100           01718         MOVLB 0
  00000000            01719 RAM_BANK = 0
000D9C B0D8           01720         BTFSC STATUS,0,0
                      01721         GO@TO NX@LB87
  00000DA2            01722 F4_000360 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[SD_Root_Dir_File_Pos] <> SD_File_Ext[SD_Root_Dir_File_Pos - $08] Then
000DA2 EE02 F09E      01723         LFSR 0,SD_ROOT_DIR_FILE
000DA6 0102           01724         MOVLB 2
  00000002            01725 RAM_BANK = 2
000DA8 5150           01726         MOVF SD_ROOT_DIR_FILE_POS,W
000DAA 50EB           01727         MOVF PLUSW0,W,0
000DAC 6E08           01728         MOVWF PBP#VAR0,0
000DAE 0E08           01729         MOVLW 8
000DB0 5D50           01730         SUBWF SD_ROOT_DIR_FILE_POS,W
000DB2 EE02 F09A      01731         LFSR 0,SD_FILE_EXT
000DB6 50EB           01732         MOVF PLUSW0,W,0
000DB8 6E0C           01733         MOVWF PBP#VAR1,0
000DBA 5008           01734         MOVF PBP#VAR0,W,0
000DBC 5C0C           01735         SUBWF PBP#VAR1,W,0
000DBE 0100           01736         MOVLB 0
  00000000            01737 RAM_BANK = 0
000DC0 B4D8           01738         BTFSC STATUS,2,0
                      01739         GO@TO BC@LL88
  00000DC6            01740 F4_000361 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000DC6 0E01           01741         MOVLW 1
000DC8 0102           01742         MOVLB 2
  00000002            01743 RAM_BANK = 2
000DCA 6FC4           01744         MOVWF SD_NULL_F
  00000DCC            01745 F4_000362 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Break
000DCC 0100           01746         MOVLB 0
  00000000            01747 RAM_BANK = 0
                      01748         F@JUMP NX@LB87
  00000DD2            01749 F4_000363 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000DD2                01750 BC@LL88
  00000DD2            01751 F4_000364 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000DD2 0102           01752         MOVLB 2
  00000002            01753 RAM_BANK = 2
000DD4 2B50           01754         INCF SD_ROOT_DIR_FILE_POS,F
000DD6 0100           01755         MOVLB 0
  00000000            01756 RAM_BANK = 0
000DD8 A4D8           01757         BTFSS STATUS,2,0
                      01758         GO@TO FR@LB86
000DDC                01759 NX@LB87
  00000DDC            01760 F4_000365 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Null_F = 0 Then GoTo SD_Store_Root_Direct_Position
000DDC 0102           01761         MOVLB 2
  00000002            01762 RAM_BANK = 2
000DDE 53C4           01763         MOVF SD_NULL_F,F
000DE0 0100           01764         MOVLB 0
  00000000            01765 RAM_BANK = 0
000DE2 A4D8           01766         BTFSS STATUS,2,0
                      01767         GO@TO BC@LL90
                      01768         F@JUMP SD_STORE_ROOT_DIRECT_POSITION
000DEC                01769 BC@LL90
                      01770         F@JUMP BC@LL74
000DF0                01771 BC@LL80
  00000DF0            01772 F4_000366 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Case 2
000DF0 0E02           01773         MOVLW 2
000DF2 0102           01774         MOVLB 2
  00000002            01775 RAM_BANK = 2
000DF4 5DE0           01776         SUBWF SD_FIND_ROOT_DIR_ENTRY_F,W
000DF6 0100           01777         MOVLB 0
  00000000            01778 RAM_BANK = 0
000DF8 A4D8           01779         BTFSS STATUS,2,0
                      01780         GO@TO BC@LL92
  00000DFE            01781 F4_000367 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$0B] | %11110000 <> $FF Then
000DFE 0102           01782         MOVLB 2
  00000002            01783 RAM_BANK = 2
000E00 51A9           01784         MOVF SD_ROOT_DIR_FILE#11,W
000E02 6E0C           01785         MOVWF PBP#VAR1,0
000E04 0EF0           01786         MOVLW 240
000E06 100C           01787         IORWF PBP#VAR1,W,0
000E08 6E08           01788         MOVWF PBP#VAR0,0
000E0A 0E00           01789         MOVLW 0
000E0C 6E09           01790         MOVWF PBP#VAR0H,0
000E0E 2808           01791         INCF PBP#VAR0,W,0
000E10 1009           01792         IORWF PBP#VAR0H,W,0
000E12 0100           01793         MOVLB 0
  00000000            01794 RAM_BANK = 0
000E14 B4D8           01795         BTFSC STATUS,2,0
                      01796         GO@TO BC@LL94
  00000E1A            01797 F4_000368 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$00] <> $00 Then
000E1A 0102           01798         MOVLB 2
  00000002            01799 RAM_BANK = 2
000E1C 519E           01800         MOVF SD_ROOT_DIR_FILE#0,W
000E1E 6E08           01801         MOVWF PBP#VAR0,0
000E20 5208           01802         MOVF PBP#VAR0,F,0
000E22 0100           01803         MOVLB 0
  00000000            01804 RAM_BANK = 0
000E24 B4D8           01805         BTFSC STATUS,2,0
                      01806         GO@TO BC@LL96
  00000E2A            01807 F4_000369 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$00] <> $E5 Then
000E2A 0102           01808         MOVLB 2
  00000002            01809 RAM_BANK = 2
000E2C 519E           01810         MOVF SD_ROOT_DIR_FILE#0,W
000E2E 6E08           01811         MOVWF PBP#VAR0,0
000E30 0EE5           01812         MOVLW 229
000E32 5C08           01813         SUBWF PBP#VAR0,W,0
000E34 0100           01814         MOVLB 0
  00000000            01815 RAM_BANK = 0
000E36 B4D8           01816         BTFSC STATUS,2,0
                      01817         GO@TO BC@LL98
  00000E3C            01818 F4_000370 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$0B] & %00011110 = 0 Then
000E3C 0102           01819         MOVLB 2
  00000002            01820 RAM_BANK = 2
000E3E 51A9           01821         MOVF SD_ROOT_DIR_FILE#11,W
000E40 6E0C           01822         MOVWF PBP#VAR1,0
000E42 0E1E           01823         MOVLW 30
000E44 140C           01824         ANDWF PBP#VAR1,W,0
000E46 6A09           01825         CLRF PBP#VAR0H,0
000E48 6E08           01826         MOVWF PBP#VAR0,0
000E4A 5009           01827         MOVF PBP#VAR0H,W,0
000E4C 1008           01828         IORWF PBP#VAR0,W,0
000E4E 0100           01829         MOVLB 0
  00000000            01830 RAM_BANK = 0
000E50 A4D8           01831         BTFSS STATUS,2,0
                      01832         GO@TO BC@LL100
  00000E56            01833 F4_000371 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Num_of_Root_Entries
000E56 0102           01834         MOVLB 2
  00000002            01835 RAM_BANK = 2
000E58 4B61           01836         INFSNZ SD_NUM_OF_ROOT_ENTRIES,F
000E5A 2B62           01837         INCF SD_NUM_OF_ROOT_ENTRIESH,F
  00000E5C            01838 F4_000372 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Num_of_Root_Entries = SD_File_Num Then
000E5C 51E7           01839         MOVF SD_FILE_NUMH,W
000E5E 5D62           01840         SUBWF SD_NUM_OF_ROOT_ENTRIESH,W
000E60 0100           01841         MOVLB 0
  00000000            01842 RAM_BANK = 0
000E62 A4D8           01843         BTFSS STATUS,2,0
                      01844         GO@TO BC@LL102
000E68 0102           01845         MOVLB 2
  00000002            01846 RAM_BANK = 2
000E6A 51E6           01847         MOVF SD_FILE_NUM,W
000E6C 5D61           01848         SUBWF SD_NUM_OF_ROOT_ENTRIES,W
000E6E 0100           01849         MOVLB 0
  00000000            01850 RAM_BANK = 0
000E70 A4D8           01851         BTFSS STATUS,2,0
                      01852         GO@TO BC@LL102
  00000E76            01853 F4_000373 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
000E76 0102           01854         MOVLB 2
  00000002            01855 RAM_BANK = 2
000E78 6B50           01856         CLRF SD_ROOT_DIR_FILE_POS
000E7A                01857 FR@LB104
000E7A 0100           01858         MOVLB 0
  00000000            01859 RAM_BANK = 0
000E7C 0E08           01860         MOVLW 8
000E7E 0102           01861         MOVLB 2
  00000002            01862 RAM_BANK = 2
000E80 5D50           01863         SUBWF SD_ROOT_DIR_FILE_POS,W
000E82 0100           01864         MOVLB 0
  00000000            01865 RAM_BANK = 0
000E84 B0D8           01866         BTFSC STATUS,0,0
                      01867         GO@TO NX@LB105
  00000E8A            01868 F4_000374 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Name[SD_Root_Dir_File_Pos] = SD_Root_Dir_File[SD_Root_Dir_File_Pos]
000E8A EE02 F09E      01869         LFSR 0,SD_ROOT_DIR_FILE
000E8E 0102           01870         MOVLB 2
  00000002            01871 RAM_BANK = 2
000E90 5150           01872         MOVF SD_ROOT_DIR_FILE_POS,W
000E92 CFEB F008      01873         MOVFF PLUSW0,PBP#VAR0
000E96 EE02 F091      01874         LFSR 0,SD_FILE_NAME
000E9A 5150           01875         MOVF SD_ROOT_DIR_FILE_POS,W
000E9C C008 FFEB      01876         MOVFF PBP#VAR0,PLUSW0
  00000EA0            01877 F4_000375 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000EA0 2B50           01878         INCF SD_ROOT_DIR_FILE_POS,F
000EA2 0100           01879         MOVLB 0
  00000000            01880 RAM_BANK = 0
000EA4 A4D8           01881         BTFSS STATUS,2,0
                      01882         GO@TO FR@LB104
000EA8                01883 NX@LB105
  00000EA8            01884 F4_000376 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
000EA8 0E08           01885         MOVLW 8
000EAA 0102           01886         MOVLB 2
  00000002            01887 RAM_BANK = 2
000EAC 6F50           01888         MOVWF SD_ROOT_DIR_FILE_POS
000EAE                01889 FR@LB106
000EAE 0100           01890         MOVLB 0
  00000000            01891 RAM_BANK = 0
000EB0 0E0B           01892         MOVLW 11
000EB2 0102           01893         MOVLB 2
  00000002            01894 RAM_BANK = 2
000EB4 5D50           01895         SUBWF SD_ROOT_DIR_FILE_POS,W
000EB6 0100           01896         MOVLB 0
  00000000            01897 RAM_BANK = 0
000EB8 B0D8           01898         BTFSC STATUS,0,0
                      01899         GO@TO NX@LB107
  00000EBE            01900 F4_000377 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Ext[SD_Root_Dir_File_Pos - $08] = SD_Root_Dir_File[SD_Root_Dir_File_Pos]
000EBE 0E08           01901         MOVLW 8
000EC0 0102           01902         MOVLB 2
  00000002            01903 RAM_BANK = 2
000EC2 5D50           01904         SUBWF SD_ROOT_DIR_FILE_POS,W
000EC4 6E08           01905         MOVWF PBP#VAR0,0
000EC6 EE02 F09E      01906         LFSR 0,SD_ROOT_DIR_FILE
000ECA 5150           01907         MOVF SD_ROOT_DIR_FILE_POS,W
000ECC CFEB F00C      01908         MOVFF PLUSW0,PBP#VAR1
000ED0 EE02 F09A      01909         LFSR 0,SD_FILE_EXT
000ED4 5008           01910         MOVF PBP#VAR0,W,0
000ED6 C00C FFEB      01911         MOVFF PBP#VAR1,PLUSW0
  00000EDA            01912 F4_000378 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000EDA 2B50           01913         INCF SD_ROOT_DIR_FILE_POS,F
000EDC 0100           01914         MOVLB 0
  00000000            01915 RAM_BANK = 0
000EDE A4D8           01916         BTFSS STATUS,2,0
                      01917         GO@TO FR@LB106
000EE2                01918 NX@LB107
  00000EE2            01919 F4_000379 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Store_Root_Direct_Position
                      01920         F@JUMP SD_STORE_ROOT_DIRECT_POSITION
  00000EE6            01921 F4_000380 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000EE6                01922 BC@LL102
  00000EE6            01923 F4_000381 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000EE6                01924 BC@LL100
  00000EE6            01925 F4_000382 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000EE6                01926 BC@LL98
  00000EE6            01927 F4_000383 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000EE6                01928 BC@LL96
  00000EE6            01929 F4_000384 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000EE6                01930 BC@LL94
  00000EE6            01931 F4_000385 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndSelect
000EE6                01932 BC@LL92
000EE6                01933 BC@LL74
  00000EE6            01934 F4_000386 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Buffer_Pos
000EE6 0E20           01935         MOVLW 32
000EE8 0102           01936         MOVLB 2
  00000002            01937 RAM_BANK = 2
000EEA 274E           01938         ADDWF SD_BUFFER_POS,F
000EEC 0100           01939         MOVLB 0
  00000000            01940 RAM_BANK = 0
000EEE A0D8           01941         BTFSS STATUS,0,0
                      01942         GO@TO FR@LB68
000EF2 0102           01943         MOVLB 2
  00000002            01944 RAM_BANK = 2
000EF4 2B4F           01945         INCF SD_BUFFER_POSH,F
000EF6 0100           01946         MOVLB 0
  00000000            01947 RAM_BANK = 0
000EF8 A4D8           01948         BTFSS STATUS,2,0
                      01949         GO@TO FR@LB68
000EFC                01950 NX@LB69
  00000EFC            01951 F4_000387 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Sec_Num
000EFC 0102           01952         MOVLB 2
  00000002            01953 RAM_BANK = 2
000EFE 2B51           01954         INCF SD_SEC_NUM,F
000F00 0E00           01955         MOVLW 0
000F02 2352           01956         ADDWFC SD_SEC_NUMH,F
000F04 2353           01957         ADDWFC SD_SEC_NUMHH,F
000F06 2354           01958         ADDWFC SD_SEC_NUMHHH,F
000F08 0100           01959         MOVLB 0
  00000000            01960 RAM_BANK = 0
000F0A A0D8           01961         BTFSS STATUS,0,0
                      01962         GO@TO FR@LB66
000F0E                01963 NX@LB67
  00000F0E            01964 F4_000388 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return_Root_Dir = 1
000F0E 0E01           01965         MOVLW 1
000F10 0102           01966         MOVLB 2
  00000002            01967 RAM_BANK = 2
000F12 6F4C           01968         MOVWF SD_EXTENDED_RETURN_ROOT_DIR
  00000F14            01969 F4_000389 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
000F14 0100           01970         MOVLB 0
  00000000            01971 RAM_BANK = 0
000F16 0012           01972         RETURN 0
000F18                01973 SD_STORE_ROOT_DIRECT_POSITION
  00000F18            01974 F4_000391 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_Sec = SD_Sec_Num - SD_Root_Dir
000F18 0102           01975         MOVLB 2
  00000002            01976 RAM_BANK = 2
000F1A 516F           01977         MOVF SD_ROOT_DIR,W
000F1C 5D51           01978         SUBWF SD_SEC_NUM,W
000F1E 6F85           01979         MOVWF SD_ROOT_DIR_SEC
000F20 5170           01980         MOVF SD_ROOT_DIRH,W
000F22 5952           01981         SUBWFB SD_SEC_NUMH,W
000F24 6F86           01982         MOVWF SD_ROOT_DIR_SECH
000F26 5171           01983         MOVF SD_ROOT_DIRHH,W
000F28 5953           01984         SUBWFB SD_SEC_NUMHH,W
000F2A 6F87           01985         MOVWF SD_ROOT_DIR_SECHH
000F2C 5172           01986         MOVF SD_ROOT_DIRHHH,W
000F2E 5954           01987         SUBWFB SD_SEC_NUMHHH,W
000F30 6F88           01988         MOVWF SD_ROOT_DIR_SECHHH
  00000F32            01989 F4_000392 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_Pos = SD_Buffer_Pos
000F32 C24F F28A      01990         MOVFF SD_BUFFER_POSH,SD_ROOT_DIR_POSH
000F36 C24E F289      01991         MOVFF SD_BUFFER_POS,SD_ROOT_DIR_POS
  00000F3A            01992 F4_000393 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return_Root_Dir = 0
000F3A 6B4C           01993         CLRF SD_EXTENDED_RETURN_ROOT_DIR
  00000F3C            01994 F4_000394 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
000F3C 0100           01995         MOVLB 0
  00000000            01996 RAM_BANK = 0
000F3E 0012           01997         RETURN 0
000F40                01998 SD_INSERT_BYTE_INTO_BUFFER
  00000F40            01999 F4_000397 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Write_Buffer_Pos > $0FF Then
000F40 0E01           02000         MOVLW 1
000F42 0102           02001         MOVLB 2
  00000002            02002 RAM_BANK = 2
000F44 5DC3           02003         SUBWF SD_WRITE_BUFFER_POSH,W
000F46 0100           02004         MOVLB 0
  00000000            02005 RAM_BANK = 0
000F48 A0D8           02006         BTFSS STATUS,0,0
                      02007         GO@TO BC@LL108
  00000F4E            02008 F4_000398 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Write_Buffer_Pos - $100] = SD_Data_IO
000F4E 0102           02009         MOVLB 2
  00000002            02010 RAM_BANK = 2
000F50 51C2           02011         MOVF SD_WRITE_BUFFER_POS,W
000F52 EE01 F041      02012         LFSR 0,SD_BUFFER1
000F56 26E9           02013         ADDWF FSR0L,F,0
000F58 0E00           02014         MOVLW 0
000F5A 22EA           02015         ADDWFC FSR0H,F,0
000F5C C24D FFEF      02016         MOVFF SD_DATA_IO,INDF0
000F60 0100           02017         MOVLB 0
  00000000            02018 RAM_BANK = 0
                      02019         F@JUMP BC@LL109
000F66                02020 BC@LL108
  00000F66            02021 F4_000399 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  00000F66            02022 F4_000400 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Write_Buffer_Pos] = SD_Data_IO
000F66 EE00 F041      02023         LFSR 0,SD_BUFFER0
000F6A 0102           02024         MOVLB 2
  00000002            02025 RAM_BANK = 2
000F6C 51C2           02026         MOVF SD_WRITE_BUFFER_POS,W
000F6E 26E9           02027         ADDWF FSR0L,F,0
000F70 0E00           02028         MOVLW 0
000F72 22EA           02029         ADDWFC FSR0H,F,0
000F74 C24D FFEF      02030         MOVFF SD_DATA_IO,INDF0
  00000F78            02031 F4_000401 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
000F78                02032 BC@LL109
000F78 0100           02033         MOVLB 0
  00000000            02034 RAM_BANK = 0
  00000F7A            02035 F4_000402 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
000F7A 0012           02036         RETURN 0
000F7C                02037 SD_ASSEMBLE_FAT_SECTOR
  00000F7C            02038 F4_000405 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_FAT_Buffer_Pos_Prev
000F7C C284 F2C3      02039         MOVFF SD_FAT_BUFFER_POS_PREVH,SD_WRITE_BUFFER_POSH
000F80 C283 F2C2      02040         MOVFF SD_FAT_BUFFER_POS_PREV,SD_WRITE_BUFFER_POS
  00000F84            02041 F4_000406 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Sec_Prev * $100)
000F84 C27F F2C6      02042         MOVFF SD_FAT_SEC_PREV,SD_CLUSTER_NUMH
000F88 0102           02043         MOVLB 2
  00000002            02044 RAM_BANK = 2
000F8A 6BC5           02045         CLRF SD_CLUSTER_NUM
  00000F8C            02046 F4_000407 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Buffer_Pos_Prev / 2) + SD_Cluster_Num
000F8C 90D8           02047         BCF STATUS,0,0
000F8E 3184           02048         RRCF SD_FAT_BUFFER_POS_PREVH,W
000F90 6E24           02049         MOVWF PP7H,0
000F92 3183           02050         RRCF SD_FAT_BUFFER_POS_PREV,W
000F94 6E23           02051         MOVWF PP7,0
000F96 5023           02052         MOVF PP7,W,0
000F98 27C5           02053         ADDWF SD_CLUSTER_NUM,F
000F9A 5024           02054         MOVF PP7H,W,0
000F9C 23C6           02055         ADDWFC SD_CLUSTER_NUMH,F
  00000F9E            02056 F4_000408 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Num
000F9E 4BC5           02057         INFSNZ SD_CLUSTER_NUM,F
000FA0 2BC6           02058         INCF SD_CLUSTER_NUMH,F
  00000FA2            02059 F4_000409 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] While SD_Cluster_Seq_Num_Prev > 1
000FA2                02060 BC@LL110
000FA2 0100           02061         MOVLB 0
  00000000            02062 RAM_BANK = 0
000FA4 0102           02063         MOVLB 2
  00000002            02064 RAM_BANK = 2
000FA6 53DD           02065         MOVF SD_CLUSTER_SEQ_NUM_PREVH,F
000FA8 0100           02066         MOVLB 0
  00000000            02067 RAM_BANK = 0
000FAA A4D8           02068         BTFSS STATUS,2,0
                      02069         GO@TO CP@LB18
000FB0 0E02           02070         MOVLW 2
000FB2 0102           02071         MOVLB 2
  00000002            02072 RAM_BANK = 2
000FB4 5DDC           02073         SUBWF SD_CLUSTER_SEQ_NUM_PREV,W
000FB6 0100           02074         MOVLB 0
  00000000            02075 RAM_BANK = 0
000FB8 A0D8           02076         BTFSS STATUS,0,0
                      02077         GO@TO BC@LL111
000FBE                02078 CP@LB18
  00000FBE            02079 F4_000410 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE0
000FBE C2C5 F24D      02080         MOVFF SD_CLUSTER_NUM,SD_DATA_IO
  00000FC2            02081 F4_000411 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
                      02082         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FC4            02083 F4_000412 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
000FC4 0102           02084         MOVLB 2
  00000002            02085 RAM_BANK = 2
000FC6 4BC2           02086         INFSNZ SD_WRITE_BUFFER_POS,F
000FC8 2BC3           02087         INCF SD_WRITE_BUFFER_POSH,F
  00000FCA            02088 F4_000413 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE1
000FCA C2C6 F24D      02089         MOVFF SD_CLUSTER_NUMH,SD_DATA_IO
  00000FCE            02090 F4_000414 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
000FCE 0100           02091         MOVLB 0
  00000000            02092 RAM_BANK = 0
                      02093         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FD2            02094 F4_000415 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
000FD2 0102           02095         MOVLB 2
  00000002            02096 RAM_BANK = 2
000FD4 4BC2           02097         INFSNZ SD_WRITE_BUFFER_POS,F
000FD6 2BC3           02098         INCF SD_WRITE_BUFFER_POSH,F
  00000FD8            02099 F4_000416 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Num
000FD8 4BC5           02100         INFSNZ SD_CLUSTER_NUM,F
000FDA 2BC6           02101         INCF SD_CLUSTER_NUMH,F
  00000FDC            02102 F4_000417 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Dec SD_Cluster_Seq_Num_Prev
000FDC 07DC           02103         DECF SD_CLUSTER_SEQ_NUM_PREV,F
000FDE 0E00           02104         MOVLW 0
000FE0 5BDD           02105         SUBWFB SD_CLUSTER_SEQ_NUM_PREVH,F
  00000FE2            02106 F4_000418 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Wend
000FE2 0100           02107         MOVLB 0
  00000000            02108 RAM_BANK = 0
                      02109         F@JUMP BC@LL110
000FE6                02110 BC@LL111
  00000FE6            02111 F4_000419 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
000FE6 0012           02112         RETURN 0
000FE8                02113 SD_ASSEMBLE_FAT_SECTOR_END_CONT
  00000FE8            02114 F4_000422 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Sec * $100)
000FE8 C279 F2C6      02115         MOVFF SD_FAT_SEC,SD_CLUSTER_NUMH
000FEC 0102           02116         MOVLB 2
  00000002            02117 RAM_BANK = 2
000FEE 6BC5           02118         CLRF SD_CLUSTER_NUM
  00000FF0            02119 F4_000423 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Buffer_Pos / 2) + SD_Cluster_Num
000FF0 90D8           02120         BCF STATUS,0,0
000FF2 317E           02121         RRCF SD_FAT_BUFFER_POSH,W
000FF4 6E24           02122         MOVWF PP7H,0
000FF6 317D           02123         RRCF SD_FAT_BUFFER_POS,W
000FF8 6E23           02124         MOVWF PP7,0
000FFA 5023           02125         MOVF PP7,W,0
000FFC 27C5           02126         ADDWF SD_CLUSTER_NUM,F
000FFE 5024           02127         MOVF PP7H,W,0
001000 23C6           02128         ADDWFC SD_CLUSTER_NUMH,F
  00001002            02129 F4_000424 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE0
001002 C2C5 F24D      02130         MOVFF SD_CLUSTER_NUM,SD_DATA_IO
  00001006            02131 F4_000425 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001006 0100           02132         MOVLB 0
  00000000            02133 RAM_BANK = 0
                      02134         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  0000100A            02135 F4_000426 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
00100A 0102           02136         MOVLB 2
  00000002            02137 RAM_BANK = 2
00100C 4BC2           02138         INFSNZ SD_WRITE_BUFFER_POS,F
00100E 2BC3           02139         INCF SD_WRITE_BUFFER_POSH,F
  00001010            02140 F4_000427 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE1
001010 C2C6 F24D      02141         MOVFF SD_CLUSTER_NUMH,SD_DATA_IO
  00001014            02142 F4_000428 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001014 0100           02143         MOVLB 0
  00000000            02144 RAM_BANK = 0
                      02145         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001018            02146 F4_000429 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001018 0012           02147         RETURN 0
00101A                02148 SD_ASSEMBLE_FAT_SECTOR_END_CLOSE
  0000101A            02149 F4_000432 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = $FF
00101A 0102           02150         MOVLB 2
  00000002            02151 RAM_BANK = 2
00101C 694D           02152         SETF SD_DATA_IO
  0000101E            02153 F4_000433 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
00101E 0100           02154         MOVLB 0
  00000000            02155 RAM_BANK = 0
                      02156         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001022            02157 F4_000434 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001022 0102           02158         MOVLB 2
  00000002            02159 RAM_BANK = 2
001024 4BC2           02160         INFSNZ SD_WRITE_BUFFER_POS,F
001026 2BC3           02161         INCF SD_WRITE_BUFFER_POSH,F
  00001028            02162 F4_000435 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001028 0100           02163         MOVLB 0
  00000000            02164 RAM_BANK = 0
                      02165         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  0000102C            02166 F4_000436 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
00102C 0012           02167         RETURN 0
00102E                02168 SD_WRITE_BYTE_TO_FILE_SUB
  0000102E            02169 F4_000439 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_RW_Ptr
00102E 0102           02170         MOVLB 2
  00000002            02171 RAM_BANK = 2
001030 2BE1           02172         INCF SD_BYTES_READ,F
001032 0E00           02173         MOVLW 0
001034 23E2           02174         ADDWFC SD_BYTES_READH,F
001036 23E3           02175         ADDWFC SD_BYTES_READHH,F
001038 23E4           02176         ADDWFC SD_BYTES_READHHH,F
  0000103A            02177 F4_000440 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_RW_Ptr > SD_File_Size Then
00103A 51E1           02178         MOVF SD_BYTES_READ,W
00103C 5DCC           02179         SUBWF SD_FILE_SIZE,W
00103E 51E2           02180         MOVF SD_BYTES_READH,W
001040 59CD           02181         SUBWFB SD_FILE_SIZEH,W
001042 51E3           02182         MOVF SD_BYTES_READHH,W
001044 59CE           02183         SUBWFB SD_FILE_SIZEHH,W
001046 51E4           02184         MOVF SD_BYTES_READHHH,W
001048 59CF           02185         SUBWFB SD_FILE_SIZEHHH,W
00104A 51E4           02186         MOVF SD_BYTES_READHHH,W
00104C 19CF           02187         XORWF SD_FILE_SIZEHHH,W
00104E B0D8           02188         BTFSC STATUS,0,0
001050 0A80           02189         XORLW 128
001052 0100           02190         MOVLB 0
  00000000            02191 RAM_BANK = 0
001054 B8D8           02192         BTFSC STATUS,4,0
                      02193         GO@TO BC@LL113
  0000105A            02194 F4_000441 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_File_Size
00105A 0102           02195         MOVLB 2
  00000002            02196 RAM_BANK = 2
00105C 2BCC           02197         INCF SD_FILE_SIZE,F
00105E 0E00           02198         MOVLW 0
001060 23CD           02199         ADDWFC SD_FILE_SIZEH,F
001062 23CE           02200         ADDWFC SD_FILE_SIZEHH,F
001064 23CF           02201         ADDWFC SD_FILE_SIZEHHH,F
  00001066            02202 F4_000442 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
001066 81E5           02203         BSF _B#VR1,0
  00001068            02204 F4_000443 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001068                02205 BC@LL113
001068 0100           02206         MOVLB 0
  00000000            02207 RAM_BANK = 0
  0000106A            02208 F4_000444 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Buffer_Pos
00106A 0102           02209         MOVLB 2
  00000002            02210 RAM_BANK = 2
00106C 4B8F           02211         INFSNZ SD_DATA_BUFFER_POS,F
00106E 2B90           02212         INCF SD_DATA_BUFFER_POSH,F
  00001070            02213 F4_000445 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Data_Buffer_Pos > SD_Bytes_Per_Sec Then
001070 518F           02214         MOVF SD_DATA_BUFFER_POS,W
001072 5D5F           02215         SUBWF SD_BYTES_PER_SEC,W
001074 5190           02216         MOVF SD_DATA_BUFFER_POSH,W
001076 5960           02217         SUBWFB SD_BYTES_PER_SECH,W
001078 0100           02218         MOVLB 0
  00000000            02219 RAM_BANK = 0
00107A B0D8           02220         BTFSC STATUS,0,0
                      02221         GO@TO BC@LL115
  00001080            02222 F4_000446 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Sec
001080 0102           02223         MOVLB 2
  00000002            02224 RAM_BANK = 2
001082 2B8B           02225         INCF SD_DATA_SEC,F
001084 0E00           02226         MOVLW 0
001086 238C           02227         ADDWFC SD_DATA_SECH,F
001088 238D           02228         ADDWFC SD_DATA_SECHH,F
00108A 238E           02229         ADDWFC SD_DATA_SECHHH,F
  0000108C            02230 F4_000447 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sec_in_Cluster
00108C 2BCB           02231         INCF SD_SEC_IN_CLUSTER,F
  0000108E            02232 F4_000448 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Sec_in_Cluster > SD_Secs_Per_Cluster Then
00108E 51CB           02233         MOVF SD_SEC_IN_CLUSTER,W
001090 5D55           02234         SUBWF SD_SECS_PER_CLUSTER,W
001092 0100           02235         MOVLB 0
  00000000            02236 RAM_BANK = 0
001094 B0D8           02237         BTFSC STATUS,0,0
                      02238         GO@TO BC@LL117
  0000109A            02239 F4_000449 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_EOF = 0 Then
00109A 96D8           02240         BCF STATUS,3,0
00109C 0102           02241         MOVLB 2
  00000002            02242 RAM_BANK = 2
00109E B1E5           02243         BTFSC _B#VR1,0
0010A0 86D8           02244         BSF STATUS,3,0
0010A2 0100           02245         MOVLB 0
  00000000            02246 RAM_BANK = 0
                      02247         G@OTO BC@LL119
  000010AA            02248 F4_000450 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
0010AA 6A14           02249         CLRF PP0HHH,0
0010AC 6A13           02250         CLRF PP0HH,0
0010AE C2C6 F012      02251         MOVFF SD_CLUSTER_NUMH,PP0H
0010B2 C2C5 F011      02252         MOVFF SD_CLUSTER_NUM,PP0
0010B6 6A1C           02253         CLRF PP2HHH,0
0010B8 6A1B           02254         CLRF PP2HH,0
0010BA 0E01           02255         MOVLW 1
0010BC 6E1A           02256         MOVWF PP2H,0
0010BE 6A19           02257         CLRF PP2,0
                      02258         F@CALL L@DIV
0010C4 C014 F27C      02259         MOVFF PP0HHH,SD_FAT_SECHHH
0010C8 C013 F27B      02260         MOVFF PP0HH,SD_FAT_SECHH
0010CC C012 F27A      02261         MOVFF PP0H,SD_FAT_SECH
0010D0 C011 F279      02262         MOVFF PP0,SD_FAT_SEC
  000010D4            02263 F4_000451 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
0010D4 C2C5 F27D      02264         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
0010D8 0102           02265         MOVLB 2
  00000002            02266 RAM_BANK = 2
0010DA 6B7E           02267         CLRF SD_FAT_BUFFER_POSH
  000010DC            02268 F4_000452 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
0010DC 90D8           02269         BCF STATUS,0,0
0010DE 377D           02270         RLCF SD_FAT_BUFFER_POS,F
0010E0 377E           02271         RLCF SD_FAT_BUFFER_POSH,F
  000010E2            02272 F4_000453 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
0010E2 5179           02273         MOVF SD_FAT_SEC,W
0010E4 2567           02274         ADDWF SD_FAT1,W
0010E6 6E34           02275         MOVWF SD_SECTOR_NUM,0
0010E8 517A           02276         MOVF SD_FAT_SECH,W
0010EA 2168           02277         ADDWFC SD_FAT1H,W
0010EC 6E35           02278         MOVWF SD_SECTOR_NUMH,0
0010EE 517B           02279         MOVF SD_FAT_SECHH,W
0010F0 2169           02280         ADDWFC SD_FAT1HH,W
0010F2 6E36           02281         MOVWF SD_SECTOR_NUMHH,0
0010F4 517C           02282         MOVF SD_FAT_SECHHH,W
0010F6 216A           02283         ADDWFC SD_FAT1HHH,W
0010F8 6E37           02284         MOVWF SD_SECTOR_NUMHHH,0
  000010FA            02285 F4_000454 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0010FA 0E01           02286         MOVLW 1
0010FC 6F4A           02287         MOVWF SD_RW_OPTION
  000010FE            02288 F4_000455 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0010FE 0100           02289         MOVLB 0
  00000000            02290 RAM_BANK = 0
                      02291         F@CALL SD_SECTOR_SUB
  00001104            02292 F4_000456 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
001104 C27E F24F      02293         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
001108 C27D F24E      02294         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  0000110C            02295 F4_000457 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      02296         F@CALL SD_READ_FAT_ENTRY
  00001110            02297 F4_000458 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
001110 C278 F2C6      02298         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
001114 C277 F2C5      02299         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  00001118            02300 F4_000459 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001118 0EFE           02301         MOVLW 254
00111A 0102           02302         MOVLB 2
  00000002            02303 RAM_BANK = 2
00111C 25C5           02304         ADDWF SD_CLUSTER_NUM,W
00111E 6E23           02305         MOVWF PP7,0
001120 0EFF           02306         MOVLW 255
001122 21C6           02307         ADDWFC SD_CLUSTER_NUMH,W
001124 6E24           02308         MOVWF PP7H,0
001126 0EFF           02309         MOVLW 255
001128 6A25           02310         CLRF PP7HH,0
00112A 2225           02311         ADDWFC PP7HH,F,0
00112C 6A26           02312         CLRF PP7HHH,0
00112E 2226           02313         ADDWFC PP7HHH,F,0
001130 C026 F014      02314         MOVFF PP7HHH,PP0HHH
001134 C025 F013      02315         MOVFF PP7HH,PP0HH
001138 C024 F012      02316         MOVFF PP7H,PP0H
00113C C023 F011      02317         MOVFF PP7,PP0
001140 6A1C           02318         CLRF PP2HHH,0
001142 6A1B           02319         CLRF PP2HH,0
001144 6A1A           02320         CLRF PP2H,0
001146 C255 F019      02321         MOVFF SD_SECS_PER_CLUSTER,PP2
                      02322         F@CALL AL@MUL
00114E C014 F28E      02323         MOVFF PP0HHH,SD_DATA_SECHHH
001152 C013 F28D      02324         MOVFF PP0HH,SD_DATA_SECHH
001156 C012 F28C      02325         MOVFF PP0H,SD_DATA_SECH
00115A C011 F28B      02326         MOVFF PP0,SD_DATA_SEC
  0000115E            02327 F4_000460 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
00115E 5173           02328         MOVF SD_DATA_AREA,W
001160 278B           02329         ADDWF SD_DATA_SEC,F
001162 5174           02330         MOVF SD_DATA_AREAH,W
001164 238C           02331         ADDWFC SD_DATA_SECH,F
001166 5175           02332         MOVF SD_DATA_AREAHH,W
001168 238D           02333         ADDWFC SD_DATA_SECHH,F
00116A 5176           02334         MOVF SD_DATA_AREAHHH,W
00116C 238E           02335         ADDWFC SD_DATA_SECHHH,F
  0000116E            02336 F4_000461 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
00116E C28E F037      02337         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001172 C28D F036      02338         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001176 C28C F035      02339         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
00117A C28B F034      02340         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  0000117E            02341 F4_000462 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
00117E 0E01           02342         MOVLW 1
001180 6F4A           02343         MOVWF SD_RW_OPTION
  00001182            02344 F4_000463 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001182 0100           02345         MOVLB 0
  00000000            02346 RAM_BANK = 0
                      02347         F@CALL SD_SECTOR_SUB
  00001188            02348 F4_000464 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
001188 0E01           02349         MOVLW 1
00118A 0102           02350         MOVLB 2
  00000002            02351 RAM_BANK = 2
00118C 6FCB           02352         MOVWF SD_SEC_IN_CLUSTER
  0000118E            02353 F4_000466 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
00118E 6A14           02354         CLRF PP0HHH,0
001190 6A13           02355         CLRF PP0HH,0
001192 C2C6 F012      02356         MOVFF SD_CLUSTER_NUMH,PP0H
001196 C2C5 F011      02357         MOVFF SD_CLUSTER_NUM,PP0
00119A 6A1C           02358         CLRF PP2HHH,0
00119C 6A1B           02359         CLRF PP2HH,0
00119E 0E01           02360         MOVLW 1
0011A0 6E1A           02361         MOVWF PP2H,0
0011A2 6A19           02362         CLRF PP2,0
                      02363         F@CALL L@DIV
0011A8 C014 F27C      02364         MOVFF PP0HHH,SD_FAT_SECHHH
0011AC C013 F27B      02365         MOVFF PP0HH,SD_FAT_SECHH
0011B0 C012 F27A      02366         MOVFF PP0H,SD_FAT_SECH
0011B4 C011 F279      02367         MOVFF PP0,SD_FAT_SEC
  000011B8            02368 F4_000467 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
0011B8 C2C5 F27D      02369         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
0011BC 6B7E           02370         CLRF SD_FAT_BUFFER_POSH
  000011BE            02371 F4_000468 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
0011BE 90D8           02372         BCF STATUS,0,0
0011C0 377D           02373         RLCF SD_FAT_BUFFER_POS,F
0011C2 377E           02374         RLCF SD_FAT_BUFFER_POSH,F
0011C4 0100           02375         MOVLB 0
  00000000            02376 RAM_BANK = 0
                      02377         F@JUMP BC@LL120
0011CA                02378 BC@LL119
  000011CA            02379 F4_000470 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  000011CA            02380 F4_000471 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Seq_Idx
0011CA 0102           02381         MOVLB 2
  00000002            02382 RAM_BANK = 2
0011CC 4BDA           02383         INFSNZ SD_CLUSTER_SEQ_IDX,F
0011CE 2BDB           02384         INCF SD_CLUSTER_SEQ_IDXH,F
  000011D0            02385 F4_000472 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Cluster_Seq_Idx > SD_Cluster_Seq_Num Then
0011D0 51DA           02386         MOVF SD_CLUSTER_SEQ_IDX,W
0011D2 5DD8           02387         SUBWF SD_CLUSTER_SEQ_NUM,W
0011D4 51DB           02388         MOVF SD_CLUSTER_SEQ_IDXH,W
0011D6 59D9           02389         SUBWFB SD_CLUSTER_SEQ_NUMH,W
0011D8 0100           02390         MOVLB 0
  00000000            02391 RAM_BANK = 0
0011DA B0D8           02392         BTFSC STATUS,0,0
                      02393         GO@TO BC@LL122
  000011E0            02394 F4_000473 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos_Prev = SD_FAT_Buffer_Pos
0011E0 C27E F284      02395         MOVFF SD_FAT_BUFFER_POSH,SD_FAT_BUFFER_POS_PREVH
0011E4 C27D F283      02396         MOVFF SD_FAT_BUFFER_POS,SD_FAT_BUFFER_POS_PREV
  000011E8            02397 F4_000474 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec_Prev = SD_FAT_Sec
0011E8 C27C F282      02398         MOVFF SD_FAT_SECHHH,SD_FAT_SEC_PREVHHH
0011EC C27B F281      02399         MOVFF SD_FAT_SECHH,SD_FAT_SEC_PREVHH
0011F0 C27A F280      02400         MOVFF SD_FAT_SECH,SD_FAT_SEC_PREVH
0011F4 C279 F27F      02401         MOVFF SD_FAT_SEC,SD_FAT_SEC_PREV
  000011F8            02402 F4_000475 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Idx_Prev = SD_Cluster_Seq_Idx
0011F8 C2DB F2DF      02403         MOVFF SD_CLUSTER_SEQ_IDXH,SD_CLUSTER_SEQ_IDX_PREVH
0011FC C2DA F2DE      02404         MOVFF SD_CLUSTER_SEQ_IDX,SD_CLUSTER_SEQ_IDX_PREV
  00001200            02405 F4_000476 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num_Prev = SD_Cluster_Seq_Num
001200 C2D9 F2DD      02406         MOVFF SD_CLUSTER_SEQ_NUMH,SD_CLUSTER_SEQ_NUM_PREVH
001204 C2D8 F2DC      02407         MOVFF SD_CLUSTER_SEQ_NUM,SD_CLUSTER_SEQ_NUM_PREV
  00001208            02408 F4_000478 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Free_Cluster
                      02409         F@CALL SD_FIND_FREE_CLUSTER
  0000120C            02410 F4_000479 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return = 1 Then Return
00120C 0E01           02411         MOVLW 1
00120E 0102           02412         MOVLB 2
  00000002            02413 RAM_BANK = 2
001210 5D4B           02414         SUBWF SD_EXTENDED_RETURN,W
001212 0100           02415         MOVLB 0
  00000000            02416 RAM_BANK = 0
001214 A4D8           02417         BTFSS STATUS,2,0
                      02418         GO@TO BC@LL124
00121A 0012           02419         RETURN 0
00121C                02420 BC@LL124
  0000121C            02421 F4_000480 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_FAT1 + SD_FAT_Sec_Prev
00121C 0102           02422         MOVLB 2
  00000002            02423 RAM_BANK = 2
00121E 517F           02424         MOVF SD_FAT_SEC_PREV,W
001220 2567           02425         ADDWF SD_FAT1,W
001222 6FBE           02426         MOVWF SD_WRITE_SEC_NUM
001224 5180           02427         MOVF SD_FAT_SEC_PREVH,W
001226 2168           02428         ADDWFC SD_FAT1H,W
001228 6FBF           02429         MOVWF SD_WRITE_SEC_NUMH
00122A 5181           02430         MOVF SD_FAT_SEC_PREVHH,W
00122C 2169           02431         ADDWFC SD_FAT1HH,W
00122E 6FC0           02432         MOVWF SD_WRITE_SEC_NUMHH
001230 5182           02433         MOVF SD_FAT_SEC_PREVHHH,W
001232 216A           02434         ADDWFC SD_FAT1HHH,W
001234 6FC1           02435         MOVWF SD_WRITE_SEC_NUMHHH
  00001236            02436 F4_000481 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
001236 C2C1 F037      02437         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
00123A C2C0 F036      02438         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
00123E C2BF F035      02439         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
001242 C2BE F034      02440         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  00001246            02441 F4_000482 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001246 0E01           02442         MOVLW 1
001248 6F4A           02443         MOVWF SD_RW_OPTION
  0000124A            02444 F4_000483 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00124A 0100           02445         MOVLB 0
  00000000            02446 RAM_BANK = 0
                      02447         F@CALL SD_SECTOR_SUB
  00001250            02448 F4_000485 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector
                      02449         F@CALL SD_ASSEMBLE_FAT_SECTOR
  00001252            02450 F4_000486 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector_End_Cont
                      02451         F@CALL SD_ASSEMBLE_FAT_SECTOR_END_CONT
  00001254            02452 F4_000487 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      02453         F@CALL SD_WRITE_SECTOR
  00001258            02454 F4_000488 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT2 + SD_FAT_Sec_Prev
001258 0102           02455         MOVLB 2
  00000002            02456 RAM_BANK = 2
00125A 517F           02457         MOVF SD_FAT_SEC_PREV,W
00125C 256B           02458         ADDWF SD_FAT2,W
00125E 6E34           02459         MOVWF SD_SECTOR_NUM,0
001260 5180           02460         MOVF SD_FAT_SEC_PREVH,W
001262 216C           02461         ADDWFC SD_FAT2H,W
001264 6E35           02462         MOVWF SD_SECTOR_NUMH,0
001266 5181           02463         MOVF SD_FAT_SEC_PREVHH,W
001268 216D           02464         ADDWFC SD_FAT2HH,W
00126A 6E36           02465         MOVWF SD_SECTOR_NUMHH,0
00126C 5182           02466         MOVF SD_FAT_SEC_PREVHHH,W
00126E 216E           02467         ADDWFC SD_FAT2HHH,W
001270 6E37           02468         MOVWF SD_SECTOR_NUMHHH,0
  00001272            02469 F4_000489 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
001272 0100           02470         MOVLB 0
  00000000            02471 RAM_BANK = 0
                      02472         F@CALL SD_WRITE_SECTOR
  00001278            02473 F4_000490 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001278 0EFE           02474         MOVLW 254
00127A 0102           02475         MOVLB 2
  00000002            02476 RAM_BANK = 2
00127C 25C5           02477         ADDWF SD_CLUSTER_NUM,W
00127E 6E23           02478         MOVWF PP7,0
001280 0EFF           02479         MOVLW 255
001282 21C6           02480         ADDWFC SD_CLUSTER_NUMH,W
001284 6E24           02481         MOVWF PP7H,0
001286 0EFF           02482         MOVLW 255
001288 6A25           02483         CLRF PP7HH,0
00128A 2225           02484         ADDWFC PP7HH,F,0
00128C 6A26           02485         CLRF PP7HHH,0
00128E 2226           02486         ADDWFC PP7HHH,F,0
001290 C026 F014      02487         MOVFF PP7HHH,PP0HHH
001294 C025 F013      02488         MOVFF PP7HH,PP0HH
001298 C024 F012      02489         MOVFF PP7H,PP0H
00129C C023 F011      02490         MOVFF PP7,PP0
0012A0 6A1C           02491         CLRF PP2HHH,0
0012A2 6A1B           02492         CLRF PP2HH,0
0012A4 6A1A           02493         CLRF PP2H,0
0012A6 C255 F019      02494         MOVFF SD_SECS_PER_CLUSTER,PP2
                      02495         F@CALL AL@MUL
0012AE C014 F28E      02496         MOVFF PP0HHH,SD_DATA_SECHHH
0012B2 C013 F28D      02497         MOVFF PP0HH,SD_DATA_SECHH
0012B6 C012 F28C      02498         MOVFF PP0H,SD_DATA_SECH
0012BA C011 F28B      02499         MOVFF PP0,SD_DATA_SEC
  000012BE            02500 F4_000491 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
0012BE 5173           02501         MOVF SD_DATA_AREA,W
0012C0 278B           02502         ADDWF SD_DATA_SEC,F
0012C2 5174           02503         MOVF SD_DATA_AREAH,W
0012C4 238C           02504         ADDWFC SD_DATA_SECH,F
0012C6 5175           02505         MOVF SD_DATA_AREAHH,W
0012C8 238D           02506         ADDWFC SD_DATA_SECHH,F
0012CA 5176           02507         MOVF SD_DATA_AREAHHH,W
0012CC 238E           02508         ADDWFC SD_DATA_SECHHH,F
  000012CE            02509 F4_000492 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
0012CE C28E F037      02510         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
0012D2 C28D F036      02511         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
0012D6 C28C F035      02512         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
0012DA C28B F034      02513         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  000012DE            02514 F4_000493 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 0
0012DE 6B4A           02515         CLRF SD_RW_OPTION
  000012E0            02516 F4_000494 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0012E0 0100           02517         MOVLB 0
  00000000            02518 RAM_BANK = 0
                      02519         F@CALL SD_SECTOR_SUB
                      02520         F@JUMP BC@LL125
0012EA                02521 BC@LL122
  000012EA            02522 F4_000496 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  000012EA            02523 F4_000497 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Num
0012EA 0102           02524         MOVLB 2
  00000002            02525 RAM_BANK = 2
0012EC 4BC5           02526         INFSNZ SD_CLUSTER_NUM,F
0012EE 2BC6           02527         INCF SD_CLUSTER_NUMH,F
  000012F0            02528 F4_000498 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0012F0                02529 BC@LL125
0012F0 0100           02530         MOVLB 0
  00000000            02531 RAM_BANK = 0
  000012F2            02532 F4_000499 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
0012F2 0E01           02533         MOVLW 1
0012F4 0102           02534         MOVLB 2
  00000002            02535 RAM_BANK = 2
0012F6 6FCB           02536         MOVWF SD_SEC_IN_CLUSTER
  000012F8            02537 F4_000500 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0012F8                02538 BC@LL120
0012F8 0100           02539         MOVLB 0
  00000000            02540 RAM_BANK = 0
                      02541         F@JUMP BC@LL126
0012FE                02542 BC@LL117
  000012FE            02543 F4_000501 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  000012FE            02544 F4_000502 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_Sector
                      02545         F@CALL SD_READ_SECTOR
  00001302            02546 F4_000503 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001302                02547 BC@LL126
  00001302            02548 F4_000504 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 1
001302 0102           02549         MOVLB 2
  00000002            02550 RAM_BANK = 2
001304 6B90           02551         CLRF SD_DATA_BUFFER_POSH
001306 0E01           02552         MOVLW 1
001308 6F8F           02553         MOVWF SD_DATA_BUFFER_POS
  0000130A            02554 F4_000505 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
00130A                02555 BC@LL115
00130A 0100           02556         MOVLB 0
  00000000            02557 RAM_BANK = 0
  0000130C            02558 F4_000506 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte_RW = SD_IO_Byte
00130C C2D0 F249      02559         MOVFF SD_IO_BYTE,SD_BYTE_RW
  00001310            02560 F4_000507 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sub
                      02561         F@CALL SD_WRITE_SUB
  00001314            02562 F4_000508 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
001314 0102           02563         MOVLB 2
  00000002            02564 RAM_BANK = 2
001316 6B4B           02565         CLRF SD_EXTENDED_RETURN
  00001318            02566 F4_000509 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001318 0100           02567         MOVLB 0
  00000000            02568 RAM_BANK = 0
00131A 0012           02569         RETURN 0
00131C                02570 SD_CHECK_FOR_FILE_SUB
  0000131C            02571 F4_000512 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Find_Root_Dir_Entry_F = 1
00131C 0E01           02572         MOVLW 1
00131E 0102           02573         MOVLB 2
  00000002            02574 RAM_BANK = 2
001320 6FE0           02575         MOVWF SD_FIND_ROOT_DIR_ENTRY_F
  00001322            02576 F4_000513 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Root_Dir_Entry
001322 0100           02577         MOVLB 0
  00000000            02578 RAM_BANK = 0
                      02579         F@CALL SD_FIND_ROOT_DIR_ENTRY
  00001328            02580 F4_000514 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001328 0012           02581         RETURN 0
00132A                02582 SD_READ_SUB
  0000132A            02583 F4_000517 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx > $1FF Then
00132A 0E02           02584         MOVLW 2
00132C 0102           02585         MOVLB 2
  00000002            02586 RAM_BANK = 2
00132E 5D48           02587         SUBWF SD_BUFFER_IDXH,W
001330 0100           02588         MOVLB 0
  00000000            02589 RAM_BANK = 0
001332 A0D8           02590         BTFSS STATUS,0,0
                      02591         GO@TO BC@LL128
  00001338            02592 F4_000524 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
001338 0102           02593         MOVLB 2
  00000002            02594 RAM_BANK = 2
00133A 6B48           02595         CLRF SD_BUFFER_IDXH
00133C 6B47           02596         CLRF SD_BUFFER_IDX
  0000133E            02597 F4_000525 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sector_Num
00133E 2A34           02598         INCF SD_SECTOR_NUM,F,0
001340 0E00           02599         MOVLW 0
001342 2235           02600         ADDWFC SD_SECTOR_NUMH,F,0
001344 2236           02601         ADDWFC SD_SECTOR_NUMHH,F,0
001346 2237           02602         ADDWFC SD_SECTOR_NUMHHH,F,0
  00001348            02603 F4_000526 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001348 0E01           02604         MOVLW 1
00134A 6F4A           02605         MOVWF SD_RW_OPTION
  0000134C            02606 F4_000527 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00134C 0100           02607         MOVLB 0
  00000000            02608 RAM_BANK = 0
                      02609         F@CALL SD_SECTOR_SUB
  00001352            02610 F4_000528 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001352                02611 BC@LL128
  00001352            02612 F4_000529 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx > $0FF Then
001352 0E01           02613         MOVLW 1
001354 0102           02614         MOVLB 2
  00000002            02615 RAM_BANK = 2
001356 5D48           02616         SUBWF SD_BUFFER_IDXH,W
001358 0100           02617         MOVLB 0
  00000000            02618 RAM_BANK = 0
00135A A0D8           02619         BTFSS STATUS,0,0
                      02620         GO@TO BC@LL130
  00001360            02621 F4_000530 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte_RW = SD_Buffer1[SD_Buffer_Idx - $100]
001360 0102           02622         MOVLB 2
  00000002            02623 RAM_BANK = 2
001362 5147           02624         MOVF SD_BUFFER_IDX,W
001364 EE01 F041      02625         LFSR 0,SD_BUFFER1
001368 26E9           02626         ADDWF FSR0L,F,0
00136A 0E00           02627         MOVLW 0
00136C 22EA           02628         ADDWFC FSR0H,F,0
00136E 50EF           02629         MOVF INDF0,W,0
001370 6F49           02630         MOVWF SD_BYTE_RW
001372 0100           02631         MOVLB 0
  00000000            02632 RAM_BANK = 0
                      02633         F@JUMP BC@LL131
001378                02634 BC@LL130
  00001378            02635 F4_000531 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  00001378            02636 F4_000532 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte_RW = SD_Buffer0[SD_Buffer_Idx]
001378 EE00 F041      02637         LFSR 0,SD_BUFFER0
00137C 0102           02638         MOVLB 2
  00000002            02639 RAM_BANK = 2
00137E 5147           02640         MOVF SD_BUFFER_IDX,W
001380 26E9           02641         ADDWF FSR0L,F,0
001382 0E00           02642         MOVLW 0
001384 22EA           02643         ADDWFC FSR0H,F,0
001386 50EF           02644         MOVF INDF0,W,0
001388 6F49           02645         MOVWF SD_BYTE_RW
  0000138A            02646 F4_000533 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
00138A                02647 BC@LL131
00138A 0100           02648         MOVLB 0
  00000000            02649 RAM_BANK = 0
  0000138C            02650 F4_000534 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Buffer_Idx
00138C 0102           02651         MOVLB 2
  00000002            02652 RAM_BANK = 2
00138E 4B47           02653         INFSNZ SD_BUFFER_IDX,F
001390 2B48           02654         INCF SD_BUFFER_IDXH,F
  00001392            02655 F4_000535 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001392 0100           02656         MOVLB 0
  00000000            02657 RAM_BANK = 0
001394 0012           02658         RETURN 0
  00001396            02659 F4_000541 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Init_MSSP MACRO P1
                      02660 SD_INIT_MSSP    MACRO P1,.,.,.,.,.,.,.,.,.
                      02661  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      02662  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      02663         IF (PRM_COUNT > 1)
                      02664         ERROR "(In Asm) SD_Init_MSSP - Too many parameters"
                      02665         ELSE
                      02666         IF (PRM_COUNT == 0)
                      02667         MOVLW 32
                      02668         MOVWF SSPCON1,0
                      02669         ELSE
                      02670         IF (PRM_1 != BYTE) && (PRM_1 != NUM8)
                      02671         ERROR "(In Asm) SD_Init_MSSP - Speed(Param1) should be a Byte variable or number"
                      02672         ENDIF
                      02673         IF (PRM_1 == BYTE)
                      02674         BYTE_BYTE P1, SSPCON1
                      02675         BSF SSPCON1,5,0
                      02676         ENDIF
                      02677         IF (PRM_1 == NUM8)
                      02678         NUM_DWORD P1, SSPCON1
                      02679 RAM_BANK = 0
                      02680         BSF SSPCON1,5,0
                      02681         ENDIF
                      02682         ENDIF
                      02683         ENDIF
                      02684         F@CALL SD_INIT_MSSP_SUB
                      02685         IF (SD_INIT_MSSP_RETURN != 1)
                      02686         ELSE
                      02687         IF (RETURN_TYPE != BYTE)
                      02688         ERROR "(In Asm) SD_Init_MSSP - Return variable should be a Byte variable"
                      02689         ENDIF
                      02690         IF (RETURN_TYPE == BYTE)
                      02691         BYTE_BYTE SD_RETURN, RETURN_VAR
                      02692         ENDIF
                      02693         ENDIF
                      02694         ENDM
001396                02695 SD_SEND_CMD
  00001396            02696 F4_000580 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte0
001396 C241 FFC9      02697         MOVFF SD_BYTE0,SSPBUF
  0000139A            02698 F4_000581 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
00139A A0C7           02699         BTFSS SSPSTAT,0
  0000139C            02700 F4_000582 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
00139C D7FE           02701         BRA $ - 2
  0000139E            02702 F4_000583 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
00139E CFC9 F032      02703         MOVFF SSPBUF,SD_BYTER
  000013A2            02704 F4_000584 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte1
0013A2 C242 FFC9      02705         MOVFF SD_BYTE1,SSPBUF
  000013A6            02706 F4_000585 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013A6 A0C7           02707         BTFSS SSPSTAT,0
  000013A8            02708 F4_000586 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013A8 D7FE           02709         BRA $ - 2
  000013AA            02710 F4_000587 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013AA CFC9 F032      02711         MOVFF SSPBUF,SD_BYTER
  000013AE            02712 F4_000588 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte2
0013AE C243 FFC9      02713         MOVFF SD_BYTE2,SSPBUF
  000013B2            02714 F4_000589 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013B2 A0C7           02715         BTFSS SSPSTAT,0
  000013B4            02716 F4_000590 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013B4 D7FE           02717         BRA $ - 2
  000013B6            02718 F4_000591 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013B6 CFC9 F032      02719         MOVFF SSPBUF,SD_BYTER
  000013BA            02720 F4_000592 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte3
0013BA C244 FFC9      02721         MOVFF SD_BYTE3,SSPBUF
  000013BE            02722 F4_000593 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013BE A0C7           02723         BTFSS SSPSTAT,0
  000013C0            02724 F4_000594 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013C0 D7FE           02725         BRA $ - 2
  000013C2            02726 F4_000595 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013C2 CFC9 F032      02727         MOVFF SSPBUF,SD_BYTER
  000013C6            02728 F4_000596 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte4
0013C6 C245 FFC9      02729         MOVFF SD_BYTE4,SSPBUF
  000013CA            02730 F4_000597 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013CA A0C7           02731         BTFSS SSPSTAT,0
  000013CC            02732 F4_000598 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013CC D7FE           02733         BRA $ - 2
  000013CE            02734 F4_000599 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013CE CFC9 F032      02735         MOVFF SSPBUF,SD_BYTER
0013D2                02736 SD_SEND_BYTE
  000013D2            02737 F4_000601 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte5
0013D2 C246 FFC9      02738         MOVFF SD_BYTE5,SSPBUF
  000013D6            02739 F4_000602 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013D6 A0C7           02740         BTFSS SSPSTAT,0
  000013D8            02741 F4_000603 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013D8 D7FE           02742         BRA $ - 2
  000013DA            02743 F4_000604 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013DA CFC9 F032      02744         MOVFF SSPBUF,SD_BYTER
  000013DE            02745 F4_000605 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0013DE 0012           02746         RETURN 0
0013E0                02747 SD_RECEIVE_BYTE
  000013E0            02748 F4_000608 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SSPBUF = $FF
0013E0 68C9           02749         SETF SSPBUF,0
  000013E2            02750 F4_000609 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013E2 A0C7           02751         BTFSS SSPSTAT,0
  000013E4            02752 F4_000610 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013E4 D7FE           02753         BRA $ - 2
  000013E6            02754 F4_000611 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013E6 CFC9 F032      02755         MOVFF SSPBUF,SD_BYTER
  000013EA            02756 F4_000612 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0013EA 0012           02757         RETURN 0
0013EC                02758 SD_INIT_MSSP_SUB
  000013EC            02759 F4_000616 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SSPSTAT = %01000000
0013EC 0E40           02760         MOVLW 64
0013EE 6EC7           02761         MOVWF SSPSTAT,0
  000013F0            02762 F4_000617 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Output SD_CS : Output SD_DI : Output SD_CLK : Input SD_DO
0013F0 9494           02763         BCF TRISC,2,0
0013F2 9A94           02764         BCF TRISC,5,0
0013F4 9694           02765         BCF TRISC,3,0
0013F6 8894           02766         BSF TRISC,4,0
  000013F8            02767 F4_000618 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0013F8 9494           02768         BCF TRISC,2,0
0013FA 8482           02769         BSF PORTC,2,0
  000013FC            02770 F4_000619 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $FF
0013FC 0102           02771         MOVLB 2
  00000002            02772 RAM_BANK = 2
0013FE 6941           02773         SETF SD_BYTE0
  00001400            02774 F4_000620 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = $FF
001400 6942           02775         SETF SD_BYTE1
  00001402            02776 F4_000621 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = $FF
001402 6943           02777         SETF SD_BYTE2
  00001404            02778 F4_000622 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = $FF
001404 6944           02779         SETF SD_BYTE3
  00001406            02780 F4_000623 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = $FF
001406 6945           02781         SETF SD_BYTE4
  00001408            02782 F4_000624 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
001408 6946           02783         SETF SD_BYTE5
  0000140A            02784 F4_000625 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
00140A 0100           02785         MOVLB 0
  00000000            02786 RAM_BANK = 0
                      02787         F@CALL SD_SEND_CMD
  0000140E            02788 F4_000626 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
                      02789         F@CALL SD_SEND_CMD
  00001410            02790 F4_000628 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] DelayMS 100
001410 0E64           02791         MOVLW 100
                      02792         F@CALL DL@MS
  00001416            02793 F4_000629 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Low SD_CS
001416 9494           02794         BCF TRISC,2,0
001418 9482           02795         BCF PORTC,2,0
  0000141A            02796 F4_000630 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $40
00141A 0E40           02797         MOVLW 64
00141C 0102           02798         MOVLB 2
  00000002            02799 RAM_BANK = 2
00141E 6F41           02800         MOVWF SD_BYTE0
  00001420            02801 F4_000631 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = $00
001420 6B42           02802         CLRF SD_BYTE1
  00001422            02803 F4_000632 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = $00
001422 6B43           02804         CLRF SD_BYTE2
  00001424            02805 F4_000633 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = $00
001424 6B44           02806         CLRF SD_BYTE3
  00001426            02807 F4_000634 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = $00
001426 6B45           02808         CLRF SD_BYTE4
  00001428            02809 F4_000635 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $95
001428 0E95           02810         MOVLW 149
00142A 6F46           02811         MOVWF SD_BYTE5
  0000142C            02812 F4_000636 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
00142C 0100           02813         MOVLB 0
  00000000            02814 RAM_BANK = 0
                      02815         F@CALL SD_SEND_CMD
  00001430            02816 F4_000637 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $01
001430 0E01           02817         MOVLW 1
001432 6E3E           02818         MOVWF SD_SEEK_RESPONSE_REQD,0
  00001434            02819 F4_000638 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FF
001434 6A3D           02820         CLRF SD_SEEK_RESPONSE_IDXH,0
001436 683C           02821         SETF SD_SEEK_RESPONSE_IDX,0
  00001438            02822 F4_000639 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      02823         F@CALL SD_SEEK_RESPONSE
  0000143C            02824 F4_000640 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then
00143C 0E01           02825         MOVLW 1
00143E 5C3F           02826         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
001440 A4D8           02827         BTFSS STATUS,2,0
                      02828         GO@TO BC@LL133
  00001446            02829 F4_000641 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] High SD_CS
001446 9494           02830         BCF TRISC,2,0
001448 8482           02831         BSF PORTC,2,0
  0000144A            02832 F4_000642 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
00144A 0E01           02833         MOVLW 1
00144C 6E40           02834         MOVWF SD_RETURN,0
  0000144E            02835 F4_000643 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
00144E 0012           02836         RETURN 0
  00001450            02837 F4_000644 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001450                02838 BC@LL133
  00001450            02839 F4_000646 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Idx = $FF
001450 6833           02840         SETF SD_IDX,0
  00001452            02841 F4_000647 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Repeat
001452                02842 BC@LL134
  00001452            02843 F4_000648 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $41
001452 0E41           02844         MOVLW 65
001454 0102           02845         MOVLB 2
  00000002            02846 RAM_BANK = 2
001456 6F41           02847         MOVWF SD_BYTE0
  00001458            02848 F4_000649 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = $00
001458 6B42           02849         CLRF SD_BYTE1
  0000145A            02850 F4_000650 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = $00
00145A 6B43           02851         CLRF SD_BYTE2
  0000145C            02852 F4_000651 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = $00
00145C 6B44           02853         CLRF SD_BYTE3
  0000145E            02854 F4_000652 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = $00
00145E 6B45           02855         CLRF SD_BYTE4
  00001460            02856 F4_000653 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
001460 6946           02857         SETF SD_BYTE5
  00001462            02858 F4_000654 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
001462 0100           02859         MOVLB 0
  00000000            02860 RAM_BANK = 0
                      02861         F@CALL SD_SEND_CMD
  00001466            02862 F4_000655 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $00
001466 6A3E           02863         CLRF SD_SEEK_RESPONSE_REQD,0
  00001468            02864 F4_000656 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FF
001468 6A3D           02865         CLRF SD_SEEK_RESPONSE_IDXH,0
00146A 683C           02866         SETF SD_SEEK_RESPONSE_IDX,0
  0000146C            02867 F4_000657 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      02868         F@CALL SD_SEEK_RESPONSE
  00001470            02869 F4_000658 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Dec SD_Idx
001470 0633           02870         DECF SD_IDX,F,0
  00001472            02871 F4_000659 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Until SD_Seek_Response_Return = 0 Or SD_Idx = 0
001472 0E01           02872         MOVLW 1
001474 523F           02873         MOVF SD_SEEK_RESPONSE_RETURN,F,0
001476 A4D8           02874         BTFSS STATUS,2,0
001478 0E00           02875         MOVLW 0
00147A 6E2D           02876         MOVWF SP#P9,0
00147C 0E01           02877         MOVLW 1
00147E 5233           02878         MOVF SD_IDX,F,0
001480 A4D8           02879         BTFSS STATUS,2,0
001482 0E00           02880         MOVLW 0
001484 102D           02881         IORWF SP#P9,W,0
001486 B4D8           02882         BTFSC STATUS,2,0
                      02883         GO@TO BC@LL134
00148A                02884 BC@LL135
  0000148A            02885 F4_000660 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Idx = 0 Then
00148A 5233           02886         MOVF SD_IDX,F,0
00148C A4D8           02887         BTFSS STATUS,2,0
                      02888         GO@TO BC@LL137
  00001492            02889 F4_000661 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] High SD_CS
001492 9494           02890         BCF TRISC,2,0
001494 8482           02891         BSF PORTC,2,0
  00001496            02892 F4_000662 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
001496 0E01           02893         MOVLW 1
001498 6E40           02894         MOVWF SD_RETURN,0
  0000149A            02895 F4_000663 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
00149A 0012           02896         RETURN 0
  0000149C            02897 F4_000664 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
00149C                02898 BC@LL137
  0000149C            02899 F4_000665 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] High SD_CS
00149C 9494           02900         BCF TRISC,2,0
00149E 8482           02901         BSF PORTC,2,0
  000014A0            02902 F4_000666 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
0014A0 0102           02903         MOVLB 2
  00000002            02904 RAM_BANK = 2
0014A2 6946           02905         SETF SD_BYTE5
  000014A4            02906 F4_000667 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
0014A4 0100           02907         MOVLB 0
  00000000            02908 RAM_BANK = 0
                      02909         F@CALL SD_SEND_BYTE
  000014A8            02910 F4_000668 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
0014A8 0102           02911         MOVLB 2
  00000002            02912 RAM_BANK = 2
0014AA 6B48           02913         CLRF SD_BUFFER_IDXH
0014AC 6B47           02914         CLRF SD_BUFFER_IDX
  000014AE            02915 F4_000669 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Return = 0
0014AE 6A40           02916         CLRF SD_RETURN,0
  000014B0            02917 F4_000670 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0014B0 0100           02918         MOVLB 0
  00000000            02919 RAM_BANK = 0
0014B2 0012           02920         RETURN 0
  000014B4            02921 F4_000676 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Close_File MACRO
                      02922 SD_CLOSE_FILE   MACRO .,.,.,.,.,.,.,.,.,.
                      02923  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      02924  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      02925         IF (PRM_COUNT != 0)
                      02926         ERROR "(In Asm) No parameters required for SD_Close_File"
                      02927         EXITM
                      02928         ENDIF
                      02929         F@CALL SD_CLOSE_FILE_SUB
                      02930         ENDM
0014B4                02931 SD_CLOSE_FILE_SUB
  000014B4            02932 F4_000698 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Is_Dirty = 1 Then
0014B4 0E01           02933         MOVLW 1
0014B6 0102           02934         MOVLB 2
  00000002            02935 RAM_BANK = 2
0014B8 5DF6           02936         SUBWF SD_IS_DIRTY,W
0014BA 0100           02937         MOVLB 0
  00000000            02938 RAM_BANK = 0
0014BC A4D8           02939         BTFSS STATUS,2,0
                      02940         GO@TO BC@LL139
  000014C2            02941 F4_000699 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Repeat
0014C2                02942 BC@LL140
  000014C2            02943 F4_000700 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      02944         F@CALL SD_WRITE_SECTOR
  000014C6            02945 F4_000701 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Until SD_Return = 0
0014C6 5240           02946         MOVF SD_RETURN,F,0
0014C8 A4D8           02947         BTFSS STATUS,2,0
                      02948         GO@TO BC@LL140
0014CC                02949 BC@LL141
  000014CC            02950 F4_000702 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0014CC                02951 BC@LL139
  000014CC            02952 F4_000703 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_Root_Dir + SD_Root_Dir_Sec
0014CC 0102           02953         MOVLB 2
  00000002            02954 RAM_BANK = 2
0014CE 5185           02955         MOVF SD_ROOT_DIR_SEC,W
0014D0 256F           02956         ADDWF SD_ROOT_DIR,W
0014D2 6FBE           02957         MOVWF SD_WRITE_SEC_NUM
0014D4 5186           02958         MOVF SD_ROOT_DIR_SECH,W
0014D6 2170           02959         ADDWFC SD_ROOT_DIRH,W
0014D8 6FBF           02960         MOVWF SD_WRITE_SEC_NUMH
0014DA 5187           02961         MOVF SD_ROOT_DIR_SECHH,W
0014DC 2171           02962         ADDWFC SD_ROOT_DIRHH,W
0014DE 6FC0           02963         MOVWF SD_WRITE_SEC_NUMHH
0014E0 5188           02964         MOVF SD_ROOT_DIR_SECHHH,W
0014E2 2172           02965         ADDWFC SD_ROOT_DIRHHH,W
0014E4 6FC1           02966         MOVWF SD_WRITE_SEC_NUMHHH
  000014E6            02967 F4_000704 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
0014E6 C2C1 F037      02968         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
0014EA C2C0 F036      02969         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
0014EE C2BF F035      02970         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
0014F2 C2BE F034      02971         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  000014F6            02972 F4_000705 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0014F6 0E01           02973         MOVLW 1
0014F8 6F4A           02974         MOVWF SD_RW_OPTION
  000014FA            02975 F4_000706 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0014FA 0100           02976         MOVLB 0
  00000000            02977 RAM_BANK = 0
                      02978         F@CALL SD_SECTOR_SUB
  00001500            02979 F4_000708 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $1C
001500 0E1C           02980         MOVLW 28
001502 0102           02981         MOVLB 2
  00000002            02982 RAM_BANK = 2
001504 2589           02983         ADDWF SD_ROOT_DIR_POS,W
001506 6FC2           02984         MOVWF SD_WRITE_BUFFER_POS
001508 0E00           02985         MOVLW 0
00150A 218A           02986         ADDWFC SD_ROOT_DIR_POSH,W
00150C 6FC3           02987         MOVWF SD_WRITE_BUFFER_POSH
  0000150E            02988 F4_000709 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE0
00150E C2CC F24D      02989         MOVFF SD_FILE_SIZE,SD_DATA_IO
  00001512            02990 F4_000710 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001512 0100           02991         MOVLB 0
  00000000            02992 RAM_BANK = 0
                      02993         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001518            02994 F4_000711 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001518 0102           02995         MOVLB 2
  00000002            02996 RAM_BANK = 2
00151A 4BC2           02997         INFSNZ SD_WRITE_BUFFER_POS,F
00151C 2BC3           02998         INCF SD_WRITE_BUFFER_POSH,F
  0000151E            02999 F4_000712 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE1
00151E C2CD F24D      03000         MOVFF SD_FILE_SIZEH,SD_DATA_IO
  00001522            03001 F4_000713 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001522 0100           03002         MOVLB 0
  00000000            03003 RAM_BANK = 0
                      03004         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001528            03005 F4_000714 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001528 0102           03006         MOVLB 2
  00000002            03007 RAM_BANK = 2
00152A 4BC2           03008         INFSNZ SD_WRITE_BUFFER_POS,F
00152C 2BC3           03009         INCF SD_WRITE_BUFFER_POSH,F
  0000152E            03010 F4_000715 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE2
00152E C2CE F24D      03011         MOVFF SD_FILE_SIZEHH,SD_DATA_IO
  00001532            03012 F4_000716 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001532 0100           03013         MOVLB 0
  00000000            03014 RAM_BANK = 0
                      03015         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001538            03016 F4_000717 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001538 0102           03017         MOVLB 2
  00000002            03018 RAM_BANK = 2
00153A 4BC2           03019         INFSNZ SD_WRITE_BUFFER_POS,F
00153C 2BC3           03020         INCF SD_WRITE_BUFFER_POSH,F
  0000153E            03021 F4_000718 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE3
00153E C2CF F24D      03022         MOVFF SD_FILE_SIZEHHH,SD_DATA_IO
  00001542            03023 F4_000719 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001542 0100           03024         MOVLB 0
  00000000            03025 RAM_BANK = 0
                      03026         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001548            03027 F4_000720 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $16
001548 0E16           03028         MOVLW 22
00154A 0102           03029         MOVLB 2
  00000002            03030 RAM_BANK = 2
00154C 2589           03031         ADDWF SD_ROOT_DIR_POS,W
00154E 6FC2           03032         MOVWF SD_WRITE_BUFFER_POS
001550 0E00           03033         MOVLW 0
001552 218A           03034         ADDWFC SD_ROOT_DIR_POSH,W
001554 6FC3           03035         MOVWF SD_WRITE_BUFFER_POSH
  00001556            03036 F4_000721 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Set_File_Time_Modified
001556 0100           03037         MOVLB 0
  00000000            03038 RAM_BANK = 0
                      03039         F@CALL SD_SET_FILE_TIME_MODIFIED
  0000155C            03040 F4_000722 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      03041         F@CALL SD_WRITE_SECTOR
  00001560            03042 F4_000723 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_EOF = 1 Then
001560 96D8           03043         BCF STATUS,3,0
001562 0102           03044         MOVLB 2
  00000002            03045 RAM_BANK = 2
001564 A1E5           03046         BTFSS _B#VR1,0
001566 86D8           03047         BSF STATUS,3,0
001568 0100           03048         MOVLB 0
  00000000            03049 RAM_BANK = 0
                      03050         G@OTO BC@LL143
  00001570            03051 F4_000724 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos_Prev = SD_FAT_Buffer_Pos
001570 C27E F284      03052         MOVFF SD_FAT_BUFFER_POSH,SD_FAT_BUFFER_POS_PREVH
001574 C27D F283      03053         MOVFF SD_FAT_BUFFER_POS,SD_FAT_BUFFER_POS_PREV
  00001578            03054 F4_000725 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec_Prev = SD_FAT_Sec
001578 C27C F282      03055         MOVFF SD_FAT_SECHHH,SD_FAT_SEC_PREVHHH
00157C C27B F281      03056         MOVFF SD_FAT_SECHH,SD_FAT_SEC_PREVHH
001580 C27A F280      03057         MOVFF SD_FAT_SECH,SD_FAT_SEC_PREVH
001584 C279 F27F      03058         MOVFF SD_FAT_SEC,SD_FAT_SEC_PREV
  00001588            03059 F4_000726 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_FAT1 + SD_FAT_Sec_Prev
001588 0102           03060         MOVLB 2
  00000002            03061 RAM_BANK = 2
00158A 517F           03062         MOVF SD_FAT_SEC_PREV,W
00158C 2567           03063         ADDWF SD_FAT1,W
00158E 6FBE           03064         MOVWF SD_WRITE_SEC_NUM
001590 5180           03065         MOVF SD_FAT_SEC_PREVH,W
001592 2168           03066         ADDWFC SD_FAT1H,W
001594 6FBF           03067         MOVWF SD_WRITE_SEC_NUMH
001596 5181           03068         MOVF SD_FAT_SEC_PREVHH,W
001598 2169           03069         ADDWFC SD_FAT1HH,W
00159A 6FC0           03070         MOVWF SD_WRITE_SEC_NUMHH
00159C 5182           03071         MOVF SD_FAT_SEC_PREVHHH,W
00159E 216A           03072         ADDWFC SD_FAT1HHH,W
0015A0 6FC1           03073         MOVWF SD_WRITE_SEC_NUMHHH
  000015A2            03074 F4_000727 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
0015A2 C2C1 F037      03075         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
0015A6 C2C0 F036      03076         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
0015AA C2BF F035      03077         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
0015AE C2BE F034      03078         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  000015B2            03079 F4_000728 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0015B2 0E01           03080         MOVLW 1
0015B4 6F4A           03081         MOVWF SD_RW_OPTION
  000015B6            03082 F4_000729 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0015B6 0100           03083         MOVLB 0
  00000000            03084 RAM_BANK = 0
                      03085         F@CALL SD_SECTOR_SUB
  000015BC            03086 F4_000731 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num_Prev = SD_Cluster_Seq_Idx
0015BC C2DB F2DD      03087         MOVFF SD_CLUSTER_SEQ_IDXH,SD_CLUSTER_SEQ_NUM_PREVH
0015C0 C2DA F2DC      03088         MOVFF SD_CLUSTER_SEQ_IDX,SD_CLUSTER_SEQ_NUM_PREV
  000015C4            03089 F4_000732 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector
                      03090         F@CALL SD_ASSEMBLE_FAT_SECTOR
  000015C8            03091 F4_000733 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector_End_Close
                      03092         F@CALL SD_ASSEMBLE_FAT_SECTOR_END_CLOSE
  000015CC            03093 F4_000734 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      03094         F@CALL SD_WRITE_SECTOR
  000015D0            03095 F4_000735 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT2 + SD_FAT_Sec_Prev
0015D0 0102           03096         MOVLB 2
  00000002            03097 RAM_BANK = 2
0015D2 517F           03098         MOVF SD_FAT_SEC_PREV,W
0015D4 256B           03099         ADDWF SD_FAT2,W
0015D6 6E34           03100         MOVWF SD_SECTOR_NUM,0
0015D8 5180           03101         MOVF SD_FAT_SEC_PREVH,W
0015DA 216C           03102         ADDWFC SD_FAT2H,W
0015DC 6E35           03103         MOVWF SD_SECTOR_NUMH,0
0015DE 5181           03104         MOVF SD_FAT_SEC_PREVHH,W
0015E0 216D           03105         ADDWFC SD_FAT2HH,W
0015E2 6E36           03106         MOVWF SD_SECTOR_NUMHH,0
0015E4 5182           03107         MOVF SD_FAT_SEC_PREVHHH,W
0015E6 216E           03108         ADDWFC SD_FAT2HHH,W
0015E8 6E37           03109         MOVWF SD_SECTOR_NUMHHH,0
  000015EA            03110 F4_000736 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
0015EA 0100           03111         MOVLB 0
  00000000            03112 RAM_BANK = 0
                      03113         F@CALL SD_WRITE_SECTOR
  000015F0            03114 F4_000737 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0015F0                03115 BC@LL143
  000015F0            03116 F4_000738 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0015F0 0012           03117         RETURN 0
0015F2                03118 SD_SET_FILE_TIME_CREATE
  000015F2            03119 F4_000742 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_MSeconds + ((SD_Seconds // 2) * 100)
0015F2 6A24           03120         CLRF PP7H,0
0015F4 C2F2 F023      03121         MOVFF SD_MSECONDS,PP7
0015F8 6A28           03122         CLRF PP8H,0
0015FA C2F3 F027      03123         MOVFF SD_SECONDS,PP8
0015FE 0E01           03124         MOVLW 1
001600 1627           03125         ANDWF PP8,F,0
001602 6A28           03126         CLRF PP8H,0
001604 5028           03127         MOVF PP8H,W,0
001606 0D64           03128         MULLW 100
001608 CFF3 F028      03129         MOVFF PRODL,PP8H
00160C 5027           03130         MOVF PP8,W,0
00160E 0D64           03131         MULLW 100
001610 CFF3 F027      03132         MOVFF PRODL,PP8
001614 50F4           03133         MOVF PRODH,W,0
001616 2628           03134         ADDWF PP8H,F,0
001618 5023           03135         MOVF PP7,W,0
00161A 2427           03136         ADDWF PP8,W,0
00161C 0102           03137         MOVLB 2
  00000002            03138 RAM_BANK = 2
00161E 6F4D           03139         MOVWF SD_DATA_IO
  00001620            03140 F4_000743 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001620 0100           03141         MOVLB 0
  00000000            03142 RAM_BANK = 0
                      03143         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001626            03144 F4_000744 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001626 0102           03145         MOVLB 2
  00000002            03146 RAM_BANK = 2
001628 4BC2           03147         INFSNZ SD_WRITE_BUFFER_POS,F
00162A 2BC3           03148         INCF SD_WRITE_BUFFER_POSH,F
00162C                03149 SD_SET_FILE_TIME_MODIFIED
00162C 0100           03150         MOVLB 0
  00000000            03151 RAM_BANK = 0
  0000162E            03152 F4_000746 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = (SD_Seconds / 2) | (SD_Minutes << 5)
00162E 6A24           03153         CLRF PP7H,0
001630 C2F3 F023      03154         MOVFF SD_SECONDS,PP7
001634 90D8           03155         BCF STATUS,0,0
001636 3224           03156         RRCF PP7H,F,0
001638 3223           03157         RRCF PP7,F,0
00163A 6A28           03158         CLRF PP8H,0
00163C C2F4 F027      03159         MOVFF SD_MINUTES,PP8
001640 0E05           03160         MOVLW 5
001642                03161 SL@LB32
001642 90D8           03162         BCF STATUS,0,0
001644 3627           03163         RLCF PP8,F,0
001646 3628           03164         RLCF PP8H,F,0
001648 2EE8           03165         DECFSZ WREG,F,0
00164A D7FB           03166         BRA SL@LB32
00164C 5023           03167         MOVF PP7,W,0
00164E 1027           03168         IORWF PP8,W,0
001650 0102           03169         MOVLB 2
  00000002            03170 RAM_BANK = 2
001652 6F4D           03171         MOVWF SD_DATA_IO
  00001654            03172 F4_000747 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001654 0100           03173         MOVLB 0
  00000000            03174 RAM_BANK = 0
                      03175         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  0000165A            03176 F4_000748 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
00165A 0102           03177         MOVLB 2
  00000002            03178 RAM_BANK = 2
00165C 4BC2           03179         INFSNZ SD_WRITE_BUFFER_POS,F
00165E 2BC3           03180         INCF SD_WRITE_BUFFER_POSH,F
  00001660            03181 F4_000749 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = (SD_Minutes >> 3) | (SD_Hours << 3)
001660 6A24           03182         CLRF PP7H,0
001662 C2F4 F023      03183         MOVFF SD_MINUTES,PP7
001666 3224           03184         RRCF PP7H,F,0
001668 3223           03185         RRCF PP7,F,0
00166A 3224           03186         RRCF PP7H,F,0
00166C 3223           03187         RRCF PP7,F,0
00166E 3224           03188         RRCF PP7H,F,0
001670 3223           03189         RRCF PP7,F,0
001672 0E1F           03190         MOVLW 31
001674 1624           03191         ANDWF PP7H,F,0
001676 6A28           03192         CLRF PP8H,0
001678 C2F5 F027      03193         MOVFF SD_HOURS,PP8
00167C 0E03           03194         MOVLW 3
00167E                03195 SL@LB33
00167E 90D8           03196         BCF STATUS,0,0
001680 3627           03197         RLCF PP8,F,0
001682 3628           03198         RLCF PP8H,F,0
001684 2EE8           03199         DECFSZ WREG,F,0
001686 D7FB           03200         BRA SL@LB33
001688 5023           03201         MOVF PP7,W,0
00168A 1027           03202         IORWF PP8,W,0
00168C 6F4D           03203         MOVWF SD_DATA_IO
  0000168E            03204 F4_000750 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
00168E 0100           03205         MOVLB 0
  00000000            03206 RAM_BANK = 0
                      03207         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001694            03208 F4_000751 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001694 0102           03209         MOVLB 2
  00000002            03210 RAM_BANK = 2
001696 4BC2           03211         INFSNZ SD_WRITE_BUFFER_POS,F
001698 2BC3           03212         INCF SD_WRITE_BUFFER_POSH,F
  0000169A            03213 F4_000752 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Day | (SD_Month << 5)
00169A C2F0 F024      03214         MOVFF SD_MONTH,PP7H
00169E 6A23           03215         CLRF PP7,0
0016A0 90D8           03216         BCF STATUS,0,0
0016A2 3224           03217         RRCF PP7H,F,0
0016A4 3223           03218         RRCF PP7,F,0
0016A6 3224           03219         RRCF PP7H,F,0
0016A8 3223           03220         RRCF PP7,F,0
0016AA 3224           03221         RRCF PP7H,F,0
0016AC 3223           03222         RRCF PP7,F,0
0016AE 51EF           03223         MOVF SD_DAY,W
0016B0 1023           03224         IORWF PP7,W,0
0016B2 6F4D           03225         MOVWF SD_DATA_IO
  000016B4            03226 F4_000753 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
0016B4 0100           03227         MOVLB 0
  00000000            03228 RAM_BANK = 0
                      03229         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  000016BA            03230 F4_000754 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
0016BA 0102           03231         MOVLB 2
  00000002            03232 RAM_BANK = 2
0016BC 4BC2           03233         INFSNZ SD_WRITE_BUFFER_POS,F
0016BE 2BC3           03234         INCF SD_WRITE_BUFFER_POSH,F
  000016C0            03235 F4_000755 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = (SD_Month >> 3) | ((SD_Year + 20) << 1)
0016C0 6A24           03236         CLRF PP7H,0
0016C2 C2F0 F023      03237         MOVFF SD_MONTH,PP7
0016C6 3224           03238         RRCF PP7H,F,0
0016C8 3223           03239         RRCF PP7,F,0
0016CA 3224           03240         RRCF PP7H,F,0
0016CC 3223           03241         RRCF PP7,F,0
0016CE 3224           03242         RRCF PP7H,F,0
0016D0 3223           03243         RRCF PP7,F,0
0016D2 0E1F           03244         MOVLW 31
0016D4 1624           03245         ANDWF PP7H,F,0
0016D6 6A28           03246         CLRF PP8H,0
0016D8 C2F1 F027      03247         MOVFF SD_YEAR,PP8
0016DC 0E14           03248         MOVLW 20
0016DE 2627           03249         ADDWF PP8,F,0
0016E0 0E00           03250         MOVLW 0
0016E2 2228           03251         ADDWFC PP8H,F,0
0016E4 90D8           03252         BCF STATUS,0,0
0016E6 3627           03253         RLCF PP8,F,0
0016E8 3628           03254         RLCF PP8H,F,0
0016EA 5023           03255         MOVF PP7,W,0
0016EC 1027           03256         IORWF PP8,W,0
0016EE 6F4D           03257         MOVWF SD_DATA_IO
  000016F0            03258 F4_000756 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
0016F0 0100           03259         MOVLB 0
  00000000            03260 RAM_BANK = 0
                      03261         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  000016F6            03262 F4_000757 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0016F6 0012           03263         RETURN 0
  000016F8            03264 F4_000763 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Open_File MACRO
                      03265 SD_OPEN_FILE    MACRO .,.,.,.,.,.,.,.,.,.
                      03266  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03267  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03268         F@CALL SD_OPEN_FILE_SUB
                      03269         IF (RETURN_TYPE !=BYTE) && (RETURN_TYPE !=WORD) && (RETURN_TYPE !=DWORD)
                      03270         ERROR "(In Asm) SD_Open_File - Return variable should be a Byte, Word, or DWord variable"
                      03271         ELSE
                      03272         IF (RETURN_TYPE == BYTE)
                      03273         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      03274         ENDIF
                      03275         IF (RETURN_TYPE == WORD)
                      03276         BYTE_WORD SD_EXTENDED_RETURN, RETURN_VAR
                      03277 RAM_BANK = 0
                      03278         ENDIF
                      03279         IF (RETURN_TYPE == DWORD)
                      03280         BYTE_DWORD SD_EXTENDED_RETURN, RETURN_VAR
                      03281 RAM_BANK = 0
                      03282         ENDIF
                      03283         ENDIF
                      03284         ENDM
0016F8                03285 SD_OPEN_FILE_SUB
  000016F8            03286 F4_000787 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Check_For_File_Sub
                      03287         F@CALL SD_CHECK_FOR_FILE_SUB
  000016FA            03288 F4_000788 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir <> 0 Then
0016FA 0102           03289         MOVLB 2
  00000002            03290 RAM_BANK = 2
0016FC 534C           03291         MOVF SD_EXTENDED_RETURN_ROOT_DIR,F
0016FE 0100           03292         MOVLB 0
  00000000            03293 RAM_BANK = 0
001700 B4D8           03294         BTFSC STATUS,2,0
                      03295         GO@TO BC@LL145
  00001706            03296 F4_000789 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001706 0E01           03297         MOVLW 1
001708 0102           03298         MOVLB 2
  00000002            03299 RAM_BANK = 2
00170A 6F4B           03300         MOVWF SD_EXTENDED_RETURN
  0000170C            03301 F4_000790 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
00170C 0100           03302         MOVLB 0
  00000000            03303 RAM_BANK = 0
00170E 0012           03304         RETURN 0
  00001710            03305 F4_000791 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001710                03306 BC@LL145
  00001710            03307 F4_000792 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE0 = SD_Root_Dir_File[$1A]
001710 0102           03308         MOVLB 2
  00000002            03309 RAM_BANK = 2
001712 51B8           03310         MOVF SD_ROOT_DIR_FILE#26,W
001714 6FC5           03311         MOVWF SD_CLUSTER_NUM
  00001716            03312 F4_000793 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE1 = SD_Root_Dir_File[$1B]
001716 51B9           03313         MOVF SD_ROOT_DIR_FILE#27,W
001718 6FC6           03314         MOVWF SD_CLUSTER_NUMH
  0000171A            03315 F4_000794 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE0 = SD_Root_Dir_File[$1C]
00171A 51BA           03316         MOVF SD_ROOT_DIR_FILE#28,W
00171C 6FCC           03317         MOVWF SD_FILE_SIZE
  0000171E            03318 F4_000795 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE1 = SD_Root_Dir_File[$1D]
00171E 51BB           03319         MOVF SD_ROOT_DIR_FILE#29,W
001720 6FCD           03320         MOVWF SD_FILE_SIZEH
  00001722            03321 F4_000796 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE2 = SD_Root_Dir_File[$1E]
001722 51BC           03322         MOVF SD_ROOT_DIR_FILE#30,W
001724 6FCE           03323         MOVWF SD_FILE_SIZEHH
  00001726            03324 F4_000797 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE3 = SD_Root_Dir_File[$1F]
001726 51BD           03325         MOVF SD_ROOT_DIR_FILE#31,W
001728 6FCF           03326         MOVWF SD_FILE_SIZEHHH
  0000172A            03327 F4_000798 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
00172A 0EFE           03328         MOVLW 254
00172C 25C5           03329         ADDWF SD_CLUSTER_NUM,W
00172E 6E23           03330         MOVWF PP7,0
001730 0EFF           03331         MOVLW 255
001732 21C6           03332         ADDWFC SD_CLUSTER_NUMH,W
001734 6E24           03333         MOVWF PP7H,0
001736 0EFF           03334         MOVLW 255
001738 6A25           03335         CLRF PP7HH,0
00173A 2225           03336         ADDWFC PP7HH,F,0
00173C 6A26           03337         CLRF PP7HHH,0
00173E 2226           03338         ADDWFC PP7HHH,F,0
001740 C026 F014      03339         MOVFF PP7HHH,PP0HHH
001744 C025 F013      03340         MOVFF PP7HH,PP0HH
001748 C024 F012      03341         MOVFF PP7H,PP0H
00174C C023 F011      03342         MOVFF PP7,PP0
001750 6A1C           03343         CLRF PP2HHH,0
001752 6A1B           03344         CLRF PP2HH,0
001754 6A1A           03345         CLRF PP2H,0
001756 C255 F019      03346         MOVFF SD_SECS_PER_CLUSTER,PP2
                      03347         F@CALL AL@MUL
00175E C014 F28E      03348         MOVFF PP0HHH,SD_DATA_SECHHH
001762 C013 F28D      03349         MOVFF PP0HH,SD_DATA_SECHH
001766 C012 F28C      03350         MOVFF PP0H,SD_DATA_SECH
00176A C011 F28B      03351         MOVFF PP0,SD_DATA_SEC
  0000176E            03352 F4_000799 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
00176E 5173           03353         MOVF SD_DATA_AREA,W
001770 278B           03354         ADDWF SD_DATA_SEC,F
001772 5174           03355         MOVF SD_DATA_AREAH,W
001774 238C           03356         ADDWFC SD_DATA_SECH,F
001776 5175           03357         MOVF SD_DATA_AREAHH,W
001778 238D           03358         ADDWFC SD_DATA_SECHH,F
00177A 5176           03359         MOVF SD_DATA_AREAHHH,W
00177C 238E           03360         ADDWFC SD_DATA_SECHHH,F
  0000177E            03361 F4_000800 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
00177E 0E01           03362         MOVLW 1
001780 6FCB           03363         MOVWF SD_SEC_IN_CLUSTER
  00001782            03364 F4_000801 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001782 C28E F037      03365         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001786 C28D F036      03366         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
00178A C28C F035      03367         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
00178E C28B F034      03368         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001792            03369 F4_000802 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001792 0E01           03370         MOVLW 1
001794 6F4A           03371         MOVWF SD_RW_OPTION
  00001796            03372 F4_000803 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001796 0100           03373         MOVLB 0
  00000000            03374 RAM_BANK = 0
                      03375         F@CALL SD_SECTOR_SUB
  0000179C            03376 F4_000805 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Return = 1 Then
00179C 0E01           03377         MOVLW 1
00179E 5C40           03378         SUBWF SD_RETURN,W,0
0017A0 A4D8           03379         BTFSS STATUS,2,0
                      03380         GO@TO BC@LL147
  000017A6            03381 F4_000806 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
0017A6 0E01           03382         MOVLW 1
0017A8 0102           03383         MOVLB 2
  00000002            03384 RAM_BANK = 2
0017AA 6F4B           03385         MOVWF SD_EXTENDED_RETURN
  000017AC            03386 F4_000807 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0017AC 0100           03387         MOVLB 0
  00000000            03388 RAM_BANK = 0
0017AE 0012           03389         RETURN 0
  000017B0            03390 F4_000808 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0017B0                03391 BC@LL147
  000017B0            03392 F4_000809 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 0
0017B0 0102           03393         MOVLB 2
  00000002            03394 RAM_BANK = 2
0017B2 6B90           03395         CLRF SD_DATA_BUFFER_POSH
0017B4 6B8F           03396         CLRF SD_DATA_BUFFER_POS
  000017B6            03397 F4_000810 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Bytes_Read = 0
0017B6 6BE4           03398         CLRF SD_BYTES_READHHH
0017B8 6BE3           03399         CLRF SD_BYTES_READHH
0017BA 6BE2           03400         CLRF SD_BYTES_READH
0017BC 6BE1           03401         CLRF SD_BYTES_READ
  000017BE            03402 F4_000811 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_File_Size > 0 Then
0017BE 96D8           03403         BCF STATUS,3,0
0017C0 BFCF           03404         BTFSC SD_FILE_SIZEHHH,7
0017C2 86D8           03405         BSF STATUS,3,0
0017C4 0100           03406         MOVLB 0
  00000000            03407 RAM_BANK = 0
                      03408         G@OTO BC@LL149
0017CC 0102           03409         MOVLB 2
  00000002            03410 RAM_BANK = 2
0017CE 51CC           03411         MOVF SD_FILE_SIZE,W
0017D0 11CD           03412         IORWF SD_FILE_SIZEH,W
0017D2 11CE           03413         IORWF SD_FILE_SIZEHH,W
0017D4 11CF           03414         IORWF SD_FILE_SIZEHHH,W
0017D6 0100           03415         MOVLB 0
  00000000            03416 RAM_BANK = 0
0017D8 B4D8           03417         BTFSC STATUS,2,0
                      03418         GO@TO BC@LL149
0017DE 96D8           03419         BCF STATUS,3,0
0017E0 0102           03420         MOVLB 2
  00000002            03421 RAM_BANK = 2
0017E2 BFCF           03422         BTFSC SD_FILE_SIZEHHH,7
0017E4 86D8           03423         BSF STATUS,3,0
0017E6 0100           03424         MOVLB 0
  00000000            03425 RAM_BANK = 0
                      03426         G@OTO BC@LL149
0017EE 0102           03427         MOVLB 2
  00000002            03428 RAM_BANK = 2
0017F0 51CD           03429         MOVF SD_FILE_SIZEH,W
0017F2 11CE           03430         IORWF SD_FILE_SIZEHH,W
0017F4 11CF           03431         IORWF SD_FILE_SIZEHHH,W
0017F6 E106           03432         BNZ CP@LB23
0017F8 0E01           03433         MOVLW 1
0017FA 5DCC           03434         SUBWF SD_FILE_SIZE,W
0017FC 0100           03435         MOVLB 0
  00000000            03436 RAM_BANK = 0
0017FE A0D8           03437         BTFSS STATUS,0,0
                      03438         GO@TO BC@LL149
001804                03439 CP@LB23
  00001804            03440 F4_000812 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 0
001804 0102           03441         MOVLB 2
  00000002            03442 RAM_BANK = 2
001806 91E5           03443         BCF _B#VR1,0
001808 0100           03444         MOVLB 0
  00000000            03445 RAM_BANK = 0
                      03446         F@JUMP BC@LL150
00180E                03447 BC@LL149
  0000180E            03448 F4_000813 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  0000180E            03449 F4_000814 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
00180E 0102           03450         MOVLB 2
  00000002            03451 RAM_BANK = 2
001810 81E5           03452         BSF _B#VR1,0
  00001812            03453 F4_000815 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001812                03454 BC@LL150
001812 0100           03455         MOVLB 0
  00000000            03456 RAM_BANK = 0
  00001814            03457 F4_000816 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 0
001814 0102           03458         MOVLB 2
  00000002            03459 RAM_BANK = 2
001816 6BF6           03460         CLRF SD_IS_DIRTY
  00001818            03461 F4_000817 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 1
001818 6BD9           03462         CLRF SD_CLUSTER_SEQ_NUMH
00181A 0E01           03463         MOVLW 1
00181C 6FD8           03464         MOVWF SD_CLUSTER_SEQ_NUM
  0000181E            03465 F4_000818 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
00181E 6B4B           03466         CLRF SD_EXTENDED_RETURN
  00001820            03467 F4_000819 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001820 0100           03468         MOVLB 0
  00000000            03469 RAM_BANK = 0
001822 0012           03470         RETURN 0
  00001824            03471 F4_000825 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Read_Byte_From_File MACRO
                      03472 SD_READ_BYTE_FROM_FILE  MACRO .,.,.,.,.,.,.,.,.,.
                      03473  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03474  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03475         F@CALL SD_READ_BYTE_FROM_FILE_SUB
                      03476         IF (SD_READ_BYTE_FROM_FILE_RETURN != 1)
                      03477         ERROR "(In Asm) SD_Read_Byte_From_File -  Mandatory return parameter missing"
                      03478         ELSE
                      03479         IF (RETURN_TYPE !=BYTE) && (RETURN_TYPE !=WORD) && (RETURN_TYPE !=DWORD)
                      03480         ERROR "(In Asm) SD_Read_Byte_From_File - Return variable should be a Byte, Word or DWord variable"
                      03481         ELSE
                      03482         IF (RETURN_TYPE == BYTE)
                      03483         BYTE_BYTE SD_BYTE_RW, RETURN_VAR
                      03484         ENDIF
                      03485         IF (RETURN_TYPE == WORD)
                      03486         BYTE_WORD SD_BYTE_RW, RETURN_VAR
                      03487 RAM_BANK = 0
                      03488         ENDIF
                      03489         IF (RETURN_TYPE == DWORD)
                      03490         BYTE_DWORD SD_BYTE_RW, RETURN_VAR
                      03491 RAM_BANK = 0
                      03492         ENDIF
                      03493         ENDIF
                      03494         ENDIF
                      03495         ENDM
001824                03496 SD_READ_BYTE_FROM_FILE_SUB
  00001824            03497 F4_000853 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_EOF = 0 Then
001824 96D8           03498         BCF STATUS,3,0
001826 0102           03499         MOVLB 2
  00000002            03500 RAM_BANK = 2
001828 B1E5           03501         BTFSC _B#VR1,0
00182A 86D8           03502         BSF STATUS,3,0
00182C 0100           03503         MOVLB 0
  00000000            03504 RAM_BANK = 0
                      03505         G@OTO BC@LL152
  00001834            03506 F4_000854 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Buffer_Pos
001834 0102           03507         MOVLB 2
  00000002            03508 RAM_BANK = 2
001836 4B8F           03509         INFSNZ SD_DATA_BUFFER_POS,F
001838 2B90           03510         INCF SD_DATA_BUFFER_POSH,F
  0000183A            03511 F4_000855 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Data_Buffer_Pos > SD_Bytes_Per_Sec Then
00183A 518F           03512         MOVF SD_DATA_BUFFER_POS,W
00183C 5D5F           03513         SUBWF SD_BYTES_PER_SEC,W
00183E 5190           03514         MOVF SD_DATA_BUFFER_POSH,W
001840 5960           03515         SUBWFB SD_BYTES_PER_SECH,W
001842 0100           03516         MOVLB 0
  00000000            03517 RAM_BANK = 0
001844 B0D8           03518         BTFSC STATUS,0,0
                      03519         GO@TO BC@LL154
  0000184A            03520 F4_000856 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Is_Dirty = 1 Then
00184A 0E01           03521         MOVLW 1
00184C 0102           03522         MOVLB 2
  00000002            03523 RAM_BANK = 2
00184E 5DF6           03524         SUBWF SD_IS_DIRTY,W
001850 0100           03525         MOVLB 0
  00000000            03526 RAM_BANK = 0
001852 A4D8           03527         BTFSS STATUS,2,0
                      03528         GO@TO BC@LL156
  00001858            03529 F4_000857 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Repeat
001858                03530 BC@LL157
  00001858            03531 F4_000858 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      03532         F@CALL SD_WRITE_SECTOR
  0000185C            03533 F4_000859 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Until SD_Return = 0
00185C 5240           03534         MOVF SD_RETURN,F,0
00185E A4D8           03535         BTFSS STATUS,2,0
                      03536         GO@TO BC@LL157
001862                03537 BC@LL158
  00001862            03538 F4_000860 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 0
001862 0102           03539         MOVLB 2
  00000002            03540 RAM_BANK = 2
001864 6BF6           03541         CLRF SD_IS_DIRTY
  00001866            03542 F4_000861 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001866                03543 BC@LL156
001866 0100           03544         MOVLB 0
  00000000            03545 RAM_BANK = 0
  00001868            03546 F4_000862 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Sec
001868 0102           03547         MOVLB 2
  00000002            03548 RAM_BANK = 2
00186A 2B8B           03549         INCF SD_DATA_SEC,F
00186C 0E00           03550         MOVLW 0
00186E 238C           03551         ADDWFC SD_DATA_SECH,F
001870 238D           03552         ADDWFC SD_DATA_SECHH,F
001872 238E           03553         ADDWFC SD_DATA_SECHHH,F
  00001874            03554 F4_000863 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sec_in_Cluster
001874 2BCB           03555         INCF SD_SEC_IN_CLUSTER,F
  00001876            03556 F4_000864 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Sec_in_Cluster > SD_Secs_Per_Cluster Then
001876 51CB           03557         MOVF SD_SEC_IN_CLUSTER,W
001878 5D55           03558         SUBWF SD_SECS_PER_CLUSTER,W
00187A 0100           03559         MOVLB 0
  00000000            03560 RAM_BANK = 0
00187C B0D8           03561         BTFSC STATUS,0,0
                      03562         GO@TO BC@LL160
  00001882            03563 F4_000865 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001882 6A14           03564         CLRF PP0HHH,0
001884 6A13           03565         CLRF PP0HH,0
001886 C2C6 F012      03566         MOVFF SD_CLUSTER_NUMH,PP0H
00188A C2C5 F011      03567         MOVFF SD_CLUSTER_NUM,PP0
00188E 6A1C           03568         CLRF PP2HHH,0
001890 6A1B           03569         CLRF PP2HH,0
001892 0E01           03570         MOVLW 1
001894 6E1A           03571         MOVWF PP2H,0
001896 6A19           03572         CLRF PP2,0
                      03573         F@CALL L@DIV
00189C C014 F27C      03574         MOVFF PP0HHH,SD_FAT_SECHHH
0018A0 C013 F27B      03575         MOVFF PP0HH,SD_FAT_SECHH
0018A4 C012 F27A      03576         MOVFF PP0H,SD_FAT_SECH
0018A8 C011 F279      03577         MOVFF PP0,SD_FAT_SEC
  000018AC            03578 F4_000866 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
0018AC C2C5 F27D      03579         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
0018B0 0102           03580         MOVLB 2
  00000002            03581 RAM_BANK = 2
0018B2 6B7E           03582         CLRF SD_FAT_BUFFER_POSH
  000018B4            03583 F4_000867 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
0018B4 90D8           03584         BCF STATUS,0,0
0018B6 377D           03585         RLCF SD_FAT_BUFFER_POS,F
0018B8 377E           03586         RLCF SD_FAT_BUFFER_POSH,F
  000018BA            03587 F4_000868 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
0018BA 5179           03588         MOVF SD_FAT_SEC,W
0018BC 2567           03589         ADDWF SD_FAT1,W
0018BE 6E34           03590         MOVWF SD_SECTOR_NUM,0
0018C0 517A           03591         MOVF SD_FAT_SECH,W
0018C2 2168           03592         ADDWFC SD_FAT1H,W
0018C4 6E35           03593         MOVWF SD_SECTOR_NUMH,0
0018C6 517B           03594         MOVF SD_FAT_SECHH,W
0018C8 2169           03595         ADDWFC SD_FAT1HH,W
0018CA 6E36           03596         MOVWF SD_SECTOR_NUMHH,0
0018CC 517C           03597         MOVF SD_FAT_SECHHH,W
0018CE 216A           03598         ADDWFC SD_FAT1HHH,W
0018D0 6E37           03599         MOVWF SD_SECTOR_NUMHHH,0
  000018D2            03600 F4_000869 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0018D2 0E01           03601         MOVLW 1
0018D4 6F4A           03602         MOVWF SD_RW_OPTION
  000018D6            03603 F4_000870 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0018D6 0100           03604         MOVLB 0
  00000000            03605 RAM_BANK = 0
                      03606         F@CALL SD_SECTOR_SUB
  000018DC            03607 F4_000872 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
0018DC C27E F24F      03608         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
0018E0 C27D F24E      03609         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  000018E4            03610 F4_000873 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      03611         F@CALL SD_READ_FAT_ENTRY
  000018E8            03612 F4_000874 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
0018E8 C278 F2C6      03613         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
0018EC C277 F2C5      03614         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  000018F0            03615 F4_000875 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
0018F0 0EFE           03616         MOVLW 254
0018F2 0102           03617         MOVLB 2
  00000002            03618 RAM_BANK = 2
0018F4 25C5           03619         ADDWF SD_CLUSTER_NUM,W
0018F6 6E23           03620         MOVWF PP7,0
0018F8 0EFF           03621         MOVLW 255
0018FA 21C6           03622         ADDWFC SD_CLUSTER_NUMH,W
0018FC 6E24           03623         MOVWF PP7H,0
0018FE 0EFF           03624         MOVLW 255
001900 6A25           03625         CLRF PP7HH,0
001902 2225           03626         ADDWFC PP7HH,F,0
001904 6A26           03627         CLRF PP7HHH,0
001906 2226           03628         ADDWFC PP7HHH,F,0
001908 C026 F014      03629         MOVFF PP7HHH,PP0HHH
00190C C025 F013      03630         MOVFF PP7HH,PP0HH
001910 C024 F012      03631         MOVFF PP7H,PP0H
001914 C023 F011      03632         MOVFF PP7,PP0
001918 6A1C           03633         CLRF PP2HHH,0
00191A 6A1B           03634         CLRF PP2HH,0
00191C 6A1A           03635         CLRF PP2H,0
00191E C255 F019      03636         MOVFF SD_SECS_PER_CLUSTER,PP2
                      03637         F@CALL AL@MUL
001926 C014 F28E      03638         MOVFF PP0HHH,SD_DATA_SECHHH
00192A C013 F28D      03639         MOVFF PP0HH,SD_DATA_SECHH
00192E C012 F28C      03640         MOVFF PP0H,SD_DATA_SECH
001932 C011 F28B      03641         MOVFF PP0,SD_DATA_SEC
  00001936            03642 F4_000876 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
001936 5173           03643         MOVF SD_DATA_AREA,W
001938 278B           03644         ADDWF SD_DATA_SEC,F
00193A 5174           03645         MOVF SD_DATA_AREAH,W
00193C 238C           03646         ADDWFC SD_DATA_SECH,F
00193E 5175           03647         MOVF SD_DATA_AREAHH,W
001940 238D           03648         ADDWFC SD_DATA_SECHH,F
001942 5176           03649         MOVF SD_DATA_AREAHHH,W
001944 238E           03650         ADDWFC SD_DATA_SECHHH,F
  00001946            03651 F4_000877 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001946 C28E F037      03652         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
00194A C28D F036      03653         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
00194E C28C F035      03654         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001952 C28B F034      03655         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001956            03656 F4_000878 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001956 0E01           03657         MOVLW 1
001958 6F4A           03658         MOVWF SD_RW_OPTION
  0000195A            03659 F4_000879 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00195A 0100           03660         MOVLB 0
  00000000            03661 RAM_BANK = 0
                      03662         F@CALL SD_SECTOR_SUB
  00001960            03663 F4_000881 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
001960 0E01           03664         MOVLW 1
001962 0102           03665         MOVLB 2
  00000002            03666 RAM_BANK = 2
001964 6FCB           03667         MOVWF SD_SEC_IN_CLUSTER
  00001966            03668 F4_000882 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001966                03669 BC@LL160
001966 0100           03670         MOVLB 0
  00000000            03671 RAM_BANK = 0
  00001968            03672 F4_000883 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 1
001968 0102           03673         MOVLB 2
  00000002            03674 RAM_BANK = 2
00196A 6B90           03675         CLRF SD_DATA_BUFFER_POSH
00196C 0E01           03676         MOVLW 1
00196E 6F8F           03677         MOVWF SD_DATA_BUFFER_POS
  00001970            03678 F4_000884 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001970                03679 BC@LL154
001970 0100           03680         MOVLB 0
  00000000            03681 RAM_BANK = 0
  00001972            03682 F4_000885 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_Sub
                      03683         F@CALL SD_READ_SUB
  00001976            03684 F4_000886 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Bytes_Read
001976 0102           03685         MOVLB 2
  00000002            03686 RAM_BANK = 2
001978 2BE1           03687         INCF SD_BYTES_READ,F
00197A 0E00           03688         MOVLW 0
00197C 23E2           03689         ADDWFC SD_BYTES_READH,F
00197E 23E3           03690         ADDWFC SD_BYTES_READHH,F
001980 23E4           03691         ADDWFC SD_BYTES_READHHH,F
  00001982            03692 F4_000887 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Bytes_Read >= SD_File_Size Then SD_EOF = 1
001982 51CC           03693         MOVF SD_FILE_SIZE,W
001984 5DE1           03694         SUBWF SD_BYTES_READ,W
001986 51CD           03695         MOVF SD_FILE_SIZEH,W
001988 59E2           03696         SUBWFB SD_BYTES_READH,W
00198A 51CE           03697         MOVF SD_FILE_SIZEHH,W
00198C 59E3           03698         SUBWFB SD_BYTES_READHH,W
00198E 51CF           03699         MOVF SD_FILE_SIZEHHH,W
001990 59E4           03700         SUBWFB SD_BYTES_READHHH,W
001992 51E4           03701         MOVF SD_BYTES_READHHH,W
001994 19CF           03702         XORWF SD_FILE_SIZEHHH,W
001996 B0D8           03703         BTFSC STATUS,0,0
001998 0A80           03704         XORLW 128
00199A 0100           03705         MOVLB 0
  00000000            03706 RAM_BANK = 0
00199C A8D8           03707         BTFSS STATUS,4,0
                      03708         GO@TO BC@LL162
0019A2 0102           03709         MOVLB 2
  00000002            03710 RAM_BANK = 2
0019A4 81E5           03711         BSF _B#VR1,0
0019A6                03712 BC@LL162
0019A6 0100           03713         MOVLB 0
  00000000            03714 RAM_BANK = 0
  000019A8            03715 F4_000888 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0019A8                03716 BC@LL152
  000019A8            03717 F4_000889 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0019A8 0012           03718         RETURN 0
  000019AA            03719 F4_000895 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Check_For_File MACRO
                      03720 SD_CHECK_FOR_FILE       MACRO .,.,.,.,.,.,.,.,.,.
                      03721  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03722  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03723         F@CALL SD_CHECK_FOR_FILE_SUB
                      03724         IF (SD_CHECK_FOR_FILE_RETURN != 1)
                      03725         ERROR "(In Asm) SD_Check_For_File -  Mandatory return parameter missing"
                      03726         ELSE
                      03727         IF (RETURN_TYPE != BYTE) && (RETURN_TYPE != WORD) && (RETURN_TYPE != DWORD)
                      03728         ERROR "(In Asm) SD_Check_For_File - Return variable should be a Byte, Word or DWord variable"
                      03729         ENDIF
                      03730         IF (RETURN_TYPE == BYTE)
                      03731         BYTE_BYTE SD_EXTENDED_RETURN_ROOT_DIR, RETURN_VAR
                      03732         ENDIF
                      03733         IF (RETURN_TYPE == WORD)
                      03734         BYTE_WORD SD_EXTENDED_RETURN_ROOT_DIR, RETURN_VAR
                      03735 RAM_BANK = 0
                      03736         ENDIF
                      03737         IF (RETURN_TYPE == DWORD)
                      03738         BYTE_DWORD SD_EXTENDED_RETURN_ROOT_DIR, RETURN_VAR
                      03739 RAM_BANK = 0
                      03740         ENDIF
                      03741         ENDIF
                      03742         ENDM
  000019AA            03743 F4_000924 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_New_File MACRO
                      03744 SD_NEW_FILE     MACRO .,.,.,.,.,.,.,.,.,.
                      03745  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03746  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03747         IF (PRM_COUNT != 0)
                      03748         ERROR "(In Asm) No parameters required for SD_New_File"
                      03749         EXITM
                      03750         ENDIF
                      03751         F@CALL SD_NEW_FILE_SUB
                      03752         IF (SD_NEW_FILE_RETURN != 1)
                      03753         ELSE
                      03754         IF (RETURN_TYPE != BYTE)
                      03755         ERROR "(In Asm) SD_New_File - Return variable should be a Byte variable"
                      03756         ENDIF
                      03757         IF (RETURN_TYPE == BYTE)
                      03758         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      03759         ENDIF
                      03760         ENDIF
                      03761         ENDM
0019AA                03762 SD_NEW_FILE_SUB
  000019AA            03763 F4_000949 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Return_F = 0
0019AA 0102           03764         MOVLB 2
  00000002            03765 RAM_BANK = 2
0019AC 6BF8           03766         CLRF SD_RETURN_F
  000019AE            03767 F4_000950 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = 0
0019AE 6B7C           03768         CLRF SD_FAT_SECHHH
0019B0 6B7B           03769         CLRF SD_FAT_SECHH
0019B2 6B7A           03770         CLRF SD_FAT_SECH
0019B4 6B79           03771         CLRF SD_FAT_SEC
  000019B6            03772 F4_000951 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = 0
0019B6 6B7E           03773         CLRF SD_FAT_BUFFER_POSH
0019B8 6B7D           03774         CLRF SD_FAT_BUFFER_POS
  000019BA            03775 F4_000952 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 0
0019BA 6BD9           03776         CLRF SD_CLUSTER_SEQ_NUMH
0019BC 6BD8           03777         CLRF SD_CLUSTER_SEQ_NUM
  000019BE            03778 F4_000953 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Free_Cluster
0019BE 0100           03779         MOVLB 0
  00000000            03780 RAM_BANK = 0
                      03781         F@CALL SD_FIND_FREE_CLUSTER
  000019C4            03782 F4_000954 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return = 1 Then Return
0019C4 0E01           03783         MOVLW 1
0019C6 0102           03784         MOVLB 2
  00000002            03785 RAM_BANK = 2
0019C8 5D4B           03786         SUBWF SD_EXTENDED_RETURN,W
0019CA 0100           03787         MOVLB 0
  00000000            03788 RAM_BANK = 0
0019CC A4D8           03789         BTFSS STATUS,2,0
                      03790         GO@TO BC@LL164
0019D2 0012           03791         RETURN 0
0019D4                03792 BC@LL164
  000019D4            03793 F4_000955 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Find_Root_Dir_Entry_F = 0
0019D4 0102           03794         MOVLB 2
  00000002            03795 RAM_BANK = 2
0019D6 6BE0           03796         CLRF SD_FIND_ROOT_DIR_ENTRY_F
  000019D8            03797 F4_000956 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Root_Dir_Entry
0019D8 0100           03798         MOVLB 0
  00000000            03799 RAM_BANK = 0
                      03800         F@CALL SD_FIND_ROOT_DIR_ENTRY
  000019DE            03801 F4_000957 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir = 1 Then
0019DE 0E01           03802         MOVLW 1
0019E0 0102           03803         MOVLB 2
  00000002            03804 RAM_BANK = 2
0019E2 5D4C           03805         SUBWF SD_EXTENDED_RETURN_ROOT_DIR,W
0019E4 0100           03806         MOVLB 0
  00000000            03807 RAM_BANK = 0
0019E6 A4D8           03808         BTFSS STATUS,2,0
                      03809         GO@TO BC@LL166
  000019EC            03810 F4_000958 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
0019EC 0E01           03811         MOVLW 1
0019EE 0102           03812         MOVLB 2
  00000002            03813 RAM_BANK = 2
0019F0 6F4B           03814         MOVWF SD_EXTENDED_RETURN
  000019F2            03815 F4_000959 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0019F2 0100           03816         MOVLB 0
  00000000            03817 RAM_BANK = 0
0019F4 0012           03818         RETURN 0
  000019F6            03819 F4_000960 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0019F6                03820 BC@LL166
  000019F6            03821 F4_000961 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_Root_Dir + SD_Root_Dir_Sec
0019F6 0102           03822         MOVLB 2
  00000002            03823 RAM_BANK = 2
0019F8 5185           03824         MOVF SD_ROOT_DIR_SEC,W
0019FA 256F           03825         ADDWF SD_ROOT_DIR,W
0019FC 6FBE           03826         MOVWF SD_WRITE_SEC_NUM
0019FE 5186           03827         MOVF SD_ROOT_DIR_SECH,W
001A00 2170           03828         ADDWFC SD_ROOT_DIRH,W
001A02 6FBF           03829         MOVWF SD_WRITE_SEC_NUMH
001A04 5187           03830         MOVF SD_ROOT_DIR_SECHH,W
001A06 2171           03831         ADDWFC SD_ROOT_DIRHH,W
001A08 6FC0           03832         MOVWF SD_WRITE_SEC_NUMHH
001A0A 5188           03833         MOVF SD_ROOT_DIR_SECHHH,W
001A0C 2172           03834         ADDWFC SD_ROOT_DIRHHH,W
001A0E 6FC1           03835         MOVWF SD_WRITE_SEC_NUMHHH
  00001A10            03836 F4_000962 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
001A10 C2C1 F037      03837         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
001A14 C2C0 F036      03838         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
001A18 C2BF F035      03839         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
001A1C C2BE F034      03840         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  00001A20            03841 F4_000963 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001A20 0E01           03842         MOVLW 1
001A22 6F4A           03843         MOVWF SD_RW_OPTION
  00001A24            03844 F4_000964 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001A24 0100           03845         MOVLB 0
  00000000            03846 RAM_BANK = 0
                      03847         F@CALL SD_SECTOR_SUB
  00001A2A            03848 F4_000966 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $1F
001A2A 0102           03849         MOVLB 2
  00000002            03850 RAM_BANK = 2
001A2C 6B50           03851         CLRF SD_ROOT_DIR_FILE_POS
001A2E                03852 FR@LB168
001A2E 0100           03853         MOVLB 0
  00000000            03854 RAM_BANK = 0
001A30 0E20           03855         MOVLW 32
001A32 0102           03856         MOVLB 2
  00000002            03857 RAM_BANK = 2
001A34 5D50           03858         SUBWF SD_ROOT_DIR_FILE_POS,W
001A36 0100           03859         MOVLB 0
  00000000            03860 RAM_BANK = 0
001A38 B0D8           03861         BTFSC STATUS,0,0
                      03862         GO@TO NX@LB169
  00001A3E            03863 F4_000967 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + SD_Root_Dir_File_Pos
001A3E 0102           03864         MOVLB 2
  00000002            03865 RAM_BANK = 2
001A40 5150           03866         MOVF SD_ROOT_DIR_FILE_POS,W
001A42 2589           03867         ADDWF SD_ROOT_DIR_POS,W
001A44 6FC2           03868         MOVWF SD_WRITE_BUFFER_POS
001A46 0E00           03869         MOVLW 0
001A48 218A           03870         ADDWFC SD_ROOT_DIR_POSH,W
001A4A 6FC3           03871         MOVWF SD_WRITE_BUFFER_POSH
  00001A4C            03872 F4_000968 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = 0
001A4C 6B4D           03873         CLRF SD_DATA_IO
  00001A4E            03874 F4_000969 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001A4E 0100           03875         MOVLB 0
  00000000            03876 RAM_BANK = 0
                      03877         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001A54            03878 F4_000970 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
001A54 0102           03879         MOVLB 2
  00000002            03880 RAM_BANK = 2
001A56 2B50           03881         INCF SD_ROOT_DIR_FILE_POS,F
001A58 0100           03882         MOVLB 0
  00000000            03883 RAM_BANK = 0
001A5A A4D8           03884         BTFSS STATUS,2,0
                      03885         GO@TO FR@LB168
001A5E                03886 NX@LB169
  00001A5E            03887 F4_000971 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Modify_File_Name
                      03888         F@CALL SD_MODIFY_FILE_NAME
  00001A62            03889 F4_000972 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
001A62 0102           03890         MOVLB 2
  00000002            03891 RAM_BANK = 2
001A64 6B50           03892         CLRF SD_ROOT_DIR_FILE_POS
001A66                03893 FR@LB170
001A66 0100           03894         MOVLB 0
  00000000            03895 RAM_BANK = 0
001A68 0E08           03896         MOVLW 8
001A6A 0102           03897         MOVLB 2
  00000002            03898 RAM_BANK = 2
001A6C 5D50           03899         SUBWF SD_ROOT_DIR_FILE_POS,W
001A6E 0100           03900         MOVLB 0
  00000000            03901 RAM_BANK = 0
001A70 B0D8           03902         BTFSC STATUS,0,0
                      03903         GO@TO NX@LB171
  00001A76            03904 F4_000973 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + SD_Root_Dir_File_Pos
001A76 0102           03905         MOVLB 2
  00000002            03906 RAM_BANK = 2
001A78 5150           03907         MOVF SD_ROOT_DIR_FILE_POS,W
001A7A 2589           03908         ADDWF SD_ROOT_DIR_POS,W
001A7C 6FC2           03909         MOVWF SD_WRITE_BUFFER_POS
001A7E 0E00           03910         MOVLW 0
001A80 218A           03911         ADDWFC SD_ROOT_DIR_POSH,W
001A82 6FC3           03912         MOVWF SD_WRITE_BUFFER_POSH
  00001A84            03913 F4_000974 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Name[SD_Root_Dir_File_Pos]
001A84 EE02 F091      03914         LFSR 0,SD_FILE_NAME
001A88 5150           03915         MOVF SD_ROOT_DIR_FILE_POS,W
001A8A 50EB           03916         MOVF PLUSW0,W,0
001A8C 6F4D           03917         MOVWF SD_DATA_IO
  00001A8E            03918 F4_000975 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001A8E 0100           03919         MOVLB 0
  00000000            03920 RAM_BANK = 0
                      03921         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001A94            03922 F4_000976 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
001A94 0102           03923         MOVLB 2
  00000002            03924 RAM_BANK = 2
001A96 2B50           03925         INCF SD_ROOT_DIR_FILE_POS,F
001A98 0100           03926         MOVLB 0
  00000000            03927 RAM_BANK = 0
001A9A A4D8           03928         BTFSS STATUS,2,0
                      03929         GO@TO FR@LB170
001A9E                03930 NX@LB171
  00001A9E            03931 F4_000977 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
001A9E 0E08           03932         MOVLW 8
001AA0 0102           03933         MOVLB 2
  00000002            03934 RAM_BANK = 2
001AA2 6F50           03935         MOVWF SD_ROOT_DIR_FILE_POS
001AA4                03936 FR@LB172
001AA4 0100           03937         MOVLB 0
  00000000            03938 RAM_BANK = 0
001AA6 0E0B           03939         MOVLW 11
001AA8 0102           03940         MOVLB 2
  00000002            03941 RAM_BANK = 2
001AAA 5D50           03942         SUBWF SD_ROOT_DIR_FILE_POS,W
001AAC 0100           03943         MOVLB 0
  00000000            03944 RAM_BANK = 0
001AAE B0D8           03945         BTFSC STATUS,0,0
                      03946         GO@TO NX@LB173
  00001AB4            03947 F4_000978 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + SD_Root_Dir_File_Pos
001AB4 0102           03948         MOVLB 2
  00000002            03949 RAM_BANK = 2
001AB6 5150           03950         MOVF SD_ROOT_DIR_FILE_POS,W
001AB8 2589           03951         ADDWF SD_ROOT_DIR_POS,W
001ABA 6FC2           03952         MOVWF SD_WRITE_BUFFER_POS
001ABC 0E00           03953         MOVLW 0
001ABE 218A           03954         ADDWFC SD_ROOT_DIR_POSH,W
001AC0 6FC3           03955         MOVWF SD_WRITE_BUFFER_POSH
  00001AC2            03956 F4_000979 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Ext[SD_Root_Dir_File_Pos - $08]
001AC2 0E08           03957         MOVLW 8
001AC4 5D50           03958         SUBWF SD_ROOT_DIR_FILE_POS,W
001AC6 EE02 F09A      03959         LFSR 0,SD_FILE_EXT
001ACA 50EB           03960         MOVF PLUSW0,W,0
001ACC 6F4D           03961         MOVWF SD_DATA_IO
  00001ACE            03962 F4_000980 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001ACE 0100           03963         MOVLB 0
  00000000            03964 RAM_BANK = 0
                      03965         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001AD4            03966 F4_000981 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
001AD4 0102           03967         MOVLB 2
  00000002            03968 RAM_BANK = 2
001AD6 2B50           03969         INCF SD_ROOT_DIR_FILE_POS,F
001AD8 0100           03970         MOVLB 0
  00000000            03971 RAM_BANK = 0
001ADA A4D8           03972         BTFSS STATUS,2,0
                      03973         GO@TO FR@LB172
001ADE                03974 NX@LB173
  00001ADE            03975 F4_000982 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $0B
001ADE 0E0B           03976         MOVLW 11
001AE0 0102           03977         MOVLB 2
  00000002            03978 RAM_BANK = 2
001AE2 2589           03979         ADDWF SD_ROOT_DIR_POS,W
001AE4 6FC2           03980         MOVWF SD_WRITE_BUFFER_POS
001AE6 0E00           03981         MOVLW 0
001AE8 218A           03982         ADDWFC SD_ROOT_DIR_POSH,W
001AEA 6FC3           03983         MOVWF SD_WRITE_BUFFER_POSH
  00001AEC            03984 F4_000983 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = %00100000
001AEC 0E20           03985         MOVLW 32
001AEE 6F4D           03986         MOVWF SD_DATA_IO
  00001AF0            03987 F4_000984 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001AF0 0100           03988         MOVLB 0
  00000000            03989 RAM_BANK = 0
                      03990         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001AF6            03991 F4_000985 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $0D
001AF6 0E0D           03992         MOVLW 13
001AF8 0102           03993         MOVLB 2
  00000002            03994 RAM_BANK = 2
001AFA 2589           03995         ADDWF SD_ROOT_DIR_POS,W
001AFC 6FC2           03996         MOVWF SD_WRITE_BUFFER_POS
001AFE 0E00           03997         MOVLW 0
001B00 218A           03998         ADDWFC SD_ROOT_DIR_POSH,W
001B02 6FC3           03999         MOVWF SD_WRITE_BUFFER_POSH
  00001B04            04000 F4_000986 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Set_File_Time_Create
001B04 0100           04001         MOVLB 0
  00000000            04002 RAM_BANK = 0
                      04003         F@CALL SD_SET_FILE_TIME_CREATE
  00001B0A            04004 F4_000987 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $1A
001B0A 0E1A           04005         MOVLW 26
001B0C 0102           04006         MOVLB 2
  00000002            04007 RAM_BANK = 2
001B0E 2589           04008         ADDWF SD_ROOT_DIR_POS,W
001B10 6FC2           04009         MOVWF SD_WRITE_BUFFER_POS
001B12 0E00           04010         MOVLW 0
001B14 218A           04011         ADDWFC SD_ROOT_DIR_POSH,W
001B16 6FC3           04012         MOVWF SD_WRITE_BUFFER_POSH
  00001B18            04013 F4_000988 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE0
001B18 C2C5 F24D      04014         MOVFF SD_CLUSTER_NUM,SD_DATA_IO
  00001B1C            04015 F4_000989 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001B1C 0100           04016         MOVLB 0
  00000000            04017 RAM_BANK = 0
                      04018         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001B22            04019 F4_000990 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001B22 0102           04020         MOVLB 2
  00000002            04021 RAM_BANK = 2
001B24 4BC2           04022         INFSNZ SD_WRITE_BUFFER_POS,F
001B26 2BC3           04023         INCF SD_WRITE_BUFFER_POSH,F
  00001B28            04024 F4_000991 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE1
001B28 C2C6 F24D      04025         MOVFF SD_CLUSTER_NUMH,SD_DATA_IO
  00001B2C            04026 F4_000992 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001B2C 0100           04027         MOVLB 0
  00000000            04028 RAM_BANK = 0
                      04029         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001B32            04030 F4_000993 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04031         F@CALL SD_WRITE_SECTOR
  00001B36            04032 F4_000994 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001B36 0EFE           04033         MOVLW 254
001B38 0102           04034         MOVLB 2
  00000002            04035 RAM_BANK = 2
001B3A 25C5           04036         ADDWF SD_CLUSTER_NUM,W
001B3C 6E23           04037         MOVWF PP7,0
001B3E 0EFF           04038         MOVLW 255
001B40 21C6           04039         ADDWFC SD_CLUSTER_NUMH,W
001B42 6E24           04040         MOVWF PP7H,0
001B44 0EFF           04041         MOVLW 255
001B46 6A25           04042         CLRF PP7HH,0
001B48 2225           04043         ADDWFC PP7HH,F,0
001B4A 6A26           04044         CLRF PP7HHH,0
001B4C 2226           04045         ADDWFC PP7HHH,F,0
001B4E C026 F014      04046         MOVFF PP7HHH,PP0HHH
001B52 C025 F013      04047         MOVFF PP7HH,PP0HH
001B56 C024 F012      04048         MOVFF PP7H,PP0H
001B5A C023 F011      04049         MOVFF PP7,PP0
001B5E 6A1C           04050         CLRF PP2HHH,0
001B60 6A1B           04051         CLRF PP2HH,0
001B62 6A1A           04052         CLRF PP2H,0
001B64 C255 F019      04053         MOVFF SD_SECS_PER_CLUSTER,PP2
                      04054         F@CALL AL@MUL
001B6C C014 F28E      04055         MOVFF PP0HHH,SD_DATA_SECHHH
001B70 C013 F28D      04056         MOVFF PP0HH,SD_DATA_SECHH
001B74 C012 F28C      04057         MOVFF PP0H,SD_DATA_SECH
001B78 C011 F28B      04058         MOVFF PP0,SD_DATA_SEC
  00001B7C            04059 F4_000995 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
001B7C 5173           04060         MOVF SD_DATA_AREA,W
001B7E 278B           04061         ADDWF SD_DATA_SEC,F
001B80 5174           04062         MOVF SD_DATA_AREAH,W
001B82 238C           04063         ADDWFC SD_DATA_SECH,F
001B84 5175           04064         MOVF SD_DATA_AREAHH,W
001B86 238D           04065         ADDWFC SD_DATA_SECHH,F
001B88 5176           04066         MOVF SD_DATA_AREAHHH,W
001B8A 238E           04067         ADDWFC SD_DATA_SECHHH,F
  00001B8C            04068 F4_000996 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
001B8C 0E01           04069         MOVLW 1
001B8E 6FCB           04070         MOVWF SD_SEC_IN_CLUSTER
  00001B90            04071 F4_000997 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001B90 C28E F037      04072         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001B94 C28D F036      04073         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001B98 C28C F035      04074         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001B9C C28B F034      04075         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001BA0            04076 F4_000998 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 0
001BA0 6B4A           04077         CLRF SD_RW_OPTION
  00001BA2            04078 F4_000999 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001BA2 0100           04079         MOVLB 0
  00000000            04080 RAM_BANK = 0
                      04081         F@CALL SD_SECTOR_SUB
  00001BA8            04082 F4_001001 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 0
001BA8 0102           04083         MOVLB 2
  00000002            04084 RAM_BANK = 2
001BAA 6B90           04085         CLRF SD_DATA_BUFFER_POSH
001BAC 6B8F           04086         CLRF SD_DATA_BUFFER_POS
  00001BAE            04087 F4_001002 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size = 0
001BAE 6BCF           04088         CLRF SD_FILE_SIZEHHH
001BB0 6BCE           04089         CLRF SD_FILE_SIZEHH
001BB2 6BCD           04090         CLRF SD_FILE_SIZEH
001BB4 6BCC           04091         CLRF SD_FILE_SIZE
  00001BB6            04092 F4_001003 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Ptr = 0
001BB6 6BE4           04093         CLRF SD_BYTES_READHHH
001BB8 6BE3           04094         CLRF SD_BYTES_READHH
001BBA 6BE2           04095         CLRF SD_BYTES_READH
001BBC 6BE1           04096         CLRF SD_BYTES_READ
  00001BBE            04097 F4_001004 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
001BBE 81E5           04098         BSF _B#VR1,0
  00001BC0            04099 F4_001005 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Return_F = 1
001BC0 0E01           04100         MOVLW 1
001BC2 6FF8           04101         MOVWF SD_RETURN_F
  00001BC4            04102 F4_001006 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001BC4 0100           04103         MOVLB 0
  00000000            04104 RAM_BANK = 0
001BC6 0012           04105         RETURN 0
  00001BC8            04106 F4_001012 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Append_File MACRO
                      04107 SD_APPEND_FILE  MACRO .,.,.,.,.,.,.,.,.,.
                      04108  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      04109  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      04110         F@CALL SD_APPEND_FILE_SUB
                      04111         IF (RETURN_TYPE !=BYTE)
                      04112         ERROR "(In Asm) SD_Append_File - Return variable should be a Byte variable"
                      04113         ELSE
                      04114         IF (RETURN_TYPE == BYTE)
                      04115         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      04116         ENDIF
                      04117         ENDIF
                      04118         ENDM
001BC8                04119 SD_APPEND_FILE_SUB
  00001BC8            04120 F4_001030 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Check_For_File_Sub
                      04121         F@CALL SD_CHECK_FOR_FILE_SUB
  00001BCC            04122 F4_001031 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir <> 0 Then
001BCC 0102           04123         MOVLB 2
  00000002            04124 RAM_BANK = 2
001BCE 534C           04125         MOVF SD_EXTENDED_RETURN_ROOT_DIR,F
001BD0 0100           04126         MOVLB 0
  00000000            04127 RAM_BANK = 0
001BD2 B4D8           04128         BTFSC STATUS,2,0
                      04129         GO@TO BC@LL174
  00001BD8            04130 F4_001032 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001BD8 0E01           04131         MOVLW 1
001BDA 0102           04132         MOVLB 2
  00000002            04133 RAM_BANK = 2
001BDC 6F4B           04134         MOVWF SD_EXTENDED_RETURN
  00001BDE            04135 F4_001033 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001BDE 0100           04136         MOVLB 0
  00000000            04137 RAM_BANK = 0
001BE0 0012           04138         RETURN 0
  00001BE2            04139 F4_001034 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001BE2                04140 BC@LL174
  00001BE2            04141 F4_001035 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE0 = SD_Root_Dir_File[$1A]
001BE2 0102           04142         MOVLB 2
  00000002            04143 RAM_BANK = 2
001BE4 51B8           04144         MOVF SD_ROOT_DIR_FILE#26,W
001BE6 6FC5           04145         MOVWF SD_CLUSTER_NUM
  00001BE8            04146 F4_001036 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE1 = SD_Root_Dir_File[$1B]
001BE8 51B9           04147         MOVF SD_ROOT_DIR_FILE#27,W
001BEA 6FC6           04148         MOVWF SD_CLUSTER_NUMH
  00001BEC            04149 F4_001037 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE0 = SD_Root_Dir_File[$1C]
001BEC 51BA           04150         MOVF SD_ROOT_DIR_FILE#28,W
001BEE 6FCC           04151         MOVWF SD_FILE_SIZE
  00001BF0            04152 F4_001038 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE1 = SD_Root_Dir_File[$1D]
001BF0 51BB           04153         MOVF SD_ROOT_DIR_FILE#29,W
001BF2 6FCD           04154         MOVWF SD_FILE_SIZEH
  00001BF4            04155 F4_001039 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE2 = SD_Root_Dir_File[$1E]
001BF4 51BC           04156         MOVF SD_ROOT_DIR_FILE#30,W
001BF6 6FCE           04157         MOVWF SD_FILE_SIZEHH
  00001BF8            04158 F4_001040 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE3 = SD_Root_Dir_File[$1F]
001BF8 51BD           04159         MOVF SD_ROOT_DIR_FILE#31,W
001BFA 6FCF           04160         MOVWF SD_FILE_SIZEHHH
  00001BFC            04161 F4_001041 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size_Left = SD_File_Size
001BFC C2CF F2ED      04162         MOVFF SD_FILE_SIZEHHH,SD_FILE_SIZE_LEFTHHH
001C00 C2CE F2EC      04163         MOVFF SD_FILE_SIZEHH,SD_FILE_SIZE_LEFTHH
001C04 C2CD F2EB      04164         MOVFF SD_FILE_SIZEH,SD_FILE_SIZE_LEFTH
001C08 C2CC F2EA      04165         MOVFF SD_FILE_SIZE,SD_FILE_SIZE_LEFT
  00001C0C            04166 F4_001042 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = 0
001C0C 6A37           04167         CLRF SD_SECTOR_NUMHHH,0
001C0E 6A36           04168         CLRF SD_SECTOR_NUMHH,0
001C10 6A35           04169         CLRF SD_SECTOR_NUMH,0
001C12 6A34           04170         CLRF SD_SECTOR_NUM,0
  00001C14            04171 F4_001043 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] While SD_File_Size_Left > (SD_Bytes_Per_Sec * SD_Secs_Per_Cluster)
001C14                04172 BC@LL175
001C14 0100           04173         MOVLB 0
  00000000            04174 RAM_BANK = 0
001C16 0102           04175         MOVLB 2
  00000002            04176 RAM_BANK = 2
001C18 5155           04177         MOVF SD_SECS_PER_CLUSTER,W
001C1A 035F           04178         MULWF SD_BYTES_PER_SEC
001C1C CFF3 F008      04179         MOVFF PRODL,PBP#VAR0
001C20 CFF4 F009      04180         MOVFF PRODH,PBP#VAR0H
001C24 0360           04181         MULWF SD_BYTES_PER_SECH
001C26 50F3           04182         MOVF PRODL,W,0
001C28 2609           04183         ADDWF PBP#VAR0H,F,0
001C2A 96D8           04184         BCF STATUS,3,0
001C2C BFED           04185         BTFSC SD_FILE_SIZE_LEFTHHH,7
001C2E 86D8           04186         BSF STATUS,3,0
001C30 0100           04187         MOVLB 0
  00000000            04188 RAM_BANK = 0
                      04189         G@OTO BC@LL176
001C38 0102           04190         MOVLB 2
  00000002            04191 RAM_BANK = 2
001C3A 53ED           04192         MOVF SD_FILE_SIZE_LEFTHHH,F
001C3C E110           04193         BNZ CP@LB25
001C3E 53EC           04194         MOVF SD_FILE_SIZE_LEFTHH,F
001C40 E10E           04195         BNZ CP@LB25
001C42 5009           04196         MOVF PBP#VAR0H,W,0
001C44 5DEB           04197         SUBWF SD_FILE_SIZE_LEFTH,W
001C46 0100           04198         MOVLB 0
  00000000            04199 RAM_BANK = 0
001C48 A0D8           04200         BTFSS STATUS,0,0
                      04201         GO@TO BC@LL176
001C4E E107           04202         BNZ CP@LB25
001C50 0102           04203         MOVLB 2
  00000002            04204 RAM_BANK = 2
001C52 51EA           04205         MOVF SD_FILE_SIZE_LEFT,W
001C54 5C08           04206         SUBWF PBP#VAR0,W,0
001C56 0100           04207         MOVLB 0
  00000000            04208 RAM_BANK = 0
001C58 B0D8           04209         BTFSC STATUS,0,0
                      04210         GO@TO BC@LL176
001C5E                04211 CP@LB25
  00001C5E            04212 F4_001044 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001C5E 6A14           04213         CLRF PP0HHH,0
001C60 6A13           04214         CLRF PP0HH,0
001C62 C2C6 F012      04215         MOVFF SD_CLUSTER_NUMH,PP0H
001C66 C2C5 F011      04216         MOVFF SD_CLUSTER_NUM,PP0
001C6A 6A1C           04217         CLRF PP2HHH,0
001C6C 6A1B           04218         CLRF PP2HH,0
001C6E 0E01           04219         MOVLW 1
001C70 6E1A           04220         MOVWF PP2H,0
001C72 6A19           04221         CLRF PP2,0
                      04222         F@CALL L@DIV
001C78 C014 F27C      04223         MOVFF PP0HHH,SD_FAT_SECHHH
001C7C C013 F27B      04224         MOVFF PP0HH,SD_FAT_SECHH
001C80 C012 F27A      04225         MOVFF PP0H,SD_FAT_SECH
001C84 C011 F279      04226         MOVFF PP0,SD_FAT_SEC
  00001C88            04227 F4_001045 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001C88 C2C5 F27D      04228         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001C8C 0102           04229         MOVLB 2
  00000002            04230 RAM_BANK = 2
001C8E 6B7E           04231         CLRF SD_FAT_BUFFER_POSH
  00001C90            04232 F4_001046 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001C90 90D8           04233         BCF STATUS,0,0
001C92 377D           04234         RLCF SD_FAT_BUFFER_POS,F
001C94 377E           04235         RLCF SD_FAT_BUFFER_POSH,F
  00001C96            04236 F4_001047 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Sector_Num <> (SD_FAT1 + SD_FAT_Sec) Then
001C96 5179           04237         MOVF SD_FAT_SEC,W
001C98 2567           04238         ADDWF SD_FAT1,W
001C9A 6E08           04239         MOVWF PBP#VAR0,0
001C9C 517A           04240         MOVF SD_FAT_SECH,W
001C9E 2168           04241         ADDWFC SD_FAT1H,W
001CA0 6E09           04242         MOVWF PBP#VAR0H,0
001CA2 517B           04243         MOVF SD_FAT_SECHH,W
001CA4 2169           04244         ADDWFC SD_FAT1HH,W
001CA6 6E0A           04245         MOVWF PBP#VAR0HH,0
001CA8 517C           04246         MOVF SD_FAT_SECHHH,W
001CAA 216A           04247         ADDWFC SD_FAT1HHH,W
001CAC 6E0B           04248         MOVWF PBP#VAR0HHH,0
001CAE 5008           04249         MOVF PBP#VAR0,W,0
001CB0 5C34           04250         SUBWF SD_SECTOR_NUM,W,0
001CB2 E10C           04251         BNZ CP@LB26
001CB4 5009           04252         MOVF PBP#VAR0H,W,0
001CB6 5C35           04253         SUBWF SD_SECTOR_NUMH,W,0
001CB8 E109           04254         BNZ CP@LB26
001CBA 500A           04255         MOVF PBP#VAR0HH,W,0
001CBC 5C36           04256         SUBWF SD_SECTOR_NUMHH,W,0
001CBE E106           04257         BNZ CP@LB26
001CC0 500B           04258         MOVF PBP#VAR0HHH,W,0
001CC2 5C37           04259         SUBWF SD_SECTOR_NUMHHH,W,0
001CC4 0100           04260         MOVLB 0
  00000000            04261 RAM_BANK = 0
001CC6 B4D8           04262         BTFSC STATUS,2,0
                      04263         GO@TO BC@LL178
001CCC                04264 CP@LB26
  00001CCC            04265 F4_001048 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
001CCC 0102           04266         MOVLB 2
  00000002            04267 RAM_BANK = 2
001CCE 5179           04268         MOVF SD_FAT_SEC,W
001CD0 2567           04269         ADDWF SD_FAT1,W
001CD2 6E34           04270         MOVWF SD_SECTOR_NUM,0
001CD4 517A           04271         MOVF SD_FAT_SECH,W
001CD6 2168           04272         ADDWFC SD_FAT1H,W
001CD8 6E35           04273         MOVWF SD_SECTOR_NUMH,0
001CDA 517B           04274         MOVF SD_FAT_SECHH,W
001CDC 2169           04275         ADDWFC SD_FAT1HH,W
001CDE 6E36           04276         MOVWF SD_SECTOR_NUMHH,0
001CE0 517C           04277         MOVF SD_FAT_SECHHH,W
001CE2 216A           04278         ADDWFC SD_FAT1HHH,W
001CE4 6E37           04279         MOVWF SD_SECTOR_NUMHHH,0
  00001CE6            04280 F4_001049 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001CE6 0E01           04281         MOVLW 1
001CE8 6F4A           04282         MOVWF SD_RW_OPTION
  00001CEA            04283 F4_001050 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001CEA 0100           04284         MOVLB 0
  00000000            04285 RAM_BANK = 0
                      04286         F@CALL SD_SECTOR_SUB
  00001CF0            04287 F4_001052 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001CF0                04288 BC@LL178
  00001CF0            04289 F4_001053 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
001CF0 C27E F24F      04290         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
001CF4 C27D F24E      04291         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  00001CF8            04292 F4_001054 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      04293         F@CALL SD_READ_FAT_ENTRY
  00001CFC            04294 F4_001055 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
001CFC C278 F2C6      04295         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
001D00 C277 F2C5      04296         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  00001D04            04297 F4_001056 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Size_Left = SD_File_Size_Left - (SD_Bytes_Per_Sec * SD_Secs_Per_Cluster)
001D04 6A14           04298         CLRF PP0HHH,0
001D06 6A13           04299         CLRF PP0HH,0
001D08 C260 F012      04300         MOVFF SD_BYTES_PER_SECH,PP0H
001D0C C25F F011      04301         MOVFF SD_BYTES_PER_SEC,PP0
001D10 6A1C           04302         CLRF PP2HHH,0
001D12 6A1B           04303         CLRF PP2HH,0
001D14 6A1A           04304         CLRF PP2H,0
001D16 C255 F019      04305         MOVFF SD_SECS_PER_CLUSTER,PP2
                      04306         F@CALL AL@MUL
001D1E C014 F026      04307         MOVFF PP0HHH,PP7HHH
001D22 C013 F025      04308         MOVFF PP0HH,PP7HH
001D26 C012 F024      04309         MOVFF PP0H,PP7H
001D2A C011 F023      04310         MOVFF PP0,PP7
001D2E 5023           04311         MOVF PP7,W,0
001D30 0102           04312         MOVLB 2
  00000002            04313 RAM_BANK = 2
001D32 5FEA           04314         SUBWF SD_FILE_SIZE_LEFT,F
001D34 5024           04315         MOVF PP7H,W,0
001D36 5BEB           04316         SUBWFB SD_FILE_SIZE_LEFTH,F
001D38 5025           04317         MOVF PP7HH,W,0
001D3A 5BEC           04318         SUBWFB SD_FILE_SIZE_LEFTHH,F
001D3C 5026           04319         MOVF PP7HHH,W,0
001D3E 5BED           04320         SUBWFB SD_FILE_SIZE_LEFTHHH,F
  00001D40            04321 F4_001057 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Wend
001D40 0100           04322         MOVLB 0
  00000000            04323 RAM_BANK = 0
                      04324         F@JUMP BC@LL175
001D44                04325 BC@LL176
  00001D44            04326 F4_001058 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001D44 6A14           04327         CLRF PP0HHH,0
001D46 6A13           04328         CLRF PP0HH,0
001D48 C2C6 F012      04329         MOVFF SD_CLUSTER_NUMH,PP0H
001D4C C2C5 F011      04330         MOVFF SD_CLUSTER_NUM,PP0
001D50 6A1C           04331         CLRF PP2HHH,0
001D52 6A1B           04332         CLRF PP2HH,0
001D54 0E01           04333         MOVLW 1
001D56 6E1A           04334         MOVWF PP2H,0
001D58 6A19           04335         CLRF PP2,0
                      04336         F@CALL L@DIV
001D5E C014 F27C      04337         MOVFF PP0HHH,SD_FAT_SECHHH
001D62 C013 F27B      04338         MOVFF PP0HH,SD_FAT_SECHH
001D66 C012 F27A      04339         MOVFF PP0H,SD_FAT_SECH
001D6A C011 F279      04340         MOVFF PP0,SD_FAT_SEC
  00001D6E            04341 F4_001059 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001D6E C2C5 F27D      04342         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001D72 0102           04343         MOVLB 2
  00000002            04344 RAM_BANK = 2
001D74 6B7E           04345         CLRF SD_FAT_BUFFER_POSH
  00001D76            04346 F4_001060 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001D76 90D8           04347         BCF STATUS,0,0
001D78 377D           04348         RLCF SD_FAT_BUFFER_POS,F
001D7A 377E           04349         RLCF SD_FAT_BUFFER_POSH,F
  00001D7C            04350 F4_001061 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_File_Size_Left = 0 Then
001D7C 51ED           04351         MOVF SD_FILE_SIZE_LEFTHHH,W
001D7E 11EC           04352         IORWF SD_FILE_SIZE_LEFTHH,W
001D80 11EB           04353         IORWF SD_FILE_SIZE_LEFTH,W
001D82 11EA           04354         IORWF SD_FILE_SIZE_LEFT,W
001D84 0100           04355         MOVLB 0
  00000000            04356 RAM_BANK = 0
001D86 A4D8           04357         BTFSS STATUS,2,0
                      04358         GO@TO BC@LL180
  00001D8C            04359 F4_001062 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 0
001D8C 0102           04360         MOVLB 2
  00000002            04361 RAM_BANK = 2
001D8E 6BCB           04362         CLRF SD_SEC_IN_CLUSTER
001D90 0100           04363         MOVLB 0
  00000000            04364 RAM_BANK = 0
                      04365         F@JUMP BC@LL181
001D96                04366 BC@LL180
  00001D96            04367 F4_001063 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  00001D96            04368 F4_001064 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = (SD_File_Size_Left - 1) / SD_Bytes_Per_Sec
001D96 0102           04369         MOVLB 2
  00000002            04370 RAM_BANK = 2
001D98 05EA           04371         DECF SD_FILE_SIZE_LEFT,W
001D9A 6E23           04372         MOVWF PP7,0
001D9C 0E00           04373         MOVLW 0
001D9E 59EB           04374         SUBWFB SD_FILE_SIZE_LEFTH,W
001DA0 6E24           04375         MOVWF PP7H,0
001DA2 0E00           04376         MOVLW 0
001DA4 59EC           04377         SUBWFB SD_FILE_SIZE_LEFTHH,W
001DA6 6E25           04378         MOVWF PP7HH,0
001DA8 0E00           04379         MOVLW 0
001DAA 59ED           04380         SUBWFB SD_FILE_SIZE_LEFTHHH,W
001DAC 6E26           04381         MOVWF PP7HHH,0
001DAE C026 F014      04382         MOVFF PP7HHH,PP0HHH
001DB2 C025 F013      04383         MOVFF PP7HH,PP0HH
001DB6 C024 F012      04384         MOVFF PP7H,PP0H
001DBA C023 F011      04385         MOVFF PP7,PP0
001DBE 6A1C           04386         CLRF PP2HHH,0
001DC0 6A1B           04387         CLRF PP2HH,0
001DC2 C260 F01A      04388         MOVFF SD_BYTES_PER_SECH,PP2H
001DC6 C25F F019      04389         MOVFF SD_BYTES_PER_SEC,PP2
                      04390         F@CALL L@DIV
001DCE C011 F2CB      04391         MOVFF PP0,SD_SEC_IN_CLUSTER
  00001DD2            04392 F4_001065 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001DD2                04393 BC@LL181
001DD2 0100           04394         MOVLB 0
  00000000            04395 RAM_BANK = 0
  00001DD4            04396 F4_001066 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001DD4 0EFE           04397         MOVLW 254
001DD6 0102           04398         MOVLB 2
  00000002            04399 RAM_BANK = 2
001DD8 25C5           04400         ADDWF SD_CLUSTER_NUM,W
001DDA 6E23           04401         MOVWF PP7,0
001DDC 0EFF           04402         MOVLW 255
001DDE 21C6           04403         ADDWFC SD_CLUSTER_NUMH,W
001DE0 6E24           04404         MOVWF PP7H,0
001DE2 0EFF           04405         MOVLW 255
001DE4 6A25           04406         CLRF PP7HH,0
001DE6 2225           04407         ADDWFC PP7HH,F,0
001DE8 6A26           04408         CLRF PP7HHH,0
001DEA 2226           04409         ADDWFC PP7HHH,F,0
001DEC C026 F014      04410         MOVFF PP7HHH,PP0HHH
001DF0 C025 F013      04411         MOVFF PP7HH,PP0HH
001DF4 C024 F012      04412         MOVFF PP7H,PP0H
001DF8 C023 F011      04413         MOVFF PP7,PP0
001DFC 6A1C           04414         CLRF PP2HHH,0
001DFE 6A1B           04415         CLRF PP2HH,0
001E00 6A1A           04416         CLRF PP2H,0
001E02 C255 F019      04417         MOVFF SD_SECS_PER_CLUSTER,PP2
                      04418         F@CALL AL@MUL
001E0A C014 F28E      04419         MOVFF PP0HHH,SD_DATA_SECHHH
001E0E C013 F28D      04420         MOVFF PP0HH,SD_DATA_SECHH
001E12 C012 F28C      04421         MOVFF PP0H,SD_DATA_SECH
001E16 C011 F28B      04422         MOVFF PP0,SD_DATA_SEC
  00001E1A            04423 F4_001067 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Sec_in_Cluster
001E1A 51CB           04424         MOVF SD_SEC_IN_CLUSTER,W
001E1C 258B           04425         ADDWF SD_DATA_SEC,W
001E1E 6F8B           04426         MOVWF SD_DATA_SEC
001E20 0E00           04427         MOVLW 0
001E22 218C           04428         ADDWFC SD_DATA_SECH,W
001E24 6F8C           04429         MOVWF SD_DATA_SECH
001E26 0E00           04430         MOVLW 0
001E28 218D           04431         ADDWFC SD_DATA_SECHH,W
001E2A 6F8D           04432         MOVWF SD_DATA_SECHH
001E2C 0E00           04433         MOVLW 0
001E2E 218E           04434         ADDWFC SD_DATA_SECHHH,W
001E30 6F8E           04435         MOVWF SD_DATA_SECHHH
  00001E32            04436 F4_001068 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
001E32 5173           04437         MOVF SD_DATA_AREA,W
001E34 278B           04438         ADDWF SD_DATA_SEC,F
001E36 5174           04439         MOVF SD_DATA_AREAH,W
001E38 238C           04440         ADDWFC SD_DATA_SECH,F
001E3A 5175           04441         MOVF SD_DATA_AREAHH,W
001E3C 238D           04442         ADDWFC SD_DATA_SECHH,F
001E3E 5176           04443         MOVF SD_DATA_AREAHHH,W
001E40 238E           04444         ADDWFC SD_DATA_SECHHH,F
  00001E42            04445 F4_001069 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = SD_Sec_in_Cluster + 1
001E42 2BCB           04446         INCF SD_SEC_IN_CLUSTER,F
  00001E44            04447 F4_001070 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001E44 C28E F037      04448         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001E48 C28D F036      04449         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001E4C C28C F035      04450         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001E50 C28B F034      04451         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001E54            04452 F4_001071 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001E54 0E01           04453         MOVLW 1
001E56 6F4A           04454         MOVWF SD_RW_OPTION
  00001E58            04455 F4_001072 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001E58 0100           04456         MOVLB 0
  00000000            04457 RAM_BANK = 0
                      04458         F@CALL SD_SECTOR_SUB
  00001E5E            04459 F4_001074 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Return = 1 Then
001E5E 0E01           04460         MOVLW 1
001E60 5C40           04461         SUBWF SD_RETURN,W,0
001E62 A4D8           04462         BTFSS STATUS,2,0
                      04463         GO@TO BC@LL183
  00001E68            04464 F4_001075 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001E68 0E01           04465         MOVLW 1
001E6A 0102           04466         MOVLB 2
  00000002            04467 RAM_BANK = 2
001E6C 6F4B           04468         MOVWF SD_EXTENDED_RETURN
  00001E6E            04469 F4_001076 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001E6E 0100           04470         MOVLB 0
  00000000            04471 RAM_BANK = 0
001E70 0012           04472         RETURN 0
  00001E72            04473 F4_001077 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001E72                04474 BC@LL183
  00001E72            04475 F4_001078 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = SD_File_Size_Left // SD_Bytes_Per_Sec
001E72 C2ED F014      04476         MOVFF SD_FILE_SIZE_LEFTHHH,PP0HHH
001E76 C2EC F013      04477         MOVFF SD_FILE_SIZE_LEFTHH,PP0HH
001E7A C2EB F012      04478         MOVFF SD_FILE_SIZE_LEFTH,PP0H
001E7E C2EA F011      04479         MOVFF SD_FILE_SIZE_LEFT,PP0
001E82 6A1C           04480         CLRF PP2HHH,0
001E84 6A1B           04481         CLRF PP2HH,0
001E86 C260 F01A      04482         MOVFF SD_BYTES_PER_SECH,PP2H
001E8A C25F F019      04483         MOVFF SD_BYTES_PER_SEC,PP2
                      04484         F@CALL L@MOD
001E92 C01A F290      04485         MOVFF PP2H,SD_DATA_BUFFER_POSH
001E96 C019 F28F      04486         MOVFF PP2,SD_DATA_BUFFER_POS
  00001E9A            04487 F4_001079 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = SD_Data_Buffer_Pos
001E9A C290 F248      04488         MOVFF SD_DATA_BUFFER_POSH,SD_BUFFER_IDXH
001E9E C28F F247      04489         MOVFF SD_DATA_BUFFER_POS,SD_BUFFER_IDX
  00001EA2            04490 F4_001080 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Data_Buffer_Pos = 0 Then
001EA2 0102           04491         MOVLB 2
  00000002            04492 RAM_BANK = 2
001EA4 5190           04493         MOVF SD_DATA_BUFFER_POSH,W
001EA6 118F           04494         IORWF SD_DATA_BUFFER_POS,W
001EA8 0100           04495         MOVLB 0
  00000000            04496 RAM_BANK = 0
001EAA A4D8           04497         BTFSS STATUS,2,0
                      04498         GO@TO BC@LL185
  00001EB0            04499 F4_001081 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_File_Size_Left > 0 Then
001EB0 96D8           04500         BCF STATUS,3,0
001EB2 0102           04501         MOVLB 2
  00000002            04502 RAM_BANK = 2
001EB4 BFED           04503         BTFSC SD_FILE_SIZE_LEFTHHH,7
001EB6 86D8           04504         BSF STATUS,3,0
001EB8 0100           04505         MOVLB 0
  00000000            04506 RAM_BANK = 0
                      04507         G@OTO BC@LL187
001EC0 0102           04508         MOVLB 2
  00000002            04509 RAM_BANK = 2
001EC2 51EA           04510         MOVF SD_FILE_SIZE_LEFT,W
001EC4 11EB           04511         IORWF SD_FILE_SIZE_LEFTH,W
001EC6 11EC           04512         IORWF SD_FILE_SIZE_LEFTHH,W
001EC8 11ED           04513         IORWF SD_FILE_SIZE_LEFTHHH,W
001ECA 0100           04514         MOVLB 0
  00000000            04515 RAM_BANK = 0
001ECC B4D8           04516         BTFSC STATUS,2,0
                      04517         GO@TO BC@LL187
001ED2 96D8           04518         BCF STATUS,3,0
001ED4 0102           04519         MOVLB 2
  00000002            04520 RAM_BANK = 2
001ED6 BFED           04521         BTFSC SD_FILE_SIZE_LEFTHHH,7
001ED8 86D8           04522         BSF STATUS,3,0
001EDA 0100           04523         MOVLB 0
  00000000            04524 RAM_BANK = 0
                      04525         G@OTO BC@LL187
001EE2 0102           04526         MOVLB 2
  00000002            04527 RAM_BANK = 2
001EE4 51EB           04528         MOVF SD_FILE_SIZE_LEFTH,W
001EE6 11EC           04529         IORWF SD_FILE_SIZE_LEFTHH,W
001EE8 11ED           04530         IORWF SD_FILE_SIZE_LEFTHHH,W
001EEA E106           04531         BNZ CP@LB28
001EEC 0E01           04532         MOVLW 1
001EEE 5DEA           04533         SUBWF SD_FILE_SIZE_LEFT,W
001EF0 0100           04534         MOVLB 0
  00000000            04535 RAM_BANK = 0
001EF2 A0D8           04536         BTFSS STATUS,0,0
                      04537         GO@TO BC@LL187
001EF8                04538 CP@LB28
  00001EF8            04539 F4_001082 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = SD_Bytes_Per_Sec
001EF8 C260 F290      04540         MOVFF SD_BYTES_PER_SECH,SD_DATA_BUFFER_POSH
001EFC C25F F28F      04541         MOVFF SD_BYTES_PER_SEC,SD_DATA_BUFFER_POS
  00001F00            04542 F4_001083 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sector_Num
001F00 2A34           04543         INCF SD_SECTOR_NUM,F,0
001F02 0E00           04544         MOVLW 0
001F04 2235           04545         ADDWFC SD_SECTOR_NUMH,F,0
001F06 2236           04546         ADDWFC SD_SECTOR_NUMHH,F,0
001F08 2237           04547         ADDWFC SD_SECTOR_NUMHHH,F,0
  00001F0A            04548 F4_001084 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001F0A                04549 BC@LL187
  00001F0A            04550 F4_001085 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001F0A                04551 BC@LL185
  00001F0A            04552 F4_001086 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Idx = 1
001F0A 0102           04553         MOVLB 2
  00000002            04554 RAM_BANK = 2
001F0C 6BDB           04555         CLRF SD_CLUSTER_SEQ_IDXH
001F0E 0E01           04556         MOVLW 1
001F10 6FDA           04557         MOVWF SD_CLUSTER_SEQ_IDX
  00001F12            04558 F4_001087 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 1
001F12 6BD9           04559         CLRF SD_CLUSTER_SEQ_NUMH
001F14 0E01           04560         MOVLW 1
001F16 6FD8           04561         MOVWF SD_CLUSTER_SEQ_NUM
  00001F18            04562 F4_001088 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
001F18 81E5           04563         BSF _B#VR1,0
  00001F1A            04564 F4_001089 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Ptr = SD_File_Size
001F1A C2CF F2E4      04565         MOVFF SD_FILE_SIZEHHH,SD_BYTES_READHHH
001F1E C2CE F2E3      04566         MOVFF SD_FILE_SIZEHH,SD_BYTES_READHH
001F22 C2CD F2E2      04567         MOVFF SD_FILE_SIZEH,SD_BYTES_READH
001F26 C2CC F2E1      04568         MOVFF SD_FILE_SIZE,SD_BYTES_READ
  00001F2A            04569 F4_001090 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
001F2A 6B4B           04570         CLRF SD_EXTENDED_RETURN
  00001F2C            04571 F4_001091 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001F2C 0100           04572         MOVLB 0
  00000000            04573 RAM_BANK = 0
001F2E 0012           04574         RETURN 0
  00001F30            04575 F4_001097 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Delete_File MACRO
                      04576 SD_DELETE_FILE  MACRO .,.,.,.,.,.,.,.,.,.
                      04577  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      04578  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      04579         F@CALL SD_DELETE_FILE_SUB
                      04580         ENDM
001F30                04581 SD_DELETE_FILE_SUB
  00001F30            04582 F4_001108 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Check_For_File_Sub
                      04583         F@CALL SD_CHECK_FOR_FILE_SUB
  00001F34            04584 F4_001109 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir <> 0 Then
001F34 0102           04585         MOVLB 2
  00000002            04586 RAM_BANK = 2
001F36 534C           04587         MOVF SD_EXTENDED_RETURN_ROOT_DIR,F
001F38 0100           04588         MOVLB 0
  00000000            04589 RAM_BANK = 0
001F3A B4D8           04590         BTFSC STATUS,2,0
                      04591         GO@TO BC@LL189
  00001F40            04592 F4_001110 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001F40 0E01           04593         MOVLW 1
001F42 0102           04594         MOVLB 2
  00000002            04595 RAM_BANK = 2
001F44 6F4B           04596         MOVWF SD_EXTENDED_RETURN
  00001F46            04597 F4_001111 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
001F46 0100           04598         MOVLB 0
  00000000            04599 RAM_BANK = 0
001F48 0012           04600         RETURN 0
  00001F4A            04601 F4_001112 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
001F4A                04602 BC@LL189
  00001F4A            04603 F4_001113 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE0 = SD_Root_Dir_File[$1A]
001F4A 0102           04604         MOVLB 2
  00000002            04605 RAM_BANK = 2
001F4C 51B8           04606         MOVF SD_ROOT_DIR_FILE#26,W
001F4E 6FC5           04607         MOVWF SD_CLUSTER_NUM
  00001F50            04608 F4_001114 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE1 = SD_Root_Dir_File[$1B]
001F50 51B9           04609         MOVF SD_ROOT_DIR_FILE#27,W
001F52 6FC6           04610         MOVWF SD_CLUSTER_NUMH
  00001F54            04611 F4_001115 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos
001F54 C28A F2C3      04612         MOVFF SD_ROOT_DIR_POSH,SD_WRITE_BUFFER_POSH
001F58 C289 F2C2      04613         MOVFF SD_ROOT_DIR_POS,SD_WRITE_BUFFER_POS
  00001F5C            04614 F4_001116 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = $E5
001F5C 0EE5           04615         MOVLW 229
001F5E 6F4D           04616         MOVWF SD_DATA_IO
  00001F60            04617 F4_001117 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001F60 0100           04618         MOVLB 0
  00000000            04619 RAM_BANK = 0
                      04620         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001F66            04621 F4_001118 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04622         F@CALL SD_WRITE_SECTOR
  00001F6A            04623 F4_001119 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 0
001F6A 0102           04624         MOVLB 2
  00000002            04625 RAM_BANK = 2
001F6C 6B4A           04626         CLRF SD_RW_OPTION
  00001F6E            04627 F4_001120 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Repeat
001F6E                04628 BC@LL190
001F6E 0100           04629         MOVLB 0
  00000000            04630 RAM_BANK = 0
  00001F70            04631 F4_001121 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001F70 6A14           04632         CLRF PP0HHH,0
001F72 6A13           04633         CLRF PP0HH,0
001F74 C2C6 F012      04634         MOVFF SD_CLUSTER_NUMH,PP0H
001F78 C2C5 F011      04635         MOVFF SD_CLUSTER_NUM,PP0
001F7C 6A1C           04636         CLRF PP2HHH,0
001F7E 6A1B           04637         CLRF PP2HH,0
001F80 0E01           04638         MOVLW 1
001F82 6E1A           04639         MOVWF PP2H,0
001F84 6A19           04640         CLRF PP2,0
                      04641         F@CALL L@DIV
001F8A C014 F27C      04642         MOVFF PP0HHH,SD_FAT_SECHHH
001F8E C013 F27B      04643         MOVFF PP0HH,SD_FAT_SECHH
001F92 C012 F27A      04644         MOVFF PP0H,SD_FAT_SECH
001F96 C011 F279      04645         MOVFF PP0,SD_FAT_SEC
  00001F9A            04646 F4_001122 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001F9A C2C5 F27D      04647         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001F9E 0102           04648         MOVLB 2
  00000002            04649 RAM_BANK = 2
001FA0 6B7E           04650         CLRF SD_FAT_BUFFER_POSH
  00001FA2            04651 F4_001123 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001FA2 90D8           04652         BCF STATUS,0,0
001FA4 377D           04653         RLCF SD_FAT_BUFFER_POS,F
001FA6 377E           04654         RLCF SD_FAT_BUFFER_POSH,F
  00001FA8            04655 F4_001124 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Sector_Num <> (SD_FAT1 + SD_FAT_Sec) Then
001FA8 5179           04656         MOVF SD_FAT_SEC,W
001FAA 2567           04657         ADDWF SD_FAT1,W
001FAC 6E08           04658         MOVWF PBP#VAR0,0
001FAE 517A           04659         MOVF SD_FAT_SECH,W
001FB0 2168           04660         ADDWFC SD_FAT1H,W
001FB2 6E09           04661         MOVWF PBP#VAR0H,0
001FB4 517B           04662         MOVF SD_FAT_SECHH,W
001FB6 2169           04663         ADDWFC SD_FAT1HH,W
001FB8 6E0A           04664         MOVWF PBP#VAR0HH,0
001FBA 517C           04665         MOVF SD_FAT_SECHHH,W
001FBC 216A           04666         ADDWFC SD_FAT1HHH,W
001FBE 6E0B           04667         MOVWF PBP#VAR0HHH,0
001FC0 5008           04668         MOVF PBP#VAR0,W,0
001FC2 5C34           04669         SUBWF SD_SECTOR_NUM,W,0
001FC4 E10C           04670         BNZ CP@LB29
001FC6 5009           04671         MOVF PBP#VAR0H,W,0
001FC8 5C35           04672         SUBWF SD_SECTOR_NUMH,W,0
001FCA E109           04673         BNZ CP@LB29
001FCC 500A           04674         MOVF PBP#VAR0HH,W,0
001FCE 5C36           04675         SUBWF SD_SECTOR_NUMHH,W,0
001FD0 E106           04676         BNZ CP@LB29
001FD2 500B           04677         MOVF PBP#VAR0HHH,W,0
001FD4 5C37           04678         SUBWF SD_SECTOR_NUMHHH,W,0
001FD6 0100           04679         MOVLB 0
  00000000            04680 RAM_BANK = 0
001FD8 B4D8           04681         BTFSC STATUS,2,0
                      04682         GO@TO BC@LL193
001FDE                04683 CP@LB29
  00001FDE            04684 F4_001125 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_RW_Option > 0 Then
001FDE 0102           04685         MOVLB 2
  00000002            04686 RAM_BANK = 2
001FE0 534A           04687         MOVF SD_RW_OPTION,F
001FE2 0100           04688         MOVLB 0
  00000000            04689 RAM_BANK = 0
001FE4 B4D8           04690         BTFSC STATUS,2,0
                      04691         GO@TO BC@LL195
  00001FEA            04692 F4_001126 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04693         F@CALL SD_WRITE_SECTOR
  00001FEE            04694 F4_001127 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num - SD_FAT1 + SD_FAT2
001FEE 0102           04695         MOVLB 2
  00000002            04696 RAM_BANK = 2
001FF0 5167           04697         MOVF SD_FAT1,W
001FF2 5C34           04698         SUBWF SD_SECTOR_NUM,W,0
001FF4 6E23           04699         MOVWF PP7,0
001FF6 5168           04700         MOVF SD_FAT1H,W
001FF8 5835           04701         SUBWFB SD_SECTOR_NUMH,W,0
001FFA 6E24           04702         MOVWF PP7H,0
001FFC 5169           04703         MOVF SD_FAT1HH,W
001FFE 5836           04704         SUBWFB SD_SECTOR_NUMHH,W,0
002000 6E25           04705         MOVWF PP7HH,0
002002 516A           04706         MOVF SD_FAT1HHH,W
002004 5837           04707         SUBWFB SD_SECTOR_NUMHHH,W,0
002006 6E26           04708         MOVWF PP7HHH,0
002008 516B           04709         MOVF SD_FAT2,W
00200A 2423           04710         ADDWF PP7,W,0
00200C 6E34           04711         MOVWF SD_SECTOR_NUM,0
00200E 516C           04712         MOVF SD_FAT2H,W
002010 2024           04713         ADDWFC PP7H,W,0
002012 6E35           04714         MOVWF SD_SECTOR_NUMH,0
002014 516D           04715         MOVF SD_FAT2HH,W
002016 2025           04716         ADDWFC PP7HH,W,0
002018 6E36           04717         MOVWF SD_SECTOR_NUMHH,0
00201A 516E           04718         MOVF SD_FAT2HHH,W
00201C 2026           04719         ADDWFC PP7HHH,W,0
00201E 6E37           04720         MOVWF SD_SECTOR_NUMHHH,0
  00002020            04721 F4_001128 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
002020 0100           04722         MOVLB 0
  00000000            04723 RAM_BANK = 0
                      04724         F@CALL SD_WRITE_SECTOR
  00002026            04725 F4_001129 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
002026                04726 BC@LL195
  00002026            04727 F4_001130 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
002026 0102           04728         MOVLB 2
  00000002            04729 RAM_BANK = 2
002028 5179           04730         MOVF SD_FAT_SEC,W
00202A 2567           04731         ADDWF SD_FAT1,W
00202C 6E34           04732         MOVWF SD_SECTOR_NUM,0
00202E 517A           04733         MOVF SD_FAT_SECH,W
002030 2168           04734         ADDWFC SD_FAT1H,W
002032 6E35           04735         MOVWF SD_SECTOR_NUMH,0
002034 517B           04736         MOVF SD_FAT_SECHH,W
002036 2169           04737         ADDWFC SD_FAT1HH,W
002038 6E36           04738         MOVWF SD_SECTOR_NUMHH,0
00203A 517C           04739         MOVF SD_FAT_SECHHH,W
00203C 216A           04740         ADDWFC SD_FAT1HHH,W
00203E 6E37           04741         MOVWF SD_SECTOR_NUMHHH,0
  00002040            04742 F4_001131 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
002040 0E01           04743         MOVLW 1
002042 6F4A           04744         MOVWF SD_RW_OPTION
  00002044            04745 F4_001132 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
002044 0100           04746         MOVLB 0
  00000000            04747 RAM_BANK = 0
                      04748         F@CALL SD_SECTOR_SUB
  0000204A            04749 F4_001134 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
00204A                04750 BC@LL193
  0000204A            04751 F4_001135 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
00204A C27E F24F      04752         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
00204E C27D F24E      04753         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  00002052            04754 F4_001136 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      04755         F@CALL SD_READ_FAT_ENTRY
  00002056            04756 F4_001137 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
002056 C278 F2C6      04757         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
00205A C277 F2C5      04758         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  0000205E            04759 F4_001138 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_FAT_Buffer_Pos
00205E C27E F2C3      04760         MOVFF SD_FAT_BUFFER_POSH,SD_WRITE_BUFFER_POSH
002062 C27D F2C2      04761         MOVFF SD_FAT_BUFFER_POS,SD_WRITE_BUFFER_POS
  00002066            04762 F4_001139 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = $00
002066 0102           04763         MOVLB 2
  00000002            04764 RAM_BANK = 2
002068 6B4D           04765         CLRF SD_DATA_IO
  0000206A            04766 F4_001140 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
00206A 0100           04767         MOVLB 0
  00000000            04768 RAM_BANK = 0
                      04769         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00002070            04770 F4_001141 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_FAT_Buffer_Pos + 1
002070 0E01           04771         MOVLW 1
002072 0102           04772         MOVLB 2
  00000002            04773 RAM_BANK = 2
002074 257D           04774         ADDWF SD_FAT_BUFFER_POS,W
002076 6FC2           04775         MOVWF SD_WRITE_BUFFER_POS
002078 0E00           04776         MOVLW 0
00207A 217E           04777         ADDWFC SD_FAT_BUFFER_POSH,W
00207C 6FC3           04778         MOVWF SD_WRITE_BUFFER_POSH
  0000207E            04779 F4_001142 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
00207E 0100           04780         MOVLB 0
  00000000            04781 RAM_BANK = 0
                      04782         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00002084            04783 F4_001143 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Until SD_Cluster_Num = $FFFF
002084 0102           04784         MOVLB 2
  00000002            04785 RAM_BANK = 2
002086 29C5           04786         INCF SD_CLUSTER_NUM,W
002088 E101           04787         BNZ CP@LB30
00208A 29C6           04788         INCF SD_CLUSTER_NUMH,W
00208C                04789 CP@LB30
00208C 0100           04790         MOVLB 0
  00000000            04791 RAM_BANK = 0
00208E A4D8           04792         BTFSS STATUS,2,0
                      04793         GO@TO BC@LL190
002092                04794 BC@LL191
  00002092            04795 F4_001144 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04796         F@CALL SD_WRITE_SECTOR
  00002096            04797 F4_001145 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num - SD_FAT1 + SD_FAT2
002096 0102           04798         MOVLB 2
  00000002            04799 RAM_BANK = 2
002098 5167           04800         MOVF SD_FAT1,W
00209A 5C34           04801         SUBWF SD_SECTOR_NUM,W,0
00209C 6E23           04802         MOVWF PP7,0
00209E 5168           04803         MOVF SD_FAT1H,W
0020A0 5835           04804         SUBWFB SD_SECTOR_NUMH,W,0
0020A2 6E24           04805         MOVWF PP7H,0
0020A4 5169           04806         MOVF SD_FAT1HH,W
0020A6 5836           04807         SUBWFB SD_SECTOR_NUMHH,W,0
0020A8 6E25           04808         MOVWF PP7HH,0
0020AA 516A           04809         MOVF SD_FAT1HHH,W
0020AC 5837           04810         SUBWFB SD_SECTOR_NUMHHH,W,0
0020AE 6E26           04811         MOVWF PP7HHH,0
0020B0 516B           04812         MOVF SD_FAT2,W
0020B2 2423           04813         ADDWF PP7,W,0
0020B4 6E34           04814         MOVWF SD_SECTOR_NUM,0
0020B6 516C           04815         MOVF SD_FAT2H,W
0020B8 2024           04816         ADDWFC PP7H,W,0
0020BA 6E35           04817         MOVWF SD_SECTOR_NUMH,0
0020BC 516D           04818         MOVF SD_FAT2HH,W
0020BE 2025           04819         ADDWFC PP7HH,W,0
0020C0 6E36           04820         MOVWF SD_SECTOR_NUMHH,0
0020C2 516E           04821         MOVF SD_FAT2HHH,W
0020C4 2026           04822         ADDWFC PP7HHH,W,0
0020C6 6E37           04823         MOVWF SD_SECTOR_NUMHHH,0
  000020C8            04824 F4_001146 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
0020C8 0100           04825         MOVLB 0
  00000000            04826 RAM_BANK = 0
                      04827         F@CALL SD_WRITE_SECTOR
  000020CE            04828 F4_001147 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
0020CE 0102           04829         MOVLB 2
  00000002            04830 RAM_BANK = 2
0020D0 6B4B           04831         CLRF SD_EXTENDED_RETURN
  000020D2            04832 F4_001148 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0020D2 0100           04833         MOVLB 0
  00000000            04834 RAM_BANK = 0
0020D4 0012           04835         RETURN 0
  000020D6            04836 F4_001154 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Init_FS_MSSP MACRO P1
                      04837 SD_INIT_FS_MSSP MACRO P1,.,.,.,.,.,.,.,.,.
                      04838  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      04839  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      04840         IF (PRM_COUNT > 1)
                      04841         ERROR "(In Asm) SD_Init_FS_MSSP - Too many parameters"
                      04842         ELSE
                      04843         IF (PRM_COUNT == 0)
                      04844         MOVLW 32
                      04845         MOVWF SSPCON1,0
                      04846         ELSE
                      04847         IF (PRM_1 != BYTE) && (PRM_1 != NUM8)
                      04848         ERROR "(In Asm) SD_Init_FS_MSSP - Speed(Param1) should be a Byte variable or number"
                      04849         ENDIF
                      04850         IF (PRM_1 == BYTE)
                      04851         BYTE_BYTE P1, SSPCON1
                      04852         BSF SSPCON1,5,0
                      04853         ENDIF
                      04854         IF (PRM_1 == NUM8)
                      04855         NUM_DWORD P1, SSPCON1
                      04856 RAM_BANK = 0
                      04857         BSF SSPCON1,5,0
                      04858         ENDIF
                      04859         ENDIF
                      04860         ENDIF
                      04861         F@CALL SD_INIT_FS_MSSP_SUB
                      04862         IF (SD_INIT_FS_MSSP_RETURN != 1)
                      04863         ELSE
                      04864         IF (RETURN_TYPE != BYTE)
                      04865         ERROR "(In Asm) SD_Init_FS_MSSP - Return variable should be a Byte variable"
                      04866         ENDIF
                      04867         IF (RETURN_TYPE == BYTE)
                      04868         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      04869         ENDIF
                      04870         ENDIF
                      04871         ENDM
0020D6                04872 SD_INIT_FS_MSSP_SUB
  000020D6            04873 F4_001193 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return_Int = SD_Init_MSSP SSPCON1
  0002                04874  VARIABLE PRM_1=2
  0000                04875  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                04876  VARIABLE SD_INIT_MSSP_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=SSPCON1
  000A                04877  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=SD_EXTENDED_RETURN_INT,SD_INIT_MSSP_RETURN=1,PRM_COUNT=1
                      04878         SD_INIT_MSSP SSPCON1,0,0,0,0,0,0,0,0,0
  000A                04879  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=SD_EXTENDED_RETURN_INT,SD_INIT_MSSP_RETURN=1,PRM_COUNT=1
  0002                04880  VARIABLE PRM_1=2
  0000                04881  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                04882  VARIABLE SD_INIT_MSSP_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=SSPCON1
  000020E4            04883 F4_001194 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Int = 1 Then
0020E4 0E01           04884         MOVLW 1
0020E6 0102           04885         MOVLB 2
  00000002            04886 RAM_BANK = 2
0020E8 5DE9           04887         SUBWF SD_EXTENDED_RETURN_INT,W
0020EA 0100           04888         MOVLB 0
  00000000            04889 RAM_BANK = 0
0020EC A4D8           04890         BTFSS STATUS,2,0
                      04891         GO@TO BC@LL197
  000020F2            04892 F4_001195 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
0020F2 0E01           04893         MOVLW 1
0020F4 0102           04894         MOVLB 2
  00000002            04895 RAM_BANK = 2
0020F6 6F4B           04896         MOVWF SD_EXTENDED_RETURN
  000020F8            04897 F4_001196 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0020F8 0100           04898         MOVLB 0
  00000000            04899 RAM_BANK = 0
0020FA 0012           04900         RETURN 0
  000020FC            04901 F4_001197 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
0020FC                04902 BC@LL197
  000020FC            04903 F4_001198 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = $00
0020FC 6A37           04904         CLRF SD_SECTOR_NUMHHH,0
0020FE 6A36           04905         CLRF SD_SECTOR_NUMHH,0
002100 6A35           04906         CLRF SD_SECTOR_NUMH,0
002102 6A34           04907         CLRF SD_SECTOR_NUM,0
  00002104            04908 F4_001199 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
002104 0E01           04909         MOVLW 1
002106 0102           04910         MOVLB 2
  00000002            04911 RAM_BANK = 2
002108 6F4A           04912         MOVWF SD_RW_OPTION
  0000210A            04913 F4_001200 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00210A 0100           04914         MOVLB 0
  00000000            04915 RAM_BANK = 0
                      04916         F@CALL SD_SECTOR_SUB
  00002110            04917 F4_001202 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer0[0] = $EB And SD_Buffer0[2] = $90 Then
002110 5041           04918         MOVF SD_BUFFER0#0,W,0
002112 6E08           04919         MOVWF PBP#VAR0,0
002114 0EEB           04920         MOVLW 235
002116 5C08           04921         SUBWF PBP#VAR0,W,0
002118 0E01           04922         MOVLW 1
00211A A4D8           04923         BTFSS STATUS,2,0
00211C 0E00           04924         MOVLW 0
00211E 6E2D           04925         MOVWF SP#P9,0
002120 5043           04926         MOVF SD_BUFFER0#2,W,0
002122 6E08           04927         MOVWF PBP#VAR0,0
002124 0E90           04928         MOVLW 144
002126 5C08           04929         SUBWF PBP#VAR0,W,0
002128 0E01           04930         MOVLW 1
00212A A4D8           04931         BTFSS STATUS,2,0
00212C 0E00           04932         MOVLW 0
00212E 142D           04933         ANDWF SP#P9,W,0
002130 B4D8           04934         BTFSC STATUS,2,0
                      04935         GO@TO BC@LL199
  00002136            04936 F4_001204 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Boot_Record = $0000
002136 0102           04937         MOVLB 2
  00000002            04938 RAM_BANK = 2
002138 6B66           04939         CLRF SD_BOOT_RECORDH
00213A 6B65           04940         CLRF SD_BOOT_RECORD
00213C 0100           04941         MOVLB 0
  00000000            04942 RAM_BANK = 0
                      04943         F@JUMP BC@LL198
  00002142            04944 F4_001205 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] ElseIf SD_Buffer0[0] = $E9 Then
002142                04945 BC@LL199
002142 5041           04946         MOVF SD_BUFFER0#0,W,0
002144 6E08           04947         MOVWF PBP#VAR0,0
002146 0EE9           04948         MOVLW 233
002148 5C08           04949         SUBWF PBP#VAR0,W,0
00214A A4D8           04950         BTFSS STATUS,2,0
                      04951         GO@TO BC@LL200
  00002150            04952 F4_001207 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Boot_Record = $0000
002150 0102           04953         MOVLB 2
  00000002            04954 RAM_BANK = 2
002152 6B66           04955         CLRF SD_BOOT_RECORDH
002154 6B65           04956         CLRF SD_BOOT_RECORD
002156 0100           04957         MOVLB 0
  00000000            04958 RAM_BANK = 0
                      04959         F@JUMP BC@LL201
00215C                04960 BC@LL200
  0000215C            04961 F4_001208 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Else
  0000215C            04962 F4_001210 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Boot_Record = SD_Buffer1[$0C6] + 0
00215C 0102           04963         MOVLB 2
  00000002            04964 RAM_BANK = 2
00215E 5107           04965         MOVF SD_BUFFER1#198,W
002160 6E0C           04966         MOVWF PBP#VAR1,0
002162 6B66           04967         CLRF SD_BOOT_RECORDH
002164 C00C F265      04968         MOVFF PBP#VAR1,SD_BOOT_RECORD
  00002168            04969 F4_001211 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] EndIf
002168                04970 BC@LL201
002168 0100           04971         MOVLB 0
  00000000            04972 RAM_BANK = 0
00216A                04973 BC@LL198
  0000216A            04974 F4_001212 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Boot_Record
00216A 6A37           04975         CLRF SD_SECTOR_NUMHHH,0
00216C 6A36           04976         CLRF SD_SECTOR_NUMHH,0
00216E C266 F035      04977         MOVFF SD_BOOT_RECORDH,SD_SECTOR_NUMH
002172 C265 F034      04978         MOVFF SD_BOOT_RECORD,SD_SECTOR_NUM
  00002176            04979 F4_001213 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
002176 0E01           04980         MOVLW 1
002178 0102           04981         MOVLB 2
  00000002            04982 RAM_BANK = 2
00217A 6F4A           04983         MOVWF SD_RW_OPTION
  0000217C            04984 F4_001214 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00217C 0100           04985         MOVLB 0
  00000000            04986 RAM_BANK = 0
                      04987         F@CALL SD_SECTOR_SUB
  00002182            04988 F4_001216 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Bytes_Per_Sec.BYTE0 = SD_Buffer0[$0B]
002182 504C           04989         MOVF SD_BUFFER0#11,W,0
002184 0102           04990         MOVLB 2
  00000002            04991 RAM_BANK = 2
002186 6F5F           04992         MOVWF SD_BYTES_PER_SEC
  00002188            04993 F4_001217 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Bytes_Per_Sec.BYTE1 = SD_Buffer0[$0C]
002188 504D           04994         MOVF SD_BUFFER0#12,W,0
00218A 6F60           04995         MOVWF SD_BYTES_PER_SECH
  0000218C            04996 F4_001218 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Secs_Per_Cluster = SD_Buffer0[$0D]
00218C 504E           04997         MOVF SD_BUFFER0#13,W,0
00218E 6F55           04998         MOVWF SD_SECS_PER_CLUSTER
  00002190            04999 F4_001219 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Reserved_Secs.BYTE0 = SD_Buffer0[$0E]
002190 504F           05000         MOVF SD_BUFFER0#14,W,0
002192 6F56           05001         MOVWF SD_RESERVED_SECS
  00002194            05002 F4_001220 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Reserved_Secs.BYTE1 = SD_Buffer0[$0F]
002194 5050           05003         MOVF SD_BUFFER0#15,W,0
002196 6F57           05004         MOVWF SD_RESERVED_SECSH
  00002198            05005 F4_001221 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_FATs = SD_Buffer0[$10]
002198 5051           05006         MOVF SD_BUFFER0#16,W,0
00219A 6F5A           05007         MOVWF SD_NUM_OF_FATS
  0000219C            05008 F4_001222 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Root_Entries.BYTE0 = SD_Buffer0[$11]
00219C 5052           05009         MOVF SD_BUFFER0#17,W,0
00219E 6F61           05010         MOVWF SD_NUM_OF_ROOT_ENTRIES
  000021A0            05011 F4_001223 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Root_Entries.BYTE1 = SD_Buffer0[$12]
0021A0 5053           05012         MOVF SD_BUFFER0#18,W,0
0021A2 6F62           05013         MOVWF SD_NUM_OF_ROOT_ENTRIESH
  000021A4            05014 F4_001224 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Secs_Per_FAT.BYTE0 = SD_Buffer0[$16]
0021A4 5057           05015         MOVF SD_BUFFER0#22,W,0
0021A6 6F58           05016         MOVWF SD_SECS_PER_FAT
  000021A8            05017 F4_001225 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Secs_Per_FAT.BYTE1 = SD_Buffer0[$17]
0021A8 5058           05018         MOVF SD_BUFFER0#23,W,0
0021AA 6F59           05019         MOVWF SD_SECS_PER_FATH
  000021AC            05020 F4_001226 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE0 = SD_Buffer0[$20]
0021AC 5061           05021         MOVF SD_BUFFER0#32,W,0
0021AE 6F5B           05022         MOVWF SD_NUM_OF_SECS
  000021B0            05023 F4_001227 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE1 = SD_Buffer0[$21]
0021B0 5062           05024         MOVF SD_BUFFER0#33,W,0
0021B2 6F5C           05025         MOVWF SD_NUM_OF_SECSH
  000021B4            05026 F4_001228 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE2 = SD_Buffer0[$22]
0021B4 5063           05027         MOVF SD_BUFFER0#34,W,0
0021B6 6F5D           05028         MOVWF SD_NUM_OF_SECSHH
  000021B8            05029 F4_001229 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE3 = SD_Buffer0[$23]
0021B8 5064           05030         MOVF SD_BUFFER0#35,W,0
0021BA 6F5E           05031         MOVWF SD_NUM_OF_SECSHHH
  000021BC            05032 F4_001230 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT1 = SD_Boot_Record + SD_Reserved_Secs
0021BC 5156           05033         MOVF SD_RESERVED_SECS,W
0021BE 2565           05034         ADDWF SD_BOOT_RECORD,W
0021C0 6F67           05035         MOVWF SD_FAT1
0021C2 5157           05036         MOVF SD_RESERVED_SECSH,W
0021C4 2166           05037         ADDWFC SD_BOOT_RECORDH,W
0021C6 6F68           05038         MOVWF SD_FAT1H
0021C8 0E00           05039         MOVLW 0
0021CA 6B69           05040         CLRF SD_FAT1HH
0021CC 2369           05041         ADDWFC SD_FAT1HH,F
0021CE 6B6A           05042         CLRF SD_FAT1HHH
  000021D0            05043 F4_001231 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_FAT2 = SD_Boot_Record + SD_Reserved_Secs + SD_Secs_Per_FAT
0021D0 5156           05044         MOVF SD_RESERVED_SECS,W
0021D2 2565           05045         ADDWF SD_BOOT_RECORD,W
0021D4 6E23           05046         MOVWF PP7,0
0021D6 5157           05047         MOVF SD_RESERVED_SECSH,W
0021D8 2166           05048         ADDWFC SD_BOOT_RECORDH,W
0021DA 6E24           05049         MOVWF PP7H,0
0021DC 0E00           05050         MOVLW 0
0021DE 6A25           05051         CLRF PP7HH,0
0021E0 2225           05052         ADDWFC PP7HH,F,0
0021E2 6A26           05053         CLRF PP7HHH,0
0021E4 5158           05054         MOVF SD_SECS_PER_FAT,W
0021E6 2423           05055         ADDWF PP7,W,0
0021E8 6F6B           05056         MOVWF SD_FAT2
0021EA 5159           05057         MOVF SD_SECS_PER_FATH,W
0021EC 2024           05058         ADDWFC PP7H,W,0
0021EE 6F6C           05059         MOVWF SD_FAT2H
0021F0 0E00           05060         MOVLW 0
0021F2 2025           05061         ADDWFC PP7HH,W,0
0021F4 6F6D           05062         MOVWF SD_FAT2HH
0021F6 0E00           05063         MOVLW 0
0021F8 2026           05064         ADDWFC PP7HHH,W,0
0021FA 6F6E           05065         MOVWF SD_FAT2HHH
  000021FC            05066 F4_001232 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir = SD_Num_of_FATs * SD_Secs_Per_FAT
0021FC 6A14           05067         CLRF PP0HHH,0
0021FE 6A13           05068         CLRF PP0HH,0
002200 6A12           05069         CLRF PP0H,0
002202 C25A F011      05070         MOVFF SD_NUM_OF_FATS,PP0
002206 6A1C           05071         CLRF PP2HHH,0
002208 6A1B           05072         CLRF PP2HH,0
00220A C259 F01A      05073         MOVFF SD_SECS_PER_FATH,PP2H
00220E C258 F019      05074         MOVFF SD_SECS_PER_FAT,PP2
                      05075         F@CALL AL@MUL
002216 C014 F272      05076         MOVFF PP0HHH,SD_ROOT_DIRHHH
00221A C013 F271      05077         MOVFF PP0HH,SD_ROOT_DIRHH
00221E C012 F270      05078         MOVFF PP0H,SD_ROOT_DIRH
002222 C011 F26F      05079         MOVFF PP0,SD_ROOT_DIR
  00002226            05080 F4_001233 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir = SD_Boot_Record + SD_Reserved_Secs + SD_Root_Dir
002226 5156           05081         MOVF SD_RESERVED_SECS,W
002228 2565           05082         ADDWF SD_BOOT_RECORD,W
00222A 6E23           05083         MOVWF PP7,0
00222C 5157           05084         MOVF SD_RESERVED_SECSH,W
00222E 2166           05085         ADDWFC SD_BOOT_RECORDH,W
002230 6E24           05086         MOVWF PP7H,0
002232 0E00           05087         MOVLW 0
002234 6A25           05088         CLRF PP7HH,0
002236 2225           05089         ADDWFC PP7HH,F,0
002238 6A26           05090         CLRF PP7HHH,0
00223A 5023           05091         MOVF PP7,W,0
00223C 276F           05092         ADDWF SD_ROOT_DIR,F
00223E 5024           05093         MOVF PP7H,W,0
002240 2370           05094         ADDWFC SD_ROOT_DIRH,F
002242 5025           05095         MOVF PP7HH,W,0
002244 2371           05096         ADDWFC SD_ROOT_DIRHH,F
002246 5026           05097         MOVF PP7HHH,W,0
002248 2372           05098         ADDWFC SD_ROOT_DIRHHH,F
  0000224A            05099 F4_001234 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Secs_in_Root = SD_Num_of_Root_Entries * 32
00224A 5162           05100         MOVF SD_NUM_OF_ROOT_ENTRIESH,W
00224C 0D20           05101         MULLW 32
00224E CFF3 F264      05102         MOVFF PRODL,SD_SECS_IN_ROOTH
002252 5161           05103         MOVF SD_NUM_OF_ROOT_ENTRIES,W
002254 0D20           05104         MULLW 32
002256 CFF3 F263      05105         MOVFF PRODL,SD_SECS_IN_ROOT
00225A 50F4           05106         MOVF PRODH,W,0
00225C 2764           05107         ADDWF SD_SECS_IN_ROOTH,F
  0000225E            05108 F4_001235 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Secs_in_Root = SD_Secs_in_Root / SD_Bytes_Per_Sec
00225E C264 F012      05109         MOVFF SD_SECS_IN_ROOTH,PP0H
002262 C263 F011      05110         MOVFF SD_SECS_IN_ROOT,PP0
002266 C260 F016      05111         MOVFF SD_BYTES_PER_SECH,PP1H
00226A C25F F015      05112         MOVFF SD_BYTES_PER_SEC,PP1
                      05113         F@CALL D@VD
002272 6F63           05114         MOVWF SD_SECS_IN_ROOT
002274 C012 F264      05115         MOVFF PP0H,SD_SECS_IN_ROOTH
  00002278            05116 F4_001236 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Data_Area = SD_Root_Dir + SD_Secs_in_Root
002278 5163           05117         MOVF SD_SECS_IN_ROOT,W
00227A 256F           05118         ADDWF SD_ROOT_DIR,W
00227C 6F73           05119         MOVWF SD_DATA_AREA
00227E 5164           05120         MOVF SD_SECS_IN_ROOTH,W
002280 2170           05121         ADDWFC SD_ROOT_DIRH,W
002282 6F74           05122         MOVWF SD_DATA_AREAH
002284 0E00           05123         MOVLW 0
002286 2171           05124         ADDWFC SD_ROOT_DIRHH,W
002288 6F75           05125         MOVWF SD_DATA_AREAHH
00228A 0E00           05126         MOVLW 0
00228C 2172           05127         ADDWFC SD_ROOT_DIRHHH,W
00228E 6F76           05128         MOVWF SD_DATA_AREAHHH
  00002290            05129 F4_001238 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Boot_Record + SD_Num_of_Secs - 1
002290 5165           05130         MOVF SD_BOOT_RECORD,W
002292 255B           05131         ADDWF SD_NUM_OF_SECS,W
002294 6E23           05132         MOVWF PP7,0
002296 5166           05133         MOVF SD_BOOT_RECORDH,W
002298 215C           05134         ADDWFC SD_NUM_OF_SECSH,W
00229A 6E24           05135         MOVWF PP7H,0
00229C 0E00           05136         MOVLW 0
00229E 215D           05137         ADDWFC SD_NUM_OF_SECSHH,W
0022A0 6E25           05138         MOVWF PP7HH,0
0022A2 0E00           05139         MOVLW 0
0022A4 215E           05140         ADDWFC SD_NUM_OF_SECSHHH,W
0022A6 6E26           05141         MOVWF PP7HHH,0
0022A8 0423           05142         DECF PP7,W,0
0022AA 6E34           05143         MOVWF SD_SECTOR_NUM,0
0022AC 0E00           05144         MOVLW 0
0022AE 5824           05145         SUBWFB PP7H,W,0
0022B0 6E35           05146         MOVWF SD_SECTOR_NUMH,0
0022B2 0E00           05147         MOVLW 0
0022B4 5825           05148         SUBWFB PP7HH,W,0
0022B6 6E36           05149         MOVWF SD_SECTOR_NUMHH,0
0022B8 0E00           05150         MOVLW 0
0022BA 5826           05151         SUBWFB PP7HHH,W,0
0022BC 6E37           05152         MOVWF SD_SECTOR_NUMHHH,0
  000022BE            05153 F4_001239 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num - SD_Data_Area + 1
0022BE 5173           05154         MOVF SD_DATA_AREA,W
0022C0 5C34           05155         SUBWF SD_SECTOR_NUM,W,0
0022C2 6E23           05156         MOVWF PP7,0
0022C4 5174           05157         MOVF SD_DATA_AREAH,W
0022C6 5835           05158         SUBWFB SD_SECTOR_NUMH,W,0
0022C8 6E24           05159         MOVWF PP7H,0
0022CA 5175           05160         MOVF SD_DATA_AREAHH,W
0022CC 5836           05161         SUBWFB SD_SECTOR_NUMHH,W,0
0022CE 6E25           05162         MOVWF PP7HH,0
0022D0 5176           05163         MOVF SD_DATA_AREAHHH,W
0022D2 5837           05164         SUBWFB SD_SECTOR_NUMHHH,W,0
0022D4 6E26           05165         MOVWF PP7HHH,0
0022D6 2823           05166         INCF PP7,W,0
0022D8 6E34           05167         MOVWF SD_SECTOR_NUM,0
0022DA 0E00           05168         MOVLW 0
0022DC 2024           05169         ADDWFC PP7H,W,0
0022DE 6E35           05170         MOVWF SD_SECTOR_NUMH,0
0022E0 0E00           05171         MOVLW 0
0022E2 2025           05172         ADDWFC PP7HH,W,0
0022E4 6E36           05173         MOVWF SD_SECTOR_NUMHH,0
0022E6 0E00           05174         MOVLW 0
0022E8 2026           05175         ADDWFC PP7HHH,W,0
0022EA 6E37           05176         MOVWF SD_SECTOR_NUMHHH,0
  000022EC            05177 F4_001240 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num / SD_Secs_Per_Cluster
0022EC C037 F014      05178         MOVFF SD_SECTOR_NUMHHH,PP0HHH
0022F0 C036 F013      05179         MOVFF SD_SECTOR_NUMHH,PP0HH
0022F4 C035 F012      05180         MOVFF SD_SECTOR_NUMH,PP0H
0022F8 C034 F011      05181         MOVFF SD_SECTOR_NUM,PP0
0022FC 6A1C           05182         CLRF PP2HHH,0
0022FE 6A1B           05183         CLRF PP2HH,0
002300 6A1A           05184         CLRF PP2H,0
002302 C255 F019      05185         MOVFF SD_SECS_PER_CLUSTER,PP2
                      05186         F@CALL L@DIV
00230A C014 F037      05187         MOVFF PP0HHH,SD_SECTOR_NUMHHH
00230E C013 F036      05188         MOVFF PP0HH,SD_SECTOR_NUMHH
002312 C012 F035      05189         MOVFF PP0H,SD_SECTOR_NUMH
002316 C011 F034      05190         MOVFF PP0,SD_SECTOR_NUM
  0000231A            05191 F4_001241 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Last_Cluster = SD_Sector_Num + 1
00231A 0E01           05192         MOVLW 1
00231C 2434           05193         ADDWF SD_SECTOR_NUM,W,0
00231E 6FC9           05194         MOVWF SD_LAST_CLUSTER
002320 0E00           05195         MOVLW 0
002322 2035           05196         ADDWFC SD_SECTOR_NUMH,W,0
002324 6FCA           05197         MOVWF SD_LAST_CLUSTERH
  00002326            05198 F4_001243 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Name = "        "
002326 EE02 F091      05199         LFSR 0,SD_FILE_NAME
00232A 0E04           05200         MOVLW ((STR@LB1 >> 8) & 255)
00232C 6EF7           05201         MOVWF TBLPTRLH,0
00232E 0E68           05202         MOVLW (STR@LB1 & 255)
002330 6EF6           05203         MOVWF TBLPTRL,0
                      05204         F@CALL LOAD@MSTR
002336 6AEF           05205         CLRF INDF0,0
  00002338            05206 F4_001244 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Ext = "   "
002338 EE02 F09A      05207         LFSR 0,SD_FILE_EXT
00233C 0E20           05208         MOVLW 32
00233E 6EEE           05209         MOVWF POSTINC0,0
002340 6EEE           05210         MOVWF POSTINC0,0
002342 6EEE           05211         MOVWF POSTINC0,0
002344 6AEF           05212         CLRF INDF0,0
  00002346            05213 F4_001245 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Day = 1
002346 0E01           05214         MOVLW 1
002348 6FEF           05215         MOVWF SD_DAY
  0000234A            05216 F4_001246 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Month = 1
00234A 0E01           05217         MOVLW 1
00234C 6FF0           05218         MOVWF SD_MONTH
  0000234E            05219 F4_001247 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Year = 0
00234E 6BF1           05220         CLRF SD_YEAR
  00002350            05221 F4_001248 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_MSeconds = 0
002350 6BF2           05222         CLRF SD_MSECONDS
  00002352            05223 F4_001249 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Seconds = 0
002352 6BF3           05224         CLRF SD_SECONDS
  00002354            05225 F4_001250 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Minutes = 0
002354 6BF4           05226         CLRF SD_MINUTES
  00002356            05227 F4_001251 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Hours = 0
002356 6BF5           05228         CLRF SD_HOURS
  00002358            05229 F4_001252 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_File_Num = 0
002358 6BE7           05230         CLRF SD_FILE_NUMH
00235A 6BE6           05231         CLRF SD_FILE_NUM
  0000235C            05232 F4_001253 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
00235C 6B4B           05233         CLRF SD_EXTENDED_RETURN
  0000235E            05234 F4_001254 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
00235E 0100           05235         MOVLB 0
  00000000            05236 RAM_BANK = 0
002360 0012           05237         RETURN 0
  00002362            05238 F4_001260 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_Byte_To_File MACRO P1
                      05239 SD_WRITE_BYTE_TO_FILE   MACRO P1,.,.,.,.,.,.,.,.,.
                      05240  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      05241  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      05242         IF (PRM_COUNT >  1)
                      05243         ERROR "(In Asm) SD_Write_Byte_to_File - Too many parameters"
                      05244         ELSE
                      05245         IF (PRM_COUNT <  1)
                      05246         ERROR "(In Asm) SD_Write_Byte_to_File - Too few parameters"
                      05247         ELSE
                      05248         IF (PRM_1 != BYTE) && (PRM_1 != NUM8) && (PRM_1 != NUM16) && (PRM_1 != NUM32) && (PRM_1 != WORD) && (PRM_1 != DWORD)
                      05249         ERROR "(In Asm) SD_Write_Byte_to_File - Byte(Param 1) should be a Byte, Word or DWord variable or number"
                      05250         ENDIF
                      05251         IF (PRM_1 == BYTE)
                      05252         BYTE_BYTE P1, SD_IO_BYTE
                      05253         ENDIF
                      05254         IF (PRM_1 == NUM8)
                      05255         NUM_BYTE P1, SD_IO_BYTE
                      05256 RAM_BANK = 0
                      05257         ENDIF
                      05258         IF (PRM_1 == NUM16)
                      05259         NUM_BYTE P1, SD_IO_BYTE
                      05260 RAM_BANK = 0
                      05261         ENDIF
                      05262         IF (PRM_1 == NUM32)
                      05263         NUM_BYTE P1, SD_IO_BYTE
                      05264 RAM_BANK = 0
                      05265         ENDIF
                      05266         IF (PRM_1 == WORD)
                      05267         BYTE_BYTE P1, SD_IO_BYTE
                      05268         ENDIF
                      05269         IF (PRM_1 == DWORD)
                      05270         BYTE_BYTE P1, SD_IO_BYTE
                      05271         ENDIF
                      05272         IF (PRM_1 == FLOAT)
                      05273         FLOAT_BYTE P1, SD_IO_BYTE
                      05274         ENDIF
                      05275         F@CALL SD_WRITE_BYTE_TO_FILE_SUB
                      05276         IF (SD_WRITE_BYTE_TO_FILE_RETURN != 1)
                      05277         ELSE
                      05278         IF (RETURN_TYPE != BYTE)
                      05279         ERROR "(In Asm) SD_Write_Byte_To_File - Return variable should be a Byte variable"
                      05280         ENDIF
                      05281         IF (RETURN_TYPE == BYTE)
                      05282         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      05283         ENDIF
                      05284         ENDIF
                      05285         ENDIF
                      05286         ENDIF
                      05287         ENDM
  00002362            05288 F4_001318 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_Write_String_To_File MACRO
                      05289 SD_WRITE_STRING_TO_FILE MACRO .,.,.,.,.,.,.,.,.,.
                      05290  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      05291  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      05292         IF (PRM_COUNT != 0)
                      05293         ERROR "(In Asm) No parameters required for SD_Write_String_To_File"
                      05294         EXITM
                      05295         ENDIF
                      05296         F@CALL SD_WRITE_STRING_TO_FILE_SUB
                      05297         IF (SD_WRITE_STRING_TO_FILE_RETURN != 1)
                      05298         ELSE
                      05299         IF (RETURN_TYPE != BYTE)
                      05300         ERROR "(In Asm) SD_Write_String_To_File - Return variable should be a Byte variable"
                      05301         ENDIF
                      05302         IF (RETURN_TYPE == BYTE)
                      05303         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      05304         ENDIF
                      05305         ENDIF
                      05306         ENDM
002362                05307 SD_WRITE_STRING_TO_FILE_SUB
  00002362            05308 F4_001345 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_IO_String_Length = Len(SD_IO_String)
002362 EE02 F0FB      05309         LFSR 0,SD_IO_STRING
002366 6AE8           05310         CLRF WREG,0
002368 52EE           05311         MOVF POSTINC0,F,0
00236A E002           05312         BZ $ + 6
00236C 3EE8           05313         INCFSZ WREG,F,0
00236E D7FC           05314         BRA $ - 6
002370 0102           05315         MOVLB 2
  00000002            05316 RAM_BANK = 2
002372 6FF9           05317         MOVWF SD_IO_STRING_LENGTH
  00002374            05318 F4_001346 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_IO_String_Length = SD_IO_String_Length - 1
002374 07F9           05319         DECF SD_IO_STRING_LENGTH,F
  00002376            05320 F4_001347 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] For SD_IO_String_Pos = 0 To SD_IO_String_Length
002376 6BFA           05321         CLRF SD_IO_STRING_POS
002378                05322 FR@LB203
002378 0100           05323         MOVLB 0
  00000000            05324 RAM_BANK = 0
00237A 0102           05325         MOVLB 2
  00000002            05326 RAM_BANK = 2
00237C 51FA           05327         MOVF SD_IO_STRING_POS,W
00237E 5DF9           05328         SUBWF SD_IO_STRING_LENGTH,W
002380 0100           05329         MOVLB 0
  00000000            05330 RAM_BANK = 0
002382 A0D8           05331         BTFSS STATUS,0,0
                      05332         GO@TO NX@LB204
  00002388            05333 F4_001348 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] SD_IO_Byte = SD_IO_String[SD_IO_String_Pos]
002388 EE02 F0FB      05334         LFSR 0,SD_IO_STRING
00238C 0102           05335         MOVLB 2
  00000002            05336 RAM_BANK = 2
00238E 51FA           05337         MOVF SD_IO_STRING_POS,W
002390 26E9           05338         ADDWF FSR0L,F,0
002392 0E00           05339         MOVLW 0
002394 22EA           05340         ADDWFC FSR0H,F,0
002396 50EF           05341         MOVF INDF0,W,0
002398 6FD0           05342         MOVWF SD_IO_BYTE
  0000239A            05343 F4_001349 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Byte_To_File_Sub
00239A 0100           05344         MOVLB 0
  00000000            05345 RAM_BANK = 0
                      05346         F@CALL SD_WRITE_BYTE_TO_FILE_SUB
  000023A0            05347 F4_001350 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return = 1 Then Return
0023A0 0E01           05348         MOVLW 1
0023A2 0102           05349         MOVLB 2
  00000002            05350 RAM_BANK = 2
0023A4 5D4B           05351         SUBWF SD_EXTENDED_RETURN,W
0023A6 0100           05352         MOVLB 0
  00000000            05353 RAM_BANK = 0
0023A8 A4D8           05354         BTFSS STATUS,2,0
                      05355         GO@TO BC@LL205
0023AE 0012           05356         RETURN 0
0023B0                05357 BC@LL205
  000023B0            05358 F4_001351 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Next SD_IO_String_Pos
0023B0 0102           05359         MOVLB 2
  00000002            05360 RAM_BANK = 2
0023B2 2BFA           05361         INCF SD_IO_STRING_POS,F
0023B4 0100           05362         MOVLB 0
  00000000            05363 RAM_BANK = 0
0023B6 A4D8           05364         BTFSS STATUS,2,0
                      05365         GO@TO FR@LB203
0023BA                05366 NX@LB204
  000023BA            05367 F4_001352 EQU $ ; in [V2.5 RFID 2ND GENERATION_LIB.PBP] Return
0023BA 0012           05368         RETURN 0
0023BC                05369 OVERLIBCODE
  000023BC            05370 F4_EOF EQU $ ; V2.5 RFID 2ND GENERATION_LIB.PBP
  000023BC            05371 F2_EOF EQU $ ; V2.5 RFID 2ND GENERATION.PRP
  000023BC            05372 F1_SOF EQU $ ; V2.5 RFID 2ND GENERATION.BAS
  000023BC            05373 F1_000035 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] ALL_DIGITAL = TRUE
0023BC 0E07           05374         MOVLW 7
0023BE 6EB4           05375         MOVWF CMCON,0
0023C0 0E0F           05376         MOVLW 15
0023C2 6EC1           05377         MOVWF ADCON1,0
  000023C4            05378 F1_000107 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] DelayMS 200               'Allow chip to settle
0023C4 0EC8           05379         MOVLW 200
                      05380         F@CALL DL@MS
  000023CA            05381 F1_000109 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Input SD_Detect           'Set SD Detect port as input...  (PORTB.0 )
0023CA 8093           05382         BSF TRISB,0,0
  000023CC            05383 F1_000110 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Low RFIDEnable                ' Turn off RFID Reader     (PORTD.4 )
0023CC 9895           05384         BCF TRISD,4,0
0023CE 9883           05385         BCF PORTD,4,0
  000023D0            05386 F1_000112 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] User_Pointer.LowByte = ERead UPA_L    'Read the low and high bytes of...
0023D0 0E00           05387         MOVLW 0
                      05388         F@CALL EE@RD
0023D6 0103           05389         MOVLB 3
  00000003            05390 RAM_BANK = 3
0023D8 6FC4           05391         MOVWF USER_POINTER
  000023DA            05392 F1_000113 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] User_Pointer.HighByte = ERead UPA_H    'user pointer address from EEprom
0023DA 0E01           05393         MOVLW 1
                      05394         F@CALL EE@RD
0023E0 6FC5           05395         MOVWF USER_POINTERH
  000023E2            05396 F1_000115 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] If User_Pointer = 0XFFFF Then             'If the value read from EEprom is OXFFFF then this is a new chip so....
0023E2 29C4           05397         INCF USER_POINTER,W
0023E4 E101           05398         BNZ CP@LB31
0023E6 29C5           05399         INCF USER_POINTERH,W
0023E8                05400 CP@LB31
0023E8 0100           05401         MOVLB 0
  00000000            05402 RAM_BANK = 0
0023EA A4D8           05403         BTFSS STATUS,2,0
                      05404         GO@TO BC@LL207
  000023F0            05405 F1_000116 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] User_Pointer = BUA                   '...we write the low and ..
0023F0 0E9C           05406         MOVLW 156
0023F2 0103           05407         MOVLB 3
  00000003            05408 RAM_BANK = 3
0023F4 6FC5           05409         MOVWF USER_POINTERH
0023F6 0E50           05410         MOVLW 80
0023F8 6FC4           05411         MOVWF USER_POINTER
  000023FA            05412 F1_000117 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] EWrite UPA_L, [User_Pointer.LowByte]  '...high bytes of the base user address (0X9C500...
0023FA 6AAA           05413         CLRF EEADRH,0
0023FC 6AA9           05414         CLRF EEADR,0
0023FE 51C4           05415         MOVF USER_POINTER,W
                      05416         F@CALL EE@WR@W
  00002404            05417 F1_000118 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] EWrite UPA_H, [User_Pointer.HighByte]  '...into the EEProm Pointer storage spot (0X000 and 0X001)
002404 6AAA           05418         CLRF EEADRH,0
002406 0E01           05419         MOVLW 1
002408 6EA9           05420         MOVWF EEADR,0
00240A 51C5           05421         MOVF USER_POINTERH,W
                      05422         F@CALL EE@WR@W
  00002410            05423 F1_000119 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] EWrite num_UHE, [0X00]              'Initialize number of User histories to zero
002410 6AAA           05424         CLRF EEADRH,0
002412 0E03           05425         MOVLW 3
002414 6EA9           05426         MOVWF EEADR,0
002416 0E00           05427         MOVLW 0
                      05428         F@CALL EE@WR@W
  0000241C            05429 F1_000120 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] EWrite num_MHE, [0X00]               'Initialize number of Manager histories to zero
00241C 6AAA           05430         CLRF EEADRH,0
00241E 0E04           05431         MOVLW 4
002420 6EA9           05432         MOVWF EEADR,0
002422 0E00           05433         MOVLW 0
                      05434         F@CALL EE@WR@W
  00002428            05435 F1_000121 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] EndIf
002428                05436 BC@LL207
002428 0100           05437         MOVLB 0
  00000000            05438 RAM_BANK = 0
  0000242A            05439 F1_000122 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Cls
                      05440         F@CALL LCD@CLS
  0000242E            05441 F1_000123 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Print "Starting!"
00242E 0E04           05442         MOVLW ((STR@LB2 >> 8) & 255)
002430 6EF7           05443         MOVWF TBLPTRLH,0
002432 0E72           05444         MOVLW (STR@LB2 & 255)
002434 6EF6           05445         MOVWF TBLPTRL,0
                      05446         F@CALL PRINT@MSTR
  0000243A            05447 F1_000124 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Pause 3000
00243A 0E0B           05448         MOVLW 11
00243C 6E16           05449         MOVWF PP1H,0
00243E 0EB8           05450         MOVLW 184
                      05451         F@CALL DLY@W
  00002444            05452 F1_000126 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] If SD_Detect = 0 Then     ' a zero means we have detected a ground (SD card has been inserted)
002444 B081           05453         BTFSC PORTB,0,0
                      05454         GO@TO BC@LL209
  0000244A            05455 F1_000127 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Cls
                      05456         F@CALL LCD@CLS
  0000244E            05457 F1_000128 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Print "SD Detected!"
00244E 0E04           05458         MOVLW ((STR@LB3 >> 8) & 255)
002450 6EF7           05459         MOVWF TBLPTRLH,0
002452 0E7C           05460         MOVLW (STR@LB3 & 255)
002454 6EF6           05461         MOVWF TBLPTRL,0
                      05462         F@CALL PRINT@MSTR
  0000245A            05463 F1_000129 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Pause 3000
00245A 0E0B           05464         MOVLW 11
00245C 6E16           05465         MOVWF PP1H,0
00245E 0EB8           05466         MOVLW 184
                      05467         F@CALL DLY@W
  00002464            05468 F1_000130 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] GoSub Init_SD  '************ Only do one time when SD card detected.
                      05469         F@CALL INIT_SD
  00002468            05470 F1_000131 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] GoSub Read_SD   'This sub reads and writes users and managers to memory
                      05471         F@CALL READ_SD
                      05472         F@JUMP BC@LL210
002470                05473 BC@LL209
  00002470            05474 F1_000132 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Else
  00002470            05475 F1_000133 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Cls
                      05476         F@CALL LCD@CLS
  00002474            05477 F1_000134 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Print "No SD.."
002474 0E04           05478         MOVLW ((STR@LB4 >> 8) & 255)
002476 6EF7           05479         MOVWF TBLPTRLH,0
002478 0E8A           05480         MOVLW (STR@LB4 & 255)
00247A 6EF6           05481         MOVWF TBLPTRL,0
                      05482         F@CALL PRINT@MSTR
  00002480            05483 F1_000135 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Pause 3000
002480 0E0B           05484         MOVLW 11
002482 6E16           05485         MOVWF PP1H,0
002484 0EB8           05486         MOVLW 184
                      05487         F@CALL DLY@W
  0000248A            05488 F1_000137 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] End If
00248A                05489 BC@LL210
  0000248A            05490 F1_000138 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Stop
00248A                05491 PB@LB212
00248A D7FF           05492         BRA PB@LB212
  0000248C            05493 F1_000141 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] GoSub Write_Users_SD
                      05494         F@CALL WRITE_USERS_SD
  00002490            05495 F1_000142 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Cls
                      05496         F@CALL LCD@CLS
  00002494            05497 F1_000143 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Print "Done"
002494 0E44           05498         MOVLW 68
                      05499         F@CALL PRINT
00249A 0E6F           05500         MOVLW 111
                      05501         F@CALL PRINT
0024A0 0E6E           05502         MOVLW 110
                      05503         F@CALL PRINT
0024A6 0E65           05504         MOVLW 101
                      05505         F@CALL PRINT
  000024AC            05506 F1_000147 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Pause 3000
0024AC 0E0B           05507         MOVLW 11
0024AE 6E16           05508         MOVWF PP1H,0
0024B0 0EB8           05509         MOVLW 184
                      05510         F@CALL DLY@W
0024B6                05511 START
0024B6                05512 START2
  000024B6            05513 F1_000154 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] GoSub Read_Tag
                      05514         F@CALL READ_TAG
  000024BA            05515 F1_000156 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Cls
                      05516         F@CALL LCD@CLS
  000024BE            05517 F1_000157 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Print "Checking TAG"
0024BE 0E04           05518         MOVLW ((STR@LB5 >> 8) & 255)
0024C0 6EF7           05519         MOVWF TBLPTRLH,0
0024C2 0E92           05520         MOVLW (STR@LB5 & 255)
0024C4 6EF6           05521         MOVWF TBLPTRL,0
                      05522         F@CALL PRINT@MSTR
  000024CA            05523 F1_000159 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] GoSub Check_Tag
                      05524         F@CALL CHECK_TAG
  000024CE            05525 F1_000160 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] If Response = 1 Then
0024CE 0E01           05526         MOVLW 1
0024D0 0103           05527         MOVLB 3
  00000003            05528 RAM_BANK = 3
0024D2 5DEB           05529         SUBWF RESPONSE,W
0024D4 0100           05530         MOVLB 0
  00000000            05531 RAM_BANK = 0
0024D6 A4D8           05532         BTFSS STATUS,2,0
                      05533         GO@TO BC@LL213
  000024DC            05534 F1_000161 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Cls
                      05535         F@CALL LCD@CLS
  000024E0            05536 F1_000162 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Print At 1,1, "Got a match"
0024E0 0E80           05537         MOVLW 128
0024E2 6E01           05538         MOVWF BPFH,0
0024E4 0E80           05539         MOVLW 128
                      05540         F@CALL LCD@CRS
0024EA 0E04           05541         MOVLW ((STR@LB6 >> 8) & 255)
0024EC 6EF7           05542         MOVWF TBLPTRLH,0
0024EE 0EA0           05543         MOVLW (STR@LB6 & 255)
0024F0 6EF6           05544         MOVWF TBLPTRL,0
                      05545         F@CALL PRINT@MSTR
  000024F6            05546 F1_000163 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Print At 2,1, Str UserIn
0024F6 0E80           05547         MOVLW 128
0024F8 6E01           05548         MOVWF BPFH,0
0024FA 0EC0           05549         MOVLW 192
                      05550         F@CALL LCD@CRS
002500 0E04           05551         MOVLW 4
002502 6E04           05552         MOVWF GEN4,0
002504 0E03           05553         MOVLW 3
002506 6E1A           05554         MOVWF PP2H,0
002508 0ED0           05555         MOVLW 208
                      05556         F@CALL SB@STROUT
  0000250E            05557 F1_000164 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] GoSub WriteH
                      05558         F@CALL WRITEH
  00002512            05559 F1_000165 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Cls
                      05560         F@CALL LCD@CLS
  00002516            05561 F1_000166 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Print "History DONE!"
002516 0E04           05562         MOVLW ((STR@LB7 >> 8) & 255)
002518 6EF7           05563         MOVWF TBLPTRLH,0
00251A 0EAC           05564         MOVLW (STR@LB7 & 255)
00251C 6EF6           05565         MOVWF TBLPTRL,0
                      05566         F@CALL PRINT@MSTR
  00002522            05567 F1_000167 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Pause 2000
002522 0E07           05568         MOVLW 7
002524 6E16           05569         MOVWF PP1H,0
002526 0ED0           05570         MOVLW 208
                      05571         F@CALL DLY@W
  0000252C            05572 F1_000168 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] GoTo Start2
                      05573         F@JUMP START2
                      05574         F@JUMP BC@LL216
002532                05575 BC@LL213
  00002532            05576 F1_000169 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Else
  00002532            05577 F1_000170 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Cls
                      05578         F@CALL LCD@CLS
  00002536            05579 F1_000171 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Print "No Match"
002536 0E04           05580         MOVLW ((STR@LB8 >> 8) & 255)
002538 6EF7           05581         MOVWF TBLPTRLH,0
00253A 0EBA           05582         MOVLW (STR@LB8 & 255)
00253C 6EF6           05583         MOVWF TBLPTRL,0
                      05584         F@CALL PRINT@MSTR
  00002542            05585 F1_000172 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Pause 2000
002542 0E07           05586         MOVLW 7
002544 6E16           05587         MOVWF PP1H,0
002546 0ED0           05588         MOVLW 208
                      05589         F@CALL DLY@W
  0000254C            05590 F1_000173 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] GoTo Start2
                      05591         F@JUMP START2
  0000254E            05592 F1_000174 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] EndIf
00254E                05593 BC@LL216
  0000254E            05594 F1_000175 EQU $ ; in [V2.5 RFID 2ND GENERATION.BAS] Stop
00254E                05595 PB@LB218
00254E D7FF           05596         BRA PB@LB218
  00002550            05597 F5_SOF EQU $ ; READ TAG.INC
002550                05598 READ_TAG
  00002550            05599 F5_000012 EQU $ ; in [READ TAG.INC] Cls
                      05600         F@CALL LCD@CLS
  00002554            05601 F5_000013 EQU $ ; in [READ TAG.INC] Print At 1,1, "ATTEMPTING TO"
002554 0E80           05602         MOVLW 128
002556 6E01           05603         MOVWF BPFH,0
002558 0E80           05604         MOVLW 128
                      05605         F@CALL LCD@CRS
00255E 0E04           05606         MOVLW ((STR@LB9 >> 8) & 255)
002560 6EF7           05607         MOVWF TBLPTRLH,0
002562 0EC4           05608         MOVLW (STR@LB9 & 255)
002564 6EF6           05609         MOVWF TBLPTRL,0
                      05610         F@CALL PRINT@MSTR
  0000256A            05611 F5_000014 EQU $ ; in [READ TAG.INC] Print At 2,1, "READ TAG...."
00256A 0E80           05612         MOVLW 128
00256C 6E01           05613         MOVWF BPFH,0
00256E 0EC0           05614         MOVLW 192
                      05615         F@CALL LCD@CRS
002574 0E04           05616         MOVLW ((STR@LB10 >> 8) & 255)
002576 6EF7           05617         MOVWF TBLPTRLH,0
002578 0ED2           05618         MOVLW (STR@LB10 & 255)
00257A 6EF6           05619         MOVWF TBLPTRL,0
                      05620         F@CALL PRINT@MSTR
  00002580            05621 F5_000017 EQU $ ; in [READ TAG.INC] High RFIDEnable                 ' Turn on RFID Reader
002580 9895           05622         BCF TRISD,4,0
002582 8883           05623         BSF PORTD,4,0
  00002584            05624 F5_000018 EQU $ ; in [READ TAG.INC] Pause 10               'Time for Reader to settle
002584 0E0A           05625         MOVLW 10
                      05626         F@CALL DL@MS
  0000258A            05627 F5_000020 EQU $ ; in [READ TAG.INC] HSerIn 30000, Timeout, [Wait (0X82) ,Str TagIn]  'Wait for header (0X82)
00258A 0E75           05628         MOVLW 117
00258C 6E06           05629         MOVWF GENH,0
00258E 0E30           05630         MOVLW 48
002590 6E02           05631         MOVWF GEN,0
002592                05632 PB@LB219
                      05633         F@CALL HRSIN2
002596 A0D8           05634         BTFSS STATUS,0,0
                      05635         GO@TO TIMEOUT
00259C 0882           05636         SUBLW 130
00259E A4D8           05637         BTFSS STATUS,2,0
                      05638         GO@TO PB@LB219
0025A2 EE03 F0C6      05639         LFSR 0,TAGIN
0025A6 0E0A           05640         MOVLW 10
0025A8 6EF3           05641         MOVWF PRODL,0
0025AA                05642 PB@LB222
0025AA 80D8           05643         BSF STATUS,0,0
                      05644         F@CALL HRSIN2
0025B0 A0D8           05645         BTFSS STATUS,0,0
                      05646         GO@TO TIMEOUT
0025B6 6EEE           05647         MOVWF POSTINC0,0
0025B8 2EF3           05648         DECFSZ PRODL,F,0
0025BA D7F7           05649         BRA PB@LB222
  000025BC            05650 F5_000023 EQU $ ; in [READ TAG.INC] HSerIn [Response]                      'End of Transmission (Footer...Should be 0X83)
                      05651         F@CALL HRSIN
0025C0 0103           05652         MOVLB 3
  00000003            05653 RAM_BANK = 3
0025C2 6FEB           05654         MOVWF RESPONSE
  000025C4            05655 F5_000024 EQU $ ; in [READ TAG.INC] Low RFIDEnable                ' Turn off RFID Reader
0025C4 9895           05656         BCF TRISD,4,0
0025C6 9883           05657         BCF PORTD,4,0
  000025C8            05658 F5_000025 EQU $ ; in [READ TAG.INC] If Response <> 0X83 Then  GoTo Read_Tag 'Tag Footer was not correct
0025C8 0E83           05659         MOVLW 131
0025CA 5DEB           05660         SUBWF RESPONSE,W
0025CC 0100           05661         MOVLB 0
  00000000            05662 RAM_BANK = 0
0025CE B4D8           05663         BTFSC STATUS,2,0
                      05664         GO@TO BC@LL223
                      05665         F@JUMP READ_TAG
0025D6                05666 BC@LL223
  000025D6            05667 F5_000031 EQU $ ; in [READ TAG.INC] For Index = 0 To 9
0025D6 0103           05668         MOVLB 3
  00000003            05669 RAM_BANK = 3
0025D8 6BED           05670         CLRF INDEX
0025DA                05671 FR@LB225
0025DA 0100           05672         MOVLB 0
  00000000            05673 RAM_BANK = 0
0025DC 0E0A           05674         MOVLW 10
0025DE 0103           05675         MOVLB 3
  00000003            05676 RAM_BANK = 3
0025E0 5DED           05677         SUBWF INDEX,W
0025E2 0100           05678         MOVLB 0
  00000000            05679 RAM_BANK = 0
0025E4 B0D8           05680         BTFSC STATUS,0,0
                      05681         GO@TO NX@LB226
  000025EA            05682 F5_000032 EQU $ ; in [READ TAG.INC] Select TagIn[Index]
0025EA EE03 F0C6      05683         LFSR 0,TAGIN
0025EE 0103           05684         MOVLB 3
  00000003            05685 RAM_BANK = 3
0025F0 51ED           05686         MOVF INDEX,W
0025F2 50EB           05687         MOVF PLUSW0,W,0
0025F4 6E0C           05688         MOVWF PBP#VAR1,0
  000025F6            05689 F5_000033 EQU $ ; in [READ TAG.INC] Case 0XB0 To 0XB9
0025F6 0EB0           05690         MOVLW 176
0025F8 5C0C           05691         SUBWF PBP#VAR1,W,0
0025FA 0100           05692         MOVLB 0
  00000000            05693 RAM_BANK = 0
0025FC A0D8           05694         BTFSS STATUS,0,0
                      05695         GO@TO BC@LL227
002602 0EBA           05696         MOVLW 186
002604 5C0C           05697         SUBWF PBP#VAR1,W,0
002606 B0D8           05698         BTFSC STATUS,0,0
                      05699         GO@TO BC@LL227
  0000260C            05700 F5_000034 EQU $ ; in [READ TAG.INC] TV1 = TagIn[Index]
00260C EE03 F0C6      05701         LFSR 0,TAGIN
002610 0103           05702         MOVLB 3
  00000003            05703 RAM_BANK = 3
002612 51ED           05704         MOVF INDEX,W
002614 50EB           05705         MOVF PLUSW0,W,0
002616 6FEF           05706         MOVWF TV1
  00002618            05707 F5_000035 EQU $ ; in [READ TAG.INC] ClearBit TV1 , 7
002618 9FEF           05708         BCF TV1,7
  0000261A            05709 F5_000036 EQU $ ; in [READ TAG.INC] TagIn[Index] = TV1
00261A EE03 F0C6      05710         LFSR 0,TAGIN
00261E 51ED           05711         MOVF INDEX,W
002620 C3EF FFEB      05712         MOVFF TV1,PLUSW0
002624 0100           05713         MOVLB 0
  00000000            05714 RAM_BANK = 0
                      05715         F@JUMP BC@LL226
00262A                05716 BC@LL227
  0000262A            05717 F5_000038 EQU $ ; in [READ TAG.INC] Case 0X81 To 0X86
00262A 0E81           05718         MOVLW 129
00262C 5C0C           05719         SUBWF PBP#VAR1,W,0
00262E A0D8           05720         BTFSS STATUS,0,0
                      05721         GO@TO BC@LL230
002634 0E87           05722         MOVLW 135
002636 5C0C           05723         SUBWF PBP#VAR1,W,0
002638 B0D8           05724         BTFSC STATUS,0,0
                      05725         GO@TO BC@LL230
  0000263E            05726 F5_000039 EQU $ ; in [READ TAG.INC] TV1 = TagIn[Index]
00263E EE03 F0C6      05727         LFSR 0,TAGIN
002642 0103           05728         MOVLB 3
  00000003            05729 RAM_BANK = 3
002644 51ED           05730         MOVF INDEX,W
002646 50EB           05731         MOVF PLUSW0,W,0
002648 6FEF           05732         MOVWF TV1
  0000264A            05733 F5_000040 EQU $ ; in [READ TAG.INC] ClearBit TV1 , 7
00264A 9FEF           05734         BCF TV1,7
  0000264C            05735 F5_000041 EQU $ ; in [READ TAG.INC] SetBit TV1, 6
00264C 8DEF           05736         BSF TV1,6
  0000264E            05737 F5_000042 EQU $ ; in [READ TAG.INC] TagIn[Index] = TV1
00264E EE03 F0C6      05738         LFSR 0,TAGIN
002652 51ED           05739         MOVF INDEX,W
002654 C3EF FFEB      05740         MOVFF TV1,PLUSW0
  00002658            05741 F5_000044 EQU $ ; in [READ TAG.INC] End Select
002658                05742 BC@LL230
002658 0100           05743         MOVLB 0
  00000000            05744 RAM_BANK = 0
00265A                05745 BC@LL226
  0000265A            05746 F5_000045 EQU $ ; in [READ TAG.INC] Next Index
00265A 0103           05747         MOVLB 3
  00000003            05748 RAM_BANK = 3
00265C 2BED           05749         INCF INDEX,F
00265E 0100           05750         MOVLB 0
  00000000            05751 RAM_BANK = 0
002660 A4D8           05752         BTFSS STATUS,2,0
                      05753         GO@TO FR@LB225
002664                05754 NX@LB226
  00002664            05755 F5_000048 EQU $ ; in [READ TAG.INC] Cls
                      05756         F@CALL LCD@CLS
  00002668            05757 F5_000049 EQU $ ; in [READ TAG.INC] Print "Thank You"
002668 0E04           05758         MOVLW ((STR@LB11 >> 8) & 255)
00266A 6EF7           05759         MOVWF TBLPTRLH,0
00266C 0EE0           05760         MOVLW (STR@LB11 & 255)
00266E 6EF6           05761         MOVWF TBLPTRL,0
                      05762         F@CALL PRINT@MSTR
  00002674            05763 F5_000050 EQU $ ; in [READ TAG.INC] Return
002674 0012           05764         RETURN 0
002676                05765 TIMEOUT
  00002676            05766 F5_000052 EQU $ ; in [READ TAG.INC] Timeout: Low RFIDEnable       ' Turn off RFID Reader ..No Tag detected for 30 sec
002676 9895           05767         BCF TRISD,4,0
002678 9883           05768         BCF PORTD,4,0
  0000267A            05769 F5_000054 EQU $ ; in [READ TAG.INC] Cls
                      05770         F@CALL LCD@CLS
  0000267E            05771 F5_000055 EQU $ ; in [READ TAG.INC] Print At 1,1, "No Tag Detected"
00267E 0E80           05772         MOVLW 128
002680 6E01           05773         MOVWF BPFH,0
002682 0E80           05774         MOVLW 128
                      05775         F@CALL LCD@CRS
002688 0E04           05776         MOVLW ((STR@LB12 >> 8) & 255)
00268A 6EF7           05777         MOVWF TBLPTRLH,0
00268C 0EEA           05778         MOVLW (STR@LB12 & 255)
00268E 6EF6           05779         MOVWF TBLPTRL,0
                      05780         F@CALL PRINT@MSTR
  00002694            05781 F5_000056 EQU $ ; in [READ TAG.INC] DelayMS 2000   'EVENTUALLY WE MUST GET RID OF THE PAUSE.
002694 0E07           05782         MOVLW 7
002696 6E16           05783         MOVWF PP1H,0
002698 0ED0           05784         MOVLW 208
                      05785         F@CALL DLY@W
  0000269E            05786 F5_000057 EQU $ ; in [READ TAG.INC] Sleep          'EVENTUALLY WE MUST INFORM THE USER HIS TAG FAILED.
00269E 0003           05787         SLEEP
  000026A0            05788 F5_EOF EQU $ ; READ TAG.INC
  000026A0            05789 F6_SOF EQU $ ; READ SD.INC
0026A0                05790 READ_SD
  000026A0            05791 F6_000012 EQU $ ; in [READ SD.INC] MyCount = 0
0026A0 0103           05792         MOVLB 3
  00000003            05793 RAM_BANK = 3
0026A2 6BEC           05794         CLRF MYCOUNT
  000026A4            05795 F6_000014 EQU $ ; in [READ SD.INC] GoSub Read_Mod        'Go get Module number
0026A4 0100           05796         MOVLB 0
  00000000            05797 RAM_BANK = 0
                      05798         F@CALL READ_MOD
  000026AA            05799 F6_000016 EQU $ ; in [READ SD.INC] SD_File_Name = Str ModNum          'Change Mod # into string
0026AA EE02 F091      05800         LFSR 0,SD_FILE_NAME
0026AE EE13 F0E4      05801         LFSR 1,MODNUM
0026B2 0E07           05802         MOVLW 7
0026B4 6EF3           05803         MOVWF PRODL,0
0026B6 50E6           05804         MOVF POSTINC1,W,0
0026B8 E003           05805         BZ $ + 8
0026BA 6EEE           05806         MOVWF POSTINC0,0
0026BC 2EF3           05807         DECFSZ PRODL,F,0
0026BE D7FB           05808         BRA $ - 8
0026C0 6AEF           05809         CLRF INDF0,0
  000026C2            05810 F6_000017 EQU $ ; in [READ SD.INC] SD_File_Ext = "TXT"                'File Ext, upper case only!
0026C2 EE02 F09A      05811         LFSR 0,SD_FILE_EXT
0026C6 0E54           05812         MOVLW 84
0026C8 6EEE           05813         MOVWF POSTINC0,0
0026CA 0E58           05814         MOVLW 88
0026CC 6EEE           05815         MOVWF POSTINC0,0
0026CE 0E54           05816         MOVLW 84
0026D0 6EEE           05817         MOVWF POSTINC0,0
0026D2 6AEF           05818         CLRF INDF0,0
  000026D4            05819 F6_000018 EQU $ ; in [READ SD.INC] Response = SD_Open_File             'Using the Module serial number stored within the Module at
  000A                05820  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_OPEN_FILE_RETURN=1,PRM_COUNT=0
                      05821         SD_OPEN_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05822  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_OPEN_FILE_RETURN=1,PRM_COUNT=0
  000026DC            05823 F6_000021 EQU $ ; in [READ SD.INC] If Response = 1 Then
0026DC 0E01           05824         MOVLW 1
0026DE 0103           05825         MOVLB 3
  00000003            05826 RAM_BANK = 3
0026E0 5DEB           05827         SUBWF RESPONSE,W
0026E2 0100           05828         MOVLB 0
  00000000            05829 RAM_BANK = 0
0026E4 A4D8           05830         BTFSS STATUS,2,0
                      05831         GO@TO BC@LL232
  000026EA            05832 F6_000022 EQU $ ; in [READ SD.INC] Cls
                      05833         F@CALL LCD@CLS
  000026EE            05834 F6_000023 EQU $ ; in [READ SD.INC] Print "File not found"          'File with Module serial number not found.
0026EE 0E04           05835         MOVLW ((STR@LB13 >> 8) & 255)
0026F0 6EF7           05836         MOVWF TBLPTRLH,0
0026F2 0EFA           05837         MOVLW (STR@LB13 & 255)
0026F4 6EF6           05838         MOVWF TBLPTRL,0
                      05839         F@CALL PRINT@MSTR
  000026FA            05840 F6_000025 EQU $ ; in [READ SD.INC] Sleep
0026FA 0003           05841         SLEEP
  000026FC            05842 F6_000026 EQU $ ; in [READ SD.INC] EndIf
0026FC                05843 BC@LL232
  000026FC            05844 F6_000030 EQU $ ; in [READ SD.INC] User_Pointer = BUA                   '...we write the low and ..
0026FC 0E9C           05845         MOVLW 156
0026FE 0103           05846         MOVLB 3
  00000003            05847 RAM_BANK = 3
002700 6FC5           05848         MOVWF USER_POINTERH
002702 0E50           05849         MOVLW 80
002704 6FC4           05850         MOVWF USER_POINTER
  00002706            05851 F6_000031 EQU $ ; in [READ SD.INC] EWrite UPA_L, [User_Pointer.LowByte]  '...high bytes of the base user address (0X9C500...
002706 6AAA           05852         CLRF EEADRH,0
002708 6AA9           05853         CLRF EEADR,0
00270A 51C4           05854         MOVF USER_POINTER,W
                      05855         F@CALL EE@WR@W
  00002710            05856 F6_000032 EQU $ ; in [READ SD.INC] EWrite UPA_H, [User_Pointer.HighByte]  '...into the EEProm Pointer storage spot (0X000 and 0X001)
002710 6AAA           05857         CLRF EEADRH,0
002712 0E01           05858         MOVLW 1
002714 6EA9           05859         MOVWF EEADR,0
002716 51C5           05860         MOVF USER_POINTERH,W
                      05861         F@CALL EE@WR@W
  0000271C            05862 F6_000033 EQU $ ; in [READ SD.INC] Pause 2000    'EVENTUALLY DELETE THIS PAUSE
00271C 0E07           05863         MOVLW 7
00271E 6E16           05864         MOVWF PP1H,0
002720 0ED0           05865         MOVLW 208
                      05866         F@CALL DLY@W
  00002726            05867 F6_000035 EQU $ ; in [READ SD.INC] While SD_EOF < 1      'Read SD until end of file....
002726                05868 BC@LL233
002726 0100           05869         MOVLB 0
  00000000            05870 RAM_BANK = 0
002728 96D8           05871         BCF STATUS,3,0
00272A 0102           05872         MOVLB 2
  00000002            05873 RAM_BANK = 2
00272C B1E5           05874         BTFSC _B#VR1,0
00272E 86D8           05875         BSF STATUS,3,0
002730 0100           05876         MOVLB 0
  00000000            05877 RAM_BANK = 0
                      05878         G@OTO BC@LL234
  00002738            05879 F6_000037 EQU $ ; in [READ SD.INC] Response = SD_Read_Byte_From_File
  000A                05880  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      05881         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05882  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
  00002740            05883 F6_000039 EQU $ ; in [READ SD.INC] If Response <> 0X5E Then       'first character for each user should be "^"
002740 0E5E           05884         MOVLW 94
002742 0103           05885         MOVLB 3
  00000003            05886 RAM_BANK = 3
002744 5DEB           05887         SUBWF RESPONSE,W
002746 0100           05888         MOVLB 0
  00000000            05889 RAM_BANK = 0
002748 B4D8           05890         BTFSC STATUS,2,0
                      05891         GO@TO BC@LL236
  0000274E            05892 F6_000040 EQU $ ; in [READ SD.INC] If Response = 0X40 Then   ' if the first char is not '^' then is it a '@'?
00274E 0E40           05893         MOVLW 64
002750 0103           05894         MOVLB 3
  00000003            05895 RAM_BANK = 3
002752 5DEB           05896         SUBWF RESPONSE,W
002754 0100           05897         MOVLB 0
  00000000            05898 RAM_BANK = 0
002756 A4D8           05899         BTFSS STATUS,2,0
                      05900         GO@TO BC@LL238
  0000275C            05901 F6_000043 EQU $ ; in [READ SD.INC] EWrite NOU, [MyCount]     'Write total # of Users to EEProm
00275C 6AAA           05902         CLRF EEADRH,0
00275E 0E02           05903         MOVLW 2
002760 6EA9           05904         MOVWF EEADR,0
002762 0103           05905         MOVLB 3
  00000003            05906 RAM_BANK = 3
002764 51EC           05907         MOVF MYCOUNT,W
                      05908         F@CALL EE@WR@W
  0000276A            05909 F6_000044 EQU $ ; in [READ SD.INC] GoTo Write_Manager     'Located in 'Write_M_SD' module
00276A 0100           05910         MOVLB 0
  00000000            05911 RAM_BANK = 0
                      05912         F@JUMP WRITE_MANAGER
  00002770            05913 F6_000045 EQU $ ; in [READ SD.INC] Return                  'Return to main module
002770 0012           05914         RETURN 0
  00002772            05915 F6_000046 EQU $ ; in [READ SD.INC] EndIf
002772                05916 BC@LL238
  00002772            05917 F6_000048 EQU $ ; in [READ SD.INC] Cls
                      05918         F@CALL LCD@CLS
  00002776            05919 F6_000049 EQU $ ; in [READ SD.INC] Print At 1,1, "No 5E (^)"
002776 0E80           05920         MOVLW 128
002778 6E01           05921         MOVWF BPFH,0
00277A 0E80           05922         MOVLW 128
                      05923         F@CALL LCD@CRS
002780 0E05           05924         MOVLW ((STR@LB14 >> 8) & 255)
002782 6EF7           05925         MOVWF TBLPTRLH,0
002784 0E0A           05926         MOVLW (STR@LB14 & 255)
002786 6EF6           05927         MOVWF TBLPTRL,0
                      05928         F@CALL PRINT@MSTR
  0000278C            05929 F6_000050 EQU $ ; in [READ SD.INC] Print At 2,1, "Stopped!"
00278C 0E80           05930         MOVLW 128
00278E 6E01           05931         MOVWF BPFH,0
002790 0EC0           05932         MOVLW 192
                      05933         F@CALL LCD@CRS
002796 0E05           05934         MOVLW ((STR@LB15 >> 8) & 255)
002798 6EF7           05935         MOVWF TBLPTRLH,0
00279A 0E14           05936         MOVLW (STR@LB15 & 255)
00279C 6EF6           05937         MOVWF TBLPTRL,0
                      05938         F@CALL PRINT@MSTR
  000027A2            05939 F6_000051 EQU $ ; in [READ SD.INC] Pause 3000
0027A2 0E0B           05940         MOVLW 11
0027A4 6E16           05941         MOVWF PP1H,0
0027A6 0EB8           05942         MOVLW 184
                      05943         F@CALL DLY@W
  000027AC            05944 F6_000052 EQU $ ; in [READ SD.INC] SD_Close_File
  000A                05945  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      05946         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05947  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  000027B0            05948 F6_000053 EQU $ ; in [READ SD.INC] Stop
0027B0                05949 PB@LB240
0027B0 D7FF           05950         BRA PB@LB240
  000027B2            05951 F6_000054 EQU $ ; in [READ SD.INC] Sleep    'EVENTUALLY WE NEED TO HAVE A WAY TO TELL THE USER THERE WAS A PROBLEM.
0027B2 0003           05952         SLEEP
  000027B4            05953 F6_000056 EQU $ ; in [READ SD.INC] EndIf
0027B4                05954 BC@LL236
  000027B4            05955 F6_000060 EQU $ ; in [READ SD.INC] For Index = 0 To 3                'next 4 characters will be the User ID number
0027B4 0103           05956         MOVLB 3
  00000003            05957 RAM_BANK = 3
0027B6 6BED           05958         CLRF INDEX
0027B8                05959 FR@LB241
0027B8 0100           05960         MOVLB 0
  00000000            05961 RAM_BANK = 0
0027BA 0E04           05962         MOVLW 4
0027BC 0103           05963         MOVLB 3
  00000003            05964 RAM_BANK = 3
0027BE 5DED           05965         SUBWF INDEX,W
0027C0 0100           05966         MOVLB 0
  00000000            05967 RAM_BANK = 0
0027C2 B0D8           05968         BTFSC STATUS,0,0
                      05969         GO@TO NX@LB242
  000027C8            05970 F6_000061 EQU $ ; in [READ SD.INC] UTag[Index] = SD_Read_Byte_From_File
  000A                05971  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      05972         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05973  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
0027D0 EE03 F0D4      05974         LFSR 0,UTAG
0027D4 0103           05975         MOVLB 3
  00000003            05976 RAM_BANK = 3
0027D6 51ED           05977         MOVF INDEX,W
0027D8 C00C FFEB      05978         MOVFF PBP#VAR1,PLUSW0
  000027DC            05979 F6_000062 EQU $ ; in [READ SD.INC] Next
0027DC 2BED           05980         INCF INDEX,F
0027DE 0100           05981         MOVLB 0
  00000000            05982 RAM_BANK = 0
0027E0 A4D8           05983         BTFSS STATUS,2,0
                      05984         GO@TO FR@LB241
0027E4                05985 NX@LB242
  000027E4            05986 F6_000064 EQU $ ; in [READ SD.INC] Response = SD_Read_Byte_From_File
  000A                05987  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      05988         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05989  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
  000027EC            05990 F6_000066 EQU $ ; in [READ SD.INC] If Response <> 0X3A Then       'first character for each Tag should be ":"
0027EC 0E3A           05991         MOVLW 58
0027EE 0103           05992         MOVLB 3
  00000003            05993 RAM_BANK = 3
0027F0 5DEB           05994         SUBWF RESPONSE,W
0027F2 0100           05995         MOVLB 0
  00000000            05996 RAM_BANK = 0
0027F4 B4D8           05997         BTFSC STATUS,2,0
                      05998         GO@TO BC@LL243
  000027FA            05999 F6_000067 EQU $ ; in [READ SD.INC] Cls
                      06000         F@CALL LCD@CLS
  000027FE            06001 F6_000068 EQU $ ; in [READ SD.INC] Print At 1,1, "No 3A (:).."      '*******Eventually will flash LED *************
0027FE 0E80           06002         MOVLW 128
002800 6E01           06003         MOVWF BPFH,0
002802 0E80           06004         MOVLW 128
                      06005         F@CALL LCD@CRS
002808 0E05           06006         MOVLW ((STR@LB16 >> 8) & 255)
00280A 6EF7           06007         MOVWF TBLPTRLH,0
00280C 0E1E           06008         MOVLW (STR@LB16 & 255)
00280E 6EF6           06009         MOVWF TBLPTRL,0
                      06010         F@CALL PRINT@MSTR
  00002814            06011 F6_000069 EQU $ ; in [READ SD.INC] Print At 2,1, "Stopped!"
002814 0E80           06012         MOVLW 128
002816 6E01           06013         MOVWF BPFH,0
002818 0EC0           06014         MOVLW 192
                      06015         F@CALL LCD@CRS
00281E 0E05           06016         MOVLW ((STR@LB17 >> 8) & 255)
002820 6EF7           06017         MOVWF TBLPTRLH,0
002822 0E2A           06018         MOVLW (STR@LB17 & 255)
002824 6EF6           06019         MOVWF TBLPTRL,0
                      06020         F@CALL PRINT@MSTR
  0000282A            06021 F6_000070 EQU $ ; in [READ SD.INC] Pause 3000
00282A 0E0B           06022         MOVLW 11
00282C 6E16           06023         MOVWF PP1H,0
00282E 0EB8           06024         MOVLW 184
                      06025         F@CALL DLY@W
  00002834            06026 F6_000071 EQU $ ; in [READ SD.INC] SD_Close_File
  000A                06027  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06028         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06029  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002838            06030 F6_000072 EQU $ ; in [READ SD.INC] Sleep    'EVENTUALLY WE NEED TO HAVE A WAY TO TELL THE USER THERE WAS A PROBLEM.
002838 0003           06031         SLEEP
  0000283A            06032 F6_000073 EQU $ ; in [READ SD.INC] EndIf
00283A                06033 BC@LL243
  0000283A            06034 F6_000075 EQU $ ; in [READ SD.INC] For Index = 4 To 13                'next 9 characters will be the User Tag number
00283A 0E04           06035         MOVLW 4
00283C 0103           06036         MOVLB 3
  00000003            06037 RAM_BANK = 3
00283E 6FED           06038         MOVWF INDEX
002840                06039 FR@LB245
002840 0100           06040         MOVLB 0
  00000000            06041 RAM_BANK = 0
002842 0E0E           06042         MOVLW 14
002844 0103           06043         MOVLB 3
  00000003            06044 RAM_BANK = 3
002846 5DED           06045         SUBWF INDEX,W
002848 0100           06046         MOVLB 0
  00000000            06047 RAM_BANK = 0
00284A B0D8           06048         BTFSC STATUS,0,0
                      06049         GO@TO NX@LB246
  00002850            06050 F6_000076 EQU $ ; in [READ SD.INC] UTag[Index] = SD_Read_Byte_From_File
  000A                06051  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      06052         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06053  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
002858 EE03 F0D4      06054         LFSR 0,UTAG
00285C 0103           06055         MOVLB 3
  00000003            06056 RAM_BANK = 3
00285E 51ED           06057         MOVF INDEX,W
002860 C00C FFEB      06058         MOVFF PBP#VAR1,PLUSW0
  00002864            06059 F6_000077 EQU $ ; in [READ SD.INC] Next
002864 2BED           06060         INCF INDEX,F
002866 0100           06061         MOVLB 0
  00000000            06062 RAM_BANK = 0
002868 A4D8           06063         BTFSS STATUS,2,0
                      06064         GO@TO FR@LB245
00286C                06065 NX@LB246
  0000286C            06066 F6_000081 EQU $ ; in [READ SD.INC] UTag[14] = 0XFF   'Dummy byte
00286C 0103           06067         MOVLB 3
  00000003            06068 RAM_BANK = 3
00286E 69E2           06069         SETF UTAG#14
  00002870            06070 F6_000082 EQU $ ; in [READ SD.INC] UTag[15] = 0XFF   'Dummy byte
002870 69E3           06071         SETF UTAG#15
  00002872            06072 F6_000083 EQU $ ; in [READ SD.INC] For Index = 0 To 15
002872 6BED           06073         CLRF INDEX
002874                06074 FR@LB247
002874 0100           06075         MOVLB 0
  00000000            06076 RAM_BANK = 0
002876 0E10           06077         MOVLW 16
002878 0103           06078         MOVLB 3
  00000003            06079 RAM_BANK = 3
00287A 5DED           06080         SUBWF INDEX,W
00287C 0100           06081         MOVLB 0
  00000000            06082 RAM_BANK = 0
00287E B0D8           06083         BTFSC STATUS,0,0
                      06084         GO@TO NX@LB248
  00002884            06085 F6_000084 EQU $ ; in [READ SD.INC] CWrite User_Pointer + Index, [UTag[Index]]    'Here we are writing the 16 byte chunk to the program memory
002884 0103           06086         MOVLB 3
  00000003            06087 RAM_BANK = 3
002886 51ED           06088         MOVF INDEX,W
002888 25C4           06089         ADDWF USER_POINTER,W
00288A 6EF6           06090         MOVWF TBLPTRL,0
00288C 0E00           06091         MOVLW 0
00288E 21C5           06092         ADDWFC USER_POINTERH,W
002890 6EF7           06093         MOVWF TBLPTRLH,0
002892 EE03 F0D4      06094         LFSR 0,UTAG
002896 51ED           06095         MOVF INDEX,W
002898 50EB           06096         MOVF PLUSW0,W,0
                      06097         F@CALL C@WRITE
  0000289E            06098 F6_000086 EQU $ ; in [READ SD.INC] Next
00289E 2BED           06099         INCF INDEX,F
0028A0 0100           06100         MOVLB 0
  00000000            06101 RAM_BANK = 0
0028A2 A4D8           06102         BTFSS STATUS,2,0
                      06103         GO@TO FR@LB247
0028A6                06104 NX@LB248
  000028A6            06105 F6_000087 EQU $ ; in [READ SD.INC] User_Pointer = User_Pointer + 16      'Here we will update the user pointer to reflect..
0028A6 0E10           06106         MOVLW 16
0028A8 0103           06107         MOVLB 3
  00000003            06108 RAM_BANK = 3
0028AA 27C4           06109         ADDWF USER_POINTER,F
0028AC 0E00           06110         MOVLW 0
0028AE 23C5           06111         ADDWFC USER_POINTERH,F
  000028B0            06112 F6_000088 EQU $ ; in [READ SD.INC] EWrite UPA_L, [User_Pointer.LowByte]   'our progress so far. If a problem arises then we have not lost all
0028B0 6AAA           06113         CLRF EEADRH,0
0028B2 6AA9           06114         CLRF EEADR,0
0028B4 51C4           06115         MOVF USER_POINTER,W
                      06116         F@CALL EE@WR@W
  000028BA            06117 F6_000089 EQU $ ; in [READ SD.INC] EWrite UPA_H, [User_Pointer.HighByte]  'UPA_L and UPA_H hold the start of the next empty user spot.
0028BA 6AAA           06118         CLRF EEADRH,0
0028BC 0E01           06119         MOVLW 1
0028BE 6EA9           06120         MOVWF EEADR,0
0028C0 51C5           06121         MOVF USER_POINTERH,W
                      06122         F@CALL EE@WR@W
  000028C6            06123 F6_000090 EQU $ ; in [READ SD.INC] Inc MyCount    'Keeps track of how many Users we have added
0028C6 2BEC           06124         INCF MYCOUNT,F
  000028C8            06125 F6_000092 EQU $ ; in [READ SD.INC] Wend    'Next user
0028C8 0100           06126         MOVLB 0
  00000000            06127 RAM_BANK = 0
                      06128         F@JUMP BC@LL233
0028CC                06129 BC@LL234
  000028CC            06130 F6_EOF EQU $ ; READ SD.INC
  000028CC            06131 F7_SOF EQU $ ; WRITE SD.INC
0028CC                06132 WRITE_SD
  000028CC            06133 F7_000016 EQU $ ; in [WRITE SD.INC] SD_File_Name = Str ModNum + "W"      'Module File Name with 'W' appended to differeniate from Input file, upper case only!
0028CC EE02 F091      06134         LFSR 0,SD_FILE_NAME
0028D0 EE13 F0E4      06135         LFSR 1,MODNUM
0028D4 0E07           06136         MOVLW 7
0028D6 6EF3           06137         MOVWF PRODL,0
0028D8 50E6           06138         MOVF POSTINC1,W,0
0028DA E003           06139         BZ $ + 8
0028DC 6EEE           06140         MOVWF POSTINC0,0
0028DE 2EF3           06141         DECFSZ PRODL,F,0
0028E0 D7FB           06142         BRA $ - 8
0028E2 0E57           06143         MOVLW 87
0028E4 6EEE           06144         MOVWF POSTINC0,0
0028E6 6AEF           06145         CLRF INDF0,0
  000028E8            06146 F7_000017 EQU $ ; in [WRITE SD.INC] SD_File_Ext = "TXT"                  'File Ext, upper case only!
0028E8 EE02 F09A      06147         LFSR 0,SD_FILE_EXT
0028EC 0E54           06148         MOVLW 84
0028EE 6EEE           06149         MOVWF POSTINC0,0
0028F0 0E58           06150         MOVLW 88
0028F2 6EEE           06151         MOVWF POSTINC0,0
0028F4 0E54           06152         MOVLW 84
0028F6 6EEE           06153         MOVWF POSTINC0,0
0028F8 6AEF           06154         CLRF INDF0,0
  000028FA            06155 F7_000018 EQU $ ; in [WRITE SD.INC] Response = SD_Check_For_File         'Check if file exists already
  000A                06156  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_CHECK_FOR_FILE_RETURN=1,PRM_COUNT=0
                      06157         SD_CHECK_FOR_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06158  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_CHECK_FOR_FILE_RETURN=1,PRM_COUNT=0
  00002902            06159 F7_000019 EQU $ ; in [WRITE SD.INC] If Response = 0 Then
002902 0103           06160         MOVLB 3
  00000003            06161 RAM_BANK = 3
002904 53EB           06162         MOVF RESPONSE,F
002906 0100           06163         MOVLB 0
  00000000            06164 RAM_BANK = 0
002908 A4D8           06165         BTFSS STATUS,2,0
                      06166         GO@TO BC@LL249
  0000290E            06167 F7_000020 EQU $ ; in [WRITE SD.INC] SD_Delete_File               ' If file exists then delete it........
  000A                06168  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
                      06169         SD_DELETE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06170  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
  00002912            06171 F7_000021 EQU $ ; in [WRITE SD.INC] EndIf
002912                06172 BC@LL249
  00002912            06173 F7_000022 EQU $ ; in [WRITE SD.INC] SD_New_File     'Create new file
  000A                06174  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
                      06175         SD_NEW_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06176  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
  00002916            06177 F7_000023 EQU $ ; in [WRITE SD.INC] SD_Close_File   'Close file now that is has been created... Only one file at a time can be opened
  000A                06178  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06179         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06180  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  0000291A            06181 F7_000025 EQU $ ; in [WRITE SD.INC] SD_File_Name = Str ModNum + "W"      'Module File Name with 'W' appended to differeniate from Input file, upper case only!
00291A EE02 F091      06182         LFSR 0,SD_FILE_NAME
00291E EE13 F0E4      06183         LFSR 1,MODNUM
002922 0E07           06184         MOVLW 7
002924 6EF3           06185         MOVWF PRODL,0
002926 50E6           06186         MOVF POSTINC1,W,0
002928 E003           06187         BZ $ + 8
00292A 6EEE           06188         MOVWF POSTINC0,0
00292C 2EF3           06189         DECFSZ PRODL,F,0
00292E D7FB           06190         BRA $ - 8
002930 0E57           06191         MOVLW 87
002932 6EEE           06192         MOVWF POSTINC0,0
002934 6AEF           06193         CLRF INDF0,0
  00002936            06194 F7_000026 EQU $ ; in [WRITE SD.INC] SD_File_Ext = "TXT"                'File Ext, upper case only!
002936 EE02 F09A      06195         LFSR 0,SD_FILE_EXT
00293A 0E54           06196         MOVLW 84
00293C 6EEE           06197         MOVWF POSTINC0,0
00293E 0E58           06198         MOVLW 88
002940 6EEE           06199         MOVWF POSTINC0,0
002942 0E54           06200         MOVLW 84
002944 6EEE           06201         MOVWF POSTINC0,0
002946 6AEF           06202         CLRF INDF0,0
  00002948            06203 F7_000027 EQU $ ; in [WRITE SD.INC] Response = SD_Append_File     'Here we are going to 'Append' the Output file with data so far
  000A                06204  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_APPEND_FILE_RETURN=1,PRM_COUNT=0
                      06205         SD_APPEND_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06206  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_APPEND_FILE_RETURN=1,PRM_COUNT=0
  00002950            06207 F7_000028 EQU $ ; in [WRITE SD.INC] If Response = 1 Then
002950 0E01           06208         MOVLW 1
002952 0103           06209         MOVLB 3
  00000003            06210 RAM_BANK = 3
002954 5DEB           06211         SUBWF RESPONSE,W
002956 0100           06212         MOVLB 0
  00000000            06213 RAM_BANK = 0
002958 A4D8           06214         BTFSS STATUS,2,0
                      06215         GO@TO BC@LL251
  0000295E            06216 F7_000029 EQU $ ; in [WRITE SD.INC] Cls
                      06217         F@CALL LCD@CLS
  00002962            06218 F7_000030 EQU $ ; in [WRITE SD.INC] Print "File not found"
002962 0E05           06219         MOVLW ((STR@LB18 >> 8) & 255)
002964 6EF7           06220         MOVWF TBLPTRLH,0
002966 0E34           06221         MOVLW (STR@LB18 & 255)
002968 6EF6           06222         MOVWF TBLPTRL,0
                      06223         F@CALL PRINT@MSTR
  0000296E            06224 F7_000032 EQU $ ; in [WRITE SD.INC] Sleep
00296E 0003           06225         SLEEP
  00002970            06226 F7_000033 EQU $ ; in [WRITE SD.INC] EndIf
002970                06227 BC@LL251
002970                06228 CLOSE_FILE
  00002970            06229 F7_000039 EQU $ ; in [WRITE SD.INC] SD_Close_File                                           'Close file
  000A                06230  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06231         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06232  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002974            06233 F7_000040 EQU $ ; in [WRITE SD.INC] Return
002974 0012           06234         RETURN 0
  00002976            06235 F7_EOF EQU $ ; WRITE SD.INC
  00002976            06236 F8_SOF EQU $ ; INIT SD.INC
002976                06237 INIT_SD
  00002976            06238 F8_000013 EQU $ ; in [INIT SD.INC] For Index = 0 To 2   'We allow 3 tries to intialize the SD card
002976 0103           06239         MOVLB 3
  00000003            06240 RAM_BANK = 3
002978 6BED           06241         CLRF INDEX
00297A                06242 FR@LB253
00297A 0100           06243         MOVLB 0
  00000000            06244 RAM_BANK = 0
00297C 0E03           06245         MOVLW 3
00297E 0103           06246         MOVLB 3
  00000003            06247 RAM_BANK = 3
002980 5DED           06248         SUBWF INDEX,W
002982 0100           06249         MOVLB 0
  00000000            06250 RAM_BANK = 0
002984 B0D8           06251         BTFSC STATUS,0,0
                      06252         GO@TO NX@LB254
  0000298A            06253 F8_000015 EQU $ ; in [INIT SD.INC] Response = SD_Init_FS_MSSP SD_SPI_FOSC_04
  0008                06254  VARIABLE PRM_1=8
  0000                06255  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06256  VARIABLE SD_INIT_FS_MSSP_LST_PRM=0
  000A                06257  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_INIT_FS_MSSP_RETURN=1,PRM_COUNT=1
                      06258         SD_INIT_FS_MSSP 0,0,0,0,0,0,0,0,0,0
  000A                06259  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_INIT_FS_MSSP_RETURN=1,PRM_COUNT=1
  0008                06260  VARIABLE PRM_1=8
  0000                06261  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06262  VARIABLE SD_INIT_FS_MSSP_LST_PRM=0
  000029A4            06263 F8_000016 EQU $ ; in [INIT SD.INC] If Response = 0 Then
0029A4 0103           06264         MOVLB 3
  00000003            06265 RAM_BANK = 3
0029A6 53EB           06266         MOVF RESPONSE,F
0029A8 0100           06267         MOVLB 0
  00000000            06268 RAM_BANK = 0
0029AA A4D8           06269         BTFSS STATUS,2,0
                      06270         GO@TO BC@LL255
  000029B0            06271 F8_000017 EQU $ ; in [INIT SD.INC] Cls
                      06272         F@CALL LCD@CLS
  000029B4            06273 F8_000018 EQU $ ; in [INIT SD.INC] Print "Init done!"
0029B4 0E05           06274         MOVLW ((STR@LB19 >> 8) & 255)
0029B6 6EF7           06275         MOVWF TBLPTRLH,0
0029B8 0E44           06276         MOVLW (STR@LB19 & 255)
0029BA 6EF6           06277         MOVWF TBLPTRL,0
                      06278         F@CALL PRINT@MSTR
  000029C0            06279 F8_000019 EQU $ ; in [INIT SD.INC] Pause 3000
0029C0 0E0B           06280         MOVLW 11
0029C2 6E16           06281         MOVWF PP1H,0
0029C4 0EB8           06282         MOVLW 184
                      06283         F@CALL DLY@W
  000029CA            06284 F8_000020 EQU $ ; in [INIT SD.INC] Return
0029CA 0012           06285         RETURN 0
  000029CC            06286 F8_000021 EQU $ ; in [INIT SD.INC] EndIf
0029CC                06287 BC@LL255
  000029CC            06288 F8_000022 EQU $ ; in [INIT SD.INC] Next Index     'Next try to intitialize card
0029CC 0103           06289         MOVLB 3
  00000003            06290 RAM_BANK = 3
0029CE 2BED           06291         INCF INDEX,F
0029D0 0100           06292         MOVLB 0
  00000000            06293 RAM_BANK = 0
0029D2 A4D8           06294         BTFSS STATUS,2,0
                      06295         GO@TO FR@LB253
0029D6                06296 NX@LB254
  000029D6            06297 F8_000025 EQU $ ; in [INIT SD.INC] Cls
                      06298         F@CALL LCD@CLS
  000029DA            06299 F8_000026 EQU $ ; in [INIT SD.INC] Print "No Init!"     'Eventually we will flash a LED here to tell operator the Init failed
0029DA 0E05           06300         MOVLW ((STR@LB20 >> 8) & 255)
0029DC 6EF7           06301         MOVWF TBLPTRLH,0
0029DE 0E50           06302         MOVLW (STR@LB20 & 255)
0029E0 6EF6           06303         MOVWF TBLPTRL,0
                      06304         F@CALL PRINT@MSTR
  000029E6            06305 F8_000027 EQU $ ; in [INIT SD.INC] Pause 3000
0029E6 0E0B           06306         MOVLW 11
0029E8 6E16           06307         MOVWF PP1H,0
0029EA 0EB8           06308         MOVLW 184
                      06309         F@CALL DLY@W
  000029F0            06310 F8_000028 EQU $ ; in [INIT SD.INC] Return
0029F0 0012           06311         RETURN 0
  000029F2            06312 F8_EOF EQU $ ; INIT SD.INC
  000029F2            06313 F9_SOF EQU $ ; CHECK TAG.INC
0029F2                06314 CHECK_TAG
  000029F2            06315 F9_000004 EQU $ ; in [CHECK TAG.INC] Check_Tag:    Response = 0        'Process will set Response to 1 if Tag is found
0029F2 0103           06316         MOVLB 3
  00000003            06317 RAM_BANK = 3
0029F4 6BEB           06318         CLRF RESPONSE
  000029F6            06319 F9_000005 EQU $ ; in [CHECK TAG.INC] If User_Pointer = BUA Then    'there are no User entries in the table
0029F6 51C5           06320         MOVF USER_POINTERH,W
0029F8 0A9C           06321         XORLW 156
0029FA 0E50           06322         MOVLW 80
0029FC B4D8           06323         BTFSC STATUS,2,0
0029FE 19C4           06324         XORWF USER_POINTER,W
002A00 0100           06325         MOVLB 0
  00000000            06326 RAM_BANK = 0
002A02 A4D8           06327         BTFSS STATUS,2,0
                      06328         GO@TO BC@LL257
  00002A08            06329 F9_000006 EQU $ ; in [CHECK TAG.INC] Cls
                      06330         F@CALL LCD@CLS
  00002A0C            06331 F9_000007 EQU $ ; in [CHECK TAG.INC] Print "No Users"
002A0C 0E05           06332         MOVLW ((STR@LB21 >> 8) & 255)
002A0E 6EF7           06333         MOVWF TBLPTRLH,0
002A10 0E5A           06334         MOVLW (STR@LB21 & 255)
002A12 6EF6           06335         MOVWF TBLPTRL,0
                      06336         F@CALL PRINT@MSTR
  00002A18            06337 F9_000008 EQU $ ; in [CHECK TAG.INC] Pause 2000
002A18 0E07           06338         MOVLW 7
002A1A 6E16           06339         MOVWF PP1H,0
002A1C 0ED0           06340         MOVLW 208
                      06341         F@CALL DLY@W
  00002A22            06342 F9_000009 EQU $ ; in [CHECK TAG.INC] Return
002A22 0012           06343         RETURN 0
  00002A24            06344 F9_000010 EQU $ ; in [CHECK TAG.INC] EndIf
002A24                06345 BC@LL257
  00002A24            06346 F9_000011 EQU $ ; in [CHECK TAG.INC] Word_Var = BUA   ' Start search in first user memory spot
002A24 0E9C           06347         MOVLW 156
002A26 0103           06348         MOVLB 3
  00000003            06349 RAM_BANK = 3
002A28 6FF1           06350         MOVWF WORD_VARH
002A2A 0E50           06351         MOVLW 80
002A2C 6FF0           06352         MOVWF WORD_VAR
002A2E                06353 NEXTTAG
002A2E 0100           06354         MOVLB 0
  00000000            06355 RAM_BANK = 0
  00002A30            06356 F9_000012 EQU $ ; in [CHECK TAG.INC] NextTag:  Index = 0
002A30 0103           06357         MOVLB 3
  00000003            06358 RAM_BANK = 3
002A32 6BED           06359         CLRF INDEX
  00002A34            06360 F9_000013 EQU $ ; in [CHECK TAG.INC] Response = 0     'Process will set Flag to 1 if Tag is found
002A34 6BEB           06361         CLRF RESPONSE
  00002A36            06362 F9_000014 EQU $ ; in [CHECK TAG.INC] Repeat      'Repeat until all Tag digits are checked
002A36                06363 BC@LL258
002A36 0100           06364         MOVLB 0
  00000000            06365 RAM_BANK = 0
  00002A38            06366 F9_000015 EQU $ ; in [CHECK TAG.INC] TV1 = CRead TagOffset + Word_Var + Index   'TagOffset jumps over User #
002A38 0E04           06367         MOVLW 4
002A3A 0103           06368         MOVLB 3
  00000003            06369 RAM_BANK = 3
002A3C 25F0           06370         ADDWF WORD_VAR,W
002A3E 6E23           06371         MOVWF PP7,0
002A40 0E00           06372         MOVLW 0
002A42 21F1           06373         ADDWFC WORD_VARH,W
002A44 6E24           06374         MOVWF PP7H,0
002A46 51ED           06375         MOVF INDEX,W
002A48 2423           06376         ADDWF PP7,W,0
002A4A 6EF6           06377         MOVWF TBLPTRL,0
002A4C 0E00           06378         MOVLW 0
002A4E 2024           06379         ADDWFC PP7H,W,0
002A50 6EF7           06380         MOVWF TBLPTRLH,0
002A52 6AA6           06381         CLRF EECON1,0
002A54 8EA6           06382         BSF EECON1,EEPGD,0
002A56 0008           06383         TBLRD*
002A58 CFF5 F3EF      06384         MOVFF TABLAT,TV1
  00002A5C            06385 F9_000016 EQU $ ; in [CHECK TAG.INC] If TV1 = TagIn[Index] Then
002A5C EE03 F0C6      06386         LFSR 0,TAGIN
002A60 51ED           06387         MOVF INDEX,W
002A62 50EB           06388         MOVF PLUSW0,W,0
002A64 6E0C           06389         MOVWF PBP#VAR1,0
002A66 51EF           06390         MOVF TV1,W
002A68 5C0C           06391         SUBWF PBP#VAR1,W,0
002A6A 0100           06392         MOVLB 0
  00000000            06393 RAM_BANK = 0
002A6C A4D8           06394         BTFSS STATUS,2,0
                      06395         GO@TO BC@LL261
  00002A72            06396 F9_000017 EQU $ ; in [CHECK TAG.INC] Response = 1      'Digits Match
002A72 0E01           06397         MOVLW 1
002A74 0103           06398         MOVLB 3
  00000003            06399 RAM_BANK = 3
002A76 6FEB           06400         MOVWF RESPONSE
  00002A78            06401 F9_000018 EQU $ ; in [CHECK TAG.INC] Inc Index      'Check Next Digit
002A78 2BED           06402         INCF INDEX,F
002A7A 0100           06403         MOVLB 0
  00000000            06404 RAM_BANK = 0
                      06405         F@JUMP BC@LL262
002A80                06406 BC@LL261
  00002A80            06407 F9_000019 EQU $ ; in [CHECK TAG.INC] Else
  00002A80            06408 F9_000020 EQU $ ; in [CHECK TAG.INC] Response = 0     'Digit does not match, therefore
002A80 0103           06409         MOVLB 3
  00000003            06410 RAM_BANK = 3
002A82 6BEB           06411         CLRF RESPONSE
  00002A84            06412 F9_000021 EQU $ ; in [CHECK TAG.INC] Index = 10  'we are finished with this Tag
002A84 0E0A           06413         MOVLW 10
002A86 6FED           06414         MOVWF INDEX
  00002A88            06415 F9_000022 EQU $ ; in [CHECK TAG.INC] EndIf
002A88                06416 BC@LL262
002A88 0100           06417         MOVLB 0
  00000000            06418 RAM_BANK = 0
  00002A8A            06419 F9_000023 EQU $ ; in [CHECK TAG.INC] Until Index > 9
002A8A 0E0A           06420         MOVLW 10
002A8C 0103           06421         MOVLB 3
  00000003            06422 RAM_BANK = 3
002A8E 5DED           06423         SUBWF INDEX,W
002A90 0100           06424         MOVLB 0
  00000000            06425 RAM_BANK = 0
002A92 A0D8           06426         BTFSS STATUS,0,0
                      06427         GO@TO BC@LL258
002A96                06428 BC@LL259
  00002A96            06429 F9_000024 EQU $ ; in [CHECK TAG.INC] If Response = 1 Then      'Write User of Tag into UserIn variable array
002A96 0E01           06430         MOVLW 1
002A98 0103           06431         MOVLB 3
  00000003            06432 RAM_BANK = 3
002A9A 5DEB           06433         SUBWF RESPONSE,W
002A9C 0100           06434         MOVLB 0
  00000000            06435 RAM_BANK = 0
002A9E A4D8           06436         BTFSS STATUS,2,0
                      06437         GO@TO BC@LL264
  00002AA4            06438 F9_000025 EQU $ ; in [CHECK TAG.INC] For Index = 0 To 3
002AA4 0103           06439         MOVLB 3
  00000003            06440 RAM_BANK = 3
002AA6 6BED           06441         CLRF INDEX
002AA8                06442 FR@LB266
002AA8 0100           06443         MOVLB 0
  00000000            06444 RAM_BANK = 0
002AAA 0E04           06445         MOVLW 4
002AAC 0103           06446         MOVLB 3
  00000003            06447 RAM_BANK = 3
002AAE 5DED           06448         SUBWF INDEX,W
002AB0 0100           06449         MOVLB 0
  00000000            06450 RAM_BANK = 0
002AB2 B0D8           06451         BTFSC STATUS,0,0
                      06452         GO@TO NX@LB267
  00002AB8            06453 F9_000026 EQU $ ; in [CHECK TAG.INC] UserIn[Index] = CRead Word_Var + Index
002AB8 0103           06454         MOVLB 3
  00000003            06455 RAM_BANK = 3
002ABA 51ED           06456         MOVF INDEX,W
002ABC 25F0           06457         ADDWF WORD_VAR,W
002ABE 6EF6           06458         MOVWF TBLPTRL,0
002AC0 0E00           06459         MOVLW 0
002AC2 21F1           06460         ADDWFC WORD_VARH,W
002AC4 6EF7           06461         MOVWF TBLPTRLH,0
002AC6 6AA6           06462         CLRF EECON1,0
002AC8 8EA6           06463         BSF EECON1,EEPGD,0
002ACA 0008           06464         TBLRD*
002ACC CFF5 F00C      06465         MOVFF TABLAT,PBP#VAR1
002AD0 EE03 F0D0      06466         LFSR 0,USERIN
002AD4 51ED           06467         MOVF INDEX,W
002AD6 C00C FFEB      06468         MOVFF PBP#VAR1,PLUSW0
  00002ADA            06469 F9_000027 EQU $ ; in [CHECK TAG.INC] Next
002ADA 2BED           06470         INCF INDEX,F
002ADC 0100           06471         MOVLB 0
  00000000            06472 RAM_BANK = 0
002ADE A4D8           06473         BTFSS STATUS,2,0
                      06474         GO@TO FR@LB266
002AE2                06475 NX@LB267
  00002AE2            06476 F9_000028 EQU $ ; in [CHECK TAG.INC] Return
002AE2 0012           06477         RETURN 0
  00002AE4            06478 F9_000029 EQU $ ; in [CHECK TAG.INC] EndIf
002AE4                06479 BC@LL264
  00002AE4            06480 F9_000031 EQU $ ; in [CHECK TAG.INC] Word_Var = Word_Var + 16
002AE4 0E10           06481         MOVLW 16
002AE6 0103           06482         MOVLB 3
  00000003            06483 RAM_BANK = 3
002AE8 27F0           06484         ADDWF WORD_VAR,F
002AEA 0E00           06485         MOVLW 0
002AEC 23F1           06486         ADDWFC WORD_VARH,F
  00002AEE            06487 F9_000032 EQU $ ; in [CHECK TAG.INC] If Word_Var = User_Pointer Then Return
002AEE 51C5           06488         MOVF USER_POINTERH,W
002AF0 5DF1           06489         SUBWF WORD_VARH,W
002AF2 0100           06490         MOVLB 0
  00000000            06491 RAM_BANK = 0
002AF4 A4D8           06492         BTFSS STATUS,2,0
                      06493         GO@TO BC@LL268
002AFA 0103           06494         MOVLB 3
  00000003            06495 RAM_BANK = 3
002AFC 51C4           06496         MOVF USER_POINTER,W
002AFE 5DF0           06497         SUBWF WORD_VAR,W
002B00 0100           06498         MOVLB 0
  00000000            06499 RAM_BANK = 0
002B02 A4D8           06500         BTFSS STATUS,2,0
                      06501         GO@TO BC@LL268
002B08 0012           06502         RETURN 0
002B0A                06503 BC@LL268
  00002B0A            06504 F9_000034 EQU $ ; in [CHECK TAG.INC] GoTo NextTag
                      06505         F@JUMP NEXTTAG
  00002B0C            06506 F9_EOF EQU $ ; CHECK TAG.INC
  00002B0C            06507 F10_SOF EQU $ ; WRITE_U_H.INC
002B0C                06508 WRITEH
  00002B0C            06509 F10_000012 EQU $ ; in [WRITE_U_H.INC] For Index = num_UH To 0 Step -1          'Here we move all old history down one notch to ready 1st place for new entry
002B0C 0EC8           06510         MOVLW 200
002B0E 0103           06511         MOVLB 3
  00000003            06512 RAM_BANK = 3
002B10 6FED           06513         MOVWF INDEX
002B12                06514 FR@LB270
002B12 0100           06515         MOVLB 0
  00000000            06516 RAM_BANK = 0
  00002B14            06517 F10_000013 EQU $ ; in [WRITE_U_H.INC] For Index2 = 0 To 3
002B14 0103           06518         MOVLB 3
  00000003            06519 RAM_BANK = 3
002B16 6BEE           06520         CLRF INDEX2
002B18                06521 FR@LB272
002B18 0100           06522         MOVLB 0
  00000000            06523 RAM_BANK = 0
002B1A 0E04           06524         MOVLW 4
002B1C 0103           06525         MOVLB 3
  00000003            06526 RAM_BANK = 3
002B1E 5DEE           06527         SUBWF INDEX2,W
002B20 0100           06528         MOVLB 0
  00000000            06529 RAM_BANK = 0
002B22 B0D8           06530         BTFSC STATUS,0,0
                      06531         GO@TO NX@LB273
  00002B28            06532 F10_000014 EQU $ ; in [WRITE_U_H.INC] TV1 = ERead (Index * 4) + Index2 + UHA
002B28 6A24           06533         CLRF PP7H,0
002B2A C3ED F023      06534         MOVFF INDEX,PP7
002B2E 90D8           06535         BCF STATUS,0,0
002B30 3623           06536         RLCF PP7,F,0
002B32 3624           06537         RLCF PP7H,F,0
002B34 90D8           06538         BCF STATUS,0,0
002B36 3623           06539         RLCF PP7,F,0
002B38 3624           06540         RLCF PP7H,F,0
002B3A 0103           06541         MOVLB 3
  00000003            06542 RAM_BANK = 3
002B3C 51EE           06543         MOVF INDEX2,W
002B3E 2623           06544         ADDWF PP7,F,0
002B40 0E00           06545         MOVLW 0
002B42 2224           06546         ADDWFC PP7H,F,0
002B44 0E10           06547         MOVLW 16
002B46 2423           06548         ADDWF PP7,W,0
002B48 6EA9           06549         MOVWF EEADR,0
002B4A 0E00           06550         MOVLW 0
002B4C 2024           06551         ADDWFC PP7H,W,0
002B4E 6EAA           06552         MOVWF EEADRH,0
                      06553         F@CALL EE@RD@W
002B54 6FEF           06554         MOVWF TV1
  00002B56            06555 F10_000015 EQU $ ; in [WRITE_U_H.INC] EWrite (Index * 4) + Index2 + 4 + UHA,[TV1]
002B56 6A24           06556         CLRF PP7H,0
002B58 C3ED F023      06557         MOVFF INDEX,PP7
002B5C 90D8           06558         BCF STATUS,0,0
002B5E 3623           06559         RLCF PP7,F,0
002B60 3624           06560         RLCF PP7H,F,0
002B62 90D8           06561         BCF STATUS,0,0
002B64 3623           06562         RLCF PP7,F,0
002B66 3624           06563         RLCF PP7H,F,0
002B68 51EE           06564         MOVF INDEX2,W
002B6A 2623           06565         ADDWF PP7,F,0
002B6C 0E00           06566         MOVLW 0
002B6E 2224           06567         ADDWFC PP7H,F,0
002B70 0E04           06568         MOVLW 4
002B72 2623           06569         ADDWF PP7,F,0
002B74 0E00           06570         MOVLW 0
002B76 2224           06571         ADDWFC PP7H,F,0
002B78 0E10           06572         MOVLW 16
002B7A 2423           06573         ADDWF PP7,W,0
002B7C 6EA9           06574         MOVWF EEADR,0
002B7E 0E00           06575         MOVLW 0
002B80 2024           06576         ADDWFC PP7H,W,0
002B82 6EAA           06577         MOVWF EEADRH,0
002B84 51EF           06578         MOVF TV1,W
                      06579         F@CALL EE@WR@W
  00002B8A            06580 F10_000016 EQU $ ; in [WRITE_U_H.INC] WOrd_Var = (Index * 4) + Index2 + 4 + UHA
002B8A 6A24           06581         CLRF PP7H,0
002B8C C3ED F023      06582         MOVFF INDEX,PP7
002B90 90D8           06583         BCF STATUS,0,0
002B92 3623           06584         RLCF PP7,F,0
002B94 3624           06585         RLCF PP7H,F,0
002B96 90D8           06586         BCF STATUS,0,0
002B98 3623           06587         RLCF PP7,F,0
002B9A 3624           06588         RLCF PP7H,F,0
002B9C 51EE           06589         MOVF INDEX2,W
002B9E 2623           06590         ADDWF PP7,F,0
002BA0 0E00           06591         MOVLW 0
002BA2 2224           06592         ADDWFC PP7H,F,0
002BA4 0E04           06593         MOVLW 4
002BA6 2623           06594         ADDWF PP7,F,0
002BA8 0E00           06595         MOVLW 0
002BAA 2224           06596         ADDWFC PP7H,F,0
002BAC 0E10           06597         MOVLW 16
002BAE 2423           06598         ADDWF PP7,W,0
002BB0 6FF0           06599         MOVWF WORD_VAR
002BB2 0E00           06600         MOVLW 0
002BB4 2024           06601         ADDWFC PP7H,W,0
002BB6 6FF1           06602         MOVWF WORD_VARH
  00002BB8            06603 F10_000017 EQU $ ; in [WRITE_U_H.INC] Next Index2
002BB8 2BEE           06604         INCF INDEX2,F
002BBA 0100           06605         MOVLB 0
  00000000            06606 RAM_BANK = 0
002BBC A4D8           06607         BTFSS STATUS,2,0
                      06608         GO@TO FR@LB272
002BC0                06609 NX@LB273
  00002BC0            06610 F10_000018 EQU $ ; in [WRITE_U_H.INC] Next Index
002BC0 0E01           06611         MOVLW 1
002BC2 0103           06612         MOVLB 3
  00000003            06613 RAM_BANK = 3
002BC4 5FED           06614         SUBWF INDEX,F
002BC6 0100           06615         MOVLB 0
  00000000            06616 RAM_BANK = 0
002BC8 B0D8           06617         BTFSC STATUS,0,0
                      06618         GO@TO FR@LB270
002BCC                06619 NX@LB271
  00002BCC            06620 F10_000020 EQU $ ; in [WRITE_U_H.INC] Cls
                      06621         F@CALL LCD@CLS
  00002BD0            06622 F10_000022 EQU $ ; in [WRITE_U_H.INC] For Index = 0 To 3               'Write User # to History
002BD0 0103           06623         MOVLB 3
  00000003            06624 RAM_BANK = 3
002BD2 6BED           06625         CLRF INDEX
002BD4                06626 FR@LB274
002BD4 0100           06627         MOVLB 0
  00000000            06628 RAM_BANK = 0
002BD6 0E04           06629         MOVLW 4
002BD8 0103           06630         MOVLB 3
  00000003            06631 RAM_BANK = 3
002BDA 5DED           06632         SUBWF INDEX,W
002BDC 0100           06633         MOVLB 0
  00000000            06634 RAM_BANK = 0
002BDE B0D8           06635         BTFSC STATUS,0,0
                      06636         GO@TO NX@LB275
  00002BE4            06637 F10_000023 EQU $ ; in [WRITE_U_H.INC] TV1 = UserIn[Index]
002BE4 EE03 F0D0      06638         LFSR 0,USERIN
002BE8 0103           06639         MOVLB 3
  00000003            06640 RAM_BANK = 3
002BEA 51ED           06641         MOVF INDEX,W
002BEC 50EB           06642         MOVF PLUSW0,W,0
002BEE 6FEF           06643         MOVWF TV1
  00002BF0            06644 F10_000024 EQU $ ; in [WRITE_U_H.INC] EWrite UHA + Index, [TV1]
002BF0 0E10           06645         MOVLW 16
002BF2 25ED           06646         ADDWF INDEX,W
002BF4 6AAA           06647         CLRF EEADRH,0
002BF6 6EA9           06648         MOVWF EEADR,0
002BF8 36AA           06649         RLCF EEADRH,F,0
002BFA 51EF           06650         MOVF TV1,W
                      06651         F@CALL EE@WR@W
  00002C00            06652 F10_000025 EQU $ ; in [WRITE_U_H.INC] Next 'Index
002C00 2BED           06653         INCF INDEX,F
002C02 0100           06654         MOVLB 0
  00000000            06655 RAM_BANK = 0
002C04 A4D8           06656         BTFSS STATUS,2,0
                      06657         GO@TO FR@LB274
002C08                06658 NX@LB275
  00002C08            06659 F10_000026 EQU $ ; in [WRITE_U_H.INC] TV1 = ERead num_UHE
002C08 0E03           06660         MOVLW 3
                      06661         F@CALL EE@RD
002C0E 0103           06662         MOVLB 3
  00000003            06663 RAM_BANK = 3
002C10 6FEF           06664         MOVWF TV1
  00002C12            06665 F10_000027 EQU $ ; in [WRITE_U_H.INC] If TV1 < num_UH Then
002C12 0EC8           06666         MOVLW 200
002C14 5DEF           06667         SUBWF TV1,W
002C16 0100           06668         MOVLB 0
  00000000            06669 RAM_BANK = 0
002C18 B0D8           06670         BTFSC STATUS,0,0
                      06671         GO@TO BC@LL276
  00002C1E            06672 F10_000028 EQU $ ; in [WRITE_U_H.INC] Inc TV1
002C1E 0103           06673         MOVLB 3
  00000003            06674 RAM_BANK = 3
002C20 2BEF           06675         INCF TV1,F
  00002C22            06676 F10_000029 EQU $ ; in [WRITE_U_H.INC] EWrite num_UHE, [TV1]
002C22 6AAA           06677         CLRF EEADRH,0
002C24 0E03           06678         MOVLW 3
002C26 6EA9           06679         MOVWF EEADR,0
002C28 51EF           06680         MOVF TV1,W
                      06681         F@CALL EE@WR@W
  00002C2E            06682 F10_000030 EQU $ ; in [WRITE_U_H.INC] EndIf
002C2E                06683 BC@LL276
002C2E 0100           06684         MOVLB 0
  00000000            06685 RAM_BANK = 0
  00002C30            06686 F10_000031 EQU $ ; in [WRITE_U_H.INC] Return
002C30 0012           06687         RETURN 0
  00002C32            06688 F10_EOF EQU $ ; WRITE_U_H.INC
  00002C32            06689 F11_SOF EQU $ ; WRITE_M_H.INC
002C32                06690 WRITE_MANAGER
  00002C32            06691 F11_000013 EQU $ ; in [WRITE_M_H.INC] For Index = num_MH To 0 Step -1       'Here we move all old 8 digit Manager history down ..
002C32 0E0A           06692         MOVLW 10
002C34 0103           06693         MOVLB 3
  00000003            06694 RAM_BANK = 3
002C36 6FED           06695         MOVWF INDEX
002C38                06696 FR@LB278
002C38 0100           06697         MOVLB 0
  00000000            06698 RAM_BANK = 0
  00002C3A            06699 F11_000015 EQU $ ; in [WRITE_M_H.INC] For Index2 = 0 To 7
002C3A 0103           06700         MOVLB 3
  00000003            06701 RAM_BANK = 3
002C3C 6BEE           06702         CLRF INDEX2
002C3E                06703 FR@LB280
002C3E 0100           06704         MOVLB 0
  00000000            06705 RAM_BANK = 0
002C40 0E08           06706         MOVLW 8
002C42 0103           06707         MOVLB 3
  00000003            06708 RAM_BANK = 3
002C44 5DEE           06709         SUBWF INDEX2,W
002C46 0100           06710         MOVLB 0
  00000000            06711 RAM_BANK = 0
002C48 B0D8           06712         BTFSC STATUS,0,0
                      06713         GO@TO NX@LB281
  00002C4E            06714 F11_000016 EQU $ ; in [WRITE_M_H.INC] TV1 = ERead (Index * 8) + Index2 + MHA
002C4E 6A24           06715         CLRF PP7H,0
002C50 C3ED F023      06716         MOVFF INDEX,PP7
002C54 5024           06717         MOVF PP7H,W,0
002C56 0D08           06718         MULLW 8
002C58 CFF3 F024      06719         MOVFF PRODL,PP7H
002C5C 5023           06720         MOVF PP7,W,0
002C5E 0D08           06721         MULLW 8
002C60 CFF3 F023      06722         MOVFF PRODL,PP7
002C64 50F4           06723         MOVF PRODH,W,0
002C66 2624           06724         ADDWF PP7H,F,0
002C68 0103           06725         MOVLB 3
  00000003            06726 RAM_BANK = 3
002C6A 51EE           06727         MOVF INDEX2,W
002C6C 2623           06728         ADDWF PP7,F,0
002C6E 0E00           06729         MOVLW 0
002C70 2224           06730         ADDWFC PP7H,F,0
002C72 0E90           06731         MOVLW 144
002C74 2423           06732         ADDWF PP7,W,0
002C76 6EA9           06733         MOVWF EEADR,0
002C78 0E03           06734         MOVLW 3
002C7A 2024           06735         ADDWFC PP7H,W,0
002C7C 6EAA           06736         MOVWF EEADRH,0
                      06737         F@CALL EE@RD@W
002C82 6FEF           06738         MOVWF TV1
  00002C84            06739 F11_000017 EQU $ ; in [WRITE_M_H.INC] EWrite (Index * 8) + Index2 + 8 + MHA,[TV1]
002C84 6A24           06740         CLRF PP7H,0
002C86 C3ED F023      06741         MOVFF INDEX,PP7
002C8A 5024           06742         MOVF PP7H,W,0
002C8C 0D08           06743         MULLW 8
002C8E CFF3 F024      06744         MOVFF PRODL,PP7H
002C92 5023           06745         MOVF PP7,W,0
002C94 0D08           06746         MULLW 8
002C96 CFF3 F023      06747         MOVFF PRODL,PP7
002C9A 50F4           06748         MOVF PRODH,W,0
002C9C 2624           06749         ADDWF PP7H,F,0
002C9E 51EE           06750         MOVF INDEX2,W
002CA0 2623           06751         ADDWF PP7,F,0
002CA2 0E00           06752         MOVLW 0
002CA4 2224           06753         ADDWFC PP7H,F,0
002CA6 0E08           06754         MOVLW 8
002CA8 2623           06755         ADDWF PP7,F,0
002CAA 0E00           06756         MOVLW 0
002CAC 2224           06757         ADDWFC PP7H,F,0
002CAE 0E90           06758         MOVLW 144
002CB0 2423           06759         ADDWF PP7,W,0
002CB2 6EA9           06760         MOVWF EEADR,0
002CB4 0E03           06761         MOVLW 3
002CB6 2024           06762         ADDWFC PP7H,W,0
002CB8 6EAA           06763         MOVWF EEADRH,0
002CBA 51EF           06764         MOVF TV1,W
                      06765         F@CALL EE@WR@W
  00002CC0            06766 F11_000018 EQU $ ; in [WRITE_M_H.INC] Next Index2
002CC0 2BEE           06767         INCF INDEX2,F
002CC2 0100           06768         MOVLB 0
  00000000            06769 RAM_BANK = 0
002CC4 A4D8           06770         BTFSS STATUS,2,0
                      06771         GO@TO FR@LB280
002CC8                06772 NX@LB281
  00002CC8            06773 F11_000019 EQU $ ; in [WRITE_M_H.INC] Next Index
002CC8 0E01           06774         MOVLW 1
002CCA 0103           06775         MOVLB 3
  00000003            06776 RAM_BANK = 3
002CCC 5FED           06777         SUBWF INDEX,F
002CCE 0100           06778         MOVLB 0
  00000000            06779 RAM_BANK = 0
002CD0 B0D8           06780         BTFSC STATUS,0,0
                      06781         GO@TO FR@LB278
002CD4                06782 NX@LB279
  00002CD4            06783 F11_000021 EQU $ ; in [WRITE_M_H.INC] For Index = 0 To 7    'Write Manager ID and date to history file in spot 1
002CD4 0103           06784         MOVLB 3
  00000003            06785 RAM_BANK = 3
002CD6 6BED           06786         CLRF INDEX
002CD8                06787 FR@LB282
002CD8 0100           06788         MOVLB 0
  00000000            06789 RAM_BANK = 0
002CDA 0E08           06790         MOVLW 8
002CDC 0103           06791         MOVLB 3
  00000003            06792 RAM_BANK = 3
002CDE 5DED           06793         SUBWF INDEX,W
002CE0 0100           06794         MOVLB 0
  00000000            06795 RAM_BANK = 0
002CE2 B0D8           06796         BTFSC STATUS,0,0
                      06797         GO@TO NX@LB283
  00002CE8            06798 F11_000022 EQU $ ; in [WRITE_M_H.INC] Response = SD_Read_Byte_From_File
  000A                06799  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      06800         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06801  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
  00002CF0            06802 F11_000023 EQU $ ; in [WRITE_M_H.INC] EWrite MHA + Index, [Response]
002CF0 0E90           06803         MOVLW 144
002CF2 0103           06804         MOVLB 3
  00000003            06805 RAM_BANK = 3
002CF4 25ED           06806         ADDWF INDEX,W
002CF6 6AAA           06807         CLRF EEADRH,0
002CF8 6EA9           06808         MOVWF EEADR,0
002CFA 0E03           06809         MOVLW 3
002CFC 22AA           06810         ADDWFC EEADRH,F,0
002CFE 51EB           06811         MOVF RESPONSE,W
                      06812         F@CALL EE@WR@W
  00002D04            06813 F11_000024 EQU $ ; in [WRITE_M_H.INC] Next 'Index
002D04 2BED           06814         INCF INDEX,F
002D06 0100           06815         MOVLB 0
  00000000            06816 RAM_BANK = 0
002D08 A4D8           06817         BTFSS STATUS,2,0
                      06818         GO@TO FR@LB282
002D0C                06819 NX@LB283
  00002D0C            06820 F11_000026 EQU $ ; in [WRITE_M_H.INC] TV1 = ERead num_MHE   'Get the number of Manager histories.
002D0C 0E04           06821         MOVLW 4
                      06822         F@CALL EE@RD
002D12 0103           06823         MOVLB 3
  00000003            06824 RAM_BANK = 3
002D14 6FEF           06825         MOVWF TV1
  00002D16            06826 F11_000027 EQU $ ; in [WRITE_M_H.INC] If TV1 < num_MH Then    'If number of Manager History entries is less than
002D16 0E0A           06827         MOVLW 10
002D18 5DEF           06828         SUBWF TV1,W
002D1A 0100           06829         MOVLB 0
  00000000            06830 RAM_BANK = 0
002D1C B0D8           06831         BTFSC STATUS,0,0
                      06832         GO@TO BC@LL284
  00002D22            06833 F11_000029 EQU $ ; in [WRITE_M_H.INC] Inc TV1               ' add 1 more to # of manager Histories and...
002D22 0103           06834         MOVLB 3
  00000003            06835 RAM_BANK = 3
002D24 2BEF           06836         INCF TV1,F
  00002D26            06837 F11_000030 EQU $ ; in [WRITE_M_H.INC] EWrite num_MHE, [TV1]  ' write it back to the # of manager History entries.
002D26 6AAA           06838         CLRF EEADRH,0
002D28 0E04           06839         MOVLW 4
002D2A 6EA9           06840         MOVWF EEADR,0
002D2C 51EF           06841         MOVF TV1,W
                      06842         F@CALL EE@WR@W
  00002D32            06843 F11_000031 EQU $ ; in [WRITE_M_H.INC] EndIf
002D32                06844 BC@LL284
002D32 0100           06845         MOVLB 0
  00000000            06846 RAM_BANK = 0
  00002D34            06847 F11_000032 EQU $ ; in [WRITE_M_H.INC] SD_Close_File
  000A                06848  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06849         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06850  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002D38            06851 F11_000033 EQU $ ; in [WRITE_M_H.INC] Cls
                      06852         F@CALL LCD@CLS
  00002D3C            06853 F11_000034 EQU $ ; in [WRITE_M_H.INC] Print "Manager Done"
002D3C 0E05           06854         MOVLW ((STR@LB22 >> 8) & 255)
002D3E 6EF7           06855         MOVWF TBLPTRLH,0
002D40 0E64           06856         MOVLW (STR@LB22 & 255)
002D42 6EF6           06857         MOVWF TBLPTRL,0
                      06858         F@CALL PRINT@MSTR
  00002D48            06859 F11_000035 EQU $ ; in [WRITE_M_H.INC] Return
002D48 0012           06860         RETURN 0
  00002D4A            06861 F11_EOF EQU $ ; WRITE_M_H.INC
  00002D4A            06862 F12_SOF EQU $ ; WRITE_M_SD.INC
002D4A                06863 WRITE_M_SD
  00002D4A            06864 F12_000013 EQU $ ; in [WRITE_M_SD.INC] GoSub Read_Mod      'Get module #
                      06865         F@CALL READ_MOD
  00002D4E            06866 F12_000015 EQU $ ; in [WRITE_M_SD.INC] SD_File_Name = Str ModNum          'File Name, upper case only
002D4E EE02 F091      06867         LFSR 0,SD_FILE_NAME
002D52 EE13 F0E4      06868         LFSR 1,MODNUM
002D56 0E07           06869         MOVLW 7
002D58 6EF3           06870         MOVWF PRODL,0
002D5A 50E6           06871         MOVF POSTINC1,W,0
002D5C E003           06872         BZ $ + 8
002D5E 6EEE           06873         MOVWF POSTINC0,0
002D60 2EF3           06874         DECFSZ PRODL,F,0
002D62 D7FB           06875         BRA $ - 8
002D64 6AEF           06876         CLRF INDF0,0
  00002D66            06877 F12_000016 EQU $ ; in [WRITE_M_SD.INC] SD_File_Name = SD_File_Name +"M"    'M is for "Manager" file
002D66 EE02 F091      06878         LFSR 0,SD_FILE_NAME
002D6A 50EE           06879         MOVF POSTINC0,W,0
002D6C E1FE           06880         BNZ $ - 2
002D6E 52ED           06881         MOVF POSTDEC0,F,0
002D70 0E4D           06882         MOVLW 77
002D72 6EEE           06883         MOVWF POSTINC0,0
002D74 6AEF           06884         CLRF INDF0,0
  00002D76            06885 F12_000017 EQU $ ; in [WRITE_M_SD.INC] SD_File_Ext = "TXT"                'File Ext, upper case only!
002D76 EE02 F09A      06886         LFSR 0,SD_FILE_EXT
002D7A 0E54           06887         MOVLW 84
002D7C 6EEE           06888         MOVWF POSTINC0,0
002D7E 0E58           06889         MOVLW 88
002D80 6EEE           06890         MOVWF POSTINC0,0
002D82 0E54           06891         MOVLW 84
002D84 6EEE           06892         MOVWF POSTINC0,0
002D86 6AEF           06893         CLRF INDF0,0
  00002D88            06894 F12_000019 EQU $ ; in [WRITE_M_SD.INC] SD_Delete_File          'If file already exists then delete it..If the file does not exist then..
  000A                06895  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
                      06896         SD_DELETE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06897  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
  00002D8C            06898 F12_000022 EQU $ ; in [WRITE_M_SD.INC] SD_New_File
  000A                06899  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
                      06900         SD_NEW_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06901  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
  00002D90            06902 F12_000023 EQU $ ; in [WRITE_M_SD.INC] Index2 = ERead num_MHE   'Load number of Manager History entries into Index2
002D90 0E04           06903         MOVLW 4
                      06904         F@CALL EE@RD
002D96 0103           06905         MOVLB 3
  00000003            06906 RAM_BANK = 3
002D98 6FEE           06907         MOVWF INDEX2
  00002D9A            06908 F12_000024 EQU $ ; in [WRITE_M_SD.INC] MyNum = Str$ (Dec,Index2) 'Change number into a string to send to SD card
002D9A EE03 F0F2      06909         LFSR 0,MYNUM
002D9E 0E02           06910         MOVLW 2
002DA0 6E01           06911         MOVWF BPFH,0
002DA2 51EE           06912         MOVF INDEX2,W
                      06913         F@CALL OUT@DECB
002DA8 6AEF           06914         CLRF INDF0,0
  00002DAA            06915 F12_000025 EQU $ ; in [WRITE_M_SD.INC] If Index2 = 0 Then  'If there is no Manager History then..
002DAA 53EE           06916         MOVF INDEX2,F
002DAC 0100           06917         MOVLB 0
  00000000            06918 RAM_BANK = 0
002DAE A4D8           06919         BTFSS STATUS,2,0
                      06920         GO@TO BC@LL286
  00002DB4            06921 F12_000027 EQU $ ; in [WRITE_M_SD.INC] SD_IO_String = "No Manager History"
002DB4 EE02 F0FB      06922         LFSR 0,SD_IO_STRING
002DB8 0E05           06923         MOVLW ((STR@LB23 >> 8) & 255)
002DBA 6EF7           06924         MOVWF TBLPTRLH,0
002DBC 0E72           06925         MOVLW (STR@LB23 & 255)
002DBE 6EF6           06926         MOVWF TBLPTRL,0
                      06927         F@CALL LOAD@MSTR
002DC4 6AEF           06928         CLRF INDF0,0
  00002DC6            06929 F12_000028 EQU $ ; in [WRITE_M_SD.INC] SD_Write_String_To_File
  000A                06930  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
                      06931         SD_WRITE_STRING_TO_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06932  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
  00002DCA            06933 F12_000029 EQU $ ; in [WRITE_M_SD.INC] SD_CLOSE_FILE
  000A                06934  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06935         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06936  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002DCE            06937 F12_000030 EQU $ ; in [WRITE_M_SD.INC] Return
002DCE 0012           06938         RETURN 0
  00002DD0            06939 F12_000031 EQU $ ; in [WRITE_M_SD.INC] EndIf
002DD0                06940 BC@LL286
  00002DD0            06941 F12_000032 EQU $ ; in [WRITE_M_SD.INC] SD_IO_String = MyNum   'Write number of Mangager History entries to SD
002DD0 EE02 F0FB      06942         LFSR 0,SD_IO_STRING
002DD4 EE13 F0F2      06943         LFSR 1,MYNUM
002DD8 0E03           06944         MOVLW 3
002DDA 52E7           06945         MOVF INDF1,F,0
002DDC E004           06946         BZ $ + 10
002DDE CFE6 FFEE      06947         MOVFF POSTINC1,POSTINC0
002DE2 2EE8           06948         DECFSZ WREG,F,0
002DE4 D7FA           06949         BRA $ - 10
002DE6 6AEF           06950         CLRF INDF0,0
  00002DE8            06951 F12_000033 EQU $ ; in [WRITE_M_SD.INC] SD_Write_String_To_File
  000A                06952  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
                      06953         SD_WRITE_STRING_TO_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06954  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
  00002DEC            06955 F12_000034 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File "|"  ' Add a Separator
  0008                06956  VARIABLE PRM_1=8
  0000                06957  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06958  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                06959  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      06960         SD_WRITE_BYTE_TO_FILE 124,0,0,0,0,0,0,0,0,0
  000A                06961  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                06962  VARIABLE PRM_1=8
  0000                06963  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06964  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002DF6            06965 F12_000036 EQU $ ; in [WRITE_M_SD.INC] MyCount = 0
002DF6 0103           06966         MOVLB 3
  00000003            06967 RAM_BANK = 3
002DF8 6BEC           06968         CLRF MYCOUNT
  00002DFA            06969 F12_000037 EQU $ ; in [WRITE_M_SD.INC] Repeat
002DFA                06970 BC@LL287
002DFA 0100           06971         MOVLB 0
  00000000            06972 RAM_BANK = 0
  00002DFC            06973 F12_000038 EQU $ ; in [WRITE_M_SD.INC] For Index = 0 To 1    'Here we write the 2 hex digits for each manager history  entry
002DFC 0103           06974         MOVLB 3
  00000003            06975 RAM_BANK = 3
002DFE 6BED           06976         CLRF INDEX
002E00                06977 FR@LB290
002E00 0100           06978         MOVLB 0
  00000000            06979 RAM_BANK = 0
002E02 0E02           06980         MOVLW 2
002E04 0103           06981         MOVLB 3
  00000003            06982 RAM_BANK = 3
002E06 5DED           06983         SUBWF INDEX,W
002E08 0100           06984         MOVLB 0
  00000000            06985 RAM_BANK = 0
002E0A B0D8           06986         BTFSC STATUS,0,0
                      06987         GO@TO NX@LB291
  00002E10            06988 F12_000039 EQU $ ; in [WRITE_M_SD.INC] TV1 = ERead MHA + MyCount * 8 + Index
002E10 0E03           06989         MOVLW 3
002E12 6E24           06990         MOVWF PP7H,0
002E14 0E90           06991         MOVLW 144
002E16 6E23           06992         MOVWF PP7,0
002E18 6A28           06993         CLRF PP8H,0
002E1A C3EC F027      06994         MOVFF MYCOUNT,PP8
002E1E 5028           06995         MOVF PP8H,W,0
002E20 0D08           06996         MULLW 8
002E22 CFF3 F028      06997         MOVFF PRODL,PP8H
002E26 5027           06998         MOVF PP8,W,0
002E28 0D08           06999         MULLW 8
002E2A CFF3 F027      07000         MOVFF PRODL,PP8
002E2E 50F4           07001         MOVF PRODH,W,0
002E30 2628           07002         ADDWF PP8H,F,0
002E32 5027           07003         MOVF PP8,W,0
002E34 2623           07004         ADDWF PP7,F,0
002E36 5028           07005         MOVF PP8H,W,0
002E38 2224           07006         ADDWFC PP7H,F,0
002E3A 0103           07007         MOVLB 3
  00000003            07008 RAM_BANK = 3
002E3C 51ED           07009         MOVF INDEX,W
002E3E 2423           07010         ADDWF PP7,W,0
002E40 6EA9           07011         MOVWF EEADR,0
002E42 0E00           07012         MOVLW 0
002E44 2024           07013         ADDWFC PP7H,W,0
002E46 6EAA           07014         MOVWF EEADRH,0
                      07015         F@CALL EE@RD@W
002E4C 6FEF           07016         MOVWF TV1
  00002E4E            07017 F12_000040 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File TV1
002E4E 0100           07018         MOVLB 0
  00000000            07019 RAM_BANK = 0
  0002                07020  VARIABLE PRM_1=2
  0000                07021  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07022  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  000A                07023  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07024         SD_WRITE_BYTE_TO_FILE TV1,0,0,0,0,0,0,0,0,0
  000A                07025  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0002                07026  VARIABLE PRM_1=2
  0000                07027  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07028  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  00002E58            07029 F12_000041 EQU $ ; in [WRITE_M_SD.INC] Next Index
002E58 0103           07030         MOVLB 3
  00000003            07031 RAM_BANK = 3
002E5A 2BED           07032         INCF INDEX,F
002E5C 0100           07033         MOVLB 0
  00000000            07034 RAM_BANK = 0
002E5E A4D8           07035         BTFSS STATUS,2,0
                      07036         GO@TO FR@LB290
002E62                07037 NX@LB291
  00002E62            07038 F12_000042 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File ":"  ' Add a Separator
  0008                07039  VARIABLE PRM_1=8
  0000                07040  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07041  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                07042  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07043         SD_WRITE_BYTE_TO_FILE 58,0,0,0,0,0,0,0,0,0
  000A                07044  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                07045  VARIABLE PRM_1=8
  0000                07046  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07047  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002E6C            07048 F12_000043 EQU $ ; in [WRITE_M_SD.INC] For Index = 2 To 7          ' Here we write the 6 date digits for each manager history entry
002E6C 0E02           07049         MOVLW 2
002E6E 0103           07050         MOVLB 3
  00000003            07051 RAM_BANK = 3
002E70 6FED           07052         MOVWF INDEX
002E72                07053 FR@LB292
002E72 0100           07054         MOVLB 0
  00000000            07055 RAM_BANK = 0
002E74 0E08           07056         MOVLW 8
002E76 0103           07057         MOVLB 3
  00000003            07058 RAM_BANK = 3
002E78 5DED           07059         SUBWF INDEX,W
002E7A 0100           07060         MOVLB 0
  00000000            07061 RAM_BANK = 0
002E7C B0D8           07062         BTFSC STATUS,0,0
                      07063         GO@TO NX@LB293
  00002E82            07064 F12_000044 EQU $ ; in [WRITE_M_SD.INC] TV1 = ERead MHA + MyCount * 8 + Index
002E82 0E03           07065         MOVLW 3
002E84 6E24           07066         MOVWF PP7H,0
002E86 0E90           07067         MOVLW 144
002E88 6E23           07068         MOVWF PP7,0
002E8A 6A28           07069         CLRF PP8H,0
002E8C C3EC F027      07070         MOVFF MYCOUNT,PP8
002E90 5028           07071         MOVF PP8H,W,0
002E92 0D08           07072         MULLW 8
002E94 CFF3 F028      07073         MOVFF PRODL,PP8H
002E98 5027           07074         MOVF PP8,W,0
002E9A 0D08           07075         MULLW 8
002E9C CFF3 F027      07076         MOVFF PRODL,PP8
002EA0 50F4           07077         MOVF PRODH,W,0
002EA2 2628           07078         ADDWF PP8H,F,0
002EA4 5027           07079         MOVF PP8,W,0
002EA6 2623           07080         ADDWF PP7,F,0
002EA8 5028           07081         MOVF PP8H,W,0
002EAA 2224           07082         ADDWFC PP7H,F,0
002EAC 0103           07083         MOVLB 3
  00000003            07084 RAM_BANK = 3
002EAE 51ED           07085         MOVF INDEX,W
002EB0 2423           07086         ADDWF PP7,W,0
002EB2 6EA9           07087         MOVWF EEADR,0
002EB4 0E00           07088         MOVLW 0
002EB6 2024           07089         ADDWFC PP7H,W,0
002EB8 6EAA           07090         MOVWF EEADRH,0
                      07091         F@CALL EE@RD@W
002EBE 6FEF           07092         MOVWF TV1
  00002EC0            07093 F12_000045 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File TV1
002EC0 0100           07094         MOVLB 0
  00000000            07095 RAM_BANK = 0
  0002                07096  VARIABLE PRM_1=2
  0000                07097  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07098  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  000A                07099  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07100         SD_WRITE_BYTE_TO_FILE TV1,0,0,0,0,0,0,0,0,0
  000A                07101  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0002                07102  VARIABLE PRM_1=2
  0000                07103  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07104  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  00002ECA            07105 F12_000046 EQU $ ; in [WRITE_M_SD.INC] Next Index
002ECA 0103           07106         MOVLB 3
  00000003            07107 RAM_BANK = 3
002ECC 2BED           07108         INCF INDEX,F
002ECE 0100           07109         MOVLB 0
  00000000            07110 RAM_BANK = 0
002ED0 A4D8           07111         BTFSS STATUS,2,0
                      07112         GO@TO FR@LB292
002ED4                07113 NX@LB293
  00002ED4            07114 F12_000047 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File "/"  ' Add a Separator
  0008                07115  VARIABLE PRM_1=8
  0000                07116  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07117  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                07118  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07119         SD_WRITE_BYTE_TO_FILE 47,0,0,0,0,0,0,0,0,0
  000A                07120  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                07121  VARIABLE PRM_1=8
  0000                07122  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07123  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002EDE            07124 F12_000048 EQU $ ; in [WRITE_M_SD.INC] Inc MyCount
002EDE 0103           07125         MOVLB 3
  00000003            07126 RAM_BANK = 3
002EE0 2BEC           07127         INCF MYCOUNT,F
  00002EE2            07128 F12_000049 EQU $ ; in [WRITE_M_SD.INC] Until MyCount = Index2
002EE2 51EC           07129         MOVF MYCOUNT,W
002EE4 5DEE           07130         SUBWF INDEX2,W
002EE6 0100           07131         MOVLB 0
  00000000            07132 RAM_BANK = 0
002EE8 A4D8           07133         BTFSS STATUS,2,0
                      07134         GO@TO BC@LL287
002EEC                07135 BC@LL288
  00002EEC            07136 F12_000050 EQU $ ; in [WRITE_M_SD.INC] SD_CLOSE_FILE
  000A                07137  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      07138         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07139  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002EF0            07140 F12_000051 EQU $ ; in [WRITE_M_SD.INC] Return
002EF0 0012           07141         RETURN 0
  00002EF2            07142 F12_EOF EQU $ ; WRITE_M_SD.INC
  00002EF2            07143 F13_SOF EQU $ ; WRITE_USERS_SD.INC
002EF2                07144 WRITE_USERS_SD
  00002EF2            07145 F13_000014 EQU $ ; in [WRITE_USERS_SD.INC] GoSub Read_Mod 'Get the Module # from chip
                      07146         F@CALL READ_MOD
  00002EF6            07147 F13_000015 EQU $ ; in [WRITE_USERS_SD.INC] SD_File_Name = Str ModNum          'File Name, upper case only
002EF6 EE02 F091      07148         LFSR 0,SD_FILE_NAME
002EFA EE13 F0E4      07149         LFSR 1,MODNUM
002EFE 0E07           07150         MOVLW 7
002F00 6EF3           07151         MOVWF PRODL,0
002F02 50E6           07152         MOVF POSTINC1,W,0
002F04 E003           07153         BZ $ + 8
002F06 6EEE           07154         MOVWF POSTINC0,0
002F08 2EF3           07155         DECFSZ PRODL,F,0
002F0A D7FB           07156         BRA $ - 8
002F0C 6AEF           07157         CLRF INDF0,0
  00002F0E            07158 F13_000016 EQU $ ; in [WRITE_USERS_SD.INC] SD_File_Name = SD_File_Name + "R"
002F0E EE02 F091      07159         LFSR 0,SD_FILE_NAME
002F12 50EE           07160         MOVF POSTINC0,W,0
002F14 E1FE           07161         BNZ $ - 2
002F16 52ED           07162         MOVF POSTDEC0,F,0
002F18 0E52           07163         MOVLW 82
002F1A 6EEE           07164         MOVWF POSTINC0,0
002F1C 6AEF           07165         CLRF INDF0,0
  00002F1E            07166 F13_000017 EQU $ ; in [WRITE_USERS_SD.INC] SD_File_Ext = "TXT"
002F1E EE02 F09A      07167         LFSR 0,SD_FILE_EXT
002F22 0E54           07168         MOVLW 84
002F24 6EEE           07169         MOVWF POSTINC0,0
002F26 0E58           07170         MOVLW 88
002F28 6EEE           07171         MOVWF POSTINC0,0
002F2A 0E54           07172         MOVLW 84
002F2C 6EEE           07173         MOVWF POSTINC0,0
002F2E 6AEF           07174         CLRF INDF0,0
  00002F30            07175 F13_000020 EQU $ ; in [WRITE_USERS_SD.INC] SD_Delete_File          'If it does exist then delete it..
  000A                07176  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
                      07177         SD_DELETE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07178  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
  00002F34            07179 F13_000023 EQU $ ; in [WRITE_USERS_SD.INC] SD_New_File
  000A                07180  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
                      07181         SD_NEW_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07182  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
  00002F38            07183 F13_000025 EQU $ ; in [WRITE_USERS_SD.INC] If User_Pointer = BUA Then    'there are no User entries in the table
002F38 0103           07184         MOVLB 3
  00000003            07185 RAM_BANK = 3
002F3A 51C5           07186         MOVF USER_POINTERH,W
002F3C 0A9C           07187         XORLW 156
002F3E 0E50           07188         MOVLW 80
002F40 B4D8           07189         BTFSC STATUS,2,0
002F42 19C4           07190         XORWF USER_POINTER,W
002F44 0100           07191         MOVLB 0
  00000000            07192 RAM_BANK = 0
002F46 A4D8           07193         BTFSS STATUS,2,0
                      07194         GO@TO BC@LL294
  00002F4C            07195 F13_000026 EQU $ ; in [WRITE_USERS_SD.INC] Cls
                      07196         F@CALL LCD@CLS
  00002F50            07197 F13_000027 EQU $ ; in [WRITE_USERS_SD.INC] Print "No Users"
002F50 0E05           07198         MOVLW ((STR@LB24 >> 8) & 255)
002F52 6EF7           07199         MOVWF TBLPTRLH,0
002F54 0E86           07200         MOVLW (STR@LB24 & 255)
002F56 6EF6           07201         MOVWF TBLPTRL,0
                      07202         F@CALL PRINT@MSTR
  00002F5C            07203 F13_000028 EQU $ ; in [WRITE_USERS_SD.INC] Pause 2000
002F5C 0E07           07204         MOVLW 7
002F5E 6E16           07205         MOVWF PP1H,0
002F60 0ED0           07206         MOVLW 208
                      07207         F@CALL DLY@W
  00002F66            07208 F13_000029 EQU $ ; in [WRITE_USERS_SD.INC] SD_IO_String = "No Users Exist"
002F66 EE02 F0FB      07209         LFSR 0,SD_IO_STRING
002F6A 0E05           07210         MOVLW ((STR@LB25 >> 8) & 255)
002F6C 6EF7           07211         MOVWF TBLPTRLH,0
002F6E 0E90           07212         MOVLW (STR@LB25 & 255)
002F70 6EF6           07213         MOVWF TBLPTRL,0
                      07214         F@CALL LOAD@MSTR
002F76 6AEF           07215         CLRF INDF0,0
  00002F78            07216 F13_000030 EQU $ ; in [WRITE_USERS_SD.INC] SD_Write_String_To_File
  000A                07217  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
                      07218         SD_WRITE_STRING_TO_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07219  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
  00002F7C            07220 F13_000031 EQU $ ; in [WRITE_USERS_SD.INC] SD_CLOSE_FILE
  000A                07221  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      07222         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07223  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002F80            07224 F13_000032 EQU $ ; in [WRITE_USERS_SD.INC] Return
002F80 0012           07225         RETURN 0
  00002F82            07226 F13_000033 EQU $ ; in [WRITE_USERS_SD.INC] EndIf
002F82                07227 BC@LL294
  00002F82            07228 F13_000036 EQU $ ; in [WRITE_USERS_SD.INC] Index2 = ERead NOU    'Read number of users into Index2
002F82 0E02           07229         MOVLW 2
                      07230         F@CALL EE@RD
002F88 0103           07231         MOVLB 3
  00000003            07232 RAM_BANK = 3
002F8A 6FEE           07233         MOVWF INDEX2
  00002F8C            07234 F13_000037 EQU $ ; in [WRITE_USERS_SD.INC] MyCount = 0
002F8C 6BEC           07235         CLRF MYCOUNT
  00002F8E            07236 F13_000038 EQU $ ; in [WRITE_USERS_SD.INC] Word_Var = BUA   ' Start in first user memory spot
002F8E 0E9C           07237         MOVLW 156
002F90 6FF1           07238         MOVWF WORD_VARH
002F92 0E50           07239         MOVLW 80
002F94 6FF0           07240         MOVWF WORD_VAR
  00002F96            07241 F13_000039 EQU $ ; in [WRITE_USERS_SD.INC] Repeat
002F96                07242 BC@LL295
002F96 0100           07243         MOVLB 0
  00000000            07244 RAM_BANK = 0
  00002F98            07245 F13_000040 EQU $ ; in [WRITE_USERS_SD.INC] For Index = 0 To 3     'Repeat until all Tag digits are checked
002F98 0103           07246         MOVLB 3
  00000003            07247 RAM_BANK = 3
002F9A 6BED           07248         CLRF INDEX
002F9C                07249 FR@LB298
002F9C 0100           07250         MOVLB 0
  00000000            07251 RAM_BANK = 0
002F9E 0E04           07252         MOVLW 4
002FA0 0103           07253         MOVLB 3
  00000003            07254 RAM_BANK = 3
002FA2 5DED           07255         SUBWF INDEX,W
002FA4 0100           07256         MOVLB 0
  00000000            07257 RAM_BANK = 0
002FA6 B0D8           07258         BTFSC STATUS,0,0
                      07259         GO@TO NX@LB299
  00002FAC            07260 F13_000041 EQU $ ; in [WRITE_USERS_SD.INC] TV1 = CRead Word_Var + Index
002FAC 0103           07261         MOVLB 3
  00000003            07262 RAM_BANK = 3
002FAE 51ED           07263         MOVF INDEX,W
002FB0 25F0           07264         ADDWF WORD_VAR,W
002FB2 6EF6           07265         MOVWF TBLPTRL,0
002FB4 0E00           07266         MOVLW 0
002FB6 21F1           07267         ADDWFC WORD_VARH,W
002FB8 6EF7           07268         MOVWF TBLPTRLH,0
002FBA 6AA6           07269         CLRF EECON1,0
002FBC 8EA6           07270         BSF EECON1,EEPGD,0
002FBE 0008           07271         TBLRD*
002FC0 CFF5 F3EF      07272         MOVFF TABLAT,TV1
  00002FC4            07273 F13_000042 EQU $ ; in [WRITE_USERS_SD.INC] SD_Write_Byte_To_File TV1 'append to file.
002FC4 0100           07274         MOVLB 0
  00000000            07275 RAM_BANK = 0
  0002                07276  VARIABLE PRM_1=2
  0000                07277  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07278  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  000A                07279  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07280         SD_WRITE_BYTE_TO_FILE TV1,0,0,0,0,0,0,0,0,0
  000A                07281  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0002                07282  VARIABLE PRM_1=2
  0000                07283  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07284  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  00002FCE            07285 F13_000043 EQU $ ; in [WRITE_USERS_SD.INC] Next Index
002FCE 0103           07286         MOVLB 3
  00000003            07287 RAM_BANK = 3
002FD0 2BED           07288         INCF INDEX,F
002FD2 0100           07289         MOVLB 0
  00000000            07290 RAM_BANK = 0
002FD4 A4D8           07291         BTFSS STATUS,2,0
                      07292         GO@TO FR@LB298
002FD8                07293 NX@LB299
  00002FD8            07294 F13_000044 EQU $ ; in [WRITE_USERS_SD.INC] SD_Write_Byte_To_File ":"
  0008                07295  VARIABLE PRM_1=8
  0000                07296  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07297  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                07298  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07299         SD_WRITE_BYTE_TO_FILE 58,0,0,0,0,0,0,0,0,0
  000A                07300  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                07301  VARIABLE PRM_1=8
  0000                07302  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07303  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002FE2            07304 F13_000045 EQU $ ; in [WRITE_USERS_SD.INC] Word_Var = Word_Var + 16
002FE2 0E10           07305         MOVLW 16
002FE4 0103           07306         MOVLB 3
  00000003            07307 RAM_BANK = 3
002FE6 27F0           07308         ADDWF WORD_VAR,F
002FE8 0E00           07309         MOVLW 0
002FEA 23F1           07310         ADDWFC WORD_VARH,F
  00002FEC            07311 F13_000046 EQU $ ; in [WRITE_USERS_SD.INC] Inc MyCount
002FEC 2BEC           07312         INCF MYCOUNT,F
  00002FEE            07313 F13_000047 EQU $ ; in [WRITE_USERS_SD.INC] Print MyCount
002FEE 51EC           07314         MOVF MYCOUNT,W
                      07315         F@CALL PRINT
  00002FF4            07316 F13_000048 EQU $ ; in [WRITE_USERS_SD.INC] Until MyCount = Index2
002FF4 51EC           07317         MOVF MYCOUNT,W
002FF6 5DEE           07318         SUBWF INDEX2,W
002FF8 0100           07319         MOVLB 0
  00000000            07320 RAM_BANK = 0
002FFA A4D8           07321         BTFSS STATUS,2,0
                      07322         GO@TO BC@LL295
002FFE                07323 BC@LL296
  00002FFE            07324 F13_000051 EQU $ ; in [WRITE_USERS_SD.INC] Cls
                      07325         F@CALL LCD@CLS
  00003002            07326 F13_000052 EQU $ ; in [WRITE_USERS_SD.INC] Print "Done Users"
003002 0E05           07327         MOVLW ((STR@LB26 >> 8) & 255)
003004 6EF7           07328         MOVWF TBLPTRLH,0
003006 0EA0           07329         MOVLW (STR@LB26 & 255)
003008 6EF6           07330         MOVWF TBLPTRL,0
                      07331         F@CALL PRINT@MSTR
  0000300E            07332 F13_000053 EQU $ ; in [WRITE_USERS_SD.INC] Pause 2000
00300E 0E07           07333         MOVLW 7
003010 6E16           07334         MOVWF PP1H,0
003012 0ED0           07335         MOVLW 208
                      07336         F@CALL DLY@W
  00003018            07337 F13_000054 EQU $ ; in [WRITE_USERS_SD.INC] SD_CLOSE_FILE
  000A                07338  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      07339         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07340  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  0000301C            07341 F13_000055 EQU $ ; in [WRITE_USERS_SD.INC] Return
00301C 0012           07342         RETURN 0
  0000301E            07343 F13_EOF EQU $ ; WRITE_USERS_SD.INC
  0000301E            07344 F14_SOF EQU $ ; READ_MOD.INC
00301E                07345 READ_MOD
  0000301E            07346 F14_000003 EQU $ ; in [READ_MOD.INC] For Index = 0 To 7
00301E 0103           07347         MOVLB 3
  00000003            07348 RAM_BANK = 3
003020 6BED           07349         CLRF INDEX
003022                07350 FR@LB300
003022 0100           07351         MOVLB 0
  00000000            07352 RAM_BANK = 0
003024 0E08           07353         MOVLW 8
003026 0103           07354         MOVLB 3
  00000003            07355 RAM_BANK = 3
003028 5DED           07356         SUBWF INDEX,W
00302A 0100           07357         MOVLB 0
  00000000            07358 RAM_BANK = 0
00302C B0D8           07359         BTFSC STATUS,0,0
                      07360         GO@TO NX@LB301
  00003032            07361 F14_000004 EQU $ ; in [READ_MOD.INC] ModNum[Index] = CRead 0X9C40 + Index    'Read the Module number into Variable
003032 0E40           07362         MOVLW 64
003034 0103           07363         MOVLB 3
  00000003            07364 RAM_BANK = 3
003036 25ED           07365         ADDWF INDEX,W
003038 6AF7           07366         CLRF TBLPTRLH,0
00303A 6EF6           07367         MOVWF TBLPTRL,0
00303C 0E9C           07368         MOVLW 156
00303E 22F7           07369         ADDWFC TBLPTRLH,F,0
003040 6AA6           07370         CLRF EECON1,0
003042 8EA6           07371         BSF EECON1,EEPGD,0
003044 0008           07372         TBLRD*
003046 CFF5 F00C      07373         MOVFF TABLAT,PBP#VAR1
00304A EE03 F0E4      07374         LFSR 0,MODNUM
00304E 51ED           07375         MOVF INDEX,W
003050 C00C FFEB      07376         MOVFF PBP#VAR1,PLUSW0
  00003054            07377 F14_000005 EQU $ ; in [READ_MOD.INC] Next
003054 2BED           07378         INCF INDEX,F
003056 0100           07379         MOVLB 0
  00000000            07380 RAM_BANK = 0
003058 A4D8           07381         BTFSS STATUS,2,0
                      07382         GO@TO FR@LB300
00305C                07383 NX@LB301
  0000305C            07384 F14_000006 EQU $ ; in [READ_MOD.INC] Return
00305C 0012           07385         RETURN 0
  0000305E            07386 F14_EOF EQU $ ; READ_MOD.INC
  0000305E            07387 F15_SOF EQU $ ; GOSLEEP.INC
00305E                07388 GOSLEEP
  0000305E            07389 F15_000003 EQU $ ; in [GOSLEEP.INC] Cls
                      07390         F@CALL LCD@CLS
  00003062            07391 F15_000004 EQU $ ; in [GOSLEEP.INC] Print At 1,1, "Going to sleep.."
003062 0E80           07392         MOVLW 128
003064 6E01           07393         MOVWF BPFH,0
003066 0E80           07394         MOVLW 128
                      07395         F@CALL LCD@CRS
00306C 0E05           07396         MOVLW ((STR@LB27 >> 8) & 255)
00306E 6EF7           07397         MOVWF TBLPTRLH,0
003070 0EAC           07398         MOVLW (STR@LB27 & 255)
003072 6EF6           07399         MOVWF TBLPTRL,0
                      07400         F@CALL PRINT@MSTR
  00003078            07401 F15_000005 EQU $ ; in [GOSLEEP.INC] Pause 2000
003078 0E07           07402         MOVLW 7
00307A 6E16           07403         MOVWF PP1H,0
00307C 0ED0           07404         MOVLW 208
                      07405         F@CALL DLY@W
  00003082            07406 F15_000006 EQU $ ; in [GOSLEEP.INC] INTCON.4 = 1 'Allow a the pulse on PortB.0 to wake program from sleep
003082 88F2           07407         BSF INTCON,4,0
  00003084            07408 F15_000007 EQU $ ; in [GOSLEEP.INC] INTCON.1 = 0  'Clear the interrupt flag for PortB.0
003084 92F2           07409         BCF INTCON,1,0
  00003086            07410 F15_000010 EQU $ ; in [GOSLEEP.INC] Sleep    'Chip goes into low power until it is triggered by a High to Low pulse on PortB.0
003086 0003           07411         SLEEP
  00003088            07412 F15_000011 EQU $ ; in [GOSLEEP.INC] INTCON.4 = 0 'Stop any pulse from waking up program cause we just woke up
003088 98F2           07413         BCF INTCON,4,0
  0000308A            07414 F15_000012 EQU $ ; in [GOSLEEP.INC] Cls
                      07415         F@CALL LCD@CLS
  0000308E            07416 F15_000013 EQU $ ; in [GOSLEEP.INC] Print At 1,1, "I just woke up!!"
00308E 0E80           07417         MOVLW 128
003090 6E01           07418         MOVWF BPFH,0
003092 0E80           07419         MOVLW 128
                      07420         F@CALL LCD@CRS
003098 0E05           07421         MOVLW ((STR@LB28 >> 8) & 255)
00309A 6EF7           07422         MOVWF TBLPTRLH,0
00309C 0EBE           07423         MOVLW (STR@LB28 & 255)
00309E 6EF6           07424         MOVWF TBLPTRL,0
                      07425         F@CALL PRINT@MSTR
  000030A4            07426 F15_000018 EQU $ ; in [GOSLEEP.INC] Pause 2000
0030A4 0E07           07427         MOVLW 7
0030A6 6E16           07428         MOVWF PP1H,0
0030A8 0ED0           07429         MOVLW 208
                      07430         F@CALL DLY@W
  000030AE            07431 F15_000026 EQU $ ; in [GOSLEEP.INC] GoTo GoSleep      'Go back to sleep
                      07432         F@JUMP GOSLEEP
  000030B0            07433 F15_EOF EQU $ ; GOSLEEP.INC
009C40                07434         ORG 40000
009C40 3241 4237 3338 07435         DB 65,50,55,66,56,51
009C46 0042           07436         DB 66,0
  00009C48            07437 F1_EOF EQU $ ; V2.5 RFID 2ND GENERATION.BAS
                      07438  LIST
                      07439 ;---------------------------------------------
                      07440 
01 18 1F 81 84 0F C0 007441 CONFIG OSC = XT
       F E0 0F 40 
                      07442 CONFIG PWRT = ON
                      07443 CONFIG BOREN = OFF
                      07444 CONFIG MCLRE = ON
                      07445 CONFIG PBADEN = OFF
                      07446 CONFIG STVREN = OFF
                      07447 CONFIG LVP = ON
                      07448         END
MPASM  5.06                      V25RFI~1.ASM   4-4-2010  17:25:33         PAGE  4


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
ADRESLH                           00000FC4
AL@MUL                            00000374
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN4                               00000005
AN8                               00000002
AN9                               00000003
BANK0_END                         255
BANK0_START                       128
BANK10_END                        2815
BANK10_START                      2560
BANK11_END                        3071
BANK11_START                      2816
BANK12_END                        3200
BANK12_START                      3072
BANK13_END                        3583
BANK13_START                      3328
BANK14_END                        3839
BANK14_START                      3584
BANK1_END                         511
BANK1_START                       256
BANK2_END                         767
BANK2_START                       512
BANK3_END                         1023
BANK3_START                       768
BANK4_END                         1279
BANK4_START                       1024
BANK5_END                         1535
BANK5_START                       1280
BANK6_END                         1791
BANK6_START                       1536
BANK7_END                         2047
BANK7_START                       1792
BANK8_END                         2303
BANK8_START                       2048
BANK9_END                         2559
BANK9_START                       2304
BANKA_END                         127
BANKA_START                       0
BANKED                            00000001
BAUDCTL                           00000FB8
BC@LL10                           0000069C
BC@LL100                          00000EE6
BC@LL102                          00000EE6
BC@LL108                          00000F66
BC@LL109                          00000F78
BC@LL110                          00000FA2
BC@LL111                          00000FE6
BC@LL113                          00001068
BC@LL115                          0000130A
BC@LL117                          000012FE
BC@LL119                          000011CA
BC@LL120                          000012F8
BC@LL122                          000012EA
BC@LL124                          0000121C
BC@LL125                          000012F0
BC@LL126                          00001302
BC@LL128                          00001352
BC@LL13                           000006A0
BC@LL130                          00001378
BC@LL131                          0000138A
BC@LL133                          00001450
BC@LL134                          00001452
BC@LL135                          0000148A
BC@LL137                          0000149C
BC@LL139                          000014CC
BC@LL14                           000006A2
BC@LL140                          000014C2
BC@LL141                          000014CC
BC@LL143                          000015F0
BC@LL145                          00001710
BC@LL147                          000017B0
BC@LL149                          0000180E
BC@LL15                           000006CE
BC@LL150                          00001812
BC@LL152                          000019A8
BC@LL154                          00001970
BC@LL156                          00001866
BC@LL157                          00001858
BC@LL158                          00001862
BC@LL160                          00001966
BC@LL162                          000019A6
BC@LL164                          000019D4
BC@LL166                          000019F6
BC@LL17                           000006E0
BC@LL174                          00001BE2
BC@LL175                          00001C14
BC@LL176                          00001D44
BC@LL178                          00001CF0
BC@LL18                           000006E2
BC@LL180                          00001D96
BC@LL181                          00001DD2
BC@LL183                          00001E72
BC@LL185                          00001F0A
BC@LL187                          00001F0A
BC@LL189                          00001F4A
BC@LL190                          00001F6E
BC@LL191                          00002092
BC@LL193                          0000204A
BC@LL195                          00002026
BC@LL197                          000020FC
BC@LL198                          0000216A
BC@LL199                          00002142
BC@LL2                            0000060E
BC@LL20                           00000736
BC@LL200                          0000215C
BC@LL201                          00002168
BC@LL205                          000023B0
BC@LL207                          00002428
BC@LL209                          00002470
BC@LL210                          0000248A
BC@LL213                          00002532
BC@LL216                          0000254E
BC@LL223                          000025D6
BC@LL226                          0000265A
BC@LL227                          0000262A
BC@LL230                          00002658
BC@LL232                          000026FC
BC@LL233                          00002726
BC@LL234                          000028CC
BC@LL236                          000027B4
BC@LL238                          00002772
BC@LL243                          0000283A
BC@LL249                          00002912
BC@LL251                          00002970
BC@LL255                          000029CC
BC@LL257                          00002A24
BC@LL258                          00002A36
BC@LL259                          00002A96
BC@LL26                           000007B6
BC@LL261                          00002A80
BC@LL262                          00002A88
BC@LL264                          00002AE4
BC@LL268                          00002B0A
BC@LL276                          00002C2E
BC@LL28                           000007C4
BC@LL284                          00002D32
BC@LL286                          00002DD0
BC@LL287                          00002DFA
BC@LL288                          00002EEC
BC@LL294                          00002F82
BC@LL295                          00002F96
BC@LL296                          00002FFE
BC@LL3                            00000620
BC@LL30                           000007E4
BC@LL32                           00000838
BC@LL34                           00000850
BC@LL40                           000008BA
BC@LL42                           000008FE
BC@LL43                           00000920
BC@LL49                           00000A4A
BC@LL5                            0000065A
BC@LL51                           00000A4A
BC@LL55                           00000AEE
BC@LL56                           00000AF2
BC@LL6                            00000638
BC@LL60                           00000B6A
BC@LL64                           00000BD2
BC@LL7                            00000642
BC@LL72                           00000CCC
BC@LL73                           00000CE8
BC@LL74                           00000EE6
BC@LL75                           00000D30
BC@LL78                           00000D2C
BC@LL8                            00000660
BC@LL80                           00000DF0
BC@LL84                           00000D82
BC@LL88                           00000DD2
BC@LL90                           00000DEC
BC@LL92                           00000EE6
BC@LL94                           00000EE6
BC@LL96                           00000EE6
BC@LL98                           00000EE6
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BIT_BIT                           
BIT_BYTE                          
BIT_DWORD                         
BIT_FLOAT                         
BIT_WORD                          
BIT_WREG                          
BOR                               00000000
BOREN_NOSLP_2                     000000FD
BOREN_OFF_2                       000000F9
BOREN_ON_2                        000000FB
BOREN_SBORDIS_2                   000000FF
BORV_25_2                         000000FF
BORV_27_2                         000000F7
BORV_42_2                         000000EF
BORV_45_2                         000000E7
BPF                               00000000
BPFH                              00000001
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BUA                               40016
BUAH                              156
BYTE_BIT                          
BYTE_BYTE                         
BYTE_DWORD                        
BYTE_FLOAT                        
BYTE_WORD                         
BYTE_WREG                         
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
C@WRITE                           00000226
CCP1                              00000002
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2MX_PORTBE_3                   000000FE
CCP2MX_PORTC_3                    000000FF
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR1LH                           00000FBF
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CCPR2LH                           00000FBC
CFGS                              00000006
CH@SND                            000001E4
CHECK_TAG                         000029F2
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLOSE_FILE                        00002970
CLRC                              BCF STATUS,C
CLRW                              CLRF WREG
CLRZ                              BCF STATUS,Z
CLS                               0000003A
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CN@EQ                             00000024
CONFIG1H                          00300001
CONFIG2H                          00300003
CONFIG2L                          00300002
CONFIG3H                          00300005
CONFIG4L                          00300006
CONFIG5H                          00300009
CONFIG5L                          00300008
CONFIG6H                          0030000B
CONFIG6L                          0030000A
CONFIG7H                          0030000D
CONFIG7L                          0030000C
CONFIG_REQ                        1
CP0_OFF_5                         000000FF
CP0_ON_5                          000000FE
CP1_OFF_5                         000000FF
CP1_ON_5                          000000FD
CP2_OFF_5                         000000FF
CP2_ON_5                          000000FB
CP@LB18                           00000FBE
CP@LB23                           00001804
CP@LB25                           00001C5E
CP@LB26                           00001CCC
CP@LB28                           00001EF8
CP@LB29                           00001FDE
CP@LB30                           0000208C
CP@LB31                           000023E8
CP@LB4                            000006C6
CP@LB9                            000009FE
CPB_OFF_5                         000000FF
CPB_ON_5                          000000BF
CPD_OFF_5                         000000FF
CPD_ON_5                          0000007F
CR@EXIT                           00000242
CREN                              00000004
CS                                00000002
CSRC                              00000007
CURS@                             00000054
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
D@DIG                             00000094
D@K                               00000368
D@VD                              00000346
D@VD2                             0000034A
DAD5                              00000005
DAD6                              00000006
DAD7                              00000007
DC                                00000001
DDRA                              00000F92
DDRB                              00000F93
DDRC                              00000F94
DDRD                              00000F95
DDRE                              00000F96
DEBUG                             00000FD4
DEBUG_OFF_4                       000000FF
DEBUG_ON_4                        0000007F
DEVID1                            003FFFFE
DEVID2                            003FFFFF
DIVS@32X32EXIT                    00000324
DIVS@32X32LOOP                    000002D2
DIVS@32X32SKIP1                   000002A4
DIVS@32X32SKIP2                   000002B4
DIVS@32X32SKIP4                   00000308
DIVS@32X32SKIP5                   00000314
DL@H                              00000276
DL@MS                             00000248
DL@US                             00000262
DLUS@D                            0000028A
DLUS@LP                           00000270
DLUS@W                            00000264
DLY@P                             0000024C
DLY@W                             0000024A
DV@LP                             0000034E
DWORD_BIT                         
DWORD_BYTE                        
DWORD_DWORD                       
DWORD_FLOAT                       
DWORD_WORD                        
DWORD_WREG                        
D_A                               00000005
EBTR0_OFF_7                       000000FF
EBTR0_ON_7                        000000FE
EBTR1_OFF_7                       000000FF
EBTR1_ON_7                        000000FD
EBTR2_OFF_7                       000000FF
EBTR2_ON_7                        000000FB
EBTRB_OFF_7                       000000FF
EBTRB_ON_7                        000000BF
ECCP1CON                          00000FBD
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
ECIO6_OSC_1                       000000F5
EC_OSC_1                          000000F4
EE@RD                             000001F8
EE@RD@W                           000001FC
EE@WR                             00000208
EE@WR@W                           0000020A
EEADR                             00000FA9
EEADRH                            00000FAA
EECON1                            00000FA6
EECON2                            00000FA7
EEDAT                             00000FA8
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
ENHCPU_OFF_4                      0000009F
ENHCPU_ON_4                       000000FF
EX@SEND@IT                        000000C4
F10_000012                        00002B0C
F10_000013                        00002B14
F10_000014                        00002B28
F10_000015                        00002B56
F10_000016                        00002B8A
F10_000017                        00002BB8
F10_000018                        00002BC0
F10_000020                        00002BCC
F10_000022                        00002BD0
F10_000023                        00002BE4
F10_000024                        00002BF0
F10_000025                        00002C00
F10_000026                        00002C08
F10_000027                        00002C12
F10_000028                        00002C1E
F10_000029                        00002C22
F10_000030                        00002C2E
F10_000031                        00002C30
F10_EOF                           00002C32
F10_SOF                           00002B0C
F11_000013                        00002C32
F11_000015                        00002C3A
F11_000016                        00002C4E
F11_000017                        00002C84
F11_000018                        00002CC0
F11_000019                        00002CC8
F11_000021                        00002CD4
F11_000022                        00002CE8
F11_000023                        00002CF0
F11_000024                        00002D04
F11_000026                        00002D0C
F11_000027                        00002D16
F11_000029                        00002D22
F11_000030                        00002D26
F11_000031                        00002D32
F11_000032                        00002D34
F11_000033                        00002D38
F11_000034                        00002D3C
F11_000035                        00002D48
F11_EOF                           00002D4A
F11_SOF                           00002C32
F12_000013                        00002D4A
F12_000015                        00002D4E
F12_000016                        00002D66
F12_000017                        00002D76
F12_000019                        00002D88
F12_000022                        00002D8C
F12_000023                        00002D90
F12_000024                        00002D9A
F12_000025                        00002DAA
F12_000027                        00002DB4
F12_000028                        00002DC6
F12_000029                        00002DCA
F12_000030                        00002DCE
F12_000031                        00002DD0
F12_000032                        00002DD0
F12_000033                        00002DE8
F12_000034                        00002DEC
F12_000036                        00002DF6
F12_000037                        00002DFA
F12_000038                        00002DFC
F12_000039                        00002E10
F12_000040                        00002E4E
F12_000041                        00002E58
F12_000042                        00002E62
F12_000043                        00002E6C
F12_000044                        00002E82
F12_000045                        00002EC0
F12_000046                        00002ECA
F12_000047                        00002ED4
F12_000048                        00002EDE
F12_000049                        00002EE2
F12_000050                        00002EEC
F12_000051                        00002EF0
F12_EOF                           00002EF2
F12_SOF                           00002D4A
F13_000014                        00002EF2
F13_000015                        00002EF6
F13_000016                        00002F0E
F13_000017                        00002F1E
F13_000020                        00002F30
F13_000023                        00002F34
F13_000025                        00002F38
F13_000026                        00002F4C
F13_000027                        00002F50
F13_000028                        00002F5C
F13_000029                        00002F66
F13_000030                        00002F78
F13_000031                        00002F7C
F13_000032                        00002F80
F13_000033                        00002F82
F13_000036                        00002F82
F13_000037                        00002F8C
F13_000038                        00002F8E
F13_000039                        00002F96
F13_000040                        00002F98
F13_000041                        00002FAC
F13_000042                        00002FC4
F13_000043                        00002FCE
F13_000044                        00002FD8
F13_000045                        00002FE2
F13_000046                        00002FEC
F13_000047                        00002FEE
F13_000048                        00002FF4
F13_000051                        00002FFE
F13_000052                        00003002
F13_000053                        0000300E
F13_000054                        00003018
F13_000055                        0000301C
F13_EOF                           0000301E
F13_SOF                           00002EF2
F14_000003                        0000301E
F14_000004                        00003032
F14_000005                        00003054
F14_000006                        0000305C
F14_EOF                           0000305E
F14_SOF                           0000301E
F15_000003                        0000305E
F15_000004                        00003062
F15_000005                        00003078
F15_000006                        00003082
F15_000007                        00003084
F15_000010                        00003086
F15_000011                        00003088
F15_000012                        0000308A
F15_000013                        0000308E
F15_000018                        000030A4
F15_000026                        000030AE
F15_EOF                           000030B0
F15_SOF                           0000305E
F1_000035                         000023BC
F1_000107                         000023C4
F1_000109                         000023CA
F1_000110                         000023CC
F1_000112                         000023D0
F1_000113                         000023DA
F1_000115                         000023E2
F1_000116                         000023F0
F1_000117                         000023FA
F1_000118                         00002404
F1_000119                         00002410
F1_000120                         0000241C
F1_000121                         00002428
F1_000122                         0000242A
F1_000123                         0000242E
F1_000124                         0000243A
F1_000126                         00002444
F1_000127                         0000244A
F1_000128                         0000244E
F1_000129                         0000245A
F1_000130                         00002464
F1_000131                         00002468
F1_000132                         00002470
F1_000133                         00002470
F1_000134                         00002474
F1_000135                         00002480
F1_000137                         0000248A
F1_000138                         0000248A
F1_000141                         0000248C
F1_000142                         00002490
F1_000143                         00002494
F1_000147                         000024AC
F1_000154                         000024B6
F1_000156                         000024BA
F1_000157                         000024BE
F1_000159                         000024CA
F1_000160                         000024CE
F1_000161                         000024DC
F1_000162                         000024E0
F1_000163                         000024F6
F1_000164                         0000250E
F1_000165                         00002512
F1_000166                         00002516
F1_000167                         00002522
F1_000168                         0000252C
F1_000169                         00002532
F1_000170                         00002532
F1_000171                         00002536
F1_000172                         00002542
F1_000173                         0000254C
F1_000174                         0000254E
F1_000175                         0000254E
F1_EOF                            00009C48
F1_SOF                            000023BC
F2_EOF                            000023BC
F2_SOF                            000005E4
F3_EOF                            000005E4
F3_SOF                            000005E4
F4_000001                         000005E4
F4_000109                         000005E8
F4_000110                         000005F6
F4_000111                         0000060E
F4_000112                         0000060E
F4_000113                         00000620
F4_000114                         00000622
F4_000115                         00000628
F4_000116                         00000638
F4_000117                         00000638
F4_000118                         0000063C
F4_000119                         00000642
F4_000120                         00000646
F4_000121                         0000064A
F4_000122                         0000065A
F4_000123                         0000065A
F4_000124                         00000660
F4_000125                         00000662
F4_000128                         00000664
F4_000129                         0000066A
F4_000130                         00000674
F4_000131                         00000676
F4_000132                         00000684
F4_000133                         00000692
F4_000134                         0000069C
F4_000135                         0000069C
F4_000136                         000006A0
F4_000137                         000006A0
F4_000151                         000006A2
F4_000152                         000006A2
F4_000153                         000006A6
F4_000154                         000006AC
F4_000155                         000006CE
F4_000156                         000006D8
F4_000157                         000006E0
F4_000158                         000006E0
F4_000159                         000006E2
F4_000160                         000006E2
F4_000163                         000006E4
F4_000164                         000006E8
F4_000166                         000006EE
F4_000168                         000006FE
F4_000169                         00000702
F4_000170                         00000708
F4_000171                         0000070C
F4_000172                         00000710
F4_000173                         00000714
F4_000174                         00000718
F4_000175                         0000071A
F4_000176                         0000071C
F4_000177                         00000720
F4_000178                         00000726
F4_000179                         00000728
F4_000181                         00000736
F4_000182                         0000073C
F4_000184                         00000742
F4_000185                         00000744
F4_000186                         00000756
F4_000187                         0000075C
F4_000188                         00000762
F4_000189                         00000764
F4_000190                         00000776
F4_000191                         0000077C
F4_000193                         00000782
F4_000194                         00000786
F4_000195                         0000078C
F4_000197                         00000790
F4_000198                         00000792
F4_000199                         00000796
F4_000200                         0000079A
F4_000201                         0000079E
F4_000202                         000007A0
F4_000203                         000007A6
F4_000204                         000007B6
F4_000205                         000007C4
F4_000206                         000007C6
F4_000207                         000007CA
F4_000209                         000007CE
F4_000210                         000007D2
F4_000211                         000007D6
F4_000212                         000007E2
F4_000213                         000007E4
F4_000215                         000007E4
F4_000218                         000007E6
F4_000219                         000007EA
F4_000221                         000007F0
F4_000223                         00000800
F4_000224                         00000804
F4_000225                         0000080A
F4_000226                         0000080E
F4_000227                         00000812
F4_000228                         00000816
F4_000229                         0000081A
F4_000230                         0000081C
F4_000231                         00000822
F4_000232                         00000824
F4_000233                         00000828
F4_000234                         0000082A
F4_000236                         00000838
F4_000237                         0000083C
F4_000238                         00000840
F4_000239                         00000842
F4_000241                         00000850
F4_000242                         00000852
F4_000243                         00000856
F4_000244                         00000866
F4_000245                         0000086C
F4_000246                         0000086E
F4_000247                         00000872
F4_000248                         00000882
F4_000250                         00000888
F4_000251                         0000088C
F4_000252                         00000890
F4_000253                         00000894
F4_000254                         00000898
F4_000255                         0000089E
F4_000256                         000008A0
F4_000258                         000008A4
F4_000259                         000008A8
F4_000260                         000008AC
F4_000261                         000008B8
F4_000262                         000008BA
F4_000264                         000008BA
F4_000267                         000008BC
F4_000268                         000008CA
F4_000269                         000008DC
F4_000270                         000008FE
F4_000271                         000008FE
F4_000272                         00000910
F4_000273                         00000920
F4_000274                         00000922
F4_000277                         00000924
F4_000278                         00000954
F4_000279                         00000990
F4_000280                         000009A0
F4_000281                         000009A6
F4_000283                         000009AA
F4_000284                         000009C0
F4_000285                         00000A36
F4_000286                         00000A38
F4_000287                         00000A4A
F4_000288                         00000A4A
F4_000289                         00000A60
F4_000290                         00000A72
F4_000291                         00000A78
F4_000293                         00000A7C
F4_000294                         00000A96
F4_000295                         00000A9E
F4_000296                         00000AA4
F4_000297                         00000AB6
F4_000298                         00000ABA
F4_000299                         00000AD2
F4_000300                         00000AD4
F4_000301                         00000AE2
F4_000302                         00000AEE
F4_000303                         00000AEE
F4_000304                         00000AF2
F4_000305                         00000AF2
F4_000307                         00000B08
F4_000308                         00000B10
F4_000309                         00000B12
F4_000312                         00000B16
F4_000313                         00000B1A
F4_000314                         00000B2C
F4_000315                         00000B56
F4_000316                         00000B66
F4_000317                         00000B6A
F4_000318                         00000B6C
F4_000319                         00000B76
F4_000320                         00000B7A
F4_000321                         00000B8E
F4_000322                         00000BBA
F4_000323                         00000BCE
F4_000324                         00000BD2
F4_000325                         00000BD4
F4_000326                         00000BDE
F4_000329                         00000BE0
F4_000330                         00000BE2
F4_000331                         00000BE8
F4_000332                         00000C16
F4_000333                         00000C4A
F4_000334                         00000C5A
F4_000335                         00000C60
F4_000337                         00000C66
F4_000338                         00000C7C
F4_000339                         00000C90
F4_000340                         00000C9E
F4_000341                         00000CAA
F4_000342                         00000CCC
F4_000343                         00000CCC
F4_000344                         00000CE8
F4_000345                         00000CEA
F4_000346                         00000CF4
F4_000347                         00000CF4
F4_000348                         00000D00
F4_000349                         00000D28
F4_000350                         00000D2C
F4_000351                         00000D30
F4_000352                         00000D3E
F4_000353                         00000D42
F4_000354                         00000D54
F4_000355                         00000D76
F4_000356                         00000D7C
F4_000357                         00000D82
F4_000358                         00000D82
F4_000359                         00000D8C
F4_000360                         00000DA2
F4_000361                         00000DC6
F4_000362                         00000DCC
F4_000363                         00000DD2
F4_000364                         00000DD2
F4_000365                         00000DDC
F4_000366                         00000DF0
F4_000367                         00000DFE
F4_000368                         00000E1A
F4_000369                         00000E2A
F4_000370                         00000E3C
F4_000371                         00000E56
F4_000372                         00000E5C
F4_000373                         00000E76
F4_000374                         00000E8A
F4_000375                         00000EA0
F4_000376                         00000EA8
F4_000377                         00000EBE
F4_000378                         00000EDA
F4_000379                         00000EE2
F4_000380                         00000EE6
F4_000381                         00000EE6
F4_000382                         00000EE6
F4_000383                         00000EE6
F4_000384                         00000EE6
F4_000385                         00000EE6
F4_000386                         00000EE6
F4_000387                         00000EFC
F4_000388                         00000F0E
F4_000389                         00000F14
F4_000391                         00000F18
F4_000392                         00000F32
F4_000393                         00000F3A
F4_000394                         00000F3C
F4_000397                         00000F40
F4_000398                         00000F4E
F4_000399                         00000F66
F4_000400                         00000F66
F4_000401                         00000F78
F4_000402                         00000F7A
F4_000405                         00000F7C
F4_000406                         00000F84
F4_000407                         00000F8C
F4_000408                         00000F9E
F4_000409                         00000FA2
F4_000410                         00000FBE
F4_000411                         00000FC2
F4_000412                         00000FC4
F4_000413                         00000FCA
F4_000414                         00000FCE
F4_000415                         00000FD2
F4_000416                         00000FD8
F4_000417                         00000FDC
F4_000418                         00000FE2
F4_000419                         00000FE6
F4_000422                         00000FE8
F4_000423                         00000FF0
F4_000424                         00001002
F4_000425                         00001006
F4_000426                         0000100A
F4_000427                         00001010
F4_000428                         00001014
F4_000429                         00001018
F4_000432                         0000101A
F4_000433                         0000101E
F4_000434                         00001022
F4_000435                         00001028
F4_000436                         0000102C
F4_000439                         0000102E
F4_000440                         0000103A
F4_000441                         0000105A
F4_000442                         00001066
F4_000443                         00001068
F4_000444                         0000106A
F4_000445                         00001070
F4_000446                         00001080
F4_000447                         0000108C
F4_000448                         0000108E
F4_000449                         0000109A
F4_000450                         000010AA
F4_000451                         000010D4
F4_000452                         000010DC
F4_000453                         000010E2
F4_000454                         000010FA
F4_000455                         000010FE
F4_000456                         00001104
F4_000457                         0000110C
F4_000458                         00001110
F4_000459                         00001118
F4_000460                         0000115E
F4_000461                         0000116E
F4_000462                         0000117E
F4_000463                         00001182
F4_000464                         00001188
F4_000466                         0000118E
F4_000467                         000011B8
F4_000468                         000011BE
F4_000470                         000011CA
F4_000471                         000011CA
F4_000472                         000011D0
F4_000473                         000011E0
F4_000474                         000011E8
F4_000475                         000011F8
F4_000476                         00001200
F4_000478                         00001208
F4_000479                         0000120C
F4_000480                         0000121C
F4_000481                         00001236
F4_000482                         00001246
F4_000483                         0000124A
F4_000485                         00001250
F4_000486                         00001252
F4_000487                         00001254
F4_000488                         00001258
F4_000489                         00001272
F4_000490                         00001278
F4_000491                         000012BE
F4_000492                         000012CE
F4_000493                         000012DE
F4_000494                         000012E0
F4_000496                         000012EA
F4_000497                         000012EA
F4_000498                         000012F0
F4_000499                         000012F2
F4_000500                         000012F8
F4_000501                         000012FE
F4_000502                         000012FE
F4_000503                         00001302
F4_000504                         00001302
F4_000505                         0000130A
F4_000506                         0000130C
F4_000507                         00001310
F4_000508                         00001314
F4_000509                         00001318
F4_000512                         0000131C
F4_000513                         00001322
F4_000514                         00001328
F4_000517                         0000132A
F4_000524                         00001338
F4_000525                         0000133E
F4_000526                         00001348
F4_000527                         0000134C
F4_000528                         00001352
F4_000529                         00001352
F4_000530                         00001360
F4_000531                         00001378
F4_000532                         00001378
F4_000533                         0000138A
F4_000534                         0000138C
F4_000535                         00001392
F4_000541                         00001396
F4_000580                         00001396
F4_000581                         0000139A
F4_000582                         0000139C
F4_000583                         0000139E
F4_000584                         000013A2
F4_000585                         000013A6
F4_000586                         000013A8
F4_000587                         000013AA
F4_000588                         000013AE
F4_000589                         000013B2
F4_000590                         000013B4
F4_000591                         000013B6
F4_000592                         000013BA
F4_000593                         000013BE
F4_000594                         000013C0
F4_000595                         000013C2
F4_000596                         000013C6
F4_000597                         000013CA
F4_000598                         000013CC
F4_000599                         000013CE
F4_000601                         000013D2
F4_000602                         000013D6
F4_000603                         000013D8
F4_000604                         000013DA
F4_000605                         000013DE
F4_000608                         000013E0
F4_000609                         000013E2
F4_000610                         000013E4
F4_000611                         000013E6
F4_000612                         000013EA
F4_000616                         000013EC
F4_000617                         000013F0
F4_000618                         000013F8
F4_000619                         000013FC
F4_000620                         00001400
F4_000621                         00001402
F4_000622                         00001404
F4_000623                         00001406
F4_000624                         00001408
F4_000625                         0000140A
F4_000626                         0000140E
F4_000628                         00001410
F4_000629                         00001416
F4_000630                         0000141A
F4_000631                         00001420
F4_000632                         00001422
F4_000633                         00001424
F4_000634                         00001426
F4_000635                         00001428
F4_000636                         0000142C
F4_000637                         00001430
F4_000638                         00001434
F4_000639                         00001438
F4_000640                         0000143C
F4_000641                         00001446
F4_000642                         0000144A
F4_000643                         0000144E
F4_000644                         00001450
F4_000646                         00001450
F4_000647                         00001452
F4_000648                         00001452
F4_000649                         00001458
F4_000650                         0000145A
F4_000651                         0000145C
F4_000652                         0000145E
F4_000653                         00001460
F4_000654                         00001462
F4_000655                         00001466
F4_000656                         00001468
F4_000657                         0000146C
F4_000658                         00001470
F4_000659                         00001472
F4_000660                         0000148A
F4_000661                         00001492
F4_000662                         00001496
F4_000663                         0000149A
F4_000664                         0000149C
F4_000665                         0000149C
F4_000666                         000014A0
F4_000667                         000014A4
F4_000668                         000014A8
F4_000669                         000014AE
F4_000670                         000014B0
F4_000676                         000014B4
F4_000698                         000014B4
F4_000699                         000014C2
F4_000700                         000014C2
F4_000701                         000014C6
F4_000702                         000014CC
F4_000703                         000014CC
F4_000704                         000014E6
F4_000705                         000014F6
F4_000706                         000014FA
F4_000708                         00001500
F4_000709                         0000150E
F4_000710                         00001512
F4_000711                         00001518
F4_000712                         0000151E
F4_000713                         00001522
F4_000714                         00001528
F4_000715                         0000152E
F4_000716                         00001532
F4_000717                         00001538
F4_000718                         0000153E
F4_000719                         00001542
F4_000720                         00001548
F4_000721                         00001556
F4_000722                         0000155C
F4_000723                         00001560
F4_000724                         00001570
F4_000725                         00001578
F4_000726                         00001588
F4_000727                         000015A2
F4_000728                         000015B2
F4_000729                         000015B6
F4_000731                         000015BC
F4_000732                         000015C4
F4_000733                         000015C8
F4_000734                         000015CC
F4_000735                         000015D0
F4_000736                         000015EA
F4_000737                         000015F0
F4_000738                         000015F0
F4_000742                         000015F2
F4_000743                         00001620
F4_000744                         00001626
F4_000746                         0000162E
F4_000747                         00001654
F4_000748                         0000165A
F4_000749                         00001660
F4_000750                         0000168E
F4_000751                         00001694
F4_000752                         0000169A
F4_000753                         000016B4
F4_000754                         000016BA
F4_000755                         000016C0
F4_000756                         000016F0
F4_000757                         000016F6
F4_000763                         000016F8
F4_000787                         000016F8
F4_000788                         000016FA
F4_000789                         00001706
F4_000790                         0000170C
F4_000791                         00001710
F4_000792                         00001710
F4_000793                         00001716
F4_000794                         0000171A
F4_000795                         0000171E
F4_000796                         00001722
F4_000797                         00001726
F4_000798                         0000172A
F4_000799                         0000176E
F4_000800                         0000177E
F4_000801                         00001782
F4_000802                         00001792
F4_000803                         00001796
F4_000805                         0000179C
F4_000806                         000017A6
F4_000807                         000017AC
F4_000808                         000017B0
F4_000809                         000017B0
F4_000810                         000017B6
F4_000811                         000017BE
F4_000812                         00001804
F4_000813                         0000180E
F4_000814                         0000180E
F4_000815                         00001812
F4_000816                         00001814
F4_000817                         00001818
F4_000818                         0000181E
F4_000819                         00001820
F4_000825                         00001824
F4_000853                         00001824
F4_000854                         00001834
F4_000855                         0000183A
F4_000856                         0000184A
F4_000857                         00001858
F4_000858                         00001858
F4_000859                         0000185C
F4_000860                         00001862
F4_000861                         00001866
F4_000862                         00001868
F4_000863                         00001874
F4_000864                         00001876
F4_000865                         00001882
F4_000866                         000018AC
F4_000867                         000018B4
F4_000868                         000018BA
F4_000869                         000018D2
F4_000870                         000018D6
F4_000872                         000018DC
F4_000873                         000018E4
F4_000874                         000018E8
F4_000875                         000018F0
F4_000876                         00001936
F4_000877                         00001946
F4_000878                         00001956
F4_000879                         0000195A
F4_000881                         00001960
F4_000882                         00001966
F4_000883                         00001968
F4_000884                         00001970
F4_000885                         00001972
F4_000886                         00001976
F4_000887                         00001982
F4_000888                         000019A8
F4_000889                         000019A8
F4_000895                         000019AA
F4_000924                         000019AA
F4_000949                         000019AA
F4_000950                         000019AE
F4_000951                         000019B6
F4_000952                         000019BA
F4_000953                         000019BE
F4_000954                         000019C4
F4_000955                         000019D4
F4_000956                         000019D8
F4_000957                         000019DE
F4_000958                         000019EC
F4_000959                         000019F2
F4_000960                         000019F6
F4_000961                         000019F6
F4_000962                         00001A10
F4_000963                         00001A20
F4_000964                         00001A24
F4_000966                         00001A2A
F4_000967                         00001A3E
F4_000968                         00001A4C
F4_000969                         00001A4E
F4_000970                         00001A54
F4_000971                         00001A5E
F4_000972                         00001A62
F4_000973                         00001A76
F4_000974                         00001A84
F4_000975                         00001A8E
F4_000976                         00001A94
F4_000977                         00001A9E
F4_000978                         00001AB4
F4_000979                         00001AC2
F4_000980                         00001ACE
F4_000981                         00001AD4
F4_000982                         00001ADE
F4_000983                         00001AEC
F4_000984                         00001AF0
F4_000985                         00001AF6
F4_000986                         00001B04
F4_000987                         00001B0A
F4_000988                         00001B18
F4_000989                         00001B1C
F4_000990                         00001B22
F4_000991                         00001B28
F4_000992                         00001B2C
F4_000993                         00001B32
F4_000994                         00001B36
F4_000995                         00001B7C
F4_000996                         00001B8C
F4_000997                         00001B90
F4_000998                         00001BA0
F4_000999                         00001BA2
F4_001001                         00001BA8
F4_001002                         00001BAE
F4_001003                         00001BB6
F4_001004                         00001BBE
F4_001005                         00001BC0
F4_001006                         00001BC4
F4_001012                         00001BC8
F4_001030                         00001BC8
F4_001031                         00001BCC
F4_001032                         00001BD8
F4_001033                         00001BDE
F4_001034                         00001BE2
F4_001035                         00001BE2
F4_001036                         00001BE8
F4_001037                         00001BEC
F4_001038                         00001BF0
F4_001039                         00001BF4
F4_001040                         00001BF8
F4_001041                         00001BFC
F4_001042                         00001C0C
F4_001043                         00001C14
F4_001044                         00001C5E
F4_001045                         00001C88
F4_001046                         00001C90
F4_001047                         00001C96
F4_001048                         00001CCC
F4_001049                         00001CE6
F4_001050                         00001CEA
F4_001052                         00001CF0
F4_001053                         00001CF0
F4_001054                         00001CF8
F4_001055                         00001CFC
F4_001056                         00001D04
F4_001057                         00001D40
F4_001058                         00001D44
F4_001059                         00001D6E
F4_001060                         00001D76
F4_001061                         00001D7C
F4_001062                         00001D8C
F4_001063                         00001D96
F4_001064                         00001D96
F4_001065                         00001DD2
F4_001066                         00001DD4
F4_001067                         00001E1A
F4_001068                         00001E32
F4_001069                         00001E42
F4_001070                         00001E44
F4_001071                         00001E54
F4_001072                         00001E58
F4_001074                         00001E5E
F4_001075                         00001E68
F4_001076                         00001E6E
F4_001077                         00001E72
F4_001078                         00001E72
F4_001079                         00001E9A
F4_001080                         00001EA2
F4_001081                         00001EB0
F4_001082                         00001EF8
F4_001083                         00001F00
F4_001084                         00001F0A
F4_001085                         00001F0A
F4_001086                         00001F0A
F4_001087                         00001F12
F4_001088                         00001F18
F4_001089                         00001F1A
F4_001090                         00001F2A
F4_001091                         00001F2C
F4_001097                         00001F30
F4_001108                         00001F30
F4_001109                         00001F34
F4_001110                         00001F40
F4_001111                         00001F46
F4_001112                         00001F4A
F4_001113                         00001F4A
F4_001114                         00001F50
F4_001115                         00001F54
F4_001116                         00001F5C
F4_001117                         00001F60
F4_001118                         00001F66
F4_001119                         00001F6A
F4_001120                         00001F6E
F4_001121                         00001F70
F4_001122                         00001F9A
F4_001123                         00001FA2
F4_001124                         00001FA8
F4_001125                         00001FDE
F4_001126                         00001FEA
F4_001127                         00001FEE
F4_001128                         00002020
F4_001129                         00002026
F4_001130                         00002026
F4_001131                         00002040
F4_001132                         00002044
F4_001134                         0000204A
F4_001135                         0000204A
F4_001136                         00002052
F4_001137                         00002056
F4_001138                         0000205E
F4_001139                         00002066
F4_001140                         0000206A
F4_001141                         00002070
F4_001142                         0000207E
F4_001143                         00002084
F4_001144                         00002092
F4_001145                         00002096
F4_001146                         000020C8
F4_001147                         000020CE
F4_001148                         000020D2
F4_001154                         000020D6
F4_001193                         000020D6
F4_001194                         000020E4
F4_001195                         000020F2
F4_001196                         000020F8
F4_001197                         000020FC
F4_001198                         000020FC
F4_001199                         00002104
F4_001200                         0000210A
F4_001202                         00002110
F4_001204                         00002136
F4_001205                         00002142
F4_001207                         00002150
F4_001208                         0000215C
F4_001210                         0000215C
F4_001211                         00002168
F4_001212                         0000216A
F4_001213                         00002176
F4_001214                         0000217C
F4_001216                         00002182
F4_001217                         00002188
F4_001218                         0000218C
F4_001219                         00002190
F4_001220                         00002194
F4_001221                         00002198
F4_001222                         0000219C
F4_001223                         000021A0
F4_001224                         000021A4
F4_001225                         000021A8
F4_001226                         000021AC
F4_001227                         000021B0
F4_001228                         000021B4
F4_001229                         000021B8
F4_001230                         000021BC
F4_001231                         000021D0
F4_001232                         000021FC
F4_001233                         00002226
F4_001234                         0000224A
F4_001235                         0000225E
F4_001236                         00002278
F4_001238                         00002290
F4_001239                         000022BE
F4_001240                         000022EC
F4_001241                         0000231A
F4_001243                         00002326
F4_001244                         00002338
F4_001245                         00002346
F4_001246                         0000234A
F4_001247                         0000234E
F4_001248                         00002350
F4_001249                         00002352
F4_001250                         00002354
F4_001251                         00002356
F4_001252                         00002358
F4_001253                         0000235C
F4_001254                         0000235E
F4_001260                         00002362
F4_001318                         00002362
F4_001345                         00002362
F4_001346                         00002374
F4_001347                         00002376
F4_001348                         00002388
F4_001349                         0000239A
F4_001350                         000023A0
F4_001351                         000023B0
F4_001352                         000023BA
F4_EOF                            000023BC
F4_SOF                            000005E4
F5_000012                         00002550
F5_000013                         00002554
F5_000014                         0000256A
F5_000017                         00002580
F5_000018                         00002584
F5_000020                         0000258A
F5_000023                         000025BC
F5_000024                         000025C4
F5_000025                         000025C8
F5_000031                         000025D6
F5_000032                         000025EA
F5_000033                         000025F6
F5_000034                         0000260C
F5_000035                         00002618
F5_000036                         0000261A
F5_000038                         0000262A
F5_000039                         0000263E
F5_000040                         0000264A
F5_000041                         0000264C
F5_000042                         0000264E
F5_000044                         00002658
F5_000045                         0000265A
F5_000048                         00002664
F5_000049                         00002668
F5_000050                         00002674
F5_000052                         00002676
F5_000054                         0000267A
F5_000055                         0000267E
F5_000056                         00002694
F5_000057                         0000269E
F5_EOF                            000026A0
F5_SOF                            00002550
F6_000012                         000026A0
F6_000014                         000026A4
F6_000016                         000026AA
F6_000017                         000026C2
F6_000018                         000026D4
F6_000021                         000026DC
F6_000022                         000026EA
F6_000023                         000026EE
F6_000025                         000026FA
F6_000026                         000026FC
F6_000030                         000026FC
F6_000031                         00002706
F6_000032                         00002710
F6_000033                         0000271C
F6_000035                         00002726
F6_000037                         00002738
F6_000039                         00002740
F6_000040                         0000274E
F6_000043                         0000275C
F6_000044                         0000276A
F6_000045                         00002770
F6_000046                         00002772
F6_000048                         00002772
F6_000049                         00002776
F6_000050                         0000278C
F6_000051                         000027A2
F6_000052                         000027AC
F6_000053                         000027B0
F6_000054                         000027B2
F6_000056                         000027B4
F6_000060                         000027B4
F6_000061                         000027C8
F6_000062                         000027DC
F6_000064                         000027E4
F6_000066                         000027EC
F6_000067                         000027FA
F6_000068                         000027FE
F6_000069                         00002814
F6_000070                         0000282A
F6_000071                         00002834
F6_000072                         00002838
F6_000073                         0000283A
F6_000075                         0000283A
F6_000076                         00002850
F6_000077                         00002864
F6_000081                         0000286C
F6_000082                         00002870
F6_000083                         00002872
F6_000084                         00002884
F6_000086                         0000289E
F6_000087                         000028A6
F6_000088                         000028B0
F6_000089                         000028BA
F6_000090                         000028C6
F6_000092                         000028C8
F6_EOF                            000028CC
F6_SOF                            000026A0
F7_000016                         000028CC
F7_000017                         000028E8
F7_000018                         000028FA
F7_000019                         00002902
F7_000020                         0000290E
F7_000021                         00002912
F7_000022                         00002912
F7_000023                         00002916
F7_000025                         0000291A
F7_000026                         00002936
F7_000027                         00002948
F7_000028                         00002950
F7_000029                         0000295E
F7_000030                         00002962
F7_000032                         0000296E
F7_000033                         00002970
F7_000039                         00002970
F7_000040                         00002974
F7_EOF                            00002976
F7_SOF                            000028CC
F8_000013                         00002976
F8_000015                         0000298A
F8_000016                         000029A4
F8_000017                         000029B0
F8_000018                         000029B4
F8_000019                         000029C0
F8_000020                         000029CA
F8_000021                         000029CC
F8_000022                         000029CC
F8_000025                         000029D6
F8_000026                         000029DA
F8_000027                         000029E6
F8_000028                         000029F0
F8_EOF                            000029F2
F8_SOF                            00002976
F9_000004                         000029F2
F9_000005                         000029F6
F9_000006                         00002A08
F9_000007                         00002A0C
F9_000008                         00002A18
F9_000009                         00002A22
F9_000010                         00002A24
F9_000011                         00002A24
F9_000012                         00002A30
F9_000013                         00002A34
F9_000014                         00002A36
F9_000015                         00002A38
F9_000016                         00002A5C
F9_000017                         00002A72
F9_000018                         00002A78
F9_000019                         00002A80
F9_000020                         00002A80
F9_000021                         00002A84
F9_000022                         00002A88
F9_000023                         00002A8A
F9_000024                         00002A96
F9_000025                         00002AA4
F9_000026                         00002AB8
F9_000027                         00002ADA
F9_000028                         00002AE2
F9_000029                         00002AE4
F9_000031                         00002AE4
F9_000032                         00002AEE
F9_000034                         00002B0A
F9_EOF                            00002B0C
F9_SOF                            000029F2
F@CALL                            
F@JUMP                            
FAST                              00000001
FCMEN_OFF_1                       000000BF
FCMEN_ON_1                        000000FF
FERR                              00000002
FLOAT_BIT                         
FLOAT_BYTE                        
FLOAT_DWORD                       
FLOAT_FLOAT                       
FLOAT_WORD                        
FLOAT_WREG                        
FLTS                              00000002
FR@LB104                          00000E7A
FR@LB106                          00000EAE
FR@LB12                           00000676
FR@LB168                          00001A2E
FR@LB170                          00001A66
FR@LB172                          00001AA4
FR@LB203                          00002378
FR@LB22                           00000744
FR@LB225                          000025DA
FR@LB24                           00000764
FR@LB241                          000027B8
FR@LB245                          00002840
FR@LB247                          00002874
FR@LB253                          0000297A
FR@LB266                          00002AA8
FR@LB270                          00002B12
FR@LB272                          00002B18
FR@LB274                          00002BD4
FR@LB278                          00002C38
FR@LB280                          00002C3E
FR@LB282                          00002CD8
FR@LB290                          00002E00
FR@LB292                          00002E72
FR@LB298                          00002F9C
FR@LB300                          00003022
FR@LB36                           00000852
FR@LB38                           0000086E
FR@LB45                           0000096C
FR@LB47                           000009B0
FR@LB53                           00000AC2
FR@LB58                           00000B1C
FR@LB62                           00000B7E
FR@LB66                           00000C26
FR@LB68                           00000C6C
FR@LB70                           00000C80
FR@LB82                           00000D44
FR@LB86                           00000D92
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR0LH                            00000FEA
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR1LH                            00000FE2
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FSR2LH                            00000FDA
FTO@I_1                           000003F6
FTO@I_2                           0000040C
FTO@I_3                           0000040E
FTO@I_4                           00000412
FTO@I_5                           00000422
FTO@I_6                           00000440
FTO@I_ASSIGNW                     0000045A
FTO@I_OVERFLOW                    00000456
FTO@I_RES0                        00000452
FTO@I_RETURN                      00000464
G@OTO                             
GCEN                              00000007
GEN                               00000002
GEN3H                             00000003
GEN4                              00000004
GEN4H                             00000005
GENH                              00000006
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GO                                00000001
GO@TO                             
GOSLEEP                           0000305E
GO_DONE                           00000001
GPR                               00000007
H@RSIN                            000001DE
HLVDCON                           00000FD2
HRI@L                             000001B2
HRI@L0                            000001AE
HRSIN                             000001D4
HRSIN2                            0000019C
HSERIAL_BAUD                      00002580
HSERIAL_RCSTA                     00000090
HSERIAL_SPBRG                     00000006
HSERIAL_TXSTA                     00000020
HSPLL_OSC_1                       000000F6
HS_OSC_1                          000000F2
IBF                               00000007
IBOV                              00000005
IDLEN                             00000007
IDLOC0                            00200000
IDLOC1                            00200001
IDLOC2                            00200002
IDLOC3                            00200003
IDLOC4                            00200004
IDLOC5                            00200005
IDLOC6                            00200006
IDLOC7                            00200007
IESO_OFF_1                        0000007F
IESO_ON_1                         000000FF
INDEX                             000003ED
INDEX2                            000003EE
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT_SD                           00002976
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INT@3232                          000003C8
INT@3232_REQ                      00000001
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTIO67_OSC_1                     000000F8
INTIO7_OSC_1                      000000F9
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
JUMP                              
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L@DIV                             0000028C
L@MOD                             0000028C
LABEL_WORD                        
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LCD#DTPIN                         0
LCD#DTPORT                        PORTD
LCD#ENPIN                         6
LCD#ENPORT                        PORTD
LCD#INTERFACE                     4
LCD#LINES                         2
LCD#RSPIN                         7
LCD#RSPORT                        PORTD
LCD#TYPE                          0
LCD@CLS                           00000036
LCD@CRS                           00000050
LOAD@MSTR                         000003B8
LOAD@MSTRL                        000003B8
LP_OSC_1                          000000F0
LST_PRM_NAME                      000003EF
LST_PRM_TYPE                      00000002
LVDCON                            HLVDCON
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVP_OFF_4                         000000FB
LVP_ON_4                          000000FF
MAIN@PROG@START                   000005E4
MAX_PARAMS                        0000000A
MCLRE_OFF_3                       0000007F
MCLRE_ON_3                        000000FF
MHA                               912
MHAH                              3
MLT32@BR                          000003A2
MLT32@LP                          00000380
MODNUM                            000003E4
MODNUM#0                          000003E4
MODNUM#1                          000003E5
MODNUM#2                          000003E6
MODNUM#3                          000003E7
MODNUM#4                          000003E8
MODNUM#5                          000003E9
MODNUM#6                          000003EA
MOVFW                             
MYCOUNT                           000003EC
MYNUM                             000003F2
MYNUM#0                           000003F2
MYNUM#1                           000003F3
MYNUM#2                           000003F4
MYNUM#3                           000003F5
N                                 00000004
NEGW                              NEGF WREG
NEXTTAG                           00002A2E
NOT_A                             00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOU                               2
NUM_BIT                           
NUM_BYTE                          
NUM_DWORD                         
NUM_FLOAT                         
NUM_FSR0                          
NUM_FSR1                          
NUM_FSR2                          
NUM_MH                            10
NUM_MHE                           4
NUM_UH                            200
NUM_UHE                           3
NUM_WORD                          
NUM_WREG                          
NX@LB105                          00000EA8
NX@LB107                          00000EE2
NX@LB13                           00000698
NX@LB169                          00001A5E
NX@LB171                          00001A9E
NX@LB173                          00001ADE
NX@LB204                          000023BA
NX@LB226                          00002664
NX@LB23                           00000762
NX@LB242                          000027E4
NX@LB246                          0000286C
NX@LB248                          000028A6
NX@LB25                           00000782
NX@LB254                          000029D6
NX@LB267                          00002AE2
NX@LB271                          00002BCC
NX@LB273                          00002BC0
NX@LB275                          00002C08
NX@LB279                          00002CD4
NX@LB281                          00002CC8
NX@LB283                          00002D0C
NX@LB291                          00002E62
NX@LB293                          00002ED4
NX@LB299                          00002FD8
NX@LB301                          0000305C
NX@LB37                           0000086C
NX@LB39                           00000888
NX@LB46                           00000A72
NX@LB48                           00000A60
NX@LB54                           00000B08
NX@LB59                           00000B76
NX@LB63                           00000BDE
NX@LB67                           00000F0E
NX@LB69                           00000EFC
NX@LB71                           00000CF4
NX@LB83                           00000D8C
NX@LB87                           00000DDC
OBF                               00000006
OERR                              00000001
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OUT@DEC                           00000068
OUT@DECB                          00000062
OUT@DECC                          00000064
OV                                00000003
OVERLIBCODE                       000023BC
P                                 00000004
P1B                               00000005
P1C                               00000006
P1D                               00000007
P1M0                              00000006
P1M1                              00000007
PB@LB212                          0000248A
PB@LB218                          0000254E
PB@LB219                          00002592
PB@LB222                          000025AA
PB@LB240                          000027B0
PBADEN_OFF_3                      000000FD
PBADEN_ON_3                       000000FF
PBP#VAR0                          00000008
PBP#VAR0H                         00000009
PBP#VAR0HH                        0000000A
PBP#VAR0HHH                       0000000B
PBP#VAR1                          0000000C
PBP_AARG                          0000000D
PBP_AARGH                         0000000E
PBP_AARGHH                        0000000F
PBP_AARGHHH                       00000010
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PP0                               00000011
PP0H                              00000012
PP0HH                             00000013
PP0HHH                            00000014
PP1                               00000015
PP1H                              00000016
PP1HH                             00000017
PP1HHH                            00000018
PP2                               00000019
PP2H                              0000001A
PP2HH                             0000001B
PP2HHH                            0000001C
PP3                               0000001D
PP3H                              0000001E
PP4                               0000001F
PP5                               00000020
PP6                               00000021
PP6H                              00000022
PP7                               00000023
PP7H                              00000024
PP7HH                             00000025
PP7HHH                            00000026
PP8                               00000027
PP8H                              00000028
PPZ                               00000029
PPZH                              0000002A
PPZHH                             0000002B
PPZHHH                            0000002C
PR2                               00000FCB
PR@CC                             0000016E
PR@CM                             00000150
PR@EX                             00000198
PR@LP                             0000017A
PR@SD                             00000176
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PRINT                             000000F8
PRINT@MSTR                        000000E8
PRINT@MSTRL                       000000E8
PRM_1                             00000008
PRM_10                            00000000
PRM_2                             00000000
PRM_3                             00000000
PRM_4                             00000000
PRM_5                             00000000
PRM_6                             00000000
PRM_7                             00000000
PRM_8                             00000000
PRM_9                             00000000
PRM_COUNT                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRODLH                            00000FF4
PRSEN                             00000007
PRT@1                             00000152
PRT@MTEXT                         000000F6
PRT@MTL1                          000000EC
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PWM1CON                           00000FB7
PWRT_OFF_2                        000000FF
PWRT_ON_2                         000000FE
R                                 00000002
R@B                               
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANK                          00000000
RAM_BANKS                         15
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIO6_OSC_1                       000000F7
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RC_OSC_1                          000000F3
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_MOD                          0000301E
READ_SD                           000026A0
READ_TAG                          00002550
RESPONSE                          000003EB
RETURN_TYPE                       00000002
RETURN_VAR                        000003EB
RFIDENABLE                        PORTD,4
RI                                00000004
RLF                               
RRF                               
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
S@B                               
SB@STROUT                         000000C6
SB@STROUTLP                       000000C8
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SD_ADDRESS                        00000038
SD_ADDRESSH                       00000039
SD_ADDRESSHH                      0000003A
SD_ADDRESSHHH                     0000003B
SD_APPEND_FILE                    
SD_APPEND_FILE#REQ                1
SD_APPEND_FILE_RETURN             00000001
SD_APPEND_FILE_SUB                00001BC8
SD_ASSEMBLE_FAT_SECTOR            00000F7C
SD_ASSEMBLE_FAT_SECTOR_END_CLOSE  0000101A
SD_ASSEMBLE_FAT_SECTOR_END_CONT   00000FE8
SD_BOOT_RECORD                    00000265
SD_BOOT_RECORDH                   00000266
SD_BUFFER0                        00000041
SD_BUFFER0#0                      00000041
SD_BUFFER0#1                      00000042
SD_BUFFER0#10                     0000004B
SD_BUFFER0#100                    000000A5
SD_BUFFER0#101                    000000A6
SD_BUFFER0#102                    000000A7
SD_BUFFER0#103                    000000A8
SD_BUFFER0#104                    000000A9
SD_BUFFER0#105                    000000AA
SD_BUFFER0#106                    000000AB
SD_BUFFER0#107                    000000AC
SD_BUFFER0#108                    000000AD
SD_BUFFER0#109                    000000AE
SD_BUFFER0#11                     0000004C
SD_BUFFER0#110                    000000AF
SD_BUFFER0#111                    000000B0
SD_BUFFER0#112                    000000B1
SD_BUFFER0#113                    000000B2
SD_BUFFER0#114                    000000B3
SD_BUFFER0#115                    000000B4
SD_BUFFER0#116                    000000B5
SD_BUFFER0#117                    000000B6
SD_BUFFER0#118                    000000B7
SD_BUFFER0#119                    000000B8
SD_BUFFER0#12                     0000004D
SD_BUFFER0#120                    000000B9
SD_BUFFER0#121                    000000BA
SD_BUFFER0#122                    000000BB
SD_BUFFER0#123                    000000BC
SD_BUFFER0#124                    000000BD
SD_BUFFER0#125                    000000BE
SD_BUFFER0#126                    000000BF
SD_BUFFER0#127                    000000C0
SD_BUFFER0#128                    000000C1
SD_BUFFER0#129                    000000C2
SD_BUFFER0#13                     0000004E
SD_BUFFER0#130                    000000C3
SD_BUFFER0#131                    000000C4
SD_BUFFER0#132                    000000C5
SD_BUFFER0#133                    000000C6
SD_BUFFER0#134                    000000C7
SD_BUFFER0#135                    000000C8
SD_BUFFER0#136                    000000C9
SD_BUFFER0#137                    000000CA
SD_BUFFER0#138                    000000CB
SD_BUFFER0#139                    000000CC
SD_BUFFER0#14                     0000004F
SD_BUFFER0#140                    000000CD
SD_BUFFER0#141                    000000CE
SD_BUFFER0#142                    000000CF
SD_BUFFER0#143                    000000D0
SD_BUFFER0#144                    000000D1
SD_BUFFER0#145                    000000D2
SD_BUFFER0#146                    000000D3
SD_BUFFER0#147                    000000D4
SD_BUFFER0#148                    000000D5
SD_BUFFER0#149                    000000D6
SD_BUFFER0#15                     00000050
SD_BUFFER0#150                    000000D7
SD_BUFFER0#151                    000000D8
SD_BUFFER0#152                    000000D9
SD_BUFFER0#153                    000000DA
SD_BUFFER0#154                    000000DB
SD_BUFFER0#155                    000000DC
SD_BUFFER0#156                    000000DD
SD_BUFFER0#157                    000000DE
SD_BUFFER0#158                    000000DF
SD_BUFFER0#159                    000000E0
SD_BUFFER0#16                     00000051
SD_BUFFER0#160                    000000E1
SD_BUFFER0#161                    000000E2
SD_BUFFER0#162                    000000E3
SD_BUFFER0#163                    000000E4
SD_BUFFER0#164                    000000E5
SD_BUFFER0#165                    000000E6
SD_BUFFER0#166                    000000E7
SD_BUFFER0#167                    000000E8
SD_BUFFER0#168                    000000E9
SD_BUFFER0#169                    000000EA
SD_BUFFER0#17                     00000052
SD_BUFFER0#170                    000000EB
SD_BUFFER0#171                    000000EC
SD_BUFFER0#172                    000000ED
SD_BUFFER0#173                    000000EE
SD_BUFFER0#174                    000000EF
SD_BUFFER0#175                    000000F0
SD_BUFFER0#176                    000000F1
SD_BUFFER0#177                    000000F2
SD_BUFFER0#178                    000000F3
SD_BUFFER0#179                    000000F4
SD_BUFFER0#18                     00000053
SD_BUFFER0#180                    000000F5
SD_BUFFER0#181                    000000F6
SD_BUFFER0#182                    000000F7
SD_BUFFER0#183                    000000F8
SD_BUFFER0#184                    000000F9
SD_BUFFER0#185                    000000FA
SD_BUFFER0#186                    000000FB
SD_BUFFER0#187                    000000FC
SD_BUFFER0#188                    000000FD
SD_BUFFER0#189                    000000FE
SD_BUFFER0#19                     00000054
SD_BUFFER0#190                    000000FF
SD_BUFFER0#191                    00000100
SD_BUFFER0#192                    00000101
SD_BUFFER0#193                    00000102
SD_BUFFER0#194                    00000103
SD_BUFFER0#195                    00000104
SD_BUFFER0#196                    00000105
SD_BUFFER0#197                    00000106
SD_BUFFER0#198                    00000107
SD_BUFFER0#199                    00000108
SD_BUFFER0#2                      00000043
SD_BUFFER0#20                     00000055
SD_BUFFER0#200                    00000109
SD_BUFFER0#201                    0000010A
SD_BUFFER0#202                    0000010B
SD_BUFFER0#203                    0000010C
SD_BUFFER0#204                    0000010D
SD_BUFFER0#205                    0000010E
SD_BUFFER0#206                    0000010F
SD_BUFFER0#207                    00000110
SD_BUFFER0#208                    00000111
SD_BUFFER0#209                    00000112
SD_BUFFER0#21                     00000056
SD_BUFFER0#210                    00000113
SD_BUFFER0#211                    00000114
SD_BUFFER0#212                    00000115
SD_BUFFER0#213                    00000116
SD_BUFFER0#214                    00000117
SD_BUFFER0#215                    00000118
SD_BUFFER0#216                    00000119
SD_BUFFER0#217                    0000011A
SD_BUFFER0#218                    0000011B
SD_BUFFER0#219                    0000011C
SD_BUFFER0#22                     00000057
SD_BUFFER0#220                    0000011D
SD_BUFFER0#221                    0000011E
SD_BUFFER0#222                    0000011F
SD_BUFFER0#223                    00000120
SD_BUFFER0#224                    00000121
SD_BUFFER0#225                    00000122
SD_BUFFER0#226                    00000123
SD_BUFFER0#227                    00000124
SD_BUFFER0#228                    00000125
SD_BUFFER0#229                    00000126
SD_BUFFER0#23                     00000058
SD_BUFFER0#230                    00000127
SD_BUFFER0#231                    00000128
SD_BUFFER0#232                    00000129
SD_BUFFER0#233                    0000012A
SD_BUFFER0#234                    0000012B
SD_BUFFER0#235                    0000012C
SD_BUFFER0#236                    0000012D
SD_BUFFER0#237                    0000012E
SD_BUFFER0#238                    0000012F
SD_BUFFER0#239                    00000130
SD_BUFFER0#24                     00000059
SD_BUFFER0#240                    00000131
SD_BUFFER0#241                    00000132
SD_BUFFER0#242                    00000133
SD_BUFFER0#243                    00000134
SD_BUFFER0#244                    00000135
SD_BUFFER0#245                    00000136
SD_BUFFER0#246                    00000137
SD_BUFFER0#247                    00000138
SD_BUFFER0#248                    00000139
SD_BUFFER0#249                    0000013A
SD_BUFFER0#25                     0000005A
SD_BUFFER0#250                    0000013B
SD_BUFFER0#251                    0000013C
SD_BUFFER0#252                    0000013D
SD_BUFFER0#253                    0000013E
SD_BUFFER0#254                    0000013F
SD_BUFFER0#255                    00000140
SD_BUFFER0#26                     0000005B
SD_BUFFER0#27                     0000005C
SD_BUFFER0#28                     0000005D
SD_BUFFER0#29                     0000005E
SD_BUFFER0#3                      00000044
SD_BUFFER0#30                     0000005F
SD_BUFFER0#31                     00000060
SD_BUFFER0#32                     00000061
SD_BUFFER0#33                     00000062
SD_BUFFER0#34                     00000063
SD_BUFFER0#35                     00000064
SD_BUFFER0#36                     00000065
SD_BUFFER0#37                     00000066
SD_BUFFER0#38                     00000067
SD_BUFFER0#39                     00000068
SD_BUFFER0#4                      00000045
SD_BUFFER0#40                     00000069
SD_BUFFER0#41                     0000006A
SD_BUFFER0#42                     0000006B
SD_BUFFER0#43                     0000006C
SD_BUFFER0#44                     0000006D
SD_BUFFER0#45                     0000006E
SD_BUFFER0#46                     0000006F
SD_BUFFER0#47                     00000070
SD_BUFFER0#48                     00000071
SD_BUFFER0#49                     00000072
SD_BUFFER0#5                      00000046
SD_BUFFER0#50                     00000073
SD_BUFFER0#51                     00000074
SD_BUFFER0#52                     00000075
SD_BUFFER0#53                     00000076
SD_BUFFER0#54                     00000077
SD_BUFFER0#55                     00000078
SD_BUFFER0#56                     00000079
SD_BUFFER0#57                     0000007A
SD_BUFFER0#58                     0000007B
SD_BUFFER0#59                     0000007C
SD_BUFFER0#6                      00000047
SD_BUFFER0#60                     0000007D
SD_BUFFER0#61                     0000007E
SD_BUFFER0#62                     0000007F
SD_BUFFER0#63                     00000080
SD_BUFFER0#64                     00000081
SD_BUFFER0#65                     00000082
SD_BUFFER0#66                     00000083
SD_BUFFER0#67                     00000084
SD_BUFFER0#68                     00000085
SD_BUFFER0#69                     00000086
SD_BUFFER0#7                      00000048
SD_BUFFER0#70                     00000087
SD_BUFFER0#71                     00000088
SD_BUFFER0#72                     00000089
SD_BUFFER0#73                     0000008A
SD_BUFFER0#74                     0000008B
SD_BUFFER0#75                     0000008C
SD_BUFFER0#76                     0000008D
SD_BUFFER0#77                     0000008E
SD_BUFFER0#78                     0000008F
SD_BUFFER0#79                     00000090
SD_BUFFER0#8                      00000049
SD_BUFFER0#80                     00000091
SD_BUFFER0#81                     00000092
SD_BUFFER0#82                     00000093
SD_BUFFER0#83                     00000094
SD_BUFFER0#84                     00000095
SD_BUFFER0#85                     00000096
SD_BUFFER0#86                     00000097
SD_BUFFER0#87                     00000098
SD_BUFFER0#88                     00000099
SD_BUFFER0#89                     0000009A
SD_BUFFER0#9                      0000004A
SD_BUFFER0#90                     0000009B
SD_BUFFER0#91                     0000009C
SD_BUFFER0#92                     0000009D
SD_BUFFER0#93                     0000009E
SD_BUFFER0#94                     0000009F
SD_BUFFER0#95                     000000A0
SD_BUFFER0#96                     000000A1
SD_BUFFER0#97                     000000A2
SD_BUFFER0#98                     000000A3
SD_BUFFER0#99                     000000A4
SD_BUFFER1                        00000141
SD_BUFFER1#0                      00000141
SD_BUFFER1#1                      00000142
SD_BUFFER1#10                     0000014B
SD_BUFFER1#100                    000001A5
SD_BUFFER1#101                    000001A6
SD_BUFFER1#102                    000001A7
SD_BUFFER1#103                    000001A8
SD_BUFFER1#104                    000001A9
SD_BUFFER1#105                    000001AA
SD_BUFFER1#106                    000001AB
SD_BUFFER1#107                    000001AC
SD_BUFFER1#108                    000001AD
SD_BUFFER1#109                    000001AE
SD_BUFFER1#11                     0000014C
SD_BUFFER1#110                    000001AF
SD_BUFFER1#111                    000001B0
SD_BUFFER1#112                    000001B1
SD_BUFFER1#113                    000001B2
SD_BUFFER1#114                    000001B3
SD_BUFFER1#115                    000001B4
SD_BUFFER1#116                    000001B5
SD_BUFFER1#117                    000001B6
SD_BUFFER1#118                    000001B7
SD_BUFFER1#119                    000001B8
SD_BUFFER1#12                     0000014D
SD_BUFFER1#120                    000001B9
SD_BUFFER1#121                    000001BA
SD_BUFFER1#122                    000001BB
SD_BUFFER1#123                    000001BC
SD_BUFFER1#124                    000001BD
SD_BUFFER1#125                    000001BE
SD_BUFFER1#126                    000001BF
SD_BUFFER1#127                    000001C0
SD_BUFFER1#128                    000001C1
SD_BUFFER1#129                    000001C2
SD_BUFFER1#13                     0000014E
SD_BUFFER1#130                    000001C3
SD_BUFFER1#131                    000001C4
SD_BUFFER1#132                    000001C5
SD_BUFFER1#133                    000001C6
SD_BUFFER1#134                    000001C7
SD_BUFFER1#135                    000001C8
SD_BUFFER1#136                    000001C9
SD_BUFFER1#137                    000001CA
SD_BUFFER1#138                    000001CB
SD_BUFFER1#139                    000001CC
SD_BUFFER1#14                     0000014F
SD_BUFFER1#140                    000001CD
SD_BUFFER1#141                    000001CE
SD_BUFFER1#142                    000001CF
SD_BUFFER1#143                    000001D0
SD_BUFFER1#144                    000001D1
SD_BUFFER1#145                    000001D2
SD_BUFFER1#146                    000001D3
SD_BUFFER1#147                    000001D4
SD_BUFFER1#148                    000001D5
SD_BUFFER1#149                    000001D6
SD_BUFFER1#15                     00000150
SD_BUFFER1#150                    000001D7
SD_BUFFER1#151                    000001D8
SD_BUFFER1#152                    000001D9
SD_BUFFER1#153                    000001DA
SD_BUFFER1#154                    000001DB
SD_BUFFER1#155                    000001DC
SD_BUFFER1#156                    000001DD
SD_BUFFER1#157                    000001DE
SD_BUFFER1#158                    000001DF
SD_BUFFER1#159                    000001E0
SD_BUFFER1#16                     00000151
SD_BUFFER1#160                    000001E1
SD_BUFFER1#161                    000001E2
SD_BUFFER1#162                    000001E3
SD_BUFFER1#163                    000001E4
SD_BUFFER1#164                    000001E5
SD_BUFFER1#165                    000001E6
SD_BUFFER1#166                    000001E7
SD_BUFFER1#167                    000001E8
SD_BUFFER1#168                    000001E9
SD_BUFFER1#169                    000001EA
SD_BUFFER1#17                     00000152
SD_BUFFER1#170                    000001EB
SD_BUFFER1#171                    000001EC
SD_BUFFER1#172                    000001ED
SD_BUFFER1#173                    000001EE
SD_BUFFER1#174                    000001EF
SD_BUFFER1#175                    000001F0
SD_BUFFER1#176                    000001F1
SD_BUFFER1#177                    000001F2
SD_BUFFER1#178                    000001F3
SD_BUFFER1#179                    000001F4
SD_BUFFER1#18                     00000153
SD_BUFFER1#180                    000001F5
SD_BUFFER1#181                    000001F6
SD_BUFFER1#182                    000001F7
SD_BUFFER1#183                    000001F8
SD_BUFFER1#184                    000001F9
SD_BUFFER1#185                    000001FA
SD_BUFFER1#186                    000001FB
SD_BUFFER1#187                    000001FC
SD_BUFFER1#188                    000001FD
SD_BUFFER1#189                    000001FE
SD_BUFFER1#19                     00000154
SD_BUFFER1#190                    000001FF
SD_BUFFER1#191                    00000200
SD_BUFFER1#192                    00000201
SD_BUFFER1#193                    00000202
SD_BUFFER1#194                    00000203
SD_BUFFER1#195                    00000204
SD_BUFFER1#196                    00000205
SD_BUFFER1#197                    00000206
SD_BUFFER1#198                    00000207
SD_BUFFER1#199                    00000208
SD_BUFFER1#2                      00000143
SD_BUFFER1#20                     00000155
SD_BUFFER1#200                    00000209
SD_BUFFER1#201                    0000020A
SD_BUFFER1#202                    0000020B
SD_BUFFER1#203                    0000020C
SD_BUFFER1#204                    0000020D
SD_BUFFER1#205                    0000020E
SD_BUFFER1#206                    0000020F
SD_BUFFER1#207                    00000210
SD_BUFFER1#208                    00000211
SD_BUFFER1#209                    00000212
SD_BUFFER1#21                     00000156
SD_BUFFER1#210                    00000213
SD_BUFFER1#211                    00000214
SD_BUFFER1#212                    00000215
SD_BUFFER1#213                    00000216
SD_BUFFER1#214                    00000217
SD_BUFFER1#215                    00000218
SD_BUFFER1#216                    00000219
SD_BUFFER1#217                    0000021A
SD_BUFFER1#218                    0000021B
SD_BUFFER1#219                    0000021C
SD_BUFFER1#22                     00000157
SD_BUFFER1#220                    0000021D
SD_BUFFER1#221                    0000021E
SD_BUFFER1#222                    0000021F
SD_BUFFER1#223                    00000220
SD_BUFFER1#224                    00000221
SD_BUFFER1#225                    00000222
SD_BUFFER1#226                    00000223
SD_BUFFER1#227                    00000224
SD_BUFFER1#228                    00000225
SD_BUFFER1#229                    00000226
SD_BUFFER1#23                     00000158
SD_BUFFER1#230                    00000227
SD_BUFFER1#231                    00000228
SD_BUFFER1#232                    00000229
SD_BUFFER1#233                    0000022A
SD_BUFFER1#234                    0000022B
SD_BUFFER1#235                    0000022C
SD_BUFFER1#236                    0000022D
SD_BUFFER1#237                    0000022E
SD_BUFFER1#238                    0000022F
SD_BUFFER1#239                    00000230
SD_BUFFER1#24                     00000159
SD_BUFFER1#240                    00000231
SD_BUFFER1#241                    00000232
SD_BUFFER1#242                    00000233
SD_BUFFER1#243                    00000234
SD_BUFFER1#244                    00000235
SD_BUFFER1#245                    00000236
SD_BUFFER1#246                    00000237
SD_BUFFER1#247                    00000238
SD_BUFFER1#248                    00000239
SD_BUFFER1#249                    0000023A
SD_BUFFER1#25                     0000015A
SD_BUFFER1#250                    0000023B
SD_BUFFER1#251                    0000023C
SD_BUFFER1#252                    0000023D
SD_BUFFER1#253                    0000023E
SD_BUFFER1#254                    0000023F
SD_BUFFER1#255                    00000240
SD_BUFFER1#26                     0000015B
SD_BUFFER1#27                     0000015C
SD_BUFFER1#28                     0000015D
SD_BUFFER1#29                     0000015E
SD_BUFFER1#3                      00000144
SD_BUFFER1#30                     0000015F
SD_BUFFER1#31                     00000160
SD_BUFFER1#32                     00000161
SD_BUFFER1#33                     00000162
SD_BUFFER1#34                     00000163
SD_BUFFER1#35                     00000164
SD_BUFFER1#36                     00000165
SD_BUFFER1#37                     00000166
SD_BUFFER1#38                     00000167
SD_BUFFER1#39                     00000168
SD_BUFFER1#4                      00000145
SD_BUFFER1#40                     00000169
SD_BUFFER1#41                     0000016A
SD_BUFFER1#42                     0000016B
SD_BUFFER1#43                     0000016C
SD_BUFFER1#44                     0000016D
SD_BUFFER1#45                     0000016E
SD_BUFFER1#46                     0000016F
SD_BUFFER1#47                     00000170
SD_BUFFER1#48                     00000171
SD_BUFFER1#49                     00000172
SD_BUFFER1#5                      00000146
SD_BUFFER1#50                     00000173
SD_BUFFER1#51                     00000174
SD_BUFFER1#52                     00000175
SD_BUFFER1#53                     00000176
SD_BUFFER1#54                     00000177
SD_BUFFER1#55                     00000178
SD_BUFFER1#56                     00000179
SD_BUFFER1#57                     0000017A
SD_BUFFER1#58                     0000017B
SD_BUFFER1#59                     0000017C
SD_BUFFER1#6                      00000147
SD_BUFFER1#60                     0000017D
SD_BUFFER1#61                     0000017E
SD_BUFFER1#62                     0000017F
SD_BUFFER1#63                     00000180
SD_BUFFER1#64                     00000181
SD_BUFFER1#65                     00000182
SD_BUFFER1#66                     00000183
SD_BUFFER1#67                     00000184
SD_BUFFER1#68                     00000185
SD_BUFFER1#69                     00000186
SD_BUFFER1#7                      00000148
SD_BUFFER1#70                     00000187
SD_BUFFER1#71                     00000188
SD_BUFFER1#72                     00000189
SD_BUFFER1#73                     0000018A
SD_BUFFER1#74                     0000018B
SD_BUFFER1#75                     0000018C
SD_BUFFER1#76                     0000018D
SD_BUFFER1#77                     0000018E
SD_BUFFER1#78                     0000018F
SD_BUFFER1#79                     00000190
SD_BUFFER1#8                      00000149
SD_BUFFER1#80                     00000191
SD_BUFFER1#81                     00000192
SD_BUFFER1#82                     00000193
SD_BUFFER1#83                     00000194
SD_BUFFER1#84                     00000195
SD_BUFFER1#85                     00000196
SD_BUFFER1#86                     00000197
SD_BUFFER1#87                     00000198
SD_BUFFER1#88                     00000199
SD_BUFFER1#89                     0000019A
SD_BUFFER1#9                      0000014A
SD_BUFFER1#90                     0000019B
SD_BUFFER1#91                     0000019C
SD_BUFFER1#92                     0000019D
SD_BUFFER1#93                     0000019E
SD_BUFFER1#94                     0000019F
SD_BUFFER1#95                     000001A0
SD_BUFFER1#96                     000001A1
SD_BUFFER1#97                     000001A2
SD_BUFFER1#98                     000001A3
SD_BUFFER1#99                     000001A4
SD_BUFFER_IDX                     00000247
SD_BUFFER_IDXH                    00000248
SD_BUFFER_POS                     0000024E
SD_BUFFER_POSH                    0000024F
SD_BYTE0                          00000241
SD_BYTE1                          00000242
SD_BYTE2                          00000243
SD_BYTE3                          00000244
SD_BYTE4                          00000245
SD_BYTE5                          00000246
SD_BYTER                          00000032
SD_BYTES_PER_SEC                  0000025F
SD_BYTES_PER_SECH                 00000260
SD_BYTES_READ                     000002E1
SD_BYTES_READH                    000002E2
SD_BYTES_READHH                   000002E3
SD_BYTES_READHHH                  000002E4
SD_BYTE_RW                        00000249
SD_CHECK_FOR_FILE                 
SD_CHECK_FOR_FILE#REQ             1
SD_CHECK_FOR_FILE_RETURN          00000001
SD_CHECK_FOR_FILE_SUB             0000131C
SD_CLK                            PORTC,3
SD_CLOSE_FILE                     
SD_CLOSE_FILE#REQ                 1
SD_CLOSE_FILE_RETURN              00000000
SD_CLOSE_FILE_SUB                 000014B4
SD_CLUSTER_NUM                    000002C5
SD_CLUSTER_NUMH                   000002C6
SD_CLUSTER_NUM_PREV               000002C7
SD_CLUSTER_NUM_PREVH              000002C8
SD_CLUSTER_SEQ_IDX                000002DA
SD_CLUSTER_SEQ_IDXH               000002DB
SD_CLUSTER_SEQ_IDX_PREV           000002DE
SD_CLUSTER_SEQ_IDX_PREVH          000002DF
SD_CLUSTER_SEQ_NUM                000002D8
SD_CLUSTER_SEQ_NUMH               000002D9
SD_CLUSTER_SEQ_NUM_PREV           000002DC
SD_CLUSTER_SEQ_NUM_PREVH          000002DD
SD_CS                             PORTC,2
SD_DATA_AREA                      00000273
SD_DATA_AREAH                     00000274
SD_DATA_AREAHH                    00000275
SD_DATA_AREAHHH                   00000276
SD_DATA_BUFFER_POS                0000028F
SD_DATA_BUFFER_POSH               00000290
SD_DATA_IO                        0000024D
SD_DATA_SEC                       0000028B
SD_DATA_SECH                      0000028C
SD_DATA_SECHH                     0000028D
SD_DATA_SECHHH                    0000028E
SD_DAY                            000002EF
SD_DELETE_FILE                    
SD_DELETE_FILE#REQ                1
SD_DELETE_FILE_RETURN             00000000
SD_DELETE_FILE_SUB                00001F30
SD_DETECT                         PORTB,0
SD_DI                             PORTC,5
SD_DIR_DIRECTION                  000002E8
SD_DISK_SIZE_KB                   SD_BYTES_READ
SD_DISK_SIZE_KBH                  SD_BYTES_READH
SD_DISK_SIZE_KBHH                 SD_BYTES_READHH
SD_DISK_SIZE_KBHHH                SD_BYTES_READHHH
SD_DO                             PORTC,4
SD_EOF                            _B#VR1,0
SD_EXTENDED_RETURN                0000024B
SD_EXTENDED_RETURN_INT            000002E9
SD_EXTENDED_RETURN_ROOT_DIR       0000024C
SD_FAT1                           00000267
SD_FAT1H                          00000268
SD_FAT1HH                         00000269
SD_FAT1HHH                        0000026A
SD_FAT2                           0000026B
SD_FAT2H                          0000026C
SD_FAT2HH                         0000026D
SD_FAT2HHH                        0000026E
SD_FAT_BUFFER_POS                 0000027D
SD_FAT_BUFFER_POSH                0000027E
SD_FAT_BUFFER_POS_PREV            00000283
SD_FAT_BUFFER_POS_PREVH           00000284
SD_FAT_ENTRY                      00000277
SD_FAT_ENTRYH                     00000278
SD_FAT_SEC                        00000279
SD_FAT_SECH                       0000027A
SD_FAT_SECHH                      0000027B
SD_FAT_SECHHH                     0000027C
SD_FAT_SEC_PREV                   0000027F
SD_FAT_SEC_PREVH                  00000280
SD_FAT_SEC_PREVHH                 00000281
SD_FAT_SEC_PREVHHH                00000282
SD_FILE_EXT                       0000029A
SD_FILE_EXT#0                     0000029A
SD_FILE_EXT#1                     0000029B
SD_FILE_EXT#2                     0000029C
SD_FILE_EXT#3                     0000029D
SD_FILE_NAME                      00000291
SD_FILE_NAME#0                    00000291
SD_FILE_NAME#1                    00000292
SD_FILE_NAME#2                    00000293
SD_FILE_NAME#3                    00000294
SD_FILE_NAME#4                    00000295
SD_FILE_NAME#5                    00000296
SD_FILE_NAME#6                    00000297
SD_FILE_NAME#7                    00000298
SD_FILE_NAME#8                    00000299
SD_FILE_NUM                       000002E6
SD_FILE_NUMH                      000002E7
SD_FILE_SIZE                      000002CC
SD_FILE_SIZEH                     000002CD
SD_FILE_SIZEHH                    000002CE
SD_FILE_SIZEHHH                   000002CF
SD_FILE_SIZE_LEFT                 000002EA
SD_FILE_SIZE_LEFTH                000002EB
SD_FILE_SIZE_LEFTHH               000002EC
SD_FILE_SIZE_LEFTHHH              000002ED
SD_FIND_FREE_CLUSTER              00000924
SD_FIND_ROOT_DIR_ENTRY            00000BE0
SD_FIND_ROOT_DIR_ENTRY_F          000002E0
SD_FIRST                          0
SD_FREE_CLUSTER_NUM               SD_CLUSTER_SEQ_NUM
SD_FREE_CLUSTER_NUMH              SD_CLUSTER_SEQ_NUMH
SD_FREE_SPACE_KB                  SD_BYTES_READ
SD_FREE_SPACE_KBH                 SD_BYTES_READH
SD_FREE_SPACE_KBHH                SD_BYTES_READHH
SD_FREE_SPACE_KBHHH               SD_BYTES_READHHH
SD_HOURS                          000002F5
SD_IDX                            00000033
SD_INIT_FS_MSSP                   
SD_INIT_FS_MSSP#REQ               1
SD_INIT_FS_MSSP_LST_PRM           00000000
SD_INIT_FS_MSSP_RETURN            00000001
SD_INIT_FS_MSSP_SUB               000020D6
SD_INIT_MSSP                      
SD_INIT_MSSP#REQ                  1
SD_INIT_MSSP_LST_PRM              00000001
SD_INIT_MSSP_RETURN               00000001
SD_INIT_MSSP_SUB                  000013EC
SD_INSERT_BYTE_INTO_BUFFER        00000F40
SD_IO_BYTE                        000002D0
SD_IO_STRING                      000002FB
SD_IO_STRING#0                    000002FB
SD_IO_STRING#1                    000002FC
SD_IO_STRING#10                   00000305
SD_IO_STRING#100                  0000035F
SD_IO_STRING#101                  00000360
SD_IO_STRING#102                  00000361
SD_IO_STRING#103                  00000362
SD_IO_STRING#104                  00000363
SD_IO_STRING#105                  00000364
SD_IO_STRING#106                  00000365
SD_IO_STRING#107                  00000366
SD_IO_STRING#108                  00000367
SD_IO_STRING#109                  00000368
SD_IO_STRING#11                   00000306
SD_IO_STRING#110                  00000369
SD_IO_STRING#111                  0000036A
SD_IO_STRING#112                  0000036B
SD_IO_STRING#113                  0000036C
SD_IO_STRING#114                  0000036D
SD_IO_STRING#115                  0000036E
SD_IO_STRING#116                  0000036F
SD_IO_STRING#117                  00000370
SD_IO_STRING#118                  00000371
SD_IO_STRING#119                  00000372
SD_IO_STRING#12                   00000307
SD_IO_STRING#120                  00000373
SD_IO_STRING#121                  00000374
SD_IO_STRING#122                  00000375
SD_IO_STRING#123                  00000376
SD_IO_STRING#124                  00000377
SD_IO_STRING#125                  00000378
SD_IO_STRING#126                  00000379
SD_IO_STRING#127                  0000037A
SD_IO_STRING#128                  0000037B
SD_IO_STRING#129                  0000037C
SD_IO_STRING#13                   00000308
SD_IO_STRING#130                  0000037D
SD_IO_STRING#131                  0000037E
SD_IO_STRING#132                  0000037F
SD_IO_STRING#133                  00000380
SD_IO_STRING#134                  00000381
SD_IO_STRING#135                  00000382
SD_IO_STRING#136                  00000383
SD_IO_STRING#137                  00000384
SD_IO_STRING#138                  00000385
SD_IO_STRING#139                  00000386
SD_IO_STRING#14                   00000309
SD_IO_STRING#140                  00000387
SD_IO_STRING#141                  00000388
SD_IO_STRING#142                  00000389
SD_IO_STRING#143                  0000038A
SD_IO_STRING#144                  0000038B
SD_IO_STRING#145                  0000038C
SD_IO_STRING#146                  0000038D
SD_IO_STRING#147                  0000038E
SD_IO_STRING#148                  0000038F
SD_IO_STRING#149                  00000390
SD_IO_STRING#15                   0000030A
SD_IO_STRING#150                  00000391
SD_IO_STRING#151                  00000392
SD_IO_STRING#152                  00000393
SD_IO_STRING#153                  00000394
SD_IO_STRING#154                  00000395
SD_IO_STRING#155                  00000396
SD_IO_STRING#156                  00000397
SD_IO_STRING#157                  00000398
SD_IO_STRING#158                  00000399
SD_IO_STRING#159                  0000039A
SD_IO_STRING#16                   0000030B
SD_IO_STRING#160                  0000039B
SD_IO_STRING#161                  0000039C
SD_IO_STRING#162                  0000039D
SD_IO_STRING#163                  0000039E
SD_IO_STRING#164                  0000039F
SD_IO_STRING#165                  000003A0
SD_IO_STRING#166                  000003A1
SD_IO_STRING#167                  000003A2
SD_IO_STRING#168                  000003A3
SD_IO_STRING#169                  000003A4
SD_IO_STRING#17                   0000030C
SD_IO_STRING#170                  000003A5
SD_IO_STRING#171                  000003A6
SD_IO_STRING#172                  000003A7
SD_IO_STRING#173                  000003A8
SD_IO_STRING#174                  000003A9
SD_IO_STRING#175                  000003AA
SD_IO_STRING#176                  000003AB
SD_IO_STRING#177                  000003AC
SD_IO_STRING#178                  000003AD
SD_IO_STRING#179                  000003AE
SD_IO_STRING#18                   0000030D
SD_IO_STRING#180                  000003AF
SD_IO_STRING#181                  000003B0
SD_IO_STRING#182                  000003B1
SD_IO_STRING#183                  000003B2
SD_IO_STRING#184                  000003B3
SD_IO_STRING#185                  000003B4
SD_IO_STRING#186                  000003B5
SD_IO_STRING#187                  000003B6
SD_IO_STRING#188                  000003B7
SD_IO_STRING#189                  000003B8
SD_IO_STRING#19                   0000030E
SD_IO_STRING#190                  000003B9
SD_IO_STRING#191                  000003BA
SD_IO_STRING#192                  000003BB
SD_IO_STRING#193                  000003BC
SD_IO_STRING#194                  000003BD
SD_IO_STRING#195                  000003BE
SD_IO_STRING#196                  000003BF
SD_IO_STRING#197                  000003C0
SD_IO_STRING#198                  000003C1
SD_IO_STRING#199                  000003C2
SD_IO_STRING#2                    000002FD
SD_IO_STRING#20                   0000030F
SD_IO_STRING#200                  000003C3
SD_IO_STRING#21                   00000310
SD_IO_STRING#22                   00000311
SD_IO_STRING#23                   00000312
SD_IO_STRING#24                   00000313
SD_IO_STRING#25                   00000314
SD_IO_STRING#26                   00000315
SD_IO_STRING#27                   00000316
SD_IO_STRING#28                   00000317
SD_IO_STRING#29                   00000318
SD_IO_STRING#3                    000002FE
SD_IO_STRING#30                   00000319
SD_IO_STRING#31                   0000031A
SD_IO_STRING#32                   0000031B
SD_IO_STRING#33                   0000031C
SD_IO_STRING#34                   0000031D
SD_IO_STRING#35                   0000031E
SD_IO_STRING#36                   0000031F
SD_IO_STRING#37                   00000320
SD_IO_STRING#38                   00000321
SD_IO_STRING#39                   00000322
SD_IO_STRING#4                    000002FF
SD_IO_STRING#40                   00000323
SD_IO_STRING#41                   00000324
SD_IO_STRING#42                   00000325
SD_IO_STRING#43                   00000326
SD_IO_STRING#44                   00000327
SD_IO_STRING#45                   00000328
SD_IO_STRING#46                   00000329
SD_IO_STRING#47                   0000032A
SD_IO_STRING#48                   0000032B
SD_IO_STRING#49                   0000032C
SD_IO_STRING#5                    00000300
SD_IO_STRING#50                   0000032D
SD_IO_STRING#51                   0000032E
SD_IO_STRING#52                   0000032F
SD_IO_STRING#53                   00000330
SD_IO_STRING#54                   00000331
SD_IO_STRING#55                   00000332
SD_IO_STRING#56                   00000333
SD_IO_STRING#57                   00000334
SD_IO_STRING#58                   00000335
SD_IO_STRING#59                   00000336
SD_IO_STRING#6                    00000301
SD_IO_STRING#60                   00000337
SD_IO_STRING#61                   00000338
SD_IO_STRING#62                   00000339
SD_IO_STRING#63                   0000033A
SD_IO_STRING#64                   0000033B
SD_IO_STRING#65                   0000033C
SD_IO_STRING#66                   0000033D
SD_IO_STRING#67                   0000033E
SD_IO_STRING#68                   0000033F
SD_IO_STRING#69                   00000340
SD_IO_STRING#7                    00000302
SD_IO_STRING#70                   00000341
SD_IO_STRING#71                   00000342
SD_IO_STRING#72                   00000343
SD_IO_STRING#73                   00000344
SD_IO_STRING#74                   00000345
SD_IO_STRING#75                   00000346
SD_IO_STRING#76                   00000347
SD_IO_STRING#77                   00000348
SD_IO_STRING#78                   00000349
SD_IO_STRING#79                   0000034A
SD_IO_STRING#8                    00000303
SD_IO_STRING#80                   0000034B
SD_IO_STRING#81                   0000034C
SD_IO_STRING#82                   0000034D
SD_IO_STRING#83                   0000034E
SD_IO_STRING#84                   0000034F
SD_IO_STRING#85                   00000350
SD_IO_STRING#86                   00000351
SD_IO_STRING#87                   00000352
SD_IO_STRING#88                   00000353
SD_IO_STRING#89                   00000354
SD_IO_STRING#9                    00000304
SD_IO_STRING#90                   00000355
SD_IO_STRING#91                   00000356
SD_IO_STRING#92                   00000357
SD_IO_STRING#93                   00000358
SD_IO_STRING#94                   00000359
SD_IO_STRING#95                   0000035A
SD_IO_STRING#96                   0000035B
SD_IO_STRING#97                   0000035C
SD_IO_STRING#98                   0000035D
SD_IO_STRING#99                   0000035E
SD_IO_STRING_LENGTH               000002F9
SD_IO_STRING_POS                  000002FA
SD_IS_DIRTY                       000002F6
SD_LAST_CLUSTER                   000002C9
SD_LAST_CLUSTERH                  000002CA
SD_MINUTES                        000002F4
SD_MODIFY_FILE_NAME               00000B16
SD_MONTH                          000002F0
SD_MSECONDS                       000002F2
SD_NEW_FILE                       
SD_NEW_FILE#REQ                   1
SD_NEW_FILE_RETURN                00000000
SD_NEW_FILE_SUB                   000019AA
SD_NEXT                           1
SD_NULL_F                         000002C4
SD_NUM_OF_FATS                    0000025A
SD_NUM_OF_ROOT_ENTRIES            00000261
SD_NUM_OF_ROOT_ENTRIESH           00000262
SD_NUM_OF_SECS                    0000025B
SD_NUM_OF_SECSH                   0000025C
SD_NUM_OF_SECSHH                  0000025D
SD_NUM_OF_SECSHHH                 0000025E
SD_OPEN_FILE                      
SD_OPEN_FILE#REQ                  1
SD_OPEN_FILE_RETURN               00000001
SD_OPEN_FILE_SUB                  000016F8
SD_PREVIOUS                       2
SD_READ_BYTE_FROM_FILE            
SD_READ_BYTE_FROM_FILE#REQ        1
SD_READ_BYTE_FROM_FILE_RETURN     00000001
SD_READ_BYTE_FROM_FILE_SUB        00001824
SD_READ_FAT_ENTRY                 000008BC
SD_READ_SECTOR                    000007E6
SD_READ_SECTOR_END                000008BA
SD_READ_SECTOR_ERROR              000008A4
SD_READ_SECTOR_START              000007EE
SD_READ_SUB                       0000132A
SD_RECEIVE_BYTE                   000013E0
SD_RESERVED_SECS                  00000256
SD_RESERVED_SECSH                 00000257
SD_RETURN                         00000040
SD_RETURN_F                       000002F8
SD_ROOT_DIR                       0000026F
SD_ROOT_DIRH                      00000270
SD_ROOT_DIRHH                     00000271
SD_ROOT_DIRHHH                    00000272
SD_ROOT_DIR_FILE                  0000029E
SD_ROOT_DIR_FILE#0                0000029E
SD_ROOT_DIR_FILE#1                0000029F
SD_ROOT_DIR_FILE#10               000002A8
SD_ROOT_DIR_FILE#11               000002A9
SD_ROOT_DIR_FILE#12               000002AA
SD_ROOT_DIR_FILE#13               000002AB
SD_ROOT_DIR_FILE#14               000002AC
SD_ROOT_DIR_FILE#15               000002AD
SD_ROOT_DIR_FILE#16               000002AE
SD_ROOT_DIR_FILE#17               000002AF
SD_ROOT_DIR_FILE#18               000002B0
SD_ROOT_DIR_FILE#19               000002B1
SD_ROOT_DIR_FILE#2                000002A0
SD_ROOT_DIR_FILE#20               000002B2
SD_ROOT_DIR_FILE#21               000002B3
SD_ROOT_DIR_FILE#22               000002B4
SD_ROOT_DIR_FILE#23               000002B5
SD_ROOT_DIR_FILE#24               000002B6
SD_ROOT_DIR_FILE#25               000002B7
SD_ROOT_DIR_FILE#26               000002B8
SD_ROOT_DIR_FILE#27               000002B9
SD_ROOT_DIR_FILE#28               000002BA
SD_ROOT_DIR_FILE#29               000002BB
SD_ROOT_DIR_FILE#3                000002A1
SD_ROOT_DIR_FILE#30               000002BC
SD_ROOT_DIR_FILE#31               000002BD
SD_ROOT_DIR_FILE#4                000002A2
SD_ROOT_DIR_FILE#5                000002A3
SD_ROOT_DIR_FILE#6                000002A4
SD_ROOT_DIR_FILE#7                000002A5
SD_ROOT_DIR_FILE#8                000002A6
SD_ROOT_DIR_FILE#9                000002A7
SD_ROOT_DIR_FILE_POS              00000250
SD_ROOT_DIR_POS                   00000289
SD_ROOT_DIR_POSH                  0000028A
SD_ROOT_DIR_SEC                   00000285
SD_ROOT_DIR_SECH                  00000286
SD_ROOT_DIR_SECHH                 00000287
SD_ROOT_DIR_SECHHH                00000288
SD_RW_OPTION                      0000024A
SD_RW_PTR                         SD_BYTES_READ
SD_RW_PTRH                        SD_BYTES_READH
SD_RW_PTRHH                       SD_BYTES_READHH
SD_RW_PTRHHH                      SD_BYTES_READHHH
SD_SECONDS                        000002F3
SD_SECS_IN_ROOT                   00000263
SD_SECS_IN_ROOTH                  00000264
SD_SECS_PER_CLUSTER               00000255
SD_SECS_PER_FAT                   00000258
SD_SECS_PER_FATH                  00000259
SD_SECTOR_NUM                     00000034
SD_SECTOR_NUMH                    00000035
SD_SECTOR_NUMHH                   00000036
SD_SECTOR_NUMHHH                  00000037
SD_SECTOR_SUB                     00000664
SD_SEC_IN_CLUSTER                 000002CB
SD_SEC_NUM                        00000251
SD_SEC_NUMH                       00000252
SD_SEC_NUMHH                      00000253
SD_SEC_NUMHHH                     00000254
SD_SEEK_RESPONSE                  000006A2
SD_SEEK_RESPONSE_IDX              0000003C
SD_SEEK_RESPONSE_IDXH             0000003D
SD_SEEK_RESPONSE_REQD             0000003E
SD_SEEK_RESPONSE_RETURN           0000003F
SD_SEND_BYTE                      000013D2
SD_SEND_CMD                       00001396
SD_SET_FILE_TIME_CREATE           000015F2
SD_SET_FILE_TIME_MODIFIED         0000162C
SD_SPI_BF                         SSPSTAT,0
SD_SPI_FOSC_04                    0
SD_SPI_FOSC_16                    1
SD_SPI_FOSC_64                    2
SD_SPI_IF                         PIR1,3
SD_SSPSTAT                        000002F7
SD_STORE_CLUSTER_SEQ              00000B08
SD_STORE_FAT_POSITION             00000A7C
SD_STORE_ROOT_DIRECT_POSITION     00000F18
SD_TEMP                           000002D2
SD_TEMPH                          000002D3
SD_TEMP_BYTE                      000002D1
SD_TEMP_DWORD                     000002D4
SD_TEMP_DWORDH                    000002D5
SD_TEMP_DWORDHH                   000002D6
SD_TEMP_DWORDHHH                  000002D7
SD_TIMEOUT                        000002EE
SD_WRITE_BUFFER_POS               000002C2
SD_WRITE_BUFFER_POSH              000002C3
SD_WRITE_BYTE_TO_FILE             
SD_WRITE_BYTE_TO_FILE#REQ         1
SD_WRITE_BYTE_TO_FILE_LST_PRM     00000000
SD_WRITE_BYTE_TO_FILE_RETURN      00000000
SD_WRITE_BYTE_TO_FILE_SUB         0000102E
SD_WRITE_SECTOR                   000006E4
SD_WRITE_SECTOR_END               000007E4
SD_WRITE_SECTOR_ERROR             000007CE
SD_WRITE_SECTOR_START             000006EC
SD_WRITE_SEC_NUM                  000002BE
SD_WRITE_SEC_NUMH                 000002BF
SD_WRITE_SEC_NUMHH                000002C0
SD_WRITE_SEC_NUMHHH               000002C1
SD_WRITE_STRING_TO_FILE           
SD_WRITE_STRING_TO_FILE#REQ       1
SD_WRITE_STRING_TO_FILE_RETURN    00000000
SD_WRITE_STRING_TO_FILE_SUB       00002362
SD_WRITE_SUB                      000005E8
SD_YEAR                           000002F1
SEN                               00000000
SEND@IT                           000000A4
SETC                              BSF STATUS,C
SETZ                              BSF STATUS,Z
SKPC                              BTFSS STATUS,C
SKPNC                             BTFSC STATUS,C
SKPNZ                             BTFSC STATUS,Z
SKPZ                              BTFSS STATUS,Z
SL@LB32                           00001642
SL@LB33                           0000167E
SMP                               00000007
SP#P9                             0000002D
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
START                             000024B6
START2                            000024B6
START@                            000005D0
STATUS                            00000FD8
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
STR@LB1                           00000468
STR@LB10                          000004D2
STR@LB11                          000004E0
STR@LB12                          000004EA
STR@LB13                          000004FA
STR@LB14                          0000050A
STR@LB15                          00000514
STR@LB16                          0000051E
STR@LB17                          0000052A
STR@LB18                          00000534
STR@LB19                          00000544
STR@LB2                           00000472
STR@LB20                          00000550
STR@LB21                          0000055A
STR@LB22                          00000564
STR@LB23                          00000572
STR@LB24                          00000586
STR@LB25                          00000590
STR@LB26                          000005A0
STR@LB27                          000005AC
STR@LB28                          000005BE
STR@LB3                           0000047C
STR@LB4                           0000048A
STR@LB5                           00000492
STR@LB6                           000004A0
STR@LB7                           000004AC
STR@LB8                           000004BA
STR@LB9                           000004C4
STVR_OFF_4                        000000FE
STVR_ON_4                         000000FF
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
T@E                               0000000C
T@EB                              00000008
T@EW                              0000000A
T@GE                              00000012
T@ST                              00000018
TABLAT                            00000FF5
TAGIN                             000003C6
TAGIN#0                           000003C6
TAGIN#1                           000003C7
TAGIN#2                           000003C8
TAGIN#3                           000003C9
TAGIN#4                           000003CA
TAGIN#5                           000003CB
TAGIN#6                           000003CC
TAGIN#7                           000003CD
TAGIN#8                           000003CE
TAGIN#9                           000003CF
TAGOFFSET                         4
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRLH                          00000FF7
TBLPTRU                           00000FF8
TIMEOUT                           00002676
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0LH                            00000FD7
TMR0ON                            00000007
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1LH                            00000FCF
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3LH                            00000FB3
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSLH                             00000FFE
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE4                            00000004
TRISE5                            00000005
TRISE6                            00000006
TRISE7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TV1                               000003EF
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
UHA                               16
UPA_H                             1
UPA_L                             0
USERIN                            000003D0
USERIN#0                          000003D0
USERIN#1                          000003D1
USERIN#2                          000003D2
USERIN#3                          000003D3
USER_POINTER                      000003C4
USER_POINTERH                     000003C5
UTAG                              000003D4
UTAG#0                            000003D4
UTAG#1                            000003D5
UTAG#10                           000003DE
UTAG#11                           000003DF
UTAG#12                           000003E0
UTAG#13                           000003E1
UTAG#14                           000003E2
UTAG#15                           000003E3
UTAG#2                            000003D6
UTAG#3                            000003D7
UTAG#4                            000003D8
UTAG#5                            000003D9
UTAG#6                            000003DA
UTAG#7                            000003DB
UTAG#8                            000003DC
UTAG#9                            000003DD
VCFG0                             00000004
VCFG1                             00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WDTPS_1024_2                      000000F5
WDTPS_128_2                       000000EF
WDTPS_16384_2                     000000FD
WDTPS_16_2                        000000E9
WDTPS_1_2                         000000E1
WDTPS_2048_2                      000000F7
WDTPS_256_2                       000000F1
WDTPS_2_2                         000000E3
WDTPS_32768_2                     000000FF
WDTPS_32_2                        000000EB
WDTPS_4096_2                      000000F9
WDTPS_4_2                         000000E5
WDTPS_512_2                       000000F3
WDTPS_64_2                        000000ED
WDTPS_8192_2                      000000FB
WDTPS_8_2                         000000E7
WDT_OFF_2                         000000FE
WDT_ON_2                          000000FF
WORD_BIT                          
WORD_BYTE                         
WORD_DWORD                        
WORD_FLOAT                        
WORD_VAR                          000003F0
WORD_VARH                         000003F1
WORD_WORD                         
WORD_WREG                         
WR                                00000001
WREG                              00000FE8
WREG_BIT                          
WREG_BYTE                         
WREG_DWORD                        
WREG_FLOAT                        
WREG_WORD                         
WREN                              00000002
WRERR                             00000003
WRITEH                            00002B0C
WRITE_MANAGER                     00002C32
WRITE_M_SD                        00002D4A
WRITE_SD                          000028CC
WRITE_USERS_SD                    00002EF2
WRT0_OFF_6                        000000FF
WRT0_ON_6                         000000FE
WRT1_OFF_6                        000000FF
WRT1_ON_6                         000000FD
WRT2_OFF_6                        000000FF
WRT2_ON_6                         000000FB
WRTB_OFF_6                        000000FF
WRTB_ON_6                         000000BF
WRTC_OFF_6                        000000FF
WRTC_ON_6                         000000DF
WRTD_OFF_6                        000000FF
WRTD_ON_6                         0000007F
WUE                               00000001
XTAL                              4
XT_OSC_1                          000000F1
Z                                 00000002
_ADC                              13
_ADC_RES                          10
_AEXP                             0000002E
_B#VR1                            000002E5
_CORE                             16
_CWRITE_BLOCK                     8
_EEPROM                           1024
_FLASH                            1
_FP_FLAGS                         0000002F
_FP_TEMP                          00000030
_I2C_SCL_PIN                      00000003
_I2C_SCL_PORT                     00000F94
_I2C_SDA_PIN                      00000004
_I2C_SDA_PORT                     00000F94
_MAXMEM                           49152
_MAXRAM                           3968
_NOT_ADDRESS                      00000005
_NOT_WRITE                        00000002
_RAM_END                          3839
_SIGN                             00000031
_SYSTEM_VARIABLE_COUNT            50
_USART                            1
_USB                              0
_USELFSR                          1
__18F4525                         1
__HSERIAL_BAUD                    00002580
__HSERIAL_RCSTA                   00000090
__HSERIAL_TXSTA                   00000020
__LCD_DTPIN                       00000000
__LCD_DTPORT                      PORTD
__LCD_ENPIN                       00000006
__LCD_ENPORT                      PORTD
__LCD_INTERFACE                   00000004
__LCD_LINES                       00000002
__LCD_RSPIN                       00000007
__LCD_RSPORT                      PORTD
__LCD_TYPE                        00000000
__XTAL                            00000004


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXX----XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
20C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
21C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
22C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
23C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
24C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
25C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
26C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
27C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
28C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
29C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
3000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
3040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
3080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX ----------------
9C40 : XXXXXXXX-------- ---------------- ---------------- ----------------
0000 : -XXX-XX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used: 12479
Program Memory Bytes Free: 36673


Errors   :     0
Warnings :     0 reported,   199 suppressed
Messages :     1 reported,     1 suppressed


