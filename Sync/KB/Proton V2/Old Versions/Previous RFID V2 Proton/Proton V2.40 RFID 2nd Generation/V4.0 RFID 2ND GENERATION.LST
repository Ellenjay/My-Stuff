MPASM  5.06                      V40RFI~1.ASM   4-9-2010  16:12:27         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;----------------------------------------------------------
                      00002 ; Code Produced by the PROTON+ Compiler. Version 3.2.5.5
                      00003 ; Copyright Rosetta Technologies/Crownhill Associates
                      00004 ; Written by Les Johnson. February 2007
                      00005 ;----------------------------------------------------------
                      00007  LIST
                      00008         LIST
                      00009 ;{
                      00010 ;FILE F1 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\V4.0 RFID 2ND GENERATION.BAS
                      00011 ;FILE F2 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\V4.0 RFID 2ND GENERATION.PRP
                      00012 ;FILE F3 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\V4.0 RFID 2ND GENERATION_FWD.PBP
                      00013 ;FILE F4 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\V4.0 RFID 2ND GENERATION_LIB.PBP
                      00014 ;FILE F5 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\INITIALIZE.INC
                      00015 ;FILE F6 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\READ TAG.INC
                      00016 ;FILE F7 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\READ SD.INC
                      00017 ;FILE F8 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\WRITE SD.INC
                      00018 ;FILE F9 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\INIT SD.INC
                      00019 ;FILE F10 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\CHECK TAG.INC
                      00020 ;FILE F11 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\WRITE_U_H.INC
                      00021 ;FILE F12 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\WRITE_M_H.INC
                      00022 ;FILE F13 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\WRITE_M_SD.INC
                      00023 ;FILE F14 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\WRITE_USERS_SD.INC
                      00024 ;FILE F15 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\READ_MOD.INC
                      00025 ;FILE F16 = C:\MY PROTON\PROTON V2.40 RFID 2ND GENERATION\INC\GOSLEEP.INC
                      00026 ;}
                      00027 ;[Variable Listing]
                      00028 ;SD_BYTER,0032,DT_BYTE,1
                      00029 ;SD_IDX,0033,DT_BYTE,1
                      00030 ;SD_SECTOR_NUM,0034,DT_DWORD,4
                      00031 ;SD_ADDRESS,0038,DT_DWORD,4
                      00032 ;SD_SEEK_RESPONSE_IDX,003C,DT_WORD,2
                      00033 ;SD_SEEK_RESPONSE_REQD,003E,DT_BYTE,1
                      00034 ;SD_SEEK_RESPONSE_RETURN,003F,DT_BYTE,1
                      00035 ;SD_RETURN,0040,DT_BYTE,1
                      00036 ;SD_BUFFER0,0041,DT_BYTE,256
                      00037 ;SD_BUFFER1,0141,DT_BYTE,256
                      00038 ;SD_BYTE0,0241,DT_BYTE,1
                      00039 ;SD_BYTE1,0242,DT_BYTE,1
                      00040 ;SD_BYTE2,0243,DT_BYTE,1
                      00041 ;SD_BYTE3,0244,DT_BYTE,1
                      00042 ;SD_BYTE4,0245,DT_BYTE,1
                      00043 ;SD_BYTE5,0246,DT_BYTE,1
                      00044 ;SD_BUFFER_IDX,0247,DT_WORD,2
                      00045 ;SD_BYTE_RW,0249,DT_BYTE,1
                      00046 ;SD_RW_OPTION,024A,DT_BYTE,1
                      00047 ;SD_EXTENDED_RETURN,024B,DT_BYTE,1
                      00048 ;SD_EXTENDED_RETURN_ROOT_DIR,024C,DT_BYTE,1
                      00049 ;SD_DATA_IO,024D,DT_BYTE,1
                      00050 ;SD_BUFFER_POS,024E,DT_WORD,2
                      00051 ;SD_ROOT_DIR_FILE_POS,0250,DT_BYTE,1
                      00052 ;SD_SEC_NUM,0251,DT_DWORD,4
                      00053 ;SD_SECS_PER_CLUSTER,0255,DT_BYTE,1
                      00054 ;SD_RESERVED_SECS,0256,DT_WORD,2
MPASM  5.06                      V40RFI~1.ASM   4-9-2010  16:12:27         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00055 ;SD_SECS_PER_FAT,0258,DT_WORD,2
                      00056 ;SD_NUM_OF_FATS,025A,DT_BYTE,1
                      00057 ;SD_NUM_OF_SECS,025B,DT_DWORD,4
                      00058 ;SD_BYTES_PER_SEC,025F,DT_WORD,2
                      00059 ;SD_NUM_OF_ROOT_ENTRIES,0261,DT_WORD,2
                      00060 ;SD_SECS_IN_ROOT,0263,DT_WORD,2
                      00061 ;SD_BOOT_RECORD,0265,DT_WORD,2
                      00062 ;SD_FAT1,0267,DT_DWORD,4
                      00063 ;SD_FAT2,026B,DT_DWORD,4
                      00064 ;SD_ROOT_DIR,026F,DT_DWORD,4
                      00065 ;SD_DATA_AREA,0273,DT_DWORD,4
                      00066 ;SD_FAT_ENTRY,0277,DT_WORD,2
                      00067 ;SD_FAT_SEC,0279,DT_DWORD,4
                      00068 ;SD_FAT_BUFFER_POS,027D,DT_WORD,2
                      00069 ;SD_FAT_SEC_PREV,027F,DT_DWORD,4
                      00070 ;SD_FAT_BUFFER_POS_PREV,0283,DT_WORD,2
                      00071 ;SD_ROOT_DIR_SEC,0285,DT_DWORD,4
                      00072 ;SD_ROOT_DIR_POS,0289,DT_WORD,2
                      00073 ;SD_DATA_SEC,028B,DT_DWORD,4
                      00074 ;SD_DATA_BUFFER_POS,028F,DT_WORD,2
                      00075 ;SD_FILE_NAME,0291,DT_STRING,9
                      00076 ;SD_FILE_EXT,029A,DT_STRING,4
                      00077 ;SD_ROOT_DIR_FILE,029E,DT_BYTE,32
                      00078 ;SD_WRITE_SEC_NUM,02BE,DT_DWORD,4
                      00079 ;SD_WRITE_BUFFER_POS,02C2,DT_WORD,2
                      00080 ;SD_NULL_F,02C4,DT_BYTE,1
                      00081 ;SD_CLUSTER_NUM,02C5,DT_WORD,2
                      00082 ;SD_CLUSTER_NUM_PREV,02C7,DT_WORD,2
                      00083 ;SD_LAST_CLUSTER,02C9,DT_WORD,2
                      00084 ;SD_SEC_IN_CLUSTER,02CB,DT_BYTE,1
                      00085 ;SD_FILE_SIZE,02CC,DT_DWORD,4
                      00086 ;SD_IO_BYTE,02D0,DT_BYTE,1
                      00087 ;SD_TEMP_BYTE,02D1,DT_BYTE,1
                      00088 ;SD_TEMP,02D2,DT_WORD,2
                      00089 ;SD_TEMP_DWORD,02D4,DT_DWORD,4
                      00090 ;SD_CLUSTER_SEQ_NUM,02D8,DT_WORD,2
                      00091 ;SD_CLUSTER_SEQ_IDX,02DA,DT_WORD,2
                      00092 ;SD_CLUSTER_SEQ_NUM_PREV,02DC,DT_WORD,2
                      00093 ;SD_CLUSTER_SEQ_IDX_PREV,02DE,DT_WORD,2
                      00094 ;SD_FIND_ROOT_DIR_ENTRY_F,02E0,DT_BYTE,1
                      00095 ;SD_BYTES_READ,02E1,DT_DWORD,4
                      00096 ;_B#VR1,0000,DT_BYTE,1
                      00097 ;SD_FILE_NUM,02E6,DT_WORD,2
                      00098 ;SD_DIR_DIRECTION,02E8,DT_BYTE,1
                      00099 ;SD_EXTENDED_RETURN_INT,02E9,DT_BYTE,1
                      00100 ;SD_FILE_SIZE_LEFT,02EA,DT_DWORD,4
                      00101 ;SD_TIMEOUT,02EE,DT_BYTE,1
                      00102 ;SD_DAY,02EF,DT_BYTE,1
                      00103 ;SD_MONTH,02F0,DT_BYTE,1
                      00104 ;SD_YEAR,02F1,DT_BYTE,1
                      00105 ;SD_MSECONDS,02F2,DT_BYTE,1
                      00106 ;SD_SECONDS,02F3,DT_BYTE,1
                      00107 ;SD_MINUTES,02F4,DT_BYTE,1
MPASM  5.06                      V40RFI~1.ASM   4-9-2010  16:12:27         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00108 ;SD_HOURS,02F5,DT_BYTE,1
                      00109 ;SD_IS_DIRTY,02F6,DT_BYTE,1
                      00110 ;SD_SSPSTAT,02F7,DT_BYTE,1
                      00111 ;SD_RETURN_F,02F8,DT_BYTE,1
                      00112 ;SD_IO_STRING_LENGTH,02F9,DT_BYTE,1
                      00113 ;SD_IO_STRING_POS,02FA,DT_BYTE,1
                      00114 ;SD_IO_STRING,02FB,DT_STRING,201
                      00115 ;USER_POINTER,03C4,DT_WORD,2
                      00116 ;TAGIN,03C6,DT_BYTE,10
                      00117 ;USERIN,03D0,DT_BYTE,4
                      00118 ;UTAG,03D4,DT_BYTE,16
                      00119 ;ETX,03E4,DT_BYTE,1
                      00120 ;CHECKSUM,03E5,DT_BYTE,1
                      00121 ;MODNUM,03E6,DT_BYTE,7
                      00122 ;RESPONSE,03ED,DT_BYTE,1
                      00123 ;SD_IO,03EE,DT_BYTE,1
                      00124 ;MYCOUNT,03EF,DT_BYTE,1
                      00125 ;INDEX,03F0,DT_BYTE,1
                      00126 ;INDEX2,03F1,DT_BYTE,1
                      00127 ;TV1,03F2,DT_BYTE,1
                      00128 ;WORD_VAR,03F3,DT_WORD,2
                      00129 ;MYNUM,03F5,DT_STRING,4
                      00130 ;SD_CS,0F82.2,DT_BIT
                      00131 ;SD_DI,0F82.5,DT_BIT
                      00132 ;SD_CLK,0F82.3,DT_BIT
                      00133 ;SD_DO,0F82.4,DT_BIT
                      00134 ;SD_EOF,02E5.0,DT_BIT
                      00135 ;SD_RW_PTR,02E1,DT_DWORD,4
                      00136 ;SD_FREE_CLUSTER_NUM,02D8,DT_WORD,2
                      00137 ;SD_FREE_SPACE_KB,02E1,DT_DWORD,4
                      00138 ;SD_DISK_SIZE_KB,02E1,DT_DWORD,4
                      00139 ;SD_SPI_BF,0FC7.0,DT_BIT
                      00140 ;SD_SPI_IF,0F9E.3,DT_BIT
                      00141 ;SD_DETECT,0F80.1,DT_BIT
                      00142 ;RFIDENABLE,0F83.4,DT_BIT
                      00143 ;FLAG,02E5.1,DT_BIT
                      00144 ;[End Listing]
                      00145  #DEFINE CONFIG_REQ 1
                      00146  #DEFINE _USELFSR 1
Message[308]: Warning level superseded by command line value. (2)
                      00147  LIST  P = 18F4525,F = INHX32 ,W = 2, X = ON, R = DEC, MM = ON, N = 0, C = 255
                      00148  #INCLUDE "C:\PROGRA~1\CROWNH~1\pds\INC\P18F4525.lpb"
                      00001 
                      00962  LIST
                      00149  #DEFINE __18F4525 1
                      00150  #DEFINE XTAL 4
                      00151  #DEFINE _CORE 16
                      00152  #DEFINE _MAXRAM 3968
                      00153  #DEFINE _RAM_END 3839
                      00154  #DEFINE _MAXMEM 49152
                      00155  #DEFINE _ADC 13
                      00156  #DEFINE _ADC_RES 10
                      00157  #DEFINE _EEPROM 1024
                      00158  #DEFINE RAM_BANKS 15
                      00159  #DEFINE _USART 1
                      00160  #DEFINE _USB 0
                      00161  #DEFINE _FLASH 1
                      00162  #DEFINE _CWRITE_BLOCK 8
                      00163  #DEFINE BANK0_START 128
                      00164  #DEFINE BANK0_END 255
                      00165  #DEFINE BANK1_START 256
                      00166  #DEFINE BANK1_END 511
                      00167  #DEFINE BANK2_START 512
                      00168  #DEFINE BANK2_END 767
                      00169  #DEFINE BANK3_START 768
                      00170  #DEFINE BANK3_END 1023
                      00171  #DEFINE BANK4_START 1024
                      00172  #DEFINE BANK4_END 1279
                      00173  #DEFINE BANK5_START 1280
                      00174  #DEFINE BANK5_END 1535
                      00175  #DEFINE BANK6_START 1536
                      00176  #DEFINE BANK6_END 1791
                      00177  #DEFINE BANK7_START 1792
                      00178  #DEFINE BANK7_END 2047
                      00179  #DEFINE BANK8_START 2048
                      00180  #DEFINE BANK8_END 2303
                      00181  #DEFINE BANK9_START 2304
                      00182  #DEFINE BANK9_END 2559
                      00183  #DEFINE BANK10_START 2560
                      00184  #DEFINE BANK10_END 2815
                      00185  #DEFINE BANK11_START 2816
                      00186  #DEFINE BANK11_END 3071
                      00187  #DEFINE BANK12_START 3072
                      00188  #DEFINE BANK12_END 3200
                      00189  #DEFINE BANK13_START 3328
                      00190  #DEFINE BANK13_END 3583
                      00191  #DEFINE BANK14_START 3584
                      00192  #DEFINE BANK14_END 3839
                      00193  #DEFINE BANKA_START 0
                      00194  #DEFINE BANKA_END 127
                      00195  #DEFINE _SYSTEM_VARIABLE_COUNT 50
  00000000            00196 RAM_BANK = 0
                      00197  #DEFINE LCD#DTPORT PORTD
                      00198  #DEFINE LCD#DTPIN 0
                      00199  #DEFINE LCD#RSPORT PORTD
                      00200  #DEFINE LCD#RSPIN 7
                      00201  #DEFINE LCD#ENPORT PORTD
                      00202  #DEFINE LCD#ENPIN 6
                      00203  #DEFINE LCD#INTERFACE 4
                      00204  #DEFINE LCD#LINES 2
                      00205  #DEFINE LCD#TYPE 0
                      00206  IFDEF HLVDCON
                      00207   IFNDEF LVDCON
                      00208    #DEFINE LVDCON HLVDCON
                      00209   ENDIF
                      00210  ENDIF
                      00211  #DEFINE SD_INIT_MSSP#REQ 1
                      00212  #DEFINE SD_CLOSE_FILE#REQ 1
                      00213  #DEFINE SD_OPEN_FILE#REQ 1
                      00214  #DEFINE SD_READ_BYTE_FROM_FILE#REQ 1
                      00215  #DEFINE SD_CHECK_FOR_FILE#REQ 1
                      00216  #DEFINE SD_NEW_FILE#REQ 1
                      00217  #DEFINE SD_APPEND_FILE#REQ 1
                      00218  #DEFINE SD_DELETE_FILE#REQ 1
                      00219  #DEFINE SD_INIT_FS_MSSP#REQ 1
                      00220  #DEFINE SD_WRITE_BYTE_TO_FILE#REQ 1
                      00221  #DEFINE SD_WRITE_STRING_TO_FILE#REQ 1
  00000001            00222 INT@3232_REQ = 1
                      00223  #INCLUDE "C:\PROGRA~1\CROWNH~1\pds\INC\REG_LD16.INC"
                      00001 
                      00002 ; 16Cxxx Substitutions
                      00003 
                      00004  #DEFINE CLRW CLRF WREG ; PIC16Cxxx code substitution (WREG is addressable)
                      00005  #DEFINE NEGW NEGF WREG ; PIC16Cxxx code substitution (WREG is addressable)
                      00006 
                      00007  #DEFINE SKPC BTFSS STATUS,C
                      00008  #DEFINE SKPNC BTFSC STATUS,C
                      00009  #DEFINE CLRC BCF STATUS,C
                      00010  #DEFINE SETC BSF STATUS,C 
                      00011  #DEFINE SKPZ BTFSS STATUS,Z
                      00012  #DEFINE SKPNZ BTFSC STATUS,Z
                      00013  #DEFINE CLRZ BCF STATUS,Z
                      00014  #DEFINE SETZ BSF STATUS,Z
                      00015  
                      00016 ;------------------------------------------------------------------------------------------------- 
                      00017 MOVFW MACRO M#VARIN
                      00018         MOVF M#VARIN,W  
                      00019         ENDM
                      00020 ;-------------------------------------------------------------------------------------------------
                      00021 RLF MACRO M#VARIN,M#DEST
                      00022     RLCF M#VARIN,M#DEST
                      00023     ENDM
                      00024 ;-------------------------------------------------------------------------------------------------
                      00025 RRF MACRO M#VARIN,M#DEST
                      00026     RRCF M#VARIN,M#DEST
                      00027     ENDM
                      00028 ;-------------------------------------------------------------------------------------------------
                      00029 JUMP MACRO LABEL
                      00030         GOTO LABEL
                      00031         ENDM
                      00032 ;-------------------------------------------------------------------------------------------------      
                      00033 F@CALL MACRO M#DEST
                      00034     IF (M#DEST < 1)
                      00035         CALL M#DEST
                      00036     ELSE
                      00037       IF (M#DEST > $)
                      00038         CALL M#DEST
                      00039       ELSE
                      00040         IF (M#DEST < ($ - 0X03FF))
                      00041             CALL M#DEST
                      00042         ELSE
                      00043             RCALL M#DEST
                      00044         ENDIF
                      00045       ENDIF
                      00046     ENDIF
                      00047     ENDM 
                      00048 ;-------------------------------------------------------------------------------------------------
                      00049 F@JUMP MACRO M#DEST
                      00050 
                      00051     IFDEF WATCHDOG_REQ
                      00052         IF ($ == M#DEST)
                      00053                 CLRWDT          ; Walk the dog
                      00054         ENDIF
                      00055         ENDIF
                      00056     IF (M#DEST < 1)
                      00057         GOTO M#DEST
                      00058     ELSE
                      00059       IF ((M#DEST) > $)
                      00060         GOTO M#DEST
                      00061       ELSE
                      00062         IF ((M#DEST) < ($ - 0X03FF))
                      00063             GOTO M#DEST
                      00064         ELSE
                      00065             BRA M#DEST
                      00066         ENDIF
                      00067       ENDIF
                      00068     ENDIF
                      00069     ENDM
                      00070 ;-------------------------------------------------------------------------------------------------
                      00071     IFDEF WATCHDOG_REQ
                      00072                 CHK@SLF MACRO M#DEST
                      00073                         IF ($ == M#DEST)
                      00074                         CLRWDT          ; Walk the dog
                      00075                 ENDIF
                      00076                 ENDM
                      00077         ENDIF
                      00078 
                      00079 G@OTO MACRO M#DEST
                      00080     IF (M#DEST < 1)
                      00081         BTFSC STATUS,OV
                      00082         GOTO M#DEST
                      00083     ELSE
                      00084         IF (M#DEST > $)
                      00085                 BTFSC STATUS,OV
                      00086             GOTO M#DEST
                      00087         ELSE
                      00088                 IF (M#DEST < ($ - 127))
                      00089                 BTFSC STATUS,OV
                      00090                 GOTO M#DEST
                      00091             ELSE
                      00092                 BOV M#DEST
                      00093             ENDIF
                      00094         ENDIF
                      00095     ENDIF
                      00096     ENDM
                      00097 
                      00098 GO@TO MACRO M#DEST
                      00099     IF (M#DEST < 1)
                      00100         GOTO M#DEST
                      00101     ELSE
                      00102         IF (M#DEST > $)
                      00103                 GOTO M#DEST
                      00104         ELSE
                      00105                 IF (M#DEST < ($ - 0X03FF))
                      00106                 GOTO M#DEST
                      00107             ELSE
                      00108                 BRA M#DEST
                      00109             ENDIF
                      00110         ENDIF
                      00111     ENDIF
                      00112     ENDM
                      00113 ;-------------------------------------------------------------------------------------------------
                      00114 S@B MACRO M#VARIN
                      00115     IF ((M#VARIN > BANKA_END) & (M#VARIN < 0X0F80))
                      00116       IF ((M#VARIN & 0X0F00) != (RAM_BANK << 8))
                      00117         MOVLB (M#VARIN >> 8)
                      00118                 RAM_BANK = (M#VARIN >> 8)
                      00119       ENDIF
                      00120     ENDIF
                      00121     ENDM
                      00122 ;-------------------------------------------------------------------------------------------------
                      00123 R@B MACRO
                      00124     IF(RAM_BANK != 0)
                      00125         MOVLB 0
                      00126                 RAM_BANK = 0
                      00127     ENDIF
                      00128     ENDM
                      00129 ;-------------------------------------------------------------------------------------------------
                      00130 WREG_BYTE MACRO M#BYTEOUT
                      00131     MOVFF WREG,M#BYTEOUT
                      00132     ENDM
                      00133 ;-------------------------------------------------------------------------------------------------
                      00134 WREG_BIT MACRO M#VAROUT,M#BITOUT
                      00135     S@B M#VAROUT
                      00136     BTFSC WREG,0
                      00137     BSF M#VAROUT,M#BITOUT
                      00138     BTFSS WREG,0
                      00139     BCF M#VAROUT,M#BITOUT
                      00140     R@B                                                 ; Reset the bank when the macro is finished
                      00141     ENDM
                      00142 ;-------------------------------------------------------------------------------------------------
                      00143 WREG_WORD MACRO M#WORDOUT
                      00144     MOVFF WREG,M#WORDOUT
                      00145     MOVLW 0
                      00146     MOVFF WREG,M#WORDOUT + 1
                      00147     ENDM
                      00148 ;-------------------------------------------------------------------------------------------------
                      00149 WREG_DWORD MACRO M#DWORDOUT
                      00150     MOVFF WREG,M#DWORDOUT
                      00151     MOVLW 0
                      00152     MOVFF WREG,M#DWORDOUT + 3
                      00153     MOVFF WREG,M#DWORDOUT + 2
                      00154     MOVFF WREG,M#DWORDOUT + 1
                      00155     ENDM
                      00156 ;-------------------------------------------------------------------------------------------------
                      00157 BYTE_WREG MACRO M#BYTEIN
                      00158     MOVFF M#BYTEIN,WREG
                      00159     ENDM
                      00160 ;-------------------------------------------------------------------------------------------------
                      00161 NUM_WREG MACRO M#NUMIN
                      00162     MOVLW (M#NUMIN & 255)
                      00163     ENDM
                      00164 ;-------------------------------------------------------------------------------------------------
                      00165 NUM_BYTE MACRO M#NUMIN,M#BYTEOUT
                      00166     MOVLW (M#NUMIN & 255)
                      00167     MOVFF WREG,M#BYTEOUT
                      00168     ENDM
                      00169 ;-------------------------------------------------------------------------------------------------
                      00170 NUM_BIT MACRO M#NUMIN,M#VAROUT,M#BITOUT
                      00171     S@B M#VAROUT
                      00172     IF((M#NUMIN & 1) == 1)
                      00173         BSF M#VAROUT,M#BITOUT
                      00174     ELSE
                      00175         BCF M#VAROUT,M#BITOUT
                      00176         ENDIF
                      00177     R@B                                                 ; Reset the bank when the macro is finished
                      00178     ENDM
                      00179 ;-------------------------------------------------------------------------------------------------
                      00180 NUM_WORD MACRO M#NUMIN,M#WORDOUT
                      00181 
                      00182     IFDEF _USELFSR
                      00183         IF(M#WORDOUT == FSR0L)
                      00184                 LFSR 0,M#NUMIN
                      00185                 EXITM
                      00186         ENDIF
                      00187         
                      00188         IF(M#WORDOUT == FSR1L)
                      00189                 LFSR 1,M#NUMIN
                      00190                 EXITM
                      00191         ENDIF
                      00192         
                      00193         IF(M#WORDOUT == FSR2L)
                      00194                 LFSR 2,M#NUMIN
                      00195                 EXITM
                      00196         ENDIF
                      00197     ENDIF
                      00198     
                      00199     S@B M#WORDOUT
                      00200         MOVLW (M#NUMIN & 255)
                      00201         MOVWF M#WORDOUT
                      00202 
                      00203     S@B M#WORDOUT + 1
                      00204         MOVLW ((M#NUMIN >> 8) & 255)
                      00205         MOVWF M#WORDOUT + 1
                      00206     R@B                                                 ; Reset the bank when the macro is finished
                      00207     ENDM
                      00208 ;-------------------------------------------------------------------------------------------------
                      00209 NUM_DWORD MACRO M#NUMIN,M#DWORDOUT
                      00210         S@B M#DWORDOUT
                      00211     MOVLW (M#NUMIN & 255)
                      00212     MOVWF M#DWORDOUT
                      00213     S@B M#DWORDOUT + 1
                      00214     MOVLW ((M#NUMIN >> 8) & 255)
                      00215     MOVWF M#DWORDOUT + 1
                      00216     S@B M#DWORDOUT + 2
                      00217     MOVLW ((M#NUMIN >> 16) & 255)
                      00218     MOVWF M#DWORDOUT + 2
                      00219     S@B M#DWORDOUT + 3
                      00220     MOVLW ((M#NUMIN >> 24) & 255)
                      00221     MOVWF M#DWORDOUT + 3
                      00222     R@B                                                 ; Reset the bank when the macro is finished
                      00223     ENDM
                      00224 ;-------------------------------------------------------------------------------------------------
                      00225 BIT_WREG MACRO M#VARIN,M#BITIN
                      00226     S@B M#VARIN
                      00227     CLRW
                      00228     BTFSC M#VARIN,M#BITIN
                      00229     MOVLW 1
                      00230     R@B                                                 ; Reset the bank when the macro is finished
                      00231     ENDM
                      00232 ;-------------------------------------------------------------------------------------------------
                      00233 BIT_BYTE MACRO M#VARIN,M#BITIN,M#BYTEOUT
                      00234     S@B M#VARIN
                      00235     CLRW
                      00236     BTFSC M#VARIN,M#BITIN
                      00237     MOVLW 1
                      00238     S@B M#BYTEOUT
                      00239     MOVWF M#BYTEOUT
                      00240     R@B                                                 ; Reset the bank when the macro is finished
                      00241     ENDM
                      00242 ;-------------------------------------------------------------------------------------------------
                      00243 BIT_BIT MACRO M#VARIN,M#BITIN,M#VAROUT,M#BITOUT
                      00244     IF ((M#VARIN & 0X0F00) == (M#VAROUT & 0X0F00))
                      00245         S@B M#VARIN
                      00246         BTFSC M#VARIN,M#BITIN
                      00247         BSF M#VAROUT,M#BITOUT
                      00248         BTFSS M#VARIN,M#BITIN
                      00249         BCF M#VAROUT,M#BITOUT
                      00250         ELSE
                      00251                 IF ((M#VARIN <= BANKA_END) | (M#VARIN >= 0X0F80))
                      00252                         S@B M#VAROUT
                      00253                         BTFSC M#VARIN,M#BITIN
                      00254                         BSF M#VAROUT,M#BITOUT
                      00255                         BTFSS M#VARIN,M#BITIN
                      00256                         BCF M#VAROUT,M#BITOUT
                      00257                         ELSE
                      00258                                 IF ((M#VAROUT <= BANKA_END) | (M#VAROUT >= 0X0F80))
                      00259                                         S@B M#VARIN
                      00260                                         BTFSC M#VARIN,M#BITIN
                      00261                                         BSF M#VAROUT,M#BITOUT
                      00262                                         BTFSS M#VARIN,M#BITIN
                      00263                                         BCF M#VAROUT,M#BITOUT
                      00264                                         ELSE
                      00265                                         S@B M#VARIN
                      00266                                         CLRDC
                      00267                                         BTFSC M#VARIN,M#BITIN
                      00268                                         SETDC
                      00269                                         S@B M#VAROUT
                      00270                                         SKPNDC
                      00271                                         BSF M#VAROUT,M#BITOUT
                      00272                                         SKPDC
                      00273                                         BCF M#VAROUT,M#BITOUT
                      00274                                 ENDIF
                      00275                         ENDIF
                      00276         ENDIF
                      00277         R@B                                                     ; Reset the bank when the macro is finished
                      00278     ENDM
                      00279 ;-------------------------------------------------------------------------------------------------
                      00280 BIT_WORD MACRO M#VARIN,M#BITIN,M#WORDOUT
                      00281     S@B M#WORDOUT + 1
                      00282     CLRF M#WORDOUT + 1
                      00283     BIT_BYTE M#VARIN,M#BITIN,M#WORDOUT
                      00284     ENDM
                      00285 ;-------------------------------------------------------------------------------------------------
                      00286 BIT_DWORD MACRO M#VARIN,M#BITIN,M#DWORDOUT
                      00287     S@B M#DWORDOUT + 3
                      00288     CLRF M#DWORDOUT + 3
                      00289     S@B M#DWORDOUT + 2
                      00290     CLRF M#DWORDOUT + 2
                      00291     S@B M#DWORDOUT + 1
                      00292     CLRF M#DWORDOUT + 1
                      00293         BIT_BYTE M#VARIN,M#BITIN,M#DWORDOUT
                      00294     ENDM
                      00295 ;-------------------------------------------------------------------------------------------------
                      00296 WORD_WREG MACRO M#WORDIN
                      00297     BYTE_WREG M#WORDIN
                      00298     ENDM
                      00299 ;-------------------------------------------------------------------------------------------------
                      00300 WORD_BYTE MACRO M#WORDIN,M#BYTEOUT
                      00301     BYTE_BYTE M#WORDIN,M#BYTEOUT
                      00302     ENDM
                      00303 ;-------------------------------------------------------------------------------------------------
                      00304 WORD_BIT MACRO M#WORDIN,M#VAROUT,M#BITOUT
                      00305     BYTE_BIT M#WORDIN, M#VAROUT, M#BITOUT
                      00306     ENDM
                      00307 ;-------------------------------------------------------------------------------------------------
                      00308 WORD_WORD MACRO M#WORDIN,M#WORDOUT
                      00309     MOVFF M#WORDIN + 1,M#WORDOUT + 1
                      00310     MOVFF M#WORDIN,M#WORDOUT
                      00311     ENDM
                      00312 ;-------------------------------------------------------------------------------------------------
                      00313 WORD_DWORD MACRO M#WORDIN,M#DWORDOUT
                      00314     MOVLW 0
                      00315     MOVFF WREG,M#DWORDOUT + 3
                      00316     MOVFF WREG,M#DWORDOUT + 2
                      00317     WORD_WORD M#WORDIN,M#DWORDOUT
                      00318     ENDM
                      00319 ;-------------------------------------------------------------------------------------------------
                      00320 BYTE_BYTE MACRO M#BYTEIN,M#BYTEOUT
                      00321     MOVFF M#BYTEIN,M#BYTEOUT
                      00322     ENDM
                      00323 ;-------------------------------------------------------------------------------------------------
                      00324 BYTE_WORD MACRO M#BYTEIN,M#WORDOUT
                      00325     MOVLW 0
                      00326     MOVFF WREG,M#WORDOUT + 1
                      00327     BYTE_BYTE M#BYTEIN,M#WORDOUT
                      00328     ENDM
                      00329 ;-------------------------------------------------------------------------------------------------
                      00330 BYTE_DWORD MACRO M#BYTEIN,M#DWORDOUT
                      00331     MOVLW 0
                      00332     MOVFF WREG,M#DWORDOUT + 3
                      00333     MOVFF WREG,M#DWORDOUT + 2
                      00334     MOVFF WREG,M#DWORDOUT + 1
                      00335     BYTE_BYTE M#BYTEIN,M#DWORDOUT
                      00336     ENDM
                      00337 ;-------------------------------------------------------------------------------------------------
                      00338 BYTE_BIT MACRO M#BYTEIN,M#VAROUT,M#BITOUT
                      00339     IF ((M#BYTEIN & 0X0F00) == (M#VAROUT & 0X0F00))
                      00340         S@B M#BYTEIN
                      00341         BTFSC M#BYTEIN,0
                      00342         BSF M#VAROUT,M#BITOUT
                      00343         BTFSS M#BYTEIN,0
                      00344         BCF M#VAROUT,M#BITOUT
                      00345     ELSE
                      00346       IF ((M#BYTEIN <= BANKA_END) | (M#BYTEIN >= 0X0F80))
                      00347         S@B M#VAROUT
                      00348         BTFSC M#BYTEIN,0
                      00349         BSF M#VAROUT,M#BITOUT
                      00350         BTFSS M#BYTEIN,0
                      00351         BCF M#VAROUT,M#BITOUT
                      00352       ELSE
                      00353           IF ((M#VAROUT <= BANKA_END) | (M#VAROUT >= 0X0F80))
                      00354         S@B M#BYTEIN
                      00355         BTFSC M#BYTEIN,0
                      00356         BSF M#VAROUT,M#BITOUT
                      00357         BTFSS M#BYTEIN,0
                      00358         BCF M#VAROUT,M#BITOUT
                      00359           ELSE
                      00360         S@B M#BYTEIN
                      00361         RRF M#BYTEIN,W
                      00362         S@B M#VAROUT
                      00363         SKPNC
                      00364         BSF M#VAROUT,M#BITOUT
                      00365         SKPC
                      00366         BCF M#VAROUT,M#BITOUT
                      00367         ENDIF
                      00368       ENDIF
                      00369     ENDIF
                      00370     R@B                                                 ; Reset the bank when the macro is finished
                      00371     ENDM
                      00372 ;-------------------------------------------------------------------------------------------------
                      00373 DWORD_WREG MACRO M#DWORDIN
                      00374     BYTE_WREG M#DWORDIN
                      00375         ENDM
                      00376 ;-------------------------------------------------------------------------------------------------
                      00377 DWORD_BYTE MACRO M#DWORDIN,M#BYTEOUT
                      00378     BYTE_BYTE M#DWORDIN,M#BYTEOUT
                      00379         ENDM
                      00380 ;-------------------------------------------------------------------------------------------------
                      00381 DWORD_WORD MACRO M#DWORDIN,M#WORDOUT
                      00382     MOVFF M#DWORDIN + 1,M#WORDOUT + 1
                      00383     MOVFF M#DWORDIN,M#WORDOUT
                      00384         ENDM
                      00385 ;-------------------------------------------------------------------------------------------------
                      00386 DWORD_DWORD MACRO M#DWORDIN,M#DWORDOUT
                      00387     MOVFF M#DWORDIN + 3,M#DWORDOUT + 3
                      00388     MOVFF M#DWORDIN + 2,M#DWORDOUT + 2
                      00389     MOVFF M#DWORDIN + 1,M#DWORDOUT + 1
                      00390     MOVFF M#DWORDIN,M#DWORDOUT
                      00391         ENDM
                      00392 ;-------------------------------------------------------------------------------------------------
                      00393 DWORD_BIT MACRO M#DWORDIN,M#VAROUT,M#BITOUT
                      00394     BYTE_BIT M#DWORDIN,M#VAROUT,M#BITOUT
                      00395         ENDM
                      00396 ;-------------------------------------------------------------------------------------------------
                      00397 NUM_FLOAT MACRO M#NUMIN,FLOATOUT
                      00398         NUM_BYTE M#NUMIN,FLOATOUT + 3
                      00399         NUM_BYTE ((M#NUMIN >> 8) & 255),FLOATOUT + 2
                      00400         NUM_BYTE ((M#NUMIN >> 16) & 255),FLOATOUT + 1
                      00401         NUM_BYTE ((M#NUMIN >> 24) & 255),FLOATOUT
                      00402         ENDM
                      00403 ;-------------------------------------------------------------------------------------------------
                      00404 WREG_FLOAT MACRO FLOATOUT
                      00405     CALL FLO@0832U
                      00406         MOVFF PBP_AARG,FLOATOUT
                      00407         MOVFF PBP_AARGH,FLOATOUT + 1
                      00408         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00409         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00410     ENDM
                      00411 ;-------------------------------------------------------------------------------------------------
                      00412 BIT_FLOAT MACRO M#VARIN,M#BITIN,FLOATOUT
                      00413     BIT_WREG M#VARIN,M#BITIN
                      00414     CALL FLO@0832U
                      00415         MOVFF PBP_AARG,FLOATOUT
                      00416         MOVFF PBP_AARGH,FLOATOUT + 1
                      00417         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00418         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00419     ENDM
                      00420 ;-------------------------------------------------------------------------------------------------
                      00421 BYTE_FLOAT MACRO M#BYTEIN,FLOATOUT
                      00422     BYTE_WREG M#BYTEIN
                      00423     CALL FLO@0832U
                      00424         MOVFF PBP_AARG,FLOATOUT
                      00425         MOVFF PBP_AARGH,FLOATOUT + 1
                      00426         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00427         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00428     ENDM
                      00429 ;-------------------------------------------------------------------------------------------------
                      00430 WORD_FLOAT MACRO M#WORDIN,FLOATOUT
                      00431     BYTE_BYTE M#WORDIN PBP_AARG
                      00432     BYTE_BYTE M#WORDIN + 1 PBP_AARGH
                      00433     CALL FLO@1632U
                      00434         MOVFF PBP_AARG,FLOATOUT
                      00435         MOVFF PBP_AARGH,FLOATOUT + 1
                      00436         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00437         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00438     ENDM
                      00439 ;-------------------------------------------------------------------------------------------------
                      00440 DWORD_FLOAT MACRO M#DWORDIN,FLOATOUT                    
                      00441         MOVFF M#DWORDIN,PBP_AARG
                      00442         MOVFF M#DWORDIN + 1,PBP_AARGH
                      00443         MOVFF M#DWORDIN + 2,PBP_AARGHH
                      00444         MOVFF M#DWORDIN + 3,PBP_AARGHHH
                      00445         CALL FLO@3232S
                      00446         MOVFF PBP_AARG,FLOATOUT
                      00447         MOVFF PBP_AARGH,FLOATOUT + 1
                      00448         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00449         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00450         ENDM
                      00451 ;-------------------------------------------------------------------------------------------------
                      00452 FLOAT_FLOAT MACRO FLOATIN,FLOATOUT      
                      00453         MOVFF FLOATIN,FLOATOUT
                      00454         MOVFF FLOATIN + 1,FLOATOUT + 1
                      00455         MOVFF FLOATIN + 2,FLOATOUT + 2
                      00456         MOVFF FLOATIN + 3,FLOATOUT + 3
                      00457         ENDM
                      00458 ;-------------------------------------------------------------------------------------------------
                      00459 FLOAT_WREG MACRO FLOATIN
                      00460 
                      00461         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00462         CALL INT@3232
                      00463         ENDM
                      00464 ;-------------------------------------------------------------------------------------------------
                      00465 FLOAT_BIT MACRO FLOATIN,M#VAROUT,M#BITOUT
                      00466         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00467         CALL INT@3232
                      00468         WREG_BIT M#VAROUT,M#BITOUT
                      00469         ENDM
                      00470 ;-------------------------------------------------------------------------------------------------
                      00471 FLOAT_BYTE MACRO FLOATIN,M#BYTEOUT
                      00472         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00473         CALL INT@3232
                      00474         WREG_BYTE M#BYTEOUT
                      00475         ENDM
                      00476 ;-------------------------------------------------------------------------------------------------
                      00477 FLOAT_WORD MACRO FLOATIN,M#WORDOUT
                      00478         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00479         CALL INT@3232
                      00480         MOVFF PBP_AARGHHH,M#WORDOUT
                      00481         MOVFF PBP_AARGHH,M#WORDOUT + 1
                      00482         ENDM
                      00483 ;-------------------------------------------------------------------------------------------------
                      00484 FLOAT_DWORD MACRO FLOATIN,M#DWORDOUT
                      00485         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00486         CALL INT@3232
                      00487         MOVFF PBP_AARGHHH,M#DWORDOUT
                      00488         MOVFF PBP_AARGHH,M#DWORDOUT + 1
                      00489         MOVFF PBP_AARGH,M#DWORDOUT + 2
                      00490         MOVFF PBP_AARG,M#DWORDOUT + 3
                      00491         ENDM
                      00492 ;-------------------------------------------------------------------------------------------------
                      00493 ; Macros for Library Manager
                      00494 NUM_FSR0 MACRO M#NUMIN
                      00495     LFSR 0, M#NUMIN
                      00496     ENDM
                      00497 ;-------------------------------------------------------------------------------------------------
                      00498 NUM_FSR1 MACRO M#NUMIN
                      00499     LFSR 1, M#NUMIN
                      00500     ENDM
                      00501 ;-------------------------------------------------------------------------------------------------
                      00502 NUM_FSR2 MACRO M#NUMIN
                      00503     LFSR 2, M#NUMIN
                      00504     ENDM 
                      00505 ;-------------------------------------------------------------------------------------------------
                      00506 LABEL_WORD MACRO LABELIN,M#WORDOUT  
                      00507     MOVLW (LABELIN & 255)
                      00508     MOVFF WREG, M#WORDOUT
                      00509     MOVLW ((LABELIN >> 8) & 255)
                      00510     MOVFF WREG, M#WORDOUT + 1
                      00511     ENDM
  00000000            00224 BPF = 0
  00000001            00225 BPFH = 1
  00000002            00226 GEN = 2
  00000003            00227 GEN3H = 3
  00000004            00228 GEN4 = 4
  00000005            00229 GEN4H = 5
  00000006            00230 GENH = 6
  00000007            00231 GPR = 7
  00000008            00232 PBP#VAR0 = 8
  00000009            00233 PBP#VAR0H = 9
  0000000A            00234 PBP#VAR0HH = 10
  0000000B            00235 PBP#VAR0HHH = 11
  0000000C            00236 PBP#VAR1 = 12
  0000000D            00237 PBP_AARG = 13
  0000000E            00238 PBP_AARGH = 14
  0000000F            00239 PBP_AARGHH = 15
  00000010            00240 PBP_AARGHHH = 16
  00000011            00241 PP0 = 17
  00000012            00242 PP0H = 18
  00000013            00243 PP0HH = 19
  00000014            00244 PP0HHH = 20
  00000015            00245 PP1 = 21
  00000016            00246 PP1H = 22
  00000017            00247 PP1HH = 23
  00000018            00248 PP1HHH = 24
  00000019            00249 PP2 = 25
  0000001A            00250 PP2H = 26
  0000001B            00251 PP2HH = 27
  0000001C            00252 PP2HHH = 28
  0000001D            00253 PP3 = 29
  0000001E            00254 PP3H = 30
  0000001F            00255 PP4 = 31
  00000020            00256 PP5 = 32
  00000021            00257 PP6 = 33
  00000022            00258 PP6H = 34
  00000023            00259 PP7 = 35
  00000024            00260 PP7H = 36
  00000025            00261 PP7HH = 37
  00000026            00262 PP7HHH = 38
  00000027            00263 PP8 = 39
  00000028            00264 PP8H = 40
  00000029            00265 PPZ = 41
  0000002A            00266 PPZH = 42
  0000002B            00267 PPZHH = 43
  0000002C            00268 PPZHHH = 44
  0000002D            00269 SP#P9 = 45
  0000002E            00270 _AEXP = 46
  0000002F            00271 _FP_FLAGS = 47
  00000030            00272 _FP_TEMP = 48
  00000031            00273 _SIGN = 49
  000002E5            00274 _B#VR1 = 741
  00000006            00275 HSERIAL_SPBRG = 6
  00000020            00276 HSERIAL_TXSTA = 32
  00000090            00277 HSERIAL_RCSTA = 144
  00002580            00278 HSERIAL_BAUD = 9600
000000                00279         ORG 0X00
000000 EFD8 F002      00280         GOTO START@
000008                00281         ORG 0X08
000008                00282 T@EB
000008 6A12           00283         CLRF 18
00000A                00284 T@EW
00000A 6A16           00285         CLRF 22
00000C                00286 T@E
00000C 6E15           00287         MOVWF 21
00000E 0E02           00288         MOVLW 2
000010 D003           00289         BRA T@ST
000012                00290 T@GE
000012 6E15           00291         MOVWF 21
000014 0E03           00292         MOVLW 3
000016 D000           00293         BRA T@ST
000018                00294 T@ST
000018 6E07           00295         MOVWF 7
00001A 5016           00296         MOVF 22,W
00001C 5C12           00297         SUBWF 18,W
00001E E102           00298         BNZ CN@EQ
000020 5015           00299         MOVF 21,W
000022 5C11           00300         SUBWF 17,W
000024                00301 CN@EQ
000024 0E04           00302         MOVLW 4
000026 B0D8           00303         BTFSC 4056,0
000028 0E01           00304         MOVLW 1
00002A B4D8           00305         BTFSC 4056,2
00002C 0E02           00306         MOVLW 2
00002E 1407           00307         ANDWF 7,W
000030 A4D8           00308         BTFSS 4056,2
000032 0E01           00309         MOVLW 1
000034 0012           00310         RETURN
000036                00311 LCD@CLS
000036 0E80           00312         MOVLW 128
000038 6E01           00313         MOVWF 1
00003A                00314 CLS
00003A 0EFE           00315         MOVLW 254
00003C ECF2 F000      00316         CALL CH@SND
000040 0E01           00317         MOVLW 1
000042 ECF2 F000      00318         CALL CH@SND
000046 0E75           00319         MOVLW 117
000048 6E12           00320         MOVWF 18
00004A 0E30           00321         MOVLW 48
00004C EF32 F001      00322         GOTO DLUS@W
000050                00323 LCD@CRS
000050 6A01           00324         CLRF 1
000052 8E01           00325         BSF 1,7
000054                00326 CURS@
000054 6E20           00327         MOVWF 32
000056 0EFE           00328         MOVLW 254
000058 ECF2 F000      00329         CALL CH@SND
00005C 5020           00330         MOVF 32,W
00005E EFF2 F000      00331         GOTO CH@SND
000062                00332 OUT@DECB
000062 6A05           00333         CLRF 5
000064                00334 OUT@DECC
000064 6E19           00335         MOVWF 25
000066 6A1A           00336         CLRF 26
000068                00337 OUT@DEC
000068 9600           00338         BCF 0,3
00006A 5005           00339         MOVF 5,W
00006C B4D8           00340         BTFSC 4056,2
00006E 8600           00341         BSF 0,3
000070 0E05           00342         MOVLW 5
000072 6E04           00343         MOVWF 4
000074 0E27           00344         MOVLW 39
000076 6E16           00345         MOVWF 22
000078 0E10           00346         MOVLW 16
00007A D80C           00347         RCALL D@DIG
00007C 0E03           00348         MOVLW 3
00007E 6E16           00349         MOVWF 22
000080 0EE8           00350         MOVLW 232
000082 D808           00351         RCALL D@DIG
000084 6A16           00352         CLRF 22
000086 0E64           00353         MOVLW 100
000088 D805           00354         RCALL D@DIG
00008A 6A16           00355         CLRF 22
00008C 0E0A           00356         MOVLW 10
00008E D802           00357         RCALL D@DIG
000090 5019           00358         MOVF 25,W
000092 D008           00359         BRA SEND@IT
000094                00360 D@DIG
000094 6E15           00361         MOVWF 21
000096 501A           00362         MOVF 26,W
000098 6E12           00363         MOVWF 18
00009A 5019           00364         MOVF 25,W
00009C 6E11           00365         MOVWF 17
00009E ECA3 F001      00366         CALL D@VD
0000A2 5011           00367         MOVF 17,W
0000A4                00368 SEND@IT
0000A4 6E11           00369         MOVWF 17
0000A6 4E04           00370         DCFSNZ 4,F
0000A8 9600           00371         BCF 0,3
0000AA 5005           00372         MOVF 5,W
0000AC E003           00373         BZ $ + 8
0000AE 5C04           00374         SUBWF 4,W
0000B0 B0D8           00375         BTFSC 4056,0
0000B2 D008           00376         BRA EX@SEND@IT
0000B4 5011           00377         MOVF 17,W
0000B6 A4D8           00378         BTFSS 4056,2
0000B8 9600           00379         BCF 0,3
0000BA B600           00380         BTFSC 0,3
0000BC D003           00381         BRA EX@SEND@IT
0000BE 0F30           00382         ADDLW 48
0000C0 EFF2 F000      00383         GOTO CH@SND
0000C4                00384 EX@SEND@IT
0000C4 0012           00385         RETURN
0000C6                00386 SB@STROUT
0000C6 6E19           00387         MOVWF 25
0000C8                00388 SB@STROUTLP
0000C8 5004           00389         MOVF 4,W
0000CA B4D8           00390         BTFSC 4056,2
0000CC 0012           00391         RETURN
0000CE C019 FFE9      00392         MOVFF 25,4073
0000D2 C01A FFEA      00393         MOVFF 26,4074
0000D6 50EF           00394         MOVF 4079,W
0000D8 B4D8           00395         BTFSC 4056,2
0000DA 0012           00396         RETURN
0000DC ECF2 F000      00397         CALL CH@SND
0000E0 4A19           00398         INFSNZ 25,F
0000E2 2A1A           00399         INCF 26,F
0000E4 0604           00400         DECF 4,F
0000E6 D7F0           00401         BRA SB@STROUTLP
0000E8                00402 PRINT@MSTR
0000E8                00403 PRINT@MSTRL
0000E8 6AA6           00404         CLRF 4006
0000EA 8EA6           00405         BSF 4006,EEPGD
0000EC                00406 PRT@MTL1
0000EC 0009           00407         TBLRD*+
0000EE 50F5           00408         MOVF 4085,W
0000F0 E002           00409         BZ PRT@MTEXT
0000F2 D802           00410         RCALL PRINT
0000F4 D7FB           00411         BRA PRT@MTL1
0000F6                00412 PRT@MTEXT
0000F6 0012           00413         RETURN
0000F8                00414 PRINT
0000F8 6E1E           00415         MOVWF 30
0000FA 9C83           00416         BCF 3971,6
0000FC 9E83           00417         BCF 3971,7
0000FE 9C95           00418         BCF 3989,6
000100 9E95           00419         BCF 3989,7
000102 0EF0           00420         MOVLW 240
000104 1695           00421         ANDWF 3989,F
000106 501E           00422         MOVF 30,W
000108 B200           00423         BTFSC 0,1
00010A EFA9 F000      00424         GOTO PRT@1
00010E 0E3A           00425         MOVLW 58
000110 6E12           00426         MOVWF 18
000112 0E98           00427         MOVLW 152
000114 EC32 F001      00428         CALL DLUS@W
000118 0E33           00429         MOVLW 51
00011A 6E1D           00430         MOVWF 29
00011C D82E           00431         RCALL PR@LP
00011E 0E13           00432         MOVLW 19
000120 6E12           00433         MOVWF 18
000122 0E88           00434         MOVLW 136
000124 EC32 F001      00435         CALL DLUS@W
000128 D828           00436         RCALL PR@LP
00012A 0E64           00437         MOVLW 100
00012C EC31 F001      00438         CALL DL@US
000130 D824           00439         RCALL PR@LP
000132 0E64           00440         MOVLW 100
000134 EC31 F001      00441         CALL DL@US
000138 0E22           00442         MOVLW 34
00013A 6E1D           00443         MOVWF 29
00013C D81E           00444         RCALL PR@LP
00013E 0E28           00445         MOVLW 40
000140 D807           00446         RCALL PR@CM
000142 0E0C           00447         MOVLW 12
000144 D805           00448         RCALL PR@CM
000146 0E06           00449         MOVLW 6
000148 D803           00450         RCALL PR@CM
00014A 8200           00451         BSF 0,1
00014C 501E           00452         MOVF 30,W
00014E D001           00453         BRA PRT@1
000150                00454 PR@CM
000150 8000           00455         BSF 0,0
000152                00456 PRT@1
000152 6E1D           00457         MOVWF 29
000154 A000           00458         BTFSS 0,0
000156 D00B           00459         BRA PR@CC
000158 9E83           00460         BCF 3971,7
00015A 0803           00461         SUBLW 3
00015C E30C           00462         BNC PR@SD
00015E D80B           00463         RCALL PR@SD
000160 0E07           00464         MOVLW 7
000162 6E12           00465         MOVWF 18
000164 0ED0           00466         MOVLW 208
000166 EC32 F001      00467         CALL DLUS@W
00016A 80D8           00468         BSF 4056,0
00016C 0012           00469         RETURN
00016E                00470 PR@CC
00016E 8000           00471         BSF 0,0
000170 08FE           00472         SUBLW 254
000172 E012           00473         BZ PR@EX
000174 8E83           00474         BSF 3971,7
000176                00475 PR@SD
000176 3A1D           00476         SWAPF 29,F
000178 A000           00477         BTFSS 0,0
00017A                00478 PR@LP
00017A 9000           00479         BCF 0,0
00017C 8C83           00480         BSF 3971,6
00017E 0EF0           00481         MOVLW 240
000180 1683           00482         ANDWF 3971,F
000182 501D           00483         MOVF 29,W
000184 0B0F           00484         ANDLW 15
000186 1283           00485         IORWF 3971,F
000188 9C83           00486         BCF 3971,6
00018A 3A1D           00487         SWAPF 29,F
00018C B000           00488         BTFSC 0,0
00018E D7F5           00489         BRA PR@LP
000190 0E32           00490         MOVLW 50
000192 EC31 F001      00491         CALL DL@US
000196 80D8           00492         BSF 4056,0
000198                00493 PR@EX
000198 501E           00494         MOVF 30,W
00019A 0012           00495         RETURN
00019C                00496 HRSIN2
00019C B2AB           00497         BTFSC 4011,OERR
00019E 98AB           00498         BCF 4011,CREN
0001A0 88AB           00499         BSF 4011,CREN
0001A2 C002 F011      00500         MOVFF 2,17
0001A6 C006 F012      00501         MOVFF 6,18
0001AA 6A15           00502         CLRF 21
0001AC 6A16           00503         CLRF 22
0001AE                00504 HRI@L0
0001AE 0000           00505         NOP
0001B0 D000           00506         BRA $ + 2
0001B2                00507 HRI@L
0001B2 0000           00508         NOP
0001B4 BA9E           00509         BTFSC 3998,RCIF
0001B6 D013           00510         BRA H@RSIN
0001B8 68E8           00511         SETF 4072
0001BA 2615           00512         ADDWF 21,F
0001BC 2216           00513         ADDWFC 22,F
0001BE 2211           00514         ADDWFC 17,F
0001C0 2212           00515         ADDWFC 18,F
0001C2 A0D8           00516         BTFSS 4056,0
0001C4 0012           00517         RETURN
0001C6 4815           00518         INFSNZ 21,W
0001C8 3C16           00519         INCFSZ 22,W
0001CA D7F1           00520         BRA HRI@L0
0001CC 0E3D           00521         MOVLW 61
0001CE 6E15           00522         MOVWF 21
0001D0 6A16           00523         CLRF 22
0001D2 D7EF           00524         BRA HRI@L
0001D4                00525 HRSIN
0001D4 B2AB           00526         BTFSC 4011,OERR
0001D6 98AB           00527         BCF 4011,CREN
0001D8 88AB           00528         BSF 4011,CREN
0001DA AA9E           00529         BTFSS 3998,RCIF
0001DC D7FE           00530         BRA $ - 2
0001DE                00531 H@RSIN
0001DE 50AE           00532         MOVF 4014,W
0001E0 80D8           00533         BSF 4056,0
0001E2 0012           00534         RETURN
0001E4                00535 CH@SND
0001E4 BE01           00536         BTFSC 1,7
0001E6 EF7C F000      00537         GOTO PRINT
0001EA A201           00538         BTFSS 1,1
0001EC D005           00539         BRA $ + 12
0001EE B001           00540         BTFSC 1,0
0001F0 D003           00541         BRA $ + 8
0001F2 B201           00542         BTFSC 1,1
0001F4 6EEE           00543         MOVWF 4078
0001F6 0012           00544         RETURN
0001F8                00545 EE@RD
0001F8 6AAA           00546         CLRF 4010
0001FA 6EA9           00547         MOVWF 4009
0001FC                00548 EE@RD@W
0001FC 6AA6           00549         CLRF 4006
0001FE 80A6           00550         BSF     4006,RD
000200 50A8           00551         MOVF 4008,W
000202 4AA9           00552         INFSNZ 4009,F
000204 2AAA           00553         INCF 4010,F
000206 0012           00554         RETURN
000208                00555 EE@WR
000208 6AAA           00556         CLRF 4010
00020A                00557 EE@WR@W
00020A 6EA8           00558         MOVWF 4008
00020C 6AA6           00559         CLRF 4006
00020E 84A6           00560         BSF     4006,WREN
000210 0E55           00561         MOVLW 85
000212 6EA7           00562         MOVWF 4007
000214 0EAA           00563         MOVLW 170
000216 6EA7           00564         MOVWF 4007
000218 82A6           00565         BSF     4006,WR
00021A B2A6           00566         BTFSC 4006,WR
00021C D7FE           00567         BRA $ - 2
00021E 94A6           00568         BCF     4006,WREN
000220 4AA9           00569         INFSNZ 4009,F
000222 2AAA           00570         INCF 4010,F
000224 0012           00571         RETURN
000226                00572 C@WRITE
000226 6EF5           00573         MOVWF 4085
000228 000C           00574         TBLWT*
00022A 28F6           00575         INCF 4086,W
00022C 0B07           00576         ANDLW 7
00022E E109           00577         BNZ CR@EXIT
000230 0E84           00578         MOVLW 132
000232 6EA6           00579         MOVWF 4006
000234 0E55           00580         MOVLW 85
000236 6EA7           00581         MOVWF 4007
000238 0EAA           00582         MOVLW 170
00023A 6EA7           00583         MOVWF 4007
00023C 82A6           00584         BSF 4006,WR
00023E D000           00585         BRA $ + 2
000240 94A6           00586         BCF 4006,WREN
000242                00587 CR@EXIT
000242 4AF6           00588         INFSNZ 4086,F
000244 2AF7           00589         INCF 4087,F
000246 0012           00590         RETURN
000248                00591 DL@MS
000248 6A16           00592         CLRF 22
00024A                00593 DLY@W
00024A 6E15           00594         MOVWF 21
00024C                00595 DLY@P
00024C 0EFF           00596         MOVLW 255
00024E 2615           00597         ADDWF 21,F
000250 2216           00598         ADDWFC 22,F
000252 D000           00599         BRA $ + 2
000254 A0D8           00600         BTFSS 4056,0
000256 0012           00601         RETURN
000258 0E03           00602         MOVLW 3
00025A 6E12           00603         MOVWF 18
00025C 0EDF           00604         MOVLW 223
00025E D802           00605         RCALL DLUS@W
000260 D7F5           00606         BRA DLY@P
000262                00607 DL@US
000262 6A12           00608         CLRF 18
000264                00609 DLUS@W
000264 0FE8           00610         ADDLW 232
000266 6E11           00611         MOVWF 17
000268 1E12           00612         COMF 18,F
00026A 0EFC           00613         MOVLW 252
00026C A0D8           00614         BTFSS 4056,0
00026E D003           00615         BRA DL@H
000270                00616 DLUS@LP
000270 2611           00617         ADDWF 17,F
000272 B0D8           00618         BTFSC 4056,0
000274 D7FD           00619         BRA DLUS@LP
000276                00620 DL@H
000276 2611           00621         ADDWF 17,F
000278 0000           00622         NOP
00027A 3E12           00623         INCFSZ 18,F
00027C D7F9           00624         BRA DLUS@LP
00027E B011           00625         BTFSC 17,0
000280 D000           00626         BRA $ + 2
000282 A211           00627         BTFSS 17,1
000284 D002           00628         BRA DLUS@D
000286 0000           00629         NOP
000288 D000           00630         BRA $ + 2
00028A                00631 DLUS@D
00028A 0012           00632         RETURN
00028C                00633 L@DIV
00028C                00634 L@MOD
00028C 5014           00635         MOVF 20,W
00028E 181C           00636         XORWF 28,W
000290 0B80           00637         ANDLW 128
000292 6EF4           00638         MOVWF 4084
000294 AE14           00639         BTFSS 20,7
000296 D006           00640         BRA DIVS@32X32SKIP1
000298 80D8           00641         BSF 4056,C
00029A 0E00           00642         MOVLW 0
00029C 5611           00643         SUBFWB 17,F
00029E 5612           00644         SUBFWB 18,F
0002A0 5613           00645         SUBFWB 19,F
0002A2 5614           00646         SUBFWB 20,F
0002A4                00647 DIVS@32X32SKIP1
0002A4 AE1C           00648         BTFSS 28,7
0002A6 D006           00649         BRA DIVS@32X32SKIP2
0002A8 80D8           00650         BSF 4056,C
0002AA 0E00           00651         MOVLW 0
0002AC 5619           00652         SUBFWB 25,F
0002AE 561A           00653         SUBFWB 26,F
0002B0 561B           00654         SUBFWB 27,F
0002B2 561C           00655         SUBFWB 28,F
0002B4                00656 DIVS@32X32SKIP2
0002B4 6A15           00657         CLRF 21
0002B6 6A16           00658         CLRF 22
0002B8 6A17           00659         CLRF 23
0002BA 6A18           00660         CLRF 24
0002BC 6A29           00661         CLRF 41
0002BE 6A2A           00662         CLRF 42
0002C0 6A2B           00663         CLRF 43
0002C2 6A2C           00664         CLRF 44
0002C4 501C           00665         MOVF 28,W
0002C6 101B           00666         IORWF 27,W
0002C8 101A           00667         IORWF 26,W
0002CA 1019           00668         IORWF 25,W
0002CC E023           00669         BZ DIVS@32X32SKIP5
0002CE 0E20           00670         MOVLW 32
0002D0 6EF3           00671         MOVWF 4083
0002D2                00672 DIVS@32X32LOOP
0002D2 90D8           00673         BCF 4056,C
0002D4 3611           00674         RLCF 17,F
0002D6 3612           00675         RLCF 18,F
0002D8 3613           00676         RLCF 19,F
0002DA 3614           00677         RLCF 20,F
0002DC 3629           00678         RLCF 41,F
0002DE 362A           00679         RLCF 42,F
0002E0 362B           00680         RLCF 43,F
0002E2 362C           00681         RLCF 44,F
0002E4 5019           00682         MOVF 25,W
0002E6 5C29           00683         SUBWF 41,W
0002E8 501A           00684         MOVF 26,W
0002EA 582A           00685         SUBWFB 42,W
0002EC 501B           00686         MOVF 27,W
0002EE 582B           00687         SUBWFB 43,W
0002F0 501C           00688         MOVF 28,W
0002F2 582C           00689         SUBWFB 44,W
0002F4 E309           00690         BNC DIVS@32X32SKIP4
0002F6 5019           00691         MOVF 25,W
0002F8 5E29           00692         SUBWF 41,F
0002FA 501A           00693         MOVF 26,W
0002FC 5A2A           00694         SUBWFB 42,F
0002FE 501B           00695         MOVF 27,W
000300 5A2B           00696         SUBWFB 43,F
000302 501C           00697         MOVF 28,W
000304 5A2C           00698         SUBWFB 44,F
000306 80D8           00699         BSF 4056,C
000308                00700 DIVS@32X32SKIP4
000308 3615           00701         RLCF 21,F
00030A 3616           00702         RLCF 22,F
00030C 3617           00703         RLCF 23,F
00030E 3618           00704         RLCF 24,F
000310 2EF3           00705         DECFSZ 4083,F
000312 D7DF           00706         BRA DIVS@32X32LOOP
000314                00707 DIVS@32X32SKIP5
000314 AEF4           00708         BTFSS 4084,7
000316 D006           00709         BRA DIVS@32X32EXIT
000318 80D8           00710         BSF 4056,C
00031A 0E00           00711         MOVLW 0
00031C 5615           00712         SUBFWB 21,F
00031E 5616           00713         SUBFWB 22,F
000320 5617           00714         SUBFWB 23,F
000322 5618           00715         SUBFWB 24,F
000324                00716 DIVS@32X32EXIT
000324 C015 F011      00717         MOVFF 21,17
000328 C016 F012      00718         MOVFF 22,18
00032C C017 F013      00719         MOVFF 23,19
000330 C018 F014      00720         MOVFF 24,20
000334 C029 F019      00721         MOVFF 41,25
000338 C02A F01A      00722         MOVFF 42,26
00033C C02B F01B      00723         MOVFF 43,27
000340 C02C F01C      00724         MOVFF 44,28
000344 0012           00725         RETURN
000346                00726 D@VD
000346 6A1A           00727         CLRF 26
000348 6A19           00728         CLRF 25
00034A                00729 D@VD2
00034A 0E10           00730         MOVLW 16
00034C 6EF3           00731         MOVWF 4083
00034E                00732 DV@LP
00034E 3412           00733         RLCF 18,W
000350 3619           00734         RLCF 25,F
000352 361A           00735         RLCF 26,F
000354 5015           00736         MOVF 21,W
000356 5C19           00737         SUBWF 25,W
000358 5016           00738         MOVF 22,W
00035A 581A           00739         SUBWFB 26,W
00035C E305           00740         BNC D@K
00035E 5015           00741         MOVF 21,W
000360 5E19           00742         SUBWF 25,F
000362 5016           00743         MOVF 22,W
000364 5A1A           00744         SUBWFB 26,F
000366 80D8           00745         BSF 4056,0
000368                00746 D@K
000368 3611           00747         RLCF 17,F
00036A 3612           00748         RLCF 18,F
00036C 2EF3           00749         DECFSZ 4083,F
00036E D7EF           00750         BRA DV@LP
000370 5011           00751         MOVF 17,W
000372 0012           00752         RETURN
000374                00753 AL@MUL
000374 0E20           00754         MOVLW 32
000376 6E1D           00755         MOVWF 29
000378 6A29           00756         CLRF 41
00037A 6A2A           00757         CLRF 42
00037C 6A2B           00758         CLRF 43
00037E 6A2C           00759         CLRF 44
000380                00760 MLT32@LP
000380 90D8           00761         BCF 4056,0
000382 A011           00762         BTFSS 17,0
000384 D00E           00763         BRA MLT32@BR
000386 5019           00764         MOVF 25,W
000388 2629           00765         ADDWF 41,F
00038A 501A           00766         MOVF 26,W
00038C B0D8           00767         BTFSC 4056,0
00038E 3C1A           00768         INCFSZ 26,W
000390 262A           00769         ADDWF 42,F
000392 501B           00770         MOVF 27,W
000394 B0D8           00771         BTFSC 4056,0
000396 3C1B           00772         INCFSZ 27,W
000398 262B           00773         ADDWF 43,F
00039A 501C           00774         MOVF 28,W
00039C B0D8           00775         BTFSC 4056,0
00039E 3C1C           00776         INCFSZ 28,W
0003A0 262C           00777         ADDWF 44,F
0003A2                00778 MLT32@BR
0003A2 322C           00779         RRCF 44,F
0003A4 322B           00780         RRCF 43,F
0003A6 322A           00781         RRCF 42,F
0003A8 3229           00782         RRCF 41,F
0003AA 3214           00783         RRCF 20,F
0003AC 3213           00784         RRCF 19,F
0003AE 3212           00785         RRCF 18,F
0003B0 3211           00786         RRCF 17,F
0003B2 2E1D           00787         DECFSZ 29,F
0003B4 D7E5           00788         BRA MLT32@LP
0003B6 0012           00789         RETURN
0003B8                00790 LOAD@MSTR
0003B8                00791 LOAD@MSTRL
0003B8 6AA6           00792         CLRF 4006
0003BA 8EA6           00793         BSF 4006,EEPGD
0003BC 0009           00794         TBLRD*+
0003BE 50F5           00795         MOVF 4085,W
0003C0 E002           00796         BZ $ + 6
0003C2 6EEE           00797         MOVWF 4078
0003C4 D7FB           00798         BRA $ - 8
0003C6 0012           00799         RETURN
                      00800  #INCLUDE "C:\PROGRA~1\CROWNH~1\pds\INC\FL_SRC.INC"
                      00958 LIST
0003C8                00959 INT@3232
0003C8 C00E F031      00960         MOVFF PBP_AARGH,_SIGN                                   
0003CC 0E7F           00961         MOVLW 127                                       
0003CE 5C0D           00962         SUBWF PBP_AARG,W
0003D0 6E30           00963         MOVWF _FP_TEMP  
0003D2 E33F           00964         BNC FTO@I_RES0                                                  
0003D4 8E0E           00965         BSF PBP_AARGH,7                                         
0003D6 6A0D           00966         CLRF PBP_AARG                                   
0003D8 6A29           00967         CLRF PPZ,0                                              
0003DA 0817           00968         SUBLW 23
0003DC 6E30           00969         MOVWF _FP_TEMP                                                  
0003DE E20B           00970         BC FTO@I_1                                                      
0003E0 0E08           00971         MOVLW 8
0003E2 2630           00972         ADDWF _FP_TEMP,F                                                
0003E4 E338           00973         BNC FTO@I_OVERFLOW                                      
0003E6 C00E F00D      00974         MOVFF PBP_AARGH,PBP_AARG                        
0003EA C00F F00E      00975         MOVFF PBP_AARGHH,PBP_AARGH                      
0003EE C010 F00F      00976         MOVFF PBP_AARGHHH,PBP_AARGHH                                    
0003F2 6A10           00977         CLRF PBP_AARGHHH                                
0003F4 D00C           00978         BRA FTO@I_3                     
0003F6                00979 FTO@I_1 
0003F6 0E08           00980         MOVLW 8                                                                 
0003F8 5E30           00981         SUBWF _FP_TEMP,F                        
0003FA E308           00982         BNC FTO@I_2                                                     
0003FC C010 F029      00983         MOVFF PBP_AARGHHH,PPZ                                   
000400 C00F F010      00984         MOVFF PBP_AARGHH,PBP_AARGHHH                                    
000404 C00E F00F      00985         MOVFF PBP_AARGH,PBP_AARGHH                      
000408 6A0E           00986         CLRF PBP_AARGH                  
00040A D7F5           00987         BRA FTO@I_1                     
00040C                00988 FTO@I_2 
00040C 2630           00989         ADDWF _FP_TEMP,F                                        
00040E                00990 FTO@I_3 
00040E 5230           00991         MOVF _FP_TEMP,F
000410 E008           00992         BZ FTO@I_5                                                                                      
000412                00993 FTO@I_4                                         
000412 90D8           00994         BCF STATUS,C                                            
000414 320D           00995         RRCF PBP_AARG,F                                         
000416 320E           00996         RRCF PBP_AARGH,F                        
000418 320F           00997         RRCF PBP_AARGHH,F
00041A 3210           00998         RRCF PBP_AARGHHH,F                      
00041C 3229           00999         RRCF PPZ,F,0                            
00041E 2E30           01000         DECFSZ _FP_TEMP,F
000420 D7F8           01001         BRA FTO@I_4                                                     
000422                01002 FTO@I_5 
000422 BE0D           01003         BTFSC PBP_AARG,7                
000424 D018           01004         BRA FTO@I_OVERFLOW
000426 AC2F           01005         BTFSS _FP_FLAGS,6       
000428 D00B           01006         BRA FTO@I_6
00042A AE29           01007         BTFSS PPZ,7
00042C D009           01008         BRA FTO@I_6
00042E 3E10           01009         INCFSZ PBP_AARGHHH,F
000430 D007           01010         BRA FTO@I_6
000432 3E0F           01011         INCFSZ PBP_AARGHH,F
000434 D005           01012         BRA FTO@I_6
000436 3E0E           01013         INCFSZ PBP_AARGH,F
000438 D003           01014         BRA FTO@I_6                     
00043A 2A0E           01015         INCF PBP_AARGH,F                                                
00043C BE0D           01016         BTFSC PBP_AARG,7                
00043E D00B           01017         BRA FTO@I_OVERFLOW                      
000440                01018 FTO@I_6 
000440 AE31           01019         BTFSS _SIGN,7                   
000442 D010           01020         BRA FTO@I_RETURN                        
000444 80D8           01021         BSF STATUS,C                            
000446 0E00           01022         MOVLW 0
000448 5610           01023         SUBFWB PBP_AARGHHH,F
00044A 560F           01024         SUBFWB PBP_AARGHH,F
00044C 560E           01025         SUBFWB PBP_AARGH,F
00044E 560D           01026         SUBFWB PBP_AARG,F
000450 D009           01027         BRA FTO@I_RETURN        
000452                01028 FTO@I_RES0      
000452 0E00           01029         MOVLW 0
000454 D002           01030         BRA FTO@I_ASSIGNW                       
000456                01031 FTO@I_OVERFLOW  
000456 822F           01032         BSF _FP_FLAGS,1                         
000458 0EFF           01033         MOVLW 255                                                               
00045A                01034 FTO@I_ASSIGNW   
00045A 6E0D           01035         MOVWF PBP_AARG                                          
00045C 6E0E           01036         MOVWF PBP_AARGH                                         
00045E 6E0F           01037         MOVWF PBP_AARGHH                                        
000460 6E10           01038         MOVWF PBP_AARGHHH                                               
000462 9E0D           01039         BCF PBP_AARG,7                                          
000464                01040 FTO@I_RETURN    
000464 5010           01041         MOVF PBP_AARGHHH,W                      
000466 0012           01042         RETURN
                      01208  LIST
                      00801 ;---------------------------------------------
                      00802 ; Null Terminated Strings
                      00803 
                      00804 ; String         
000468                00805 STR@LB1
000468 2020 2020 2020 00806         DB 32,32,32,32,32,32,32,32,0
       2020 0000 
                      00807 ;---------------------------------------------
                      00808 ; String Checking TAG
000472                00809 STR@LB2
000472 6843 6365 696B 00810         DB 67,104,101,99,107,105,110,103,32,84,65,71,0
       676E 5420 4741 
       0000 
                      00811 ;---------------------------------------------
                      00812 ; String Got a match
000480                00813 STR@LB3
000480 6F47 2074 2061 00814         DB 71,111,116,32,97,32,109,97,116,99,104,0
       616D 6374 0068 
                      00815 ;---------------------------------------------
                      00816 ; String History DONE!
00048C                00817 STR@LB4
00048C 6948 7473 726F 00818         DB 72,105,115,116,111,114,121,32,68,79,78,69,33,0
       2079 4F44 454E 
       0021 
                      00819 ;---------------------------------------------
                      00820 ; String No Match
00049A                00821 STR@LB5
00049A 6F4E 4D20 7461 00822         DB 78,111,32,77,97,116,99,104,0
       6863 0000 
                      00823 ;---------------------------------------------
                      00824 ; String ATTEMPTING TO
0004A4                00825 STR@LB6
0004A4 5441 4554 504D 00826         DB 65,84,84,69,77,80,84,73,78,71,32,84,79,0
       4954 474E 5420 
       004F 
                      00827 ;---------------------------------------------
                      00828 ; String READ TAG....
0004B2                00829 STR@LB7
0004B2 4552 4441 5420 00830         DB 82,69,65,68,32,84,65,71,46,46,46,46,0
       4741 2E2E 2E2E 
       0000 
                      00831 ;---------------------------------------------
                      00832 ; String Thank You
0004C0                00833 STR@LB8
0004C0 6854 6E61 206B 00834         DB 84,104,97,110,107,32,89,111,117,0
       6F59 0075 
                      00835 ;---------------------------------------------
                      00836 ; String No Tag Detected
0004CA                00837 STR@LB9
0004CA 6F4E 5420 6761 00838         DB 78,111,32,84,97,103,32,68,101,116,101,99,116,101,100,0
       4420 7465 6365 
       6574 0064 
                      00839 ;---------------------------------------------
                      00840 ; String File not found
0004DA                00841 STR@LB10
0004DA 6946 656C 6E20 00842         DB 70,105,108,101,32,110,111,116,32,102,111,117,110,100,0
       746F 6620 756F 
       646E 0000 
                      00843 ;---------------------------------------------
                      00844 ; String No 5E (^)
0004EA                00845 STR@LB11
0004EA 6F4E 3520 2045 00846         DB 78,111,32,53,69,32,40,94,41,0
       5E28 0029 
                      00847 ;---------------------------------------------
                      00848 ; String Stopped!
0004F4                00849 STR@LB12
0004F4 7453 706F 6570 00850         DB 83,116,111,112,112,101,100,33,0
       2164 0000 
                      00851 ;---------------------------------------------
                      00852 ; String ^ Problem..
0004FE                00853 STR@LB13
0004FE 205E 7250 626F 00854         DB 94,32,80,114,111,98,108,101,109,46,46,0
       656C 2E6D 002E 
                      00855 ;---------------------------------------------
                      00856 ; String No 3A (:)..
00050A                00857 STR@LB14
00050A 6F4E 3320 2041 00858         DB 78,111,32,51,65,32,40,58,41,46,46,0
       3A28 2E29 002E 
                      00859 ;---------------------------------------------
                      00860 ; String Stopped!
000516                00861 STR@LB15
000516 7453 706F 6570 00862         DB 83,116,111,112,112,101,100,33,0
       2164 0000 
                      00863 ;---------------------------------------------
                      00864 ; String File not found
000520                00865 STR@LB16
000520 6946 656C 6E20 00866         DB 70,105,108,101,32,110,111,116,32,102,111,117,110,100,0
       746F 6620 756F 
       646E 0000 
                      00867 ;---------------------------------------------
                      00868 ; String No Init!
000530                00869 STR@LB17
000530 6F4E 4920 696E 00870         DB 78,111,32,73,110,105,116,33,0
       2174 0000 
                      00871 ;---------------------------------------------
                      00872 ; String No Users
00053A                00873 STR@LB18
00053A 6F4E 5520 6573 00874         DB 78,111,32,85,115,101,114,115,0
       7372 0000 
                      00875 ;---------------------------------------------
                      00876 ; String Manager Done
000544                00877 STR@LB19
000544 614D 616E 6567 00878         DB 77,97,110,97,103,101,114,32,68,111,110,101,0
       2072 6F44 656E 
       0000 
                      00879 ;---------------------------------------------
                      00880 ; String No Manager History
000552                00881 STR@LB20
000552 6F4E 4D20 6E61 00882         DB 78,111,32,77,97,110,97,103,101,114,32,72,105,115,116,111,114,121,0
       6761 7265 4820 
       7369 6F74 7972 
       0000 
                      00883 ;---------------------------------------------
                      00884 ; String No Users
000566                00885 STR@LB21
000566 6F4E 5520 6573 00886         DB 78,111,32,85,115,101,114,115,0
       7372 0000 
                      00887 ;---------------------------------------------
                      00888 ; String No Users Exist
000570                00889 STR@LB22
000570 6F4E 5520 6573 00890         DB 78,111,32,85,115,101,114,115,32,69,120,105,115,116,0
       7372 4520 6978 
       7473 0000 
                      00891 ;---------------------------------------------
                      00892 ; String Done Users
000580                00893 STR@LB23
000580 6F44 656E 5520 00894         DB 68,111,110,101,32,85,115,101,114,115,0
       6573 7372 0000 
                      00895 ;---------------------------------------------
                      00896 ; String Going to sleep..
00058C                00897 STR@LB24
00058C 6F47 6E69 2067 00898         DB 71,111,105,110,103,32,116,111,32,115,108,101,101,112,46,46,0
       6F74 7320 656C 
       7065 2E2E 0000 
                      00899 ;---------------------------------------------
                      00900 ; String I just woke up!!
00059E                00901 STR@LB25
00059E 2049 756A 7473 00902         DB 73,32,106,117,115,116,32,119,111,107,101,32,117,112,33,33,0
       7720 6B6F 2065 
       7075 2121 0000 
                      00903 ;---------------------------------------------
                      00904 ; User Constants
  00000004            00905 __XTAL = 4
  00000000            00906 __LCD_TYPE = 0
  00000000            00907 __LCD_DTPIN = 0
  00000006            00908 __LCD_ENPIN = 6
  00000007            00909 __LCD_RSPIN = 7
  00000004            00910 __LCD_INTERFACE = 4
  00000002            00911 __LCD_LINES = 2
  00002580            00912 __HSERIAL_BAUD = 9600
  00000090            00913 __HSERIAL_RCSTA = 144
  00000020            00914 __HSERIAL_TXSTA = 32
0005B0                00915 START@
0005B0 6AF8           00916         CLRF 4088
0005B2 0E40           00917         MOVLW B'01000000'
0005B4 6E2F           00918         MOVWF 47
0005B6 6A00           00919         CLRF 0
0005B8 0E06           00920         MOVLW 6
0005BA 6EAF           00921         MOVWF 4015
0005BC 0E20           00922         MOVLW 32
0005BE 6EAC           00923         MOVWF 4012
0005C0 0E90           00924         MOVLW 144
0005C2 6EAB           00925         MOVWF 4011
                      00926  LIST
0005C4                00927 MAIN@PROG@START
                      00008  LIST
                      00009 
  00000032            00010  SD_BYTER = 50
  00000033            00011  SD_IDX = 51
  00000034            00012  SD_SECTOR_NUM = 52
  00000035            00013  SD_SECTOR_NUMH = 53
  00000036            00014  SD_SECTOR_NUMHH = 54
  00000037            00015  SD_SECTOR_NUMHHH = 55
  00000038            00016  SD_ADDRESS = 56
  00000039            00017  SD_ADDRESSH = 57
  0000003A            00018  SD_ADDRESSHH = 58
  0000003B            00019  SD_ADDRESSHHH = 59
  0000003C            00020  SD_SEEK_RESPONSE_IDX = 60
  0000003D            00021  SD_SEEK_RESPONSE_IDXH = 61
  0000003E            00022  SD_SEEK_RESPONSE_REQD = 62
  0000003F            00023  SD_SEEK_RESPONSE_RETURN = 63
  00000040            00024  SD_RETURN = 64
  00000041            00025  SD_BUFFER0 = 65
  0041                00026  VARIABLE SD_BUFFER0#0=65,SD_BUFFER0#1=66,SD_BUFFER0#2=67,SD_BUFFER0#3=68
  0045                00027  VARIABLE SD_BUFFER0#4=69,SD_BUFFER0#5=70,SD_BUFFER0#6=71,SD_BUFFER0#7=72
  0049                00028  VARIABLE SD_BUFFER0#8=73,SD_BUFFER0#9=74,SD_BUFFER0#10=75,SD_BUFFER0#11=76
  004D                00029  VARIABLE SD_BUFFER0#12=77,SD_BUFFER0#13=78,SD_BUFFER0#14=79,SD_BUFFER0#15=80
  0051                00030  VARIABLE SD_BUFFER0#16=81,SD_BUFFER0#17=82,SD_BUFFER0#18=83,SD_BUFFER0#19=84
  0055                00031  VARIABLE SD_BUFFER0#20=85,SD_BUFFER0#21=86,SD_BUFFER0#22=87,SD_BUFFER0#23=88
  0059                00032  VARIABLE SD_BUFFER0#24=89,SD_BUFFER0#25=90,SD_BUFFER0#26=91,SD_BUFFER0#27=92
  005D                00033  VARIABLE SD_BUFFER0#28=93,SD_BUFFER0#29=94,SD_BUFFER0#30=95,SD_BUFFER0#31=96
  0061                00034  VARIABLE SD_BUFFER0#32=97,SD_BUFFER0#33=98,SD_BUFFER0#34=99,SD_BUFFER0#35=100
  0065                00035  VARIABLE SD_BUFFER0#36=101,SD_BUFFER0#37=102,SD_BUFFER0#38=103,SD_BUFFER0#39=104
  0069                00036  VARIABLE SD_BUFFER0#40=105,SD_BUFFER0#41=106,SD_BUFFER0#42=107,SD_BUFFER0#43=108
  006D                00037  VARIABLE SD_BUFFER0#44=109,SD_BUFFER0#45=110,SD_BUFFER0#46=111,SD_BUFFER0#47=112
  0071                00038  VARIABLE SD_BUFFER0#48=113,SD_BUFFER0#49=114,SD_BUFFER0#50=115,SD_BUFFER0#51=116
  0075                00039  VARIABLE SD_BUFFER0#52=117,SD_BUFFER0#53=118,SD_BUFFER0#54=119,SD_BUFFER0#55=120
  0079                00040  VARIABLE SD_BUFFER0#56=121,SD_BUFFER0#57=122,SD_BUFFER0#58=123,SD_BUFFER0#59=124
  007D                00041  VARIABLE SD_BUFFER0#60=125,SD_BUFFER0#61=126,SD_BUFFER0#62=127,SD_BUFFER0#63=128
  0081                00042  VARIABLE SD_BUFFER0#64=129,SD_BUFFER0#65=130,SD_BUFFER0#66=131,SD_BUFFER0#67=132
  0085                00043  VARIABLE SD_BUFFER0#68=133,SD_BUFFER0#69=134,SD_BUFFER0#70=135,SD_BUFFER0#71=136
  0089                00044  VARIABLE SD_BUFFER0#72=137,SD_BUFFER0#73=138,SD_BUFFER0#74=139,SD_BUFFER0#75=140
  008D                00045  VARIABLE SD_BUFFER0#76=141,SD_BUFFER0#77=142,SD_BUFFER0#78=143,SD_BUFFER0#79=144
  0091                00046  VARIABLE SD_BUFFER0#80=145,SD_BUFFER0#81=146,SD_BUFFER0#82=147,SD_BUFFER0#83=148
  0095                00047  VARIABLE SD_BUFFER0#84=149,SD_BUFFER0#85=150,SD_BUFFER0#86=151,SD_BUFFER0#87=152
  0099                00048  VARIABLE SD_BUFFER0#88=153,SD_BUFFER0#89=154,SD_BUFFER0#90=155,SD_BUFFER0#91=156
  009D                00049  VARIABLE SD_BUFFER0#92=157,SD_BUFFER0#93=158,SD_BUFFER0#94=159,SD_BUFFER0#95=160
  00A1                00050  VARIABLE SD_BUFFER0#96=161,SD_BUFFER0#97=162,SD_BUFFER0#98=163,SD_BUFFER0#99=164
  00A5                00051  VARIABLE SD_BUFFER0#100=165,SD_BUFFER0#101=166,SD_BUFFER0#102=167,SD_BUFFER0#103=168
  00A9                00052  VARIABLE SD_BUFFER0#104=169,SD_BUFFER0#105=170,SD_BUFFER0#106=171,SD_BUFFER0#107=172
  00AD                00053  VARIABLE SD_BUFFER0#108=173,SD_BUFFER0#109=174,SD_BUFFER0#110=175,SD_BUFFER0#111=176
  00B1                00054  VARIABLE SD_BUFFER0#112=177,SD_BUFFER0#113=178,SD_BUFFER0#114=179,SD_BUFFER0#115=180
  00B5                00055  VARIABLE SD_BUFFER0#116=181,SD_BUFFER0#117=182,SD_BUFFER0#118=183,SD_BUFFER0#119=184
  00B9                00056  VARIABLE SD_BUFFER0#120=185,SD_BUFFER0#121=186,SD_BUFFER0#122=187,SD_BUFFER0#123=188
  00BD                00057  VARIABLE SD_BUFFER0#124=189,SD_BUFFER0#125=190,SD_BUFFER0#126=191,SD_BUFFER0#127=192
  00C1                00058  VARIABLE SD_BUFFER0#128=193,SD_BUFFER0#129=194,SD_BUFFER0#130=195,SD_BUFFER0#131=196
  00C5                00059  VARIABLE SD_BUFFER0#132=197,SD_BUFFER0#133=198,SD_BUFFER0#134=199,SD_BUFFER0#135=200
  00C9                00060  VARIABLE SD_BUFFER0#136=201,SD_BUFFER0#137=202,SD_BUFFER0#138=203,SD_BUFFER0#139=204
  00CD                00061  VARIABLE SD_BUFFER0#140=205,SD_BUFFER0#141=206,SD_BUFFER0#142=207,SD_BUFFER0#143=208
  00D1                00062  VARIABLE SD_BUFFER0#144=209,SD_BUFFER0#145=210,SD_BUFFER0#146=211,SD_BUFFER0#147=212
  00D5                00063  VARIABLE SD_BUFFER0#148=213,SD_BUFFER0#149=214,SD_BUFFER0#150=215,SD_BUFFER0#151=216
  00D9                00064  VARIABLE SD_BUFFER0#152=217,SD_BUFFER0#153=218,SD_BUFFER0#154=219,SD_BUFFER0#155=220
  00DD                00065  VARIABLE SD_BUFFER0#156=221,SD_BUFFER0#157=222,SD_BUFFER0#158=223,SD_BUFFER0#159=224
  00E1                00066  VARIABLE SD_BUFFER0#160=225,SD_BUFFER0#161=226,SD_BUFFER0#162=227,SD_BUFFER0#163=228
  00E5                00067  VARIABLE SD_BUFFER0#164=229,SD_BUFFER0#165=230,SD_BUFFER0#166=231,SD_BUFFER0#167=232
  00E9                00068  VARIABLE SD_BUFFER0#168=233,SD_BUFFER0#169=234,SD_BUFFER0#170=235,SD_BUFFER0#171=236
  00ED                00069  VARIABLE SD_BUFFER0#172=237,SD_BUFFER0#173=238,SD_BUFFER0#174=239,SD_BUFFER0#175=240
  00F1                00070  VARIABLE SD_BUFFER0#176=241,SD_BUFFER0#177=242,SD_BUFFER0#178=243,SD_BUFFER0#179=244
  00F5                00071  VARIABLE SD_BUFFER0#180=245,SD_BUFFER0#181=246,SD_BUFFER0#182=247,SD_BUFFER0#183=248
  00F9                00072  VARIABLE SD_BUFFER0#184=249,SD_BUFFER0#185=250,SD_BUFFER0#186=251,SD_BUFFER0#187=252
  00FD                00073  VARIABLE SD_BUFFER0#188=253,SD_BUFFER0#189=254,SD_BUFFER0#190=255,SD_BUFFER0#191=256
  0101                00074  VARIABLE SD_BUFFER0#192=257,SD_BUFFER0#193=258,SD_BUFFER0#194=259,SD_BUFFER0#195=260
  0105                00075  VARIABLE SD_BUFFER0#196=261,SD_BUFFER0#197=262,SD_BUFFER0#198=263,SD_BUFFER0#199=264
  0109                00076  VARIABLE SD_BUFFER0#200=265,SD_BUFFER0#201=266,SD_BUFFER0#202=267,SD_BUFFER0#203=268
  010D                00077  VARIABLE SD_BUFFER0#204=269,SD_BUFFER0#205=270,SD_BUFFER0#206=271,SD_BUFFER0#207=272
  0111                00078  VARIABLE SD_BUFFER0#208=273,SD_BUFFER0#209=274,SD_BUFFER0#210=275,SD_BUFFER0#211=276
  0115                00079  VARIABLE SD_BUFFER0#212=277,SD_BUFFER0#213=278,SD_BUFFER0#214=279,SD_BUFFER0#215=280
  0119                00080  VARIABLE SD_BUFFER0#216=281,SD_BUFFER0#217=282,SD_BUFFER0#218=283,SD_BUFFER0#219=284
  011D                00081  VARIABLE SD_BUFFER0#220=285,SD_BUFFER0#221=286,SD_BUFFER0#222=287,SD_BUFFER0#223=288
  0121                00082  VARIABLE SD_BUFFER0#224=289,SD_BUFFER0#225=290,SD_BUFFER0#226=291,SD_BUFFER0#227=292
  0125                00083  VARIABLE SD_BUFFER0#228=293,SD_BUFFER0#229=294,SD_BUFFER0#230=295,SD_BUFFER0#231=296
  0129                00084  VARIABLE SD_BUFFER0#232=297,SD_BUFFER0#233=298,SD_BUFFER0#234=299,SD_BUFFER0#235=300
  012D                00085  VARIABLE SD_BUFFER0#236=301,SD_BUFFER0#237=302,SD_BUFFER0#238=303,SD_BUFFER0#239=304
  0131                00086  VARIABLE SD_BUFFER0#240=305,SD_BUFFER0#241=306,SD_BUFFER0#242=307,SD_BUFFER0#243=308
  0135                00087  VARIABLE SD_BUFFER0#244=309,SD_BUFFER0#245=310,SD_BUFFER0#246=311,SD_BUFFER0#247=312
  0139                00088  VARIABLE SD_BUFFER0#248=313,SD_BUFFER0#249=314,SD_BUFFER0#250=315,SD_BUFFER0#251=316
  013D                00089  VARIABLE SD_BUFFER0#252=317,SD_BUFFER0#253=318,SD_BUFFER0#254=319,SD_BUFFER0#255=320
  00000141            00090  SD_BUFFER1 = 321
  0141                00091  VARIABLE SD_BUFFER1#0=321,SD_BUFFER1#1=322,SD_BUFFER1#2=323,SD_BUFFER1#3=324
  0145                00092  VARIABLE SD_BUFFER1#4=325,SD_BUFFER1#5=326,SD_BUFFER1#6=327,SD_BUFFER1#7=328
  0149                00093  VARIABLE SD_BUFFER1#8=329,SD_BUFFER1#9=330,SD_BUFFER1#10=331,SD_BUFFER1#11=332
  014D                00094  VARIABLE SD_BUFFER1#12=333,SD_BUFFER1#13=334,SD_BUFFER1#14=335,SD_BUFFER1#15=336
  0151                00095  VARIABLE SD_BUFFER1#16=337,SD_BUFFER1#17=338,SD_BUFFER1#18=339,SD_BUFFER1#19=340
  0155                00096  VARIABLE SD_BUFFER1#20=341,SD_BUFFER1#21=342,SD_BUFFER1#22=343,SD_BUFFER1#23=344
  0159                00097  VARIABLE SD_BUFFER1#24=345,SD_BUFFER1#25=346,SD_BUFFER1#26=347,SD_BUFFER1#27=348
  015D                00098  VARIABLE SD_BUFFER1#28=349,SD_BUFFER1#29=350,SD_BUFFER1#30=351,SD_BUFFER1#31=352
  0161                00099  VARIABLE SD_BUFFER1#32=353,SD_BUFFER1#33=354,SD_BUFFER1#34=355,SD_BUFFER1#35=356
  0165                00100  VARIABLE SD_BUFFER1#36=357,SD_BUFFER1#37=358,SD_BUFFER1#38=359,SD_BUFFER1#39=360
  0169                00101  VARIABLE SD_BUFFER1#40=361,SD_BUFFER1#41=362,SD_BUFFER1#42=363,SD_BUFFER1#43=364
  016D                00102  VARIABLE SD_BUFFER1#44=365,SD_BUFFER1#45=366,SD_BUFFER1#46=367,SD_BUFFER1#47=368
  0171                00103  VARIABLE SD_BUFFER1#48=369,SD_BUFFER1#49=370,SD_BUFFER1#50=371,SD_BUFFER1#51=372
  0175                00104  VARIABLE SD_BUFFER1#52=373,SD_BUFFER1#53=374,SD_BUFFER1#54=375,SD_BUFFER1#55=376
  0179                00105  VARIABLE SD_BUFFER1#56=377,SD_BUFFER1#57=378,SD_BUFFER1#58=379,SD_BUFFER1#59=380
  017D                00106  VARIABLE SD_BUFFER1#60=381,SD_BUFFER1#61=382,SD_BUFFER1#62=383,SD_BUFFER1#63=384
  0181                00107  VARIABLE SD_BUFFER1#64=385,SD_BUFFER1#65=386,SD_BUFFER1#66=387,SD_BUFFER1#67=388
  0185                00108  VARIABLE SD_BUFFER1#68=389,SD_BUFFER1#69=390,SD_BUFFER1#70=391,SD_BUFFER1#71=392
  0189                00109  VARIABLE SD_BUFFER1#72=393,SD_BUFFER1#73=394,SD_BUFFER1#74=395,SD_BUFFER1#75=396
  018D                00110  VARIABLE SD_BUFFER1#76=397,SD_BUFFER1#77=398,SD_BUFFER1#78=399,SD_BUFFER1#79=400
  0191                00111  VARIABLE SD_BUFFER1#80=401,SD_BUFFER1#81=402,SD_BUFFER1#82=403,SD_BUFFER1#83=404
  0195                00112  VARIABLE SD_BUFFER1#84=405,SD_BUFFER1#85=406,SD_BUFFER1#86=407,SD_BUFFER1#87=408
  0199                00113  VARIABLE SD_BUFFER1#88=409,SD_BUFFER1#89=410,SD_BUFFER1#90=411,SD_BUFFER1#91=412
  019D                00114  VARIABLE SD_BUFFER1#92=413,SD_BUFFER1#93=414,SD_BUFFER1#94=415,SD_BUFFER1#95=416
  01A1                00115  VARIABLE SD_BUFFER1#96=417,SD_BUFFER1#97=418,SD_BUFFER1#98=419,SD_BUFFER1#99=420
  01A5                00116  VARIABLE SD_BUFFER1#100=421,SD_BUFFER1#101=422,SD_BUFFER1#102=423,SD_BUFFER1#103=424
  01A9                00117  VARIABLE SD_BUFFER1#104=425,SD_BUFFER1#105=426,SD_BUFFER1#106=427,SD_BUFFER1#107=428
  01AD                00118  VARIABLE SD_BUFFER1#108=429,SD_BUFFER1#109=430,SD_BUFFER1#110=431,SD_BUFFER1#111=432
  01B1                00119  VARIABLE SD_BUFFER1#112=433,SD_BUFFER1#113=434,SD_BUFFER1#114=435,SD_BUFFER1#115=436
  01B5                00120  VARIABLE SD_BUFFER1#116=437,SD_BUFFER1#117=438,SD_BUFFER1#118=439,SD_BUFFER1#119=440
  01B9                00121  VARIABLE SD_BUFFER1#120=441,SD_BUFFER1#121=442,SD_BUFFER1#122=443,SD_BUFFER1#123=444
  01BD                00122  VARIABLE SD_BUFFER1#124=445,SD_BUFFER1#125=446,SD_BUFFER1#126=447,SD_BUFFER1#127=448
  01C1                00123  VARIABLE SD_BUFFER1#128=449,SD_BUFFER1#129=450,SD_BUFFER1#130=451,SD_BUFFER1#131=452
  01C5                00124  VARIABLE SD_BUFFER1#132=453,SD_BUFFER1#133=454,SD_BUFFER1#134=455,SD_BUFFER1#135=456
  01C9                00125  VARIABLE SD_BUFFER1#136=457,SD_BUFFER1#137=458,SD_BUFFER1#138=459,SD_BUFFER1#139=460
  01CD                00126  VARIABLE SD_BUFFER1#140=461,SD_BUFFER1#141=462,SD_BUFFER1#142=463,SD_BUFFER1#143=464
  01D1                00127  VARIABLE SD_BUFFER1#144=465,SD_BUFFER1#145=466,SD_BUFFER1#146=467,SD_BUFFER1#147=468
  01D5                00128  VARIABLE SD_BUFFER1#148=469,SD_BUFFER1#149=470,SD_BUFFER1#150=471,SD_BUFFER1#151=472
  01D9                00129  VARIABLE SD_BUFFER1#152=473,SD_BUFFER1#153=474,SD_BUFFER1#154=475,SD_BUFFER1#155=476
  01DD                00130  VARIABLE SD_BUFFER1#156=477,SD_BUFFER1#157=478,SD_BUFFER1#158=479,SD_BUFFER1#159=480
  01E1                00131  VARIABLE SD_BUFFER1#160=481,SD_BUFFER1#161=482,SD_BUFFER1#162=483,SD_BUFFER1#163=484
  01E5                00132  VARIABLE SD_BUFFER1#164=485,SD_BUFFER1#165=486,SD_BUFFER1#166=487,SD_BUFFER1#167=488
  01E9                00133  VARIABLE SD_BUFFER1#168=489,SD_BUFFER1#169=490,SD_BUFFER1#170=491,SD_BUFFER1#171=492
  01ED                00134  VARIABLE SD_BUFFER1#172=493,SD_BUFFER1#173=494,SD_BUFFER1#174=495,SD_BUFFER1#175=496
  01F1                00135  VARIABLE SD_BUFFER1#176=497,SD_BUFFER1#177=498,SD_BUFFER1#178=499,SD_BUFFER1#179=500
  01F5                00136  VARIABLE SD_BUFFER1#180=501,SD_BUFFER1#181=502,SD_BUFFER1#182=503,SD_BUFFER1#183=504
  01F9                00137  VARIABLE SD_BUFFER1#184=505,SD_BUFFER1#185=506,SD_BUFFER1#186=507,SD_BUFFER1#187=508
  01FD                00138  VARIABLE SD_BUFFER1#188=509,SD_BUFFER1#189=510,SD_BUFFER1#190=511,SD_BUFFER1#191=512
  0201                00139  VARIABLE SD_BUFFER1#192=513,SD_BUFFER1#193=514,SD_BUFFER1#194=515,SD_BUFFER1#195=516
  0205                00140  VARIABLE SD_BUFFER1#196=517,SD_BUFFER1#197=518,SD_BUFFER1#198=519,SD_BUFFER1#199=520
  0209                00141  VARIABLE SD_BUFFER1#200=521,SD_BUFFER1#201=522,SD_BUFFER1#202=523,SD_BUFFER1#203=524
  020D                00142  VARIABLE SD_BUFFER1#204=525,SD_BUFFER1#205=526,SD_BUFFER1#206=527,SD_BUFFER1#207=528
  0211                00143  VARIABLE SD_BUFFER1#208=529,SD_BUFFER1#209=530,SD_BUFFER1#210=531,SD_BUFFER1#211=532
  0215                00144  VARIABLE SD_BUFFER1#212=533,SD_BUFFER1#213=534,SD_BUFFER1#214=535,SD_BUFFER1#215=536
  0219                00145  VARIABLE SD_BUFFER1#216=537,SD_BUFFER1#217=538,SD_BUFFER1#218=539,SD_BUFFER1#219=540
  021D                00146  VARIABLE SD_BUFFER1#220=541,SD_BUFFER1#221=542,SD_BUFFER1#222=543,SD_BUFFER1#223=544
  0221                00147  VARIABLE SD_BUFFER1#224=545,SD_BUFFER1#225=546,SD_BUFFER1#226=547,SD_BUFFER1#227=548
  0225                00148  VARIABLE SD_BUFFER1#228=549,SD_BUFFER1#229=550,SD_BUFFER1#230=551,SD_BUFFER1#231=552
  0229                00149  VARIABLE SD_BUFFER1#232=553,SD_BUFFER1#233=554,SD_BUFFER1#234=555,SD_BUFFER1#235=556
  022D                00150  VARIABLE SD_BUFFER1#236=557,SD_BUFFER1#237=558,SD_BUFFER1#238=559,SD_BUFFER1#239=560
  0231                00151  VARIABLE SD_BUFFER1#240=561,SD_BUFFER1#241=562,SD_BUFFER1#242=563,SD_BUFFER1#243=564
  0235                00152  VARIABLE SD_BUFFER1#244=565,SD_BUFFER1#245=566,SD_BUFFER1#246=567,SD_BUFFER1#247=568
  0239                00153  VARIABLE SD_BUFFER1#248=569,SD_BUFFER1#249=570,SD_BUFFER1#250=571,SD_BUFFER1#251=572
  023D                00154  VARIABLE SD_BUFFER1#252=573,SD_BUFFER1#253=574,SD_BUFFER1#254=575,SD_BUFFER1#255=576
  00000241            00155  SD_BYTE0 = 577
  00000242            00156  SD_BYTE1 = 578
  00000243            00157  SD_BYTE2 = 579
  00000244            00158  SD_BYTE3 = 580
  00000245            00159  SD_BYTE4 = 581
  00000246            00160  SD_BYTE5 = 582
  00000247            00161  SD_BUFFER_IDX = 583
  00000248            00162  SD_BUFFER_IDXH = 584
  00000249            00163  SD_BYTE_RW = 585
  0000024A            00164  SD_RW_OPTION = 586
  0000024B            00165  SD_EXTENDED_RETURN = 587
  0000024C            00166  SD_EXTENDED_RETURN_ROOT_DIR = 588
  0000024D            00167  SD_DATA_IO = 589
  0000024E            00168  SD_BUFFER_POS = 590
  0000024F            00169  SD_BUFFER_POSH = 591
  00000250            00170  SD_ROOT_DIR_FILE_POS = 592
  00000251            00171  SD_SEC_NUM = 593
  00000252            00172  SD_SEC_NUMH = 594
  00000253            00173  SD_SEC_NUMHH = 595
  00000254            00174  SD_SEC_NUMHHH = 596
  00000255            00175  SD_SECS_PER_CLUSTER = 597
  00000256            00176  SD_RESERVED_SECS = 598
  00000257            00177  SD_RESERVED_SECSH = 599
  00000258            00178  SD_SECS_PER_FAT = 600
  00000259            00179  SD_SECS_PER_FATH = 601
  0000025A            00180  SD_NUM_OF_FATS = 602
  0000025B            00181  SD_NUM_OF_SECS = 603
  0000025C            00182  SD_NUM_OF_SECSH = 604
  0000025D            00183  SD_NUM_OF_SECSHH = 605
  0000025E            00184  SD_NUM_OF_SECSHHH = 606
  0000025F            00185  SD_BYTES_PER_SEC = 607
  00000260            00186  SD_BYTES_PER_SECH = 608
  00000261            00187  SD_NUM_OF_ROOT_ENTRIES = 609
  00000262            00188  SD_NUM_OF_ROOT_ENTRIESH = 610
  00000263            00189  SD_SECS_IN_ROOT = 611
  00000264            00190  SD_SECS_IN_ROOTH = 612
  00000265            00191  SD_BOOT_RECORD = 613
  00000266            00192  SD_BOOT_RECORDH = 614
  00000267            00193  SD_FAT1 = 615
  00000268            00194  SD_FAT1H = 616
  00000269            00195  SD_FAT1HH = 617
  0000026A            00196  SD_FAT1HHH = 618
  0000026B            00197  SD_FAT2 = 619
  0000026C            00198  SD_FAT2H = 620
  0000026D            00199  SD_FAT2HH = 621
  0000026E            00200  SD_FAT2HHH = 622
  0000026F            00201  SD_ROOT_DIR = 623
  00000270            00202  SD_ROOT_DIRH = 624
  00000271            00203  SD_ROOT_DIRHH = 625
  00000272            00204  SD_ROOT_DIRHHH = 626
  00000273            00205  SD_DATA_AREA = 627
  00000274            00206  SD_DATA_AREAH = 628
  00000275            00207  SD_DATA_AREAHH = 629
  00000276            00208  SD_DATA_AREAHHH = 630
  00000277            00209  SD_FAT_ENTRY = 631
  00000278            00210  SD_FAT_ENTRYH = 632
  00000279            00211  SD_FAT_SEC = 633
  0000027A            00212  SD_FAT_SECH = 634
  0000027B            00213  SD_FAT_SECHH = 635
  0000027C            00214  SD_FAT_SECHHH = 636
  0000027D            00215  SD_FAT_BUFFER_POS = 637
  0000027E            00216  SD_FAT_BUFFER_POSH = 638
  0000027F            00217  SD_FAT_SEC_PREV = 639
  00000280            00218  SD_FAT_SEC_PREVH = 640
  00000281            00219  SD_FAT_SEC_PREVHH = 641
  00000282            00220  SD_FAT_SEC_PREVHHH = 642
  00000283            00221  SD_FAT_BUFFER_POS_PREV = 643
  00000284            00222  SD_FAT_BUFFER_POS_PREVH = 644
  00000285            00223  SD_ROOT_DIR_SEC = 645
  00000286            00224  SD_ROOT_DIR_SECH = 646
  00000287            00225  SD_ROOT_DIR_SECHH = 647
  00000288            00226  SD_ROOT_DIR_SECHHH = 648
  00000289            00227  SD_ROOT_DIR_POS = 649
  0000028A            00228  SD_ROOT_DIR_POSH = 650
  0000028B            00229  SD_DATA_SEC = 651
  0000028C            00230  SD_DATA_SECH = 652
  0000028D            00231  SD_DATA_SECHH = 653
  0000028E            00232  SD_DATA_SECHHH = 654
  0000028F            00233  SD_DATA_BUFFER_POS = 655
  00000290            00234  SD_DATA_BUFFER_POSH = 656
  00000291            00235  SD_FILE_NAME = 657
  0291                00236  VARIABLE SD_FILE_NAME#0=657,SD_FILE_NAME#1=658,SD_FILE_NAME#2=659,SD_FILE_NAME#3=660
  0295                00237  VARIABLE SD_FILE_NAME#4=661,SD_FILE_NAME#5=662,SD_FILE_NAME#6=663,SD_FILE_NAME#7=664
  0299                00238  VARIABLE SD_FILE_NAME#8=665
  0000029A            00239  SD_FILE_EXT = 666
  029A                00240  VARIABLE SD_FILE_EXT#0=666,SD_FILE_EXT#1=667,SD_FILE_EXT#2=668,SD_FILE_EXT#3=669
  0000029E            00241  SD_ROOT_DIR_FILE = 670
  029E                00242  VARIABLE SD_ROOT_DIR_FILE#0=670,SD_ROOT_DIR_FILE#1=671,SD_ROOT_DIR_FILE#2=672,SD_ROOT_DIR_FILE#3=673
  02A2                00243  VARIABLE SD_ROOT_DIR_FILE#4=674,SD_ROOT_DIR_FILE#5=675,SD_ROOT_DIR_FILE#6=676,SD_ROOT_DIR_FILE#7=677
  02A6                00244  VARIABLE SD_ROOT_DIR_FILE#8=678,SD_ROOT_DIR_FILE#9=679,SD_ROOT_DIR_FILE#10=680,SD_ROOT_DIR_FILE#11=681
  02AA                00245  VARIABLE SD_ROOT_DIR_FILE#12=682,SD_ROOT_DIR_FILE#13=683,SD_ROOT_DIR_FILE#14=684,SD_ROOT_DIR_FILE#15=685
  02AE                00246  VARIABLE SD_ROOT_DIR_FILE#16=686,SD_ROOT_DIR_FILE#17=687,SD_ROOT_DIR_FILE#18=688,SD_ROOT_DIR_FILE#19=689
  02B2                00247  VARIABLE SD_ROOT_DIR_FILE#20=690,SD_ROOT_DIR_FILE#21=691,SD_ROOT_DIR_FILE#22=692,SD_ROOT_DIR_FILE#23=693
  02B6                00248  VARIABLE SD_ROOT_DIR_FILE#24=694,SD_ROOT_DIR_FILE#25=695,SD_ROOT_DIR_FILE#26=696,SD_ROOT_DIR_FILE#27=697
  02BA                00249  VARIABLE SD_ROOT_DIR_FILE#28=698,SD_ROOT_DIR_FILE#29=699,SD_ROOT_DIR_FILE#30=700,SD_ROOT_DIR_FILE#31=701
  000002BE            00250  SD_WRITE_SEC_NUM = 702
  000002BF            00251  SD_WRITE_SEC_NUMH = 703
  000002C0            00252  SD_WRITE_SEC_NUMHH = 704
  000002C1            00253  SD_WRITE_SEC_NUMHHH = 705
  000002C2            00254  SD_WRITE_BUFFER_POS = 706
  000002C3            00255  SD_WRITE_BUFFER_POSH = 707
  000002C4            00256  SD_NULL_F = 708
  000002C5            00257  SD_CLUSTER_NUM = 709
  000002C6            00258  SD_CLUSTER_NUMH = 710
  000002C7            00259  SD_CLUSTER_NUM_PREV = 711
  000002C8            00260  SD_CLUSTER_NUM_PREVH = 712
  000002C9            00261  SD_LAST_CLUSTER = 713
  000002CA            00262  SD_LAST_CLUSTERH = 714
  000002CB            00263  SD_SEC_IN_CLUSTER = 715
  000002CC            00264  SD_FILE_SIZE = 716
  000002CD            00265  SD_FILE_SIZEH = 717
  000002CE            00266  SD_FILE_SIZEHH = 718
  000002CF            00267  SD_FILE_SIZEHHH = 719
  000002D0            00268  SD_IO_BYTE = 720
  000002D1            00269  SD_TEMP_BYTE = 721
  000002D2            00270  SD_TEMP = 722
  000002D3            00271  SD_TEMPH = 723
  000002D4            00272  SD_TEMP_DWORD = 724
  000002D5            00273  SD_TEMP_DWORDH = 725
  000002D6            00274  SD_TEMP_DWORDHH = 726
  000002D7            00275  SD_TEMP_DWORDHHH = 727
  000002D8            00276  SD_CLUSTER_SEQ_NUM = 728
  000002D9            00277  SD_CLUSTER_SEQ_NUMH = 729
  000002DA            00278  SD_CLUSTER_SEQ_IDX = 730
  000002DB            00279  SD_CLUSTER_SEQ_IDXH = 731
  000002DC            00280  SD_CLUSTER_SEQ_NUM_PREV = 732
  000002DD            00281  SD_CLUSTER_SEQ_NUM_PREVH = 733
  000002DE            00282  SD_CLUSTER_SEQ_IDX_PREV = 734
  000002DF            00283  SD_CLUSTER_SEQ_IDX_PREVH = 735
  000002E0            00284  SD_FIND_ROOT_DIR_ENTRY_F = 736
  000002E1            00285  SD_BYTES_READ = 737
  000002E2            00286  SD_BYTES_READH = 738
  000002E3            00287  SD_BYTES_READHH = 739
  000002E4            00288  SD_BYTES_READHHH = 740
  000002E6            00289  SD_FILE_NUM = 742
  000002E7            00290  SD_FILE_NUMH = 743
  000002E8            00291  SD_DIR_DIRECTION = 744
  000002E9            00292  SD_EXTENDED_RETURN_INT = 745
  000002EA            00293  SD_FILE_SIZE_LEFT = 746
  000002EB            00294  SD_FILE_SIZE_LEFTH = 747
  000002EC            00295  SD_FILE_SIZE_LEFTHH = 748
  000002ED            00296  SD_FILE_SIZE_LEFTHHH = 749
  000002EE            00297  SD_TIMEOUT = 750
  000002EF            00298  SD_DAY = 751
  000002F0            00299  SD_MONTH = 752
  000002F1            00300  SD_YEAR = 753
  000002F2            00301  SD_MSECONDS = 754
  000002F3            00302  SD_SECONDS = 755
  000002F4            00303  SD_MINUTES = 756
  000002F5            00304  SD_HOURS = 757
  000002F6            00305  SD_IS_DIRTY = 758
  000002F7            00306  SD_SSPSTAT = 759
  000002F8            00307  SD_RETURN_F = 760
  000002F9            00308  SD_IO_STRING_LENGTH = 761
  000002FA            00309  SD_IO_STRING_POS = 762
  000002FB            00310  SD_IO_STRING = 763
  02FB                00311  VARIABLE SD_IO_STRING#0=763,SD_IO_STRING#1=764,SD_IO_STRING#2=765,SD_IO_STRING#3=766
  02FF                00312  VARIABLE SD_IO_STRING#4=767,SD_IO_STRING#5=768,SD_IO_STRING#6=769,SD_IO_STRING#7=770
  0303                00313  VARIABLE SD_IO_STRING#8=771,SD_IO_STRING#9=772,SD_IO_STRING#10=773,SD_IO_STRING#11=774
  0307                00314  VARIABLE SD_IO_STRING#12=775,SD_IO_STRING#13=776,SD_IO_STRING#14=777,SD_IO_STRING#15=778
  030B                00315  VARIABLE SD_IO_STRING#16=779,SD_IO_STRING#17=780,SD_IO_STRING#18=781,SD_IO_STRING#19=782
  030F                00316  VARIABLE SD_IO_STRING#20=783,SD_IO_STRING#21=784,SD_IO_STRING#22=785,SD_IO_STRING#23=786
  0313                00317  VARIABLE SD_IO_STRING#24=787,SD_IO_STRING#25=788,SD_IO_STRING#26=789,SD_IO_STRING#27=790
  0317                00318  VARIABLE SD_IO_STRING#28=791,SD_IO_STRING#29=792,SD_IO_STRING#30=793,SD_IO_STRING#31=794
  031B                00319  VARIABLE SD_IO_STRING#32=795,SD_IO_STRING#33=796,SD_IO_STRING#34=797,SD_IO_STRING#35=798
  031F                00320  VARIABLE SD_IO_STRING#36=799,SD_IO_STRING#37=800,SD_IO_STRING#38=801,SD_IO_STRING#39=802
  0323                00321  VARIABLE SD_IO_STRING#40=803,SD_IO_STRING#41=804,SD_IO_STRING#42=805,SD_IO_STRING#43=806
  0327                00322  VARIABLE SD_IO_STRING#44=807,SD_IO_STRING#45=808,SD_IO_STRING#46=809,SD_IO_STRING#47=810
  032B                00323  VARIABLE SD_IO_STRING#48=811,SD_IO_STRING#49=812,SD_IO_STRING#50=813,SD_IO_STRING#51=814
  032F                00324  VARIABLE SD_IO_STRING#52=815,SD_IO_STRING#53=816,SD_IO_STRING#54=817,SD_IO_STRING#55=818
  0333                00325  VARIABLE SD_IO_STRING#56=819,SD_IO_STRING#57=820,SD_IO_STRING#58=821,SD_IO_STRING#59=822
  0337                00326  VARIABLE SD_IO_STRING#60=823,SD_IO_STRING#61=824,SD_IO_STRING#62=825,SD_IO_STRING#63=826
  033B                00327  VARIABLE SD_IO_STRING#64=827,SD_IO_STRING#65=828,SD_IO_STRING#66=829,SD_IO_STRING#67=830
  033F                00328  VARIABLE SD_IO_STRING#68=831,SD_IO_STRING#69=832,SD_IO_STRING#70=833,SD_IO_STRING#71=834
  0343                00329  VARIABLE SD_IO_STRING#72=835,SD_IO_STRING#73=836,SD_IO_STRING#74=837,SD_IO_STRING#75=838
  0347                00330  VARIABLE SD_IO_STRING#76=839,SD_IO_STRING#77=840,SD_IO_STRING#78=841,SD_IO_STRING#79=842
  034B                00331  VARIABLE SD_IO_STRING#80=843,SD_IO_STRING#81=844,SD_IO_STRING#82=845,SD_IO_STRING#83=846
  034F                00332  VARIABLE SD_IO_STRING#84=847,SD_IO_STRING#85=848,SD_IO_STRING#86=849,SD_IO_STRING#87=850
  0353                00333  VARIABLE SD_IO_STRING#88=851,SD_IO_STRING#89=852,SD_IO_STRING#90=853,SD_IO_STRING#91=854
  0357                00334  VARIABLE SD_IO_STRING#92=855,SD_IO_STRING#93=856,SD_IO_STRING#94=857,SD_IO_STRING#95=858
  035B                00335  VARIABLE SD_IO_STRING#96=859,SD_IO_STRING#97=860,SD_IO_STRING#98=861,SD_IO_STRING#99=862
  035F                00336  VARIABLE SD_IO_STRING#100=863,SD_IO_STRING#101=864,SD_IO_STRING#102=865,SD_IO_STRING#103=866
  0363                00337  VARIABLE SD_IO_STRING#104=867,SD_IO_STRING#105=868,SD_IO_STRING#106=869,SD_IO_STRING#107=870
  0367                00338  VARIABLE SD_IO_STRING#108=871,SD_IO_STRING#109=872,SD_IO_STRING#110=873,SD_IO_STRING#111=874
  036B                00339  VARIABLE SD_IO_STRING#112=875,SD_IO_STRING#113=876,SD_IO_STRING#114=877,SD_IO_STRING#115=878
  036F                00340  VARIABLE SD_IO_STRING#116=879,SD_IO_STRING#117=880,SD_IO_STRING#118=881,SD_IO_STRING#119=882
  0373                00341  VARIABLE SD_IO_STRING#120=883,SD_IO_STRING#121=884,SD_IO_STRING#122=885,SD_IO_STRING#123=886
  0377                00342  VARIABLE SD_IO_STRING#124=887,SD_IO_STRING#125=888,SD_IO_STRING#126=889,SD_IO_STRING#127=890
  037B                00343  VARIABLE SD_IO_STRING#128=891,SD_IO_STRING#129=892,SD_IO_STRING#130=893,SD_IO_STRING#131=894
  037F                00344  VARIABLE SD_IO_STRING#132=895,SD_IO_STRING#133=896,SD_IO_STRING#134=897,SD_IO_STRING#135=898
  0383                00345  VARIABLE SD_IO_STRING#136=899,SD_IO_STRING#137=900,SD_IO_STRING#138=901,SD_IO_STRING#139=902
  0387                00346  VARIABLE SD_IO_STRING#140=903,SD_IO_STRING#141=904,SD_IO_STRING#142=905,SD_IO_STRING#143=906
  038B                00347  VARIABLE SD_IO_STRING#144=907,SD_IO_STRING#145=908,SD_IO_STRING#146=909,SD_IO_STRING#147=910
  038F                00348  VARIABLE SD_IO_STRING#148=911,SD_IO_STRING#149=912,SD_IO_STRING#150=913,SD_IO_STRING#151=914
  0393                00349  VARIABLE SD_IO_STRING#152=915,SD_IO_STRING#153=916,SD_IO_STRING#154=917,SD_IO_STRING#155=918
  0397                00350  VARIABLE SD_IO_STRING#156=919,SD_IO_STRING#157=920,SD_IO_STRING#158=921,SD_IO_STRING#159=922
  039B                00351  VARIABLE SD_IO_STRING#160=923,SD_IO_STRING#161=924,SD_IO_STRING#162=925,SD_IO_STRING#163=926
  039F                00352  VARIABLE SD_IO_STRING#164=927,SD_IO_STRING#165=928,SD_IO_STRING#166=929,SD_IO_STRING#167=930
  03A3                00353  VARIABLE SD_IO_STRING#168=931,SD_IO_STRING#169=932,SD_IO_STRING#170=933,SD_IO_STRING#171=934
  03A7                00354  VARIABLE SD_IO_STRING#172=935,SD_IO_STRING#173=936,SD_IO_STRING#174=937,SD_IO_STRING#175=938
  03AB                00355  VARIABLE SD_IO_STRING#176=939,SD_IO_STRING#177=940,SD_IO_STRING#178=941,SD_IO_STRING#179=942
  03AF                00356  VARIABLE SD_IO_STRING#180=943,SD_IO_STRING#181=944,SD_IO_STRING#182=945,SD_IO_STRING#183=946
  03B3                00357  VARIABLE SD_IO_STRING#184=947,SD_IO_STRING#185=948,SD_IO_STRING#186=949,SD_IO_STRING#187=950
  03B7                00358  VARIABLE SD_IO_STRING#188=951,SD_IO_STRING#189=952,SD_IO_STRING#190=953,SD_IO_STRING#191=954
  03BB                00359  VARIABLE SD_IO_STRING#192=955,SD_IO_STRING#193=956,SD_IO_STRING#194=957,SD_IO_STRING#195=958
  03BF                00360  VARIABLE SD_IO_STRING#196=959,SD_IO_STRING#197=960,SD_IO_STRING#198=961,SD_IO_STRING#199=962
  03C3                00361  VARIABLE SD_IO_STRING#200=963
  000003C4            00362  USER_POINTER = 964
  000003C5            00363  USER_POINTERH = 965
  000003C6            00364  TAGIN = 966
  03C6                00365  VARIABLE TAGIN#0=966,TAGIN#1=967,TAGIN#2=968,TAGIN#3=969
  03CA                00366  VARIABLE TAGIN#4=970,TAGIN#5=971,TAGIN#6=972,TAGIN#7=973
  03CE                00367  VARIABLE TAGIN#8=974,TAGIN#9=975
  000003D0            00368  USERIN = 976
  03D0                00369  VARIABLE USERIN#0=976,USERIN#1=977,USERIN#2=978,USERIN#3=979
  000003D4            00370  UTAG = 980
  03D4                00371  VARIABLE UTAG#0=980,UTAG#1=981,UTAG#2=982,UTAG#3=983
  03D8                00372  VARIABLE UTAG#4=984,UTAG#5=985,UTAG#6=986,UTAG#7=987
  03DC                00373  VARIABLE UTAG#8=988,UTAG#9=989,UTAG#10=990,UTAG#11=991
  03E0                00374  VARIABLE UTAG#12=992,UTAG#13=993,UTAG#14=994,UTAG#15=995
  000003E4            00375  ETX = 996
  000003E5            00376  CHECKSUM = 997
  000003E6            00377  MODNUM = 998
  03E6                00378  VARIABLE MODNUM#0=998,MODNUM#1=999,MODNUM#2=1000,MODNUM#3=1001
  03EA                00379  VARIABLE MODNUM#4=1002,MODNUM#5=1003,MODNUM#6=1004
  000003ED            00380  RESPONSE = 1005
  000003EE            00381  SD_IO = 1006
  000003EF            00382  MYCOUNT = 1007
  000003F0            00383  INDEX = 1008
  000003F1            00384  INDEX2 = 1009
  000003F2            00385  TV1 = 1010
  000003F3            00386  WORD_VAR = 1011
  000003F4            00387  WORD_VARH = 1012
  000003F5            00388  MYNUM = 1013
  03F5                00389  VARIABLE MYNUM#0=1013,MYNUM#1=1014,MYNUM#2=1015,MYNUM#3=1016
                      00390         #DEFINE SD_CS PORTC,2
                      00391         #DEFINE SD_DI PORTC,5
                      00392         #DEFINE SD_CLK PORTC,3
                      00393         #DEFINE SD_DO PORTC,4
                      00394         #DEFINE SD_EOF _B#VR1,0
                      00395         #DEFINE SD_RW_PTR SD_BYTES_READ
                      00396         #DEFINE SD_RW_PTRH SD_BYTES_READH
                      00397         #DEFINE SD_RW_PTRHH SD_BYTES_READHH
                      00398         #DEFINE SD_RW_PTRHHH SD_BYTES_READHHH
                      00399         #DEFINE SD_FREE_CLUSTER_NUM SD_CLUSTER_SEQ_NUM
                      00400         #DEFINE SD_FREE_CLUSTER_NUMH SD_CLUSTER_SEQ_NUMH
                      00401         #DEFINE SD_FREE_SPACE_KB SD_BYTES_READ
                      00402         #DEFINE SD_FREE_SPACE_KBH SD_BYTES_READH
                      00403         #DEFINE SD_FREE_SPACE_KBHH SD_BYTES_READHH
                      00404         #DEFINE SD_FREE_SPACE_KBHHH SD_BYTES_READHHH
                      00405         #DEFINE SD_DISK_SIZE_KB SD_BYTES_READ
                      00406         #DEFINE SD_DISK_SIZE_KBH SD_BYTES_READH
                      00407         #DEFINE SD_DISK_SIZE_KBHH SD_BYTES_READHH
                      00408         #DEFINE SD_DISK_SIZE_KBHHH SD_BYTES_READHHH
                      00409         #DEFINE SD_FIRST 0
                      00410         #DEFINE SD_NEXT 1
                      00411         #DEFINE SD_PREVIOUS 2
                      00412         #DEFINE SD_SPI_BF SSPSTAT,0
                      00413         #DEFINE SD_SPI_IF PIR1,3
                      00414         #DEFINE SD_SPI_FOSC_64 2
                      00415         #DEFINE SD_SPI_FOSC_16 1
                      00416         #DEFINE SD_SPI_FOSC_04 0
                      00417         #DEFINE __KEYPAD_PORT PORTB
                      00418         #DEFINE __LCD_DTPORT PORTD
                      00419         #DEFINE __LCD_ENPORT PORTD
                      00420         #DEFINE __LCD_RSPORT PORTD
                      00421         #DEFINE SD_DETECT PORTA,1
                      00422         #DEFINE RFIDENABLE PORTD,4
                      00423         #DEFINE BUA 40016
                      00424         #DEFINE BUAH 156
                      00425         #DEFINE UPA_L 0
                      00426         #DEFINE UPA_H 1
                      00427         #DEFINE NOU 2
                      00428         #DEFINE NUM_UHE 3
                      00429         #DEFINE NUM_MHE 4
                      00430         #DEFINE TAGOFFSET 4
                      00431         #DEFINE UHA 16
                      00432         #DEFINE MHA 912
                      00433         #DEFINE MHAH 3
                      00434         #DEFINE NUM_UH 200
                      00435         #DEFINE NUM_MH 10
                      00436         #DEFINE FLAG _B#VR1,1
  000005C4            00437 F2_SOF EQU $ ; V4.0 RFID 2ND GENERATION.PRP
  000005C4            00438 F3_SOF EQU $ ; V4.0 RFID 2ND GENERATION_FWD.PBP
  000005C4            00439 F3_EOF EQU $ ; V4.0 RFID 2ND GENERATION_FWD.PBP
  000005C4            00440 F4_SOF EQU $ ; V4.0 RFID 2ND GENERATION_LIB.PBP
  000005C4            00441 F4_000001 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoTo OverLibCode
                      00442         F@JUMP OVERLIBCODE
0005C8                00443 SD_WRITE_SUB
  000005C8            00444 F4_000109 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx > $FF Then
0005C8 0E01           00445         MOVLW 1
0005CA 0102           00446         MOVLB 2
  00000002            00447 RAM_BANK = 2
0005CC 5D48           00448         SUBWF SD_BUFFER_IDXH,W
0005CE 0100           00449         MOVLB 0
  00000000            00450 RAM_BANK = 0
0005D0 A0D8           00451         BTFSS STATUS,0,0
                      00452         GO@TO BC@LL2
  000005D6            00453 F4_000110 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Buffer_Idx - $100] = SD_Byte_RW
0005D6 0102           00454         MOVLB 2
  00000002            00455 RAM_BANK = 2
0005D8 5147           00456         MOVF SD_BUFFER_IDX,W
0005DA EE01 F041      00457         LFSR 0,SD_BUFFER1
0005DE 26E9           00458         ADDWF FSR0L,F,0
0005E0 0E00           00459         MOVLW 0
0005E2 22EA           00460         ADDWFC FSR0H,F,0
0005E4 C249 FFEF      00461         MOVFF SD_BYTE_RW,INDF0
0005E8 0100           00462         MOVLB 0
  00000000            00463 RAM_BANK = 0
                      00464         F@JUMP BC@LL3
0005EE                00465 BC@LL2
  000005EE            00466 F4_000111 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  000005EE            00467 F4_000112 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Buffer_Idx] = SD_Byte_RW
0005EE EE00 F041      00468         LFSR 0,SD_BUFFER0
0005F2 0102           00469         MOVLB 2
  00000002            00470 RAM_BANK = 2
0005F4 5147           00471         MOVF SD_BUFFER_IDX,W
0005F6 26E9           00472         ADDWF FSR0L,F,0
0005F8 0E00           00473         MOVLW 0
0005FA 22EA           00474         ADDWFC FSR0H,F,0
0005FC C249 FFEF      00475         MOVFF SD_BYTE_RW,INDF0
  00000600            00476 F4_000113 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000600                00477 BC@LL3
000600 0100           00478         MOVLB 0
  00000000            00479 RAM_BANK = 0
  00000602            00480 F4_000114 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 1
000602 0E01           00481         MOVLW 1
000604 0102           00482         MOVLB 2
  00000002            00483 RAM_BANK = 2
000606 6FF6           00484         MOVWF SD_IS_DIRTY
  00000608            00485 F4_000115 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx = $1FF Then
000608 2947           00486         INCF SD_BUFFER_IDX,W
00060A 0E01           00487         MOVLW 1
00060C B4D8           00488         BTFSC STATUS,2,0
00060E 1948           00489         XORWF SD_BUFFER_IDXH,W
000610 0100           00490         MOVLB 0
  00000000            00491 RAM_BANK = 0
000612 A4D8           00492         BTFSS STATUS,2,0
                      00493         GO@TO BC@LL5
  00000618            00494 F4_000116 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Repeat
000618                00495 BC@LL6
  00000618            00496 F4_000117 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      00497         F@CALL SD_WRITE_SECTOR
  0000061C            00498 F4_000118 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Until SD_Return = 0
00061C 5240           00499         MOVF SD_RETURN,F,0
00061E A4D8           00500         BTFSS STATUS,2,0
                      00501         GO@TO BC@LL6
000622                00502 BC@LL7
  00000622            00503 F4_000119 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 0
000622 0102           00504         MOVLB 2
  00000002            00505 RAM_BANK = 2
000624 6BF6           00506         CLRF SD_IS_DIRTY
  00000626            00507 F4_000120 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
000626 6B48           00508         CLRF SD_BUFFER_IDXH
000628 6B47           00509         CLRF SD_BUFFER_IDX
  0000062A            00510 F4_000121 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sector_Num
00062A 2A34           00511         INCF SD_SECTOR_NUM,F,0
00062C 0E00           00512         MOVLW 0
00062E 2235           00513         ADDWFC SD_SECTOR_NUMH,F,0
000630 2236           00514         ADDWFC SD_SECTOR_NUMHH,F,0
000632 2237           00515         ADDWFC SD_SECTOR_NUMHHH,F,0
000634 0100           00516         MOVLB 0
  00000000            00517 RAM_BANK = 0
                      00518         F@JUMP BC@LL8
00063A                00519 BC@LL5
  0000063A            00520 F4_000122 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  0000063A            00521 F4_000123 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = SD_Buffer_Idx + 1
00063A 0102           00522         MOVLB 2
  00000002            00523 RAM_BANK = 2
00063C 4B47           00524         INFSNZ SD_BUFFER_IDX,F
00063E 2B48           00525         INCF SD_BUFFER_IDXH,F
  00000640            00526 F4_000124 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000640                00527 BC@LL8
000640 0100           00528         MOVLB 0
  00000000            00529 RAM_BANK = 0
  00000642            00530 F4_000125 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000642 0012           00531         RETURN 0
000644                00532 SD_SECTOR_SUB
  00000644            00533 F4_000128 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
000644 0102           00534         MOVLB 2
  00000002            00535 RAM_BANK = 2
000646 6B48           00536         CLRF SD_BUFFER_IDXH
000648 6B47           00537         CLRF SD_BUFFER_IDX
  0000064A            00538 F4_000129 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_RW_Option = 0 Then
00064A 534A           00539         MOVF SD_RW_OPTION,F
00064C 0100           00540         MOVLB 0
  00000000            00541 RAM_BANK = 0
00064E A4D8           00542         BTFSS STATUS,2,0
                      00543         GO@TO BC@LL10
  00000654            00544 F4_000130 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000654 6A33           00545         CLRF SD_IDX,0
000656                00546 FR@LB12
  00000656            00547 F4_000131 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Idx] = 0
000656 EE00 F041      00548         LFSR 0,SD_BUFFER0
00065A 5033           00549         MOVF SD_IDX,W,0
00065C 26E9           00550         ADDWF FSR0L,F,0
00065E 0E00           00551         MOVLW 0
000660 22EA           00552         ADDWFC FSR0H,F,0
000662 6AEF           00553         CLRF INDF0,0
  00000664            00554 F4_000132 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Idx] = 0
000664 EE01 F041      00555         LFSR 0,SD_BUFFER1
000668 5033           00556         MOVF SD_IDX,W,0
00066A 26E9           00557         ADDWF FSR0L,F,0
00066C 0E00           00558         MOVLW 0
00066E 22EA           00559         ADDWFC FSR0H,F,0
000670 6AEF           00560         CLRF INDF0,0
  00000672            00561 F4_000133 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
000672 2A33           00562         INCF SD_IDX,F,0
000674 A4D8           00563         BTFSS STATUS,2,0
                      00564         GO@TO FR@LB12
000678                00565 NX@LB13
                      00566         F@JUMP BC@LL13
00067C                00567 BC@LL10
  0000067C            00568 F4_000134 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  0000067C            00569 F4_000135 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_Sector
                      00570         F@CALL SD_READ_SECTOR
  00000680            00571 F4_000136 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000680                00572 BC@LL13
  00000680            00573 F4_000137 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000680 0012           00574         RETURN 0
000682                00575 SD_SEEK_RESPONSE
  00000682            00576 F4_000151 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Repeat
000682                00577 BC@LL14
  00000682            00578 F4_000152 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00579         F@CALL SD_RECEIVE_BYTE
  00000686            00580 F4_000153 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Dec SD_Seek_Response_Idx
000686 063C           00581         DECF SD_SEEK_RESPONSE_IDX,F,0
000688 0E00           00582         MOVLW 0
00068A 5A3D           00583         SUBWFB SD_SEEK_RESPONSE_IDXH,F,0
  0000068C            00584 F4_000154 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Until SD_ByteR = SD_Seek_Response_Reqd Or SD_Seek_Response_Idx = 0
00068C C032 F011      00585         MOVFF SD_BYTER,PP0
000690 503E           00586         MOVF SD_SEEK_RESPONSE_REQD,W,0
                      00587         F@CALL T@EB
000696 6E2D           00588         MOVWF SP#P9,0
000698 503D           00589         MOVF SD_SEEK_RESPONSE_IDXH,W,0
00069A 103C           00590         IORWF SD_SEEK_RESPONSE_IDX,W,0
00069C B4D8           00591         BTFSC STATUS,2,0
                      00592         GO@TO CP@LB4
0006A2 0E00           00593         MOVLW 0
0006A4 D001           00594         BRA $ + 4
0006A6                00595 CP@LB4
0006A6 0E01           00596         MOVLW 1
0006A8 102D           00597         IORWF SP#P9,W,0
0006AA B4D8           00598         BTFSC STATUS,2,0
                      00599         GO@TO BC@LL14
0006AE                00600 BC@LL15
  000006AE            00601 F4_000155 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Idx = 0 Then
0006AE 503D           00602         MOVF SD_SEEK_RESPONSE_IDXH,W,0
0006B0 103C           00603         IORWF SD_SEEK_RESPONSE_IDX,W,0
0006B2 A4D8           00604         BTFSS STATUS,2,0
                      00605         GO@TO BC@LL17
  000006B8            00606 F4_000156 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Return = 1
0006B8 0E01           00607         MOVLW 1
0006BA 6E3F           00608         MOVWF SD_SEEK_RESPONSE_RETURN,0
                      00609         F@JUMP BC@LL18
0006C0                00610 BC@LL17
  000006C0            00611 F4_000157 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  000006C0            00612 F4_000158 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Return = 0
0006C0 6A3F           00613         CLRF SD_SEEK_RESPONSE_RETURN,0
  000006C2            00614 F4_000159 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0006C2                00615 BC@LL18
  000006C2            00616 F4_000160 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0006C2 0012           00617         RETURN 0
0006C4                00618 SD_WRITE_SECTOR
  000006C4            00619 F4_000163 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = 0
0006C4 0102           00620         MOVLB 2
  00000002            00621 RAM_BANK = 2
0006C6 6BEE           00622         CLRF SD_TIMEOUT
  000006C8            00623 F4_000164 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
0006C8 0E01           00624         MOVLW 1
0006CA 6E40           00625         MOVWF SD_RETURN,0
0006CC                00626 SD_WRITE_SECTOR_START
0006CC 0100           00627         MOVLB 0
  00000000            00628 RAM_BANK = 0
  000006CE            00629 F4_000166 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Address = SD_Sector_Num << 9
0006CE 90D8           00630         BCF STATUS,0,0
0006D0 6A38           00631         CLRF SD_ADDRESS,0
0006D2 3434           00632         RLCF SD_SECTOR_NUM,W,0
0006D4 6E39           00633         MOVWF SD_ADDRESSH,0
0006D6 3435           00634         RLCF SD_SECTOR_NUMH,W,0
0006D8 6E3A           00635         MOVWF SD_ADDRESSHH,0
0006DA 3436           00636         RLCF SD_SECTOR_NUMHH,W,0
0006DC 6E3B           00637         MOVWF SD_ADDRESSHHH,0
  000006DE            00638 F4_000168 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Low SD_CS
0006DE 9494           00639         BCF TRISC,2,0
0006E0 9482           00640         BCF PORTC,2,0
  000006E2            00641 F4_000169 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $58
0006E2 0E58           00642         MOVLW 88
0006E4 0102           00643         MOVLB 2
  00000002            00644 RAM_BANK = 2
0006E6 6F41           00645         MOVWF SD_BYTE0
  000006E8            00646 F4_000170 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = SD_Address.BYTE3
0006E8 C03B F242      00647         MOVFF SD_ADDRESSHHH,SD_BYTE1
  000006EC            00648 F4_000171 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = SD_Address.BYTE2
0006EC C03A F243      00649         MOVFF SD_ADDRESSHH,SD_BYTE2
  000006F0            00650 F4_000172 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = SD_Address.BYTE1
0006F0 C039 F244      00651         MOVFF SD_ADDRESSH,SD_BYTE3
  000006F4            00652 F4_000173 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = SD_Address.BYTE0
0006F4 C038 F245      00653         MOVFF SD_ADDRESS,SD_BYTE4
  000006F8            00654 F4_000174 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
0006F8 6946           00655         SETF SD_BYTE5
  000006FA            00656 F4_000175 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $00
0006FA 6A3E           00657         CLRF SD_SEEK_RESPONSE_REQD,0
  000006FC            00658 F4_000176 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
0006FC 683D           00659         SETF SD_SEEK_RESPONSE_IDXH,0
0006FE 683C           00660         SETF SD_SEEK_RESPONSE_IDX,0
  00000700            00661 F4_000177 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
000700 0100           00662         MOVLB 0
  00000000            00663 RAM_BANK = 0
                      00664         F@CALL SD_SEND_CMD
  00000706            00665 F4_000178 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00666         F@CALL SD_SEEK_RESPONSE
  00000708            00667 F4_000179 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Write_Sector_Error
000708 0E01           00668         MOVLW 1
00070A 5C3F           00669         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
00070C A4D8           00670         BTFSS STATUS,2,0
                      00671         GO@TO BC@LL20
                      00672         F@JUMP SD_WRITE_SECTOR_ERROR
000716                00673 BC@LL20
  00000716            00674 F4_000181 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FE
000716 0EFE           00675         MOVLW 254
000718 0102           00676         MOVLB 2
  00000002            00677 RAM_BANK = 2
00071A 6F46           00678         MOVWF SD_BYTE5
  0000071C            00679 F4_000182 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
00071C 0100           00680         MOVLB 0
  00000000            00681 RAM_BANK = 0
                      00682         F@CALL SD_SEND_BYTE
  00000722            00683 F4_000184 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000722 6A33           00684         CLRF SD_IDX,0
000724                00685 FR@LB22
  00000724            00686 F4_000185 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = SD_Buffer0[SD_Idx]
000724 EE00 F041      00687         LFSR 0,SD_BUFFER0
000728 5033           00688         MOVF SD_IDX,W,0
00072A 26E9           00689         ADDWF FSR0L,F,0
00072C 0E00           00690         MOVLW 0
00072E 22EA           00691         ADDWFC FSR0H,F,0
000730 50EF           00692         MOVF INDF0,W,0
000732 0102           00693         MOVLB 2
  00000002            00694 RAM_BANK = 2
000734 6F46           00695         MOVWF SD_BYTE5
  00000736            00696 F4_000186 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000736 0100           00697         MOVLB 0
  00000000            00698 RAM_BANK = 0
                      00699         F@CALL SD_SEND_BYTE
  0000073C            00700 F4_000187 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
00073C 2A33           00701         INCF SD_IDX,F,0
00073E A4D8           00702         BTFSS STATUS,2,0
                      00703         GO@TO FR@LB22
000742                00704 NX@LB23
  00000742            00705 F4_000188 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000742 6A33           00706         CLRF SD_IDX,0
000744                00707 FR@LB24
  00000744            00708 F4_000189 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = SD_Buffer1[SD_Idx]
000744 EE01 F041      00709         LFSR 0,SD_BUFFER1
000748 5033           00710         MOVF SD_IDX,W,0
00074A 26E9           00711         ADDWF FSR0L,F,0
00074C 0E00           00712         MOVLW 0
00074E 22EA           00713         ADDWFC FSR0H,F,0
000750 50EF           00714         MOVF INDF0,W,0
000752 0102           00715         MOVLB 2
  00000002            00716 RAM_BANK = 2
000754 6F46           00717         MOVWF SD_BYTE5
  00000756            00718 F4_000190 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000756 0100           00719         MOVLB 0
  00000000            00720 RAM_BANK = 0
                      00721         F@CALL SD_SEND_BYTE
  0000075C            00722 F4_000191 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
00075C 2A33           00723         INCF SD_IDX,F,0
00075E A4D8           00724         BTFSS STATUS,2,0
                      00725         GO@TO FR@LB24
000762                00726 NX@LB25
  00000762            00727 F4_000193 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
000762 0102           00728         MOVLB 2
  00000002            00729 RAM_BANK = 2
000764 6946           00730         SETF SD_BYTE5
  00000766            00731 F4_000194 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000766 0100           00732         MOVLB 0
  00000000            00733 RAM_BANK = 0
                      00734         F@CALL SD_SEND_BYTE
  0000076C            00735 F4_000195 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
                      00736         F@CALL SD_SEND_BYTE
  00000770            00737 F4_000197 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $FF
000770 683E           00738         SETF SD_SEEK_RESPONSE_REQD,0
  00000772            00739 F4_000198 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
000772 683D           00740         SETF SD_SEEK_RESPONSE_IDXH,0
000774 683C           00741         SETF SD_SEEK_RESPONSE_IDX,0
  00000776            00742 F4_000199 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00743         F@CALL SD_RECEIVE_BYTE
  0000077A            00744 F4_000200 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Byte = SD_ByteR
00077A C032 F2D1      00745         MOVFF SD_BYTER,SD_TEMP_BYTE
  0000077E            00746 F4_000201 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00747         F@CALL SD_SEEK_RESPONSE
  00000780            00748 F4_000202 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Byte = SD_Temp_Byte & $0F
000780 0E0F           00749         MOVLW 15
000782 0102           00750         MOVLB 2
  00000002            00751 RAM_BANK = 2
000784 17D1           00752         ANDWF SD_TEMP_BYTE,F
  00000786            00753 F4_000203 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Temp_Byte <> $05 Then GoTo SD_Write_Sector_Error
000786 0E05           00754         MOVLW 5
000788 5DD1           00755         SUBWF SD_TEMP_BYTE,W
00078A 0100           00756         MOVLB 0
  00000000            00757 RAM_BANK = 0
00078C B4D8           00758         BTFSC STATUS,2,0
                      00759         GO@TO BC@LL26
                      00760         F@JUMP SD_WRITE_SECTOR_ERROR
000796                00761 BC@LL26
  00000796            00762 F4_000204 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Write_Sector_Error
000796 0E01           00763         MOVLW 1
000798 5C3F           00764         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
00079A A4D8           00765         BTFSS STATUS,2,0
                      00766         GO@TO BC@LL28
                      00767         F@JUMP SD_WRITE_SECTOR_ERROR
0007A4                00768 BC@LL28
  000007A4            00769 F4_000205 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Return = 0
0007A4 6A40           00770         CLRF SD_RETURN,0
  000007A6            00771 F4_000206 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0007A6 9494           00772         BCF TRISC,2,0
0007A8 8482           00773         BSF PORTC,2,0
  000007AA            00774 F4_000207 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Write_Sector_End
                      00775         F@JUMP SD_WRITE_SECTOR_END
0007AE                00776 SD_WRITE_SECTOR_ERROR
  000007AE            00777 F4_000209 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0007AE 9494           00778         BCF TRISC,2,0
0007B0 8482           00779         BSF PORTC,2,0
  000007B2            00780 F4_000210 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = SD_Timeout + 1
0007B2 0102           00781         MOVLB 2
  00000002            00782 RAM_BANK = 2
0007B4 2BEE           00783         INCF SD_TIMEOUT,F
  000007B6            00784 F4_000211 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Timeout < $03 Then
0007B6 0E03           00785         MOVLW 3
0007B8 5DEE           00786         SUBWF SD_TIMEOUT,W
0007BA 0100           00787         MOVLB 0
  00000000            00788 RAM_BANK = 0
0007BC B0D8           00789         BTFSC STATUS,0,0
                      00790         GO@TO BC@LL30
  000007C2            00791 F4_000212 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Write_Sector_Start
                      00792         F@JUMP SD_WRITE_SECTOR_START
  000007C4            00793 F4_000213 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0007C4                00794 BC@LL30
0007C4                00795 SD_WRITE_SECTOR_END
  000007C4            00796 F4_000215 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0007C4 0012           00797         RETURN 0
0007C6                00798 SD_READ_SECTOR
  000007C6            00799 F4_000218 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = 0
0007C6 0102           00800         MOVLB 2
  00000002            00801 RAM_BANK = 2
0007C8 6BEE           00802         CLRF SD_TIMEOUT
  000007CA            00803 F4_000219 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
0007CA 0E01           00804         MOVLW 1
0007CC 6E40           00805         MOVWF SD_RETURN,0
0007CE                00806 SD_READ_SECTOR_START
0007CE 0100           00807         MOVLB 0
  00000000            00808 RAM_BANK = 0
  000007D0            00809 F4_000221 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Address = SD_Sector_Num << 9
0007D0 90D8           00810         BCF STATUS,0,0
0007D2 6A38           00811         CLRF SD_ADDRESS,0
0007D4 3434           00812         RLCF SD_SECTOR_NUM,W,0
0007D6 6E39           00813         MOVWF SD_ADDRESSH,0
0007D8 3435           00814         RLCF SD_SECTOR_NUMH,W,0
0007DA 6E3A           00815         MOVWF SD_ADDRESSHH,0
0007DC 3436           00816         RLCF SD_SECTOR_NUMHH,W,0
0007DE 6E3B           00817         MOVWF SD_ADDRESSHHH,0
  000007E0            00818 F4_000223 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Low SD_CS
0007E0 9494           00819         BCF TRISC,2,0
0007E2 9482           00820         BCF PORTC,2,0
  000007E4            00821 F4_000224 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $51
0007E4 0E51           00822         MOVLW 81
0007E6 0102           00823         MOVLB 2
  00000002            00824 RAM_BANK = 2
0007E8 6F41           00825         MOVWF SD_BYTE0
  000007EA            00826 F4_000225 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = SD_Address.BYTE3
0007EA C03B F242      00827         MOVFF SD_ADDRESSHHH,SD_BYTE1
  000007EE            00828 F4_000226 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = SD_Address.BYTE2
0007EE C03A F243      00829         MOVFF SD_ADDRESSHH,SD_BYTE2
  000007F2            00830 F4_000227 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = SD_Address.BYTE1
0007F2 C039 F244      00831         MOVFF SD_ADDRESSH,SD_BYTE3
  000007F6            00832 F4_000228 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = SD_Address.BYTE0
0007F6 C038 F245      00833         MOVFF SD_ADDRESS,SD_BYTE4
  000007FA            00834 F4_000229 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
0007FA 6946           00835         SETF SD_BYTE5
  000007FC            00836 F4_000230 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
0007FC 0100           00837         MOVLB 0
  00000000            00838 RAM_BANK = 0
                      00839         F@CALL SD_SEND_CMD
  00000802            00840 F4_000231 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $00
000802 6A3E           00841         CLRF SD_SEEK_RESPONSE_REQD,0
  00000804            00842 F4_000232 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
000804 683D           00843         SETF SD_SEEK_RESPONSE_IDXH,0
000806 683C           00844         SETF SD_SEEK_RESPONSE_IDX,0
  00000808            00845 F4_000233 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00846         F@CALL SD_SEEK_RESPONSE
  0000080A            00847 F4_000234 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Read_Sector_Error
00080A 0E01           00848         MOVLW 1
00080C 5C3F           00849         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
00080E A4D8           00850         BTFSS STATUS,2,0
                      00851         GO@TO BC@LL32
                      00852         F@JUMP SD_READ_SECTOR_ERROR
000818                00853 BC@LL32
  00000818            00854 F4_000236 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $FE
000818 0EFE           00855         MOVLW 254
00081A 6E3E           00856         MOVWF SD_SEEK_RESPONSE_REQD,0
  0000081C            00857 F4_000237 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
00081C 683D           00858         SETF SD_SEEK_RESPONSE_IDXH,0
00081E 683C           00859         SETF SD_SEEK_RESPONSE_IDX,0
  00000820            00860 F4_000238 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00861         F@CALL SD_SEEK_RESPONSE
  00000822            00862 F4_000239 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Read_Sector_Error
000822 0E01           00863         MOVLW 1
000824 5C3F           00864         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
000826 A4D8           00865         BTFSS STATUS,2,0
                      00866         GO@TO BC@LL34
                      00867         F@JUMP SD_READ_SECTOR_ERROR
000830                00868 BC@LL34
  00000830            00869 F4_000241 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000830 6A33           00870         CLRF SD_IDX,0
000832                00871 FR@LB36
  00000832            00872 F4_000242 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00873         F@CALL SD_RECEIVE_BYTE
  00000836            00874 F4_000243 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Idx] = SD_ByteR
000836 EE00 F041      00875         LFSR 0,SD_BUFFER0
00083A 5033           00876         MOVF SD_IDX,W,0
00083C 26E9           00877         ADDWF FSR0L,F,0
00083E 0E00           00878         MOVLW 0
000840 22EA           00879         ADDWFC FSR0H,F,0
000842 C032 FFEF      00880         MOVFF SD_BYTER,INDF0
  00000846            00881 F4_000244 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
000846 2A33           00882         INCF SD_IDX,F,0
000848 A4D8           00883         BTFSS STATUS,2,0
                      00884         GO@TO FR@LB36
00084C                00885 NX@LB37
  0000084C            00886 F4_000245 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
00084C 6A33           00887         CLRF SD_IDX,0
00084E                00888 FR@LB38
  0000084E            00889 F4_000246 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00890         F@CALL SD_RECEIVE_BYTE
  00000852            00891 F4_000247 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Idx] = SD_ByteR
000852 EE01 F041      00892         LFSR 0,SD_BUFFER1
000856 5033           00893         MOVF SD_IDX,W,0
000858 26E9           00894         ADDWF FSR0L,F,0
00085A 0E00           00895         MOVLW 0
00085C 22EA           00896         ADDWFC FSR0H,F,0
00085E C032 FFEF      00897         MOVFF SD_BYTER,INDF0
  00000862            00898 F4_000248 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
000862 2A33           00899         INCF SD_IDX,F,0
000864 A4D8           00900         BTFSS STATUS,2,0
                      00901         GO@TO FR@LB38
000868                00902 NX@LB39
  00000868            00903 F4_000250 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00904         F@CALL SD_RECEIVE_BYTE
  0000086C            00905 F4_000251 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00906         F@CALL SD_RECEIVE_BYTE
  00000870            00907 F4_000252 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] High SD_CS
000870 9494           00908         BCF TRISC,2,0
000872 8482           00909         BSF PORTC,2,0
  00000874            00910 F4_000253 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
000874 0102           00911         MOVLB 2
  00000002            00912 RAM_BANK = 2
000876 6946           00913         SETF SD_BYTE5
  00000878            00914 F4_000254 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000878 0100           00915         MOVLB 0
  00000000            00916 RAM_BANK = 0
                      00917         F@CALL SD_SEND_BYTE
  0000087E            00918 F4_000255 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Return = 0
00087E 6A40           00919         CLRF SD_RETURN,0
  00000880            00920 F4_000256 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Read_Sector_End
                      00921         F@JUMP SD_READ_SECTOR_END
000884                00922 SD_READ_SECTOR_ERROR
  00000884            00923 F4_000258 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] High SD_CS
000884 9494           00924         BCF TRISC,2,0
000886 8482           00925         BSF PORTC,2,0
  00000888            00926 F4_000259 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = SD_Timeout + 1
000888 0102           00927         MOVLB 2
  00000002            00928 RAM_BANK = 2
00088A 2BEE           00929         INCF SD_TIMEOUT,F
  0000088C            00930 F4_000260 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Timeout < $03 Then
00088C 0E03           00931         MOVLW 3
00088E 5DEE           00932         SUBWF SD_TIMEOUT,W
000890 0100           00933         MOVLB 0
  00000000            00934 RAM_BANK = 0
000892 B0D8           00935         BTFSC STATUS,0,0
                      00936         GO@TO BC@LL40
  00000898            00937 F4_000261 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Read_Sector_Start
                      00938         F@JUMP SD_READ_SECTOR_START
  0000089A            00939 F4_000262 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
00089A                00940 BC@LL40
00089A                00941 SD_READ_SECTOR_END
  0000089A            00942 F4_000264 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
00089A 0012           00943         RETURN 0
00089C                00944 SD_READ_FAT_ENTRY
  0000089C            00945 F4_000267 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Pos > $0FF Then
00089C 0E01           00946         MOVLW 1
00089E 0102           00947         MOVLB 2
  00000002            00948 RAM_BANK = 2
0008A0 5D4F           00949         SUBWF SD_BUFFER_POSH,W
0008A2 0100           00950         MOVLB 0
  00000000            00951 RAM_BANK = 0
0008A4 A0D8           00952         BTFSS STATUS,0,0
                      00953         GO@TO BC@LL42
  000008AA            00954 F4_000268 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE0 = SD_Buffer1[SD_Buffer_Pos - $100]
0008AA 0102           00955         MOVLB 2
  00000002            00956 RAM_BANK = 2
0008AC 514E           00957         MOVF SD_BUFFER_POS,W
0008AE EE01 F041      00958         LFSR 0,SD_BUFFER1
0008B2 26E9           00959         ADDWF FSR0L,F,0
0008B4 0E00           00960         MOVLW 0
0008B6 22EA           00961         ADDWFC FSR0H,F,0
0008B8 50EF           00962         MOVF INDF0,W,0
0008BA 6F77           00963         MOVWF SD_FAT_ENTRY
  000008BC            00964 F4_000269 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE1 = SD_Buffer1[SD_Buffer_Pos + 1 - $100]
0008BC 0E01           00965         MOVLW 1
0008BE 254E           00966         ADDWF SD_BUFFER_POS,W
0008C0 6E23           00967         MOVWF PP7,0
0008C2 0E00           00968         MOVLW 0
0008C4 214F           00969         ADDWFC SD_BUFFER_POSH,W
0008C6 6E24           00970         MOVWF PP7H,0
0008C8 5023           00971         MOVF PP7,W,0
0008CA EE01 F041      00972         LFSR 0,SD_BUFFER1
0008CE 26E9           00973         ADDWF FSR0L,F,0
0008D0 0E00           00974         MOVLW 0
0008D2 22EA           00975         ADDWFC FSR0H,F,0
0008D4 50EF           00976         MOVF INDF0,W,0
0008D6 6F78           00977         MOVWF SD_FAT_ENTRYH
0008D8 0100           00978         MOVLB 0
  00000000            00979 RAM_BANK = 0
                      00980         F@JUMP BC@LL43
0008DE                00981 BC@LL42
  000008DE            00982 F4_000270 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  000008DE            00983 F4_000271 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE0 = SD_Buffer0[SD_Buffer_Pos]
0008DE EE00 F041      00984         LFSR 0,SD_BUFFER0
0008E2 0102           00985         MOVLB 2
  00000002            00986 RAM_BANK = 2
0008E4 514E           00987         MOVF SD_BUFFER_POS,W
0008E6 26E9           00988         ADDWF FSR0L,F,0
0008E8 0E00           00989         MOVLW 0
0008EA 22EA           00990         ADDWFC FSR0H,F,0
0008EC 50EF           00991         MOVF INDF0,W,0
0008EE 6F77           00992         MOVWF SD_FAT_ENTRY
  000008F0            00993 F4_000272 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE1 = SD_Buffer0[SD_Buffer_Pos + 1]
0008F0 294E           00994         INCF SD_BUFFER_POS,W
0008F2 EE00 F041      00995         LFSR 0,SD_BUFFER0
0008F6 26E9           00996         ADDWF FSR0L,F,0
0008F8 0E00           00997         MOVLW 0
0008FA 22EA           00998         ADDWFC FSR0H,F,0
0008FC 50EF           00999         MOVF INDF0,W,0
0008FE 6F78           01000         MOVWF SD_FAT_ENTRYH
  00000900            01001 F4_000273 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000900                01002 BC@LL43
000900 0100           01003         MOVLB 0
  00000000            01004 RAM_BANK = 0
  00000902            01005 F4_000274 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000902 0012           01006         RETURN 0
000904                01007 SD_FIND_FREE_CLUSTER
  00000904            01008 F4_000277 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Dword = SD_FAT1 + SD_Secs_Per_FAT - 1
000904 0102           01009         MOVLB 2
  00000002            01010 RAM_BANK = 2
000906 5158           01011         MOVF SD_SECS_PER_FAT,W
000908 2567           01012         ADDWF SD_FAT1,W
00090A 6E23           01013         MOVWF PP7,0
00090C 5159           01014         MOVF SD_SECS_PER_FATH,W
00090E 2168           01015         ADDWFC SD_FAT1H,W
000910 6E24           01016         MOVWF PP7H,0
000912 0E00           01017         MOVLW 0
000914 2169           01018         ADDWFC SD_FAT1HH,W
000916 6E25           01019         MOVWF PP7HH,0
000918 0E00           01020         MOVLW 0
00091A 216A           01021         ADDWFC SD_FAT1HHH,W
00091C 6E26           01022         MOVWF PP7HHH,0
00091E 0423           01023         DECF PP7,W,0
000920 6FD4           01024         MOVWF SD_TEMP_DWORD
000922 0E00           01025         MOVLW 0
000924 5824           01026         SUBWFB PP7H,W,0
000926 6FD5           01027         MOVWF SD_TEMP_DWORDH
000928 0E00           01028         MOVLW 0
00092A 5825           01029         SUBWFB PP7HH,W,0
00092C 6FD6           01030         MOVWF SD_TEMP_DWORDHH
00092E 0E00           01031         MOVLW 0
000930 5826           01032         SUBWFB PP7HHH,W,0
000932 6FD7           01033         MOVWF SD_TEMP_DWORDHHH
  00000934            01034 F4_000278 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Sec_Num = (SD_FAT_Sec + SD_FAT1) To SD_Temp_Dword
000934 5167           01035         MOVF SD_FAT1,W
000936 2579           01036         ADDWF SD_FAT_SEC,W
000938 6F51           01037         MOVWF SD_SEC_NUM
00093A 5168           01038         MOVF SD_FAT1H,W
00093C 217A           01039         ADDWFC SD_FAT_SECH,W
00093E 6F52           01040         MOVWF SD_SEC_NUMH
000940 5169           01041         MOVF SD_FAT1HH,W
000942 217B           01042         ADDWFC SD_FAT_SECHH,W
000944 6F53           01043         MOVWF SD_SEC_NUMHH
000946 516A           01044         MOVF SD_FAT1HHH,W
000948 217C           01045         ADDWFC SD_FAT_SECHHH,W
00094A 6F54           01046         MOVWF SD_SEC_NUMHHH
00094C                01047 FR@LB45
00094C 0100           01048         MOVLB 0
  00000000            01049 RAM_BANK = 0
00094E 0102           01050         MOVLB 2
  00000002            01051 RAM_BANK = 2
000950 5151           01052         MOVF SD_SEC_NUM,W
000952 5DD4           01053         SUBWF SD_TEMP_DWORD,W
000954 5152           01054         MOVF SD_SEC_NUMH,W
000956 59D5           01055         SUBWFB SD_TEMP_DWORDH,W
000958 5153           01056         MOVF SD_SEC_NUMHH,W
00095A 59D6           01057         SUBWFB SD_TEMP_DWORDHH,W
00095C 5154           01058         MOVF SD_SEC_NUMHHH,W
00095E 59D7           01059         SUBWFB SD_TEMP_DWORDHHH,W
000960 5154           01060         MOVF SD_SEC_NUMHHH,W
000962 19D7           01061         XORWF SD_TEMP_DWORDHHH,W
000964 B0D8           01062         BTFSC STATUS,0,0
000966 0A80           01063         XORLW 128
000968 0100           01064         MOVLB 0
  00000000            01065 RAM_BANK = 0
00096A A8D8           01066         BTFSS STATUS,4,0
                      01067         GO@TO NX@LB46
  00000970            01068 F4_000279 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sec_Num
000970 C254 F037      01069         MOVFF SD_SEC_NUMHHH,SD_SECTOR_NUMHHH
000974 C253 F036      01070         MOVFF SD_SEC_NUMHH,SD_SECTOR_NUMHH
000978 C252 F035      01071         MOVFF SD_SEC_NUMH,SD_SECTOR_NUMH
00097C C251 F034      01072         MOVFF SD_SEC_NUM,SD_SECTOR_NUM
  00000980            01073 F4_000280 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
000980 0E01           01074         MOVLW 1
000982 0102           01075         MOVLB 2
  00000002            01076 RAM_BANK = 2
000984 6F4A           01077         MOVWF SD_RW_OPTION
  00000986            01078 F4_000281 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
000986 0100           01079         MOVLB 0
  00000000            01080 RAM_BANK = 0
                      01081         F@CALL SD_SECTOR_SUB
  0000098A            01082 F4_000283 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Buffer_Pos = $0000 To $1FF Step 2
00098A 0102           01083         MOVLB 2
  00000002            01084 RAM_BANK = 2
00098C 6B4F           01085         CLRF SD_BUFFER_POSH
00098E 6B4E           01086         CLRF SD_BUFFER_POS
000990                01087 FR@LB47
000990 0100           01088         MOVLB 0
  00000000            01089 RAM_BANK = 0
000992 0E02           01090         MOVLW 2
000994 0102           01091         MOVLB 2
  00000002            01092 RAM_BANK = 2
000996 5D4F           01093         SUBWF SD_BUFFER_POSH,W
000998 0100           01094         MOVLB 0
  00000000            01095 RAM_BANK = 0
00099A B0D8           01096         BTFSC STATUS,0,0
                      01097         GO@TO NX@LB48
  000009A0            01098 F4_000284 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Sec_Num > (SD_FAT_Sec + SD_FAT1) Or SD_Buffer_Pos >= (SD_FAT_Buffer_Pos + (2 * SD_Cluster_Seq_Num)) Then
0009A0 0102           01099         MOVLB 2
  00000002            01100 RAM_BANK = 2
0009A2 5167           01101         MOVF SD_FAT1,W
0009A4 2579           01102         ADDWF SD_FAT_SEC,W
0009A6 6E08           01103         MOVWF PBP#VAR0,0
0009A8 5168           01104         MOVF SD_FAT1H,W
0009AA 217A           01105         ADDWFC SD_FAT_SECH,W
0009AC 6E09           01106         MOVWF PBP#VAR0H,0
0009AE 5169           01107         MOVF SD_FAT1HH,W
0009B0 217B           01108         ADDWFC SD_FAT_SECHH,W
0009B2 6E0A           01109         MOVWF PBP#VAR0HH,0
0009B4 516A           01110         MOVF SD_FAT1HHH,W
0009B6 217C           01111         ADDWFC SD_FAT_SECHHH,W
0009B8 6E0B           01112         MOVWF PBP#VAR0HHH,0
0009BA 5151           01113         MOVF SD_SEC_NUM,W
0009BC 5C08           01114         SUBWF PBP#VAR0,W,0
0009BE 5152           01115         MOVF SD_SEC_NUMH,W
0009C0 5809           01116         SUBWFB PBP#VAR0H,W,0
0009C2 5153           01117         MOVF SD_SEC_NUMHH,W
0009C4 580A           01118         SUBWFB PBP#VAR0HH,W,0
0009C6 5154           01119         MOVF SD_SEC_NUMHHH,W
0009C8 580B           01120         SUBWFB PBP#VAR0HHH,W,0
0009CA 5154           01121         MOVF SD_SEC_NUMHHH,W
0009CC 180B           01122         XORWF PBP#VAR0HHH,W,0
0009CE B0D8           01123         BTFSC STATUS,0,0
0009D0 0A80           01124         XORLW 128
0009D2 0100           01125         MOVLB 0
  00000000            01126 RAM_BANK = 0
0009D4 A8D8           01127         BTFSS STATUS,4,0
                      01128         GO@TO CP@LB9
0009DA 0E00           01129         MOVLW 0
0009DC D001           01130         BRA $ + 4
0009DE                01131 CP@LB9
0009DE 0E01           01132         MOVLW 1
0009E0 6E2D           01133         MOVWF SP#P9,0
0009E2 90D8           01134         BCF STATUS,0,0
0009E4 0102           01135         MOVLB 2
  00000002            01136 RAM_BANK = 2
0009E6 35D8           01137         RLCF SD_CLUSTER_SEQ_NUM,W
0009E8 6E23           01138         MOVWF PP7,0
0009EA 35D9           01139         RLCF SD_CLUSTER_SEQ_NUMH,W
0009EC 6E24           01140         MOVWF PP7H,0
0009EE 5023           01141         MOVF PP7,W,0
0009F0 257D           01142         ADDWF SD_FAT_BUFFER_POS,W
0009F2 6E08           01143         MOVWF PBP#VAR0,0
0009F4 5024           01144         MOVF PP7H,W,0
0009F6 217E           01145         ADDWFC SD_FAT_BUFFER_POSH,W
0009F8 6E09           01146         MOVWF PBP#VAR0H,0
0009FA C24F F012      01147         MOVFF SD_BUFFER_POSH,PP0H
0009FE C24E F011      01148         MOVFF SD_BUFFER_POS,PP0
000A02 C009 F016      01149         MOVFF PBP#VAR0H,PP1H
000A06 5008           01150         MOVF PBP#VAR0,W,0
                      01151         F@CALL T@GE
000A0C 102D           01152         IORWF SP#P9,W,0
000A0E 0100           01153         MOVLB 0
  00000000            01154 RAM_BANK = 0
000A10 B4D8           01155         BTFSC STATUS,2,0
                      01156         GO@TO BC@LL49
  00000A16            01157 F4_000285 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      01158         F@CALL SD_READ_FAT_ENTRY
  00000A18            01159 F4_000286 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_FAT_Entry = $0000 Then GoTo SD_Store_FAT_Position
000A18 0102           01160         MOVLB 2
  00000002            01161 RAM_BANK = 2
000A1A 5178           01162         MOVF SD_FAT_ENTRYH,W
000A1C 1177           01163         IORWF SD_FAT_ENTRY,W
000A1E 0100           01164         MOVLB 0
  00000000            01165 RAM_BANK = 0
000A20 A4D8           01166         BTFSS STATUS,2,0
                      01167         GO@TO BC@LL51
                      01168         F@JUMP SD_STORE_FAT_POSITION
000A2A                01169 BC@LL51
  00000A2A            01170 F4_000287 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000A2A                01171 BC@LL49
  00000A2A            01172 F4_000288 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Buffer_Pos
000A2A 0E02           01173         MOVLW 2
000A2C 0102           01174         MOVLB 2
  00000002            01175 RAM_BANK = 2
000A2E 274E           01176         ADDWF SD_BUFFER_POS,F
000A30 0100           01177         MOVLB 0
  00000000            01178 RAM_BANK = 0
000A32 A0D8           01179         BTFSS STATUS,0,0
                      01180         GO@TO FR@LB47
000A36 0102           01181         MOVLB 2
  00000002            01182 RAM_BANK = 2
000A38 2B4F           01183         INCF SD_BUFFER_POSH,F
000A3A 0100           01184         MOVLB 0
  00000000            01185 RAM_BANK = 0
000A3C A4D8           01186         BTFSS STATUS,2,0
                      01187         GO@TO FR@LB47
000A40                01188 NX@LB48
  00000A40            01189 F4_000289 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Sec_Num
000A40 0102           01190         MOVLB 2
  00000002            01191 RAM_BANK = 2
000A42 2B51           01192         INCF SD_SEC_NUM,F
000A44 0E00           01193         MOVLW 0
000A46 2352           01194         ADDWFC SD_SEC_NUMH,F
000A48 2353           01195         ADDWFC SD_SEC_NUMHH,F
000A4A 2354           01196         ADDWFC SD_SEC_NUMHHH,F
000A4C 0100           01197         MOVLB 0
  00000000            01198 RAM_BANK = 0
000A4E A0D8           01199         BTFSS STATUS,0,0
                      01200         GO@TO FR@LB45
000A52                01201 NX@LB46
  00000A52            01202 F4_000290 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
000A52 0E01           01203         MOVLW 1
000A54 0102           01204         MOVLB 2
  00000002            01205 RAM_BANK = 2
000A56 6F4B           01206         MOVWF SD_EXTENDED_RETURN
  00000A58            01207 F4_000291 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000A58 0100           01208         MOVLB 0
  00000000            01209 RAM_BANK = 0
000A5A 0012           01210         RETURN 0
000A5C                01211 SD_STORE_FAT_POSITION
  00000A5C            01212 F4_000293 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Sec_Num - SD_FAT1
000A5C 0102           01213         MOVLB 2
  00000002            01214 RAM_BANK = 2
000A5E 5167           01215         MOVF SD_FAT1,W
000A60 5D51           01216         SUBWF SD_SEC_NUM,W
000A62 6F79           01217         MOVWF SD_FAT_SEC
000A64 5168           01218         MOVF SD_FAT1H,W
000A66 5952           01219         SUBWFB SD_SEC_NUMH,W
000A68 6F7A           01220         MOVWF SD_FAT_SECH
000A6A 5169           01221         MOVF SD_FAT1HH,W
000A6C 5953           01222         SUBWFB SD_SEC_NUMHH,W
000A6E 6F7B           01223         MOVWF SD_FAT_SECHH
000A70 516A           01224         MOVF SD_FAT1HHH,W
000A72 5954           01225         SUBWFB SD_SEC_NUMHHH,W
000A74 6F7C           01226         MOVWF SD_FAT_SECHHH
  00000A76            01227 F4_000294 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Buffer_Pos
000A76 C24F F27E      01228         MOVFF SD_BUFFER_POSH,SD_FAT_BUFFER_POSH
000A7A C24E F27D      01229         MOVFF SD_BUFFER_POS,SD_FAT_BUFFER_POS
  00000A7E            01230 F4_000295 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Sec * $100)
000A7E C279 F2C6      01231         MOVFF SD_FAT_SEC,SD_CLUSTER_NUMH
000A82 6BC5           01232         CLRF SD_CLUSTER_NUM
  00000A84            01233 F4_000296 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Buffer_Pos / 2) + SD_Cluster_Num
000A84 90D8           01234         BCF STATUS,0,0
000A86 317E           01235         RRCF SD_FAT_BUFFER_POSH,W
000A88 6E24           01236         MOVWF PP7H,0
000A8A 317D           01237         RRCF SD_FAT_BUFFER_POS,W
000A8C 6E23           01238         MOVWF PP7,0
000A8E 5023           01239         MOVF PP7,W,0
000A90 27C5           01240         ADDWF SD_CLUSTER_NUM,F
000A92 5024           01241         MOVF PP7H,W,0
000A94 23C6           01242         ADDWFC SD_CLUSTER_NUMH,F
  00000A96            01243 F4_000297 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 0
000A96 6BD9           01244         CLRF SD_CLUSTER_SEQ_NUMH
000A98 6BD8           01245         CLRF SD_CLUSTER_SEQ_NUM
  00000A9A            01246 F4_000298 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Buffer_Pos = SD_FAT_Buffer_Pos To $1FF Step 2
000A9A C27E F24F      01247         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
000A9E C27D F24E      01248         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
000AA2                01249 FR@LB53
000AA2 0100           01250         MOVLB 0
  00000000            01251 RAM_BANK = 0
000AA4 0E02           01252         MOVLW 2
000AA6 0102           01253         MOVLB 2
  00000002            01254 RAM_BANK = 2
000AA8 5D4F           01255         SUBWF SD_BUFFER_POSH,W
000AAA 0100           01256         MOVLB 0
  00000000            01257 RAM_BANK = 0
000AAC B0D8           01258         BTFSC STATUS,0,0
                      01259         GO@TO NX@LB54
  00000AB2            01260 F4_000299 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      01261         F@CALL SD_READ_FAT_ENTRY
  00000AB4            01262 F4_000300 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_FAT_Entry = $0000 Then
000AB4 0102           01263         MOVLB 2
  00000002            01264 RAM_BANK = 2
000AB6 5178           01265         MOVF SD_FAT_ENTRYH,W
000AB8 1177           01266         IORWF SD_FAT_ENTRY,W
000ABA 0100           01267         MOVLB 0
  00000000            01268 RAM_BANK = 0
000ABC A4D8           01269         BTFSS STATUS,2,0
                      01270         GO@TO BC@LL55
  00000AC2            01271 F4_000301 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Seq_Num
000AC2 0102           01272         MOVLB 2
  00000002            01273 RAM_BANK = 2
000AC4 4BD8           01274         INFSNZ SD_CLUSTER_SEQ_NUM,F
000AC6 2BD9           01275         INCF SD_CLUSTER_SEQ_NUMH,F
000AC8 0100           01276         MOVLB 0
  00000000            01277 RAM_BANK = 0
                      01278         F@JUMP BC@LL56
000ACE                01279 BC@LL55
  00000ACE            01280 F4_000302 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  00000ACE            01281 F4_000303 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Store_Cluster_Seq
                      01282         F@JUMP SD_STORE_CLUSTER_SEQ
  00000AD2            01283 F4_000304 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000AD2                01284 BC@LL56
  00000AD2            01285 F4_000305 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Buffer_Pos
000AD2 0E02           01286         MOVLW 2
000AD4 0102           01287         MOVLB 2
  00000002            01288 RAM_BANK = 2
000AD6 274E           01289         ADDWF SD_BUFFER_POS,F
000AD8 0100           01290         MOVLB 0
  00000000            01291 RAM_BANK = 0
000ADA A0D8           01292         BTFSS STATUS,0,0
                      01293         GO@TO FR@LB53
000ADE 0102           01294         MOVLB 2
  00000002            01295 RAM_BANK = 2
000AE0 2B4F           01296         INCF SD_BUFFER_POSH,F
000AE2 0100           01297         MOVLB 0
  00000000            01298 RAM_BANK = 0
000AE4 A4D8           01299         BTFSS STATUS,2,0
                      01300         GO@TO FR@LB53
000AE8                01301 NX@LB54
000AE8                01302 SD_STORE_CLUSTER_SEQ
  00000AE8            01303 F4_000307 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Idx = 1
000AE8 0102           01304         MOVLB 2
  00000002            01305 RAM_BANK = 2
000AEA 6BDB           01306         CLRF SD_CLUSTER_SEQ_IDXH
000AEC 0E01           01307         MOVLW 1
000AEE 6FDA           01308         MOVWF SD_CLUSTER_SEQ_IDX
  00000AF0            01309 F4_000308 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
000AF0 6B4B           01310         CLRF SD_EXTENDED_RETURN
  00000AF2            01311 F4_000309 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000AF2 0100           01312         MOVLB 0
  00000000            01313 RAM_BANK = 0
000AF4 0012           01314         RETURN 0
000AF6                01315 SD_MODIFY_FILE_NAME
  00000AF6            01316 F4_000312 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 0
000AF6 0102           01317         MOVLB 2
  00000002            01318 RAM_BANK = 2
000AF8 6BC4           01319         CLRF SD_NULL_F
  00000AFA            01320 F4_000313 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
000AFA 6B50           01321         CLRF SD_ROOT_DIR_FILE_POS
000AFC                01322 FR@LB58
000AFC 0100           01323         MOVLB 0
  00000000            01324 RAM_BANK = 0
000AFE 0E08           01325         MOVLW 8
000B00 0102           01326         MOVLB 2
  00000002            01327 RAM_BANK = 2
000B02 5D50           01328         SUBWF SD_ROOT_DIR_FILE_POS,W
000B04 0100           01329         MOVLB 0
  00000000            01330 RAM_BANK = 0
000B06 B0D8           01331         BTFSC STATUS,0,0
                      01332         GO@TO NX@LB59
  00000B0C            01333 F4_000314 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Null_F = 1 Or SD_File_Name[SD_Root_Dir_File_Pos] = 0 Then
000B0C 0E01           01334         MOVLW 1
000B0E 0102           01335         MOVLB 2
  00000002            01336 RAM_BANK = 2
000B10 5DC4           01337         SUBWF SD_NULL_F,W
000B12 0E01           01338         MOVLW 1
000B14 A4D8           01339         BTFSS STATUS,2,0
000B16 0E00           01340         MOVLW 0
000B18 6E2D           01341         MOVWF SP#P9,0
000B1A EE02 F091      01342         LFSR 0,SD_FILE_NAME
000B1E 5150           01343         MOVF SD_ROOT_DIR_FILE_POS,W
000B20 50EB           01344         MOVF PLUSW0,W,0
000B22 6E08           01345         MOVWF PBP#VAR0,0
000B24 0E01           01346         MOVLW 1
000B26 5208           01347         MOVF PBP#VAR0,F,0
000B28 A4D8           01348         BTFSS STATUS,2,0
000B2A 0E00           01349         MOVLW 0
000B2C 102D           01350         IORWF SP#P9,W,0
000B2E 0100           01351         MOVLB 0
  00000000            01352 RAM_BANK = 0
000B30 B4D8           01353         BTFSC STATUS,2,0
                      01354         GO@TO BC@LL60
  00000B36            01355 F4_000315 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Name[SD_Root_Dir_File_Pos] = $20
000B36 0E20           01356         MOVLW 32
000B38 6EF3           01357         MOVWF PRODL,0
000B3A EE02 F091      01358         LFSR 0,SD_FILE_NAME
000B3E 0102           01359         MOVLB 2
  00000002            01360 RAM_BANK = 2
000B40 5150           01361         MOVF SD_ROOT_DIR_FILE_POS,W
000B42 CFF3 FFEB      01362         MOVFF PRODL,PLUSW0
  00000B46            01363 F4_000316 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000B46 0E01           01364         MOVLW 1
000B48 6FC4           01365         MOVWF SD_NULL_F
  00000B4A            01366 F4_000317 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000B4A                01367 BC@LL60
000B4A 0100           01368         MOVLB 0
  00000000            01369 RAM_BANK = 0
  00000B4C            01370 F4_000318 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000B4C 0102           01371         MOVLB 2
  00000002            01372 RAM_BANK = 2
000B4E 2B50           01373         INCF SD_ROOT_DIR_FILE_POS,F
000B50 0100           01374         MOVLB 0
  00000000            01375 RAM_BANK = 0
000B52 A4D8           01376         BTFSS STATUS,2,0
                      01377         GO@TO FR@LB58
000B56                01378 NX@LB59
  00000B56            01379 F4_000319 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 0
000B56 0102           01380         MOVLB 2
  00000002            01381 RAM_BANK = 2
000B58 6BC4           01382         CLRF SD_NULL_F
  00000B5A            01383 F4_000320 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
000B5A 0E08           01384         MOVLW 8
000B5C 6F50           01385         MOVWF SD_ROOT_DIR_FILE_POS
000B5E                01386 FR@LB62
000B5E 0100           01387         MOVLB 0
  00000000            01388 RAM_BANK = 0
000B60 0E0B           01389         MOVLW 11
000B62 0102           01390         MOVLB 2
  00000002            01391 RAM_BANK = 2
000B64 5D50           01392         SUBWF SD_ROOT_DIR_FILE_POS,W
000B66 0100           01393         MOVLB 0
  00000000            01394 RAM_BANK = 0
000B68 B0D8           01395         BTFSC STATUS,0,0
                      01396         GO@TO NX@LB63
  00000B6E            01397 F4_000321 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Null_F = 1 Or SD_File_Ext[SD_Root_Dir_File_Pos - $08] = 0 Then
000B6E 0E01           01398         MOVLW 1
000B70 0102           01399         MOVLB 2
  00000002            01400 RAM_BANK = 2
000B72 5DC4           01401         SUBWF SD_NULL_F,W
000B74 0E01           01402         MOVLW 1
000B76 A4D8           01403         BTFSS STATUS,2,0
000B78 0E00           01404         MOVLW 0
000B7A 6E2D           01405         MOVWF SP#P9,0
000B7C 0E08           01406         MOVLW 8
000B7E 5D50           01407         SUBWF SD_ROOT_DIR_FILE_POS,W
000B80 EE02 F09A      01408         LFSR 0,SD_FILE_EXT
000B84 50EB           01409         MOVF PLUSW0,W,0
000B86 6E08           01410         MOVWF PBP#VAR0,0
000B88 0E01           01411         MOVLW 1
000B8A 5208           01412         MOVF PBP#VAR0,F,0
000B8C A4D8           01413         BTFSS STATUS,2,0
000B8E 0E00           01414         MOVLW 0
000B90 102D           01415         IORWF SP#P9,W,0
000B92 0100           01416         MOVLB 0
  00000000            01417 RAM_BANK = 0
000B94 B4D8           01418         BTFSC STATUS,2,0
                      01419         GO@TO BC@LL64
  00000B9A            01420 F4_000322 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Ext[SD_Root_Dir_File_Pos - $08] = $20
000B9A 0E08           01421         MOVLW 8
000B9C 0102           01422         MOVLB 2
  00000002            01423 RAM_BANK = 2
000B9E 5D50           01424         SUBWF SD_ROOT_DIR_FILE_POS,W
000BA0 0F9A           01425         ADDLW SD_FILE_EXT
000BA2 6EE9           01426         MOVWF FSR0L,0
000BA4 0E02           01427         MOVLW SD_FILE_EXT >> 8
000BA6 6AEA           01428         CLRF FSR0H,0
000BA8 22EA           01429         ADDWFC FSR0H,F,0
000BAA 0E20           01430         MOVLW 32
000BAC 6EEF           01431         MOVWF INDF0,0
  00000BAE            01432 F4_000323 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000BAE 0E01           01433         MOVLW 1
000BB0 6FC4           01434         MOVWF SD_NULL_F
  00000BB2            01435 F4_000324 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000BB2                01436 BC@LL64
000BB2 0100           01437         MOVLB 0
  00000000            01438 RAM_BANK = 0
  00000BB4            01439 F4_000325 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000BB4 0102           01440         MOVLB 2
  00000002            01441 RAM_BANK = 2
000BB6 2B50           01442         INCF SD_ROOT_DIR_FILE_POS,F
000BB8 0100           01443         MOVLB 0
  00000000            01444 RAM_BANK = 0
000BBA A4D8           01445         BTFSS STATUS,2,0
                      01446         GO@TO FR@LB62
000BBE                01447 NX@LB63
  00000BBE            01448 F4_000326 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000BBE 0012           01449         RETURN 0
000BC0                01450 SD_FIND_ROOT_DIR_ENTRY
  00000BC0            01451 F4_000329 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Modify_File_Name
                      01452         F@CALL SD_MODIFY_FILE_NAME
  00000BC2            01453 F4_000330 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Root_Entries = 0
000BC2 0102           01454         MOVLB 2
  00000002            01455 RAM_BANK = 2
000BC4 6B62           01456         CLRF SD_NUM_OF_ROOT_ENTRIESH
000BC6 6B61           01457         CLRF SD_NUM_OF_ROOT_ENTRIES
  00000BC8            01458 F4_000331 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Dword = SD_Root_Dir + SD_Secs_in_Root - 1
000BC8 5163           01459         MOVF SD_SECS_IN_ROOT,W
000BCA 256F           01460         ADDWF SD_ROOT_DIR,W
000BCC 6E23           01461         MOVWF PP7,0
000BCE 5164           01462         MOVF SD_SECS_IN_ROOTH,W
000BD0 2170           01463         ADDWFC SD_ROOT_DIRH,W
000BD2 6E24           01464         MOVWF PP7H,0
000BD4 0E00           01465         MOVLW 0
000BD6 2171           01466         ADDWFC SD_ROOT_DIRHH,W
000BD8 6E25           01467         MOVWF PP7HH,0
000BDA 0E00           01468         MOVLW 0
000BDC 2172           01469         ADDWFC SD_ROOT_DIRHHH,W
000BDE 6E26           01470         MOVWF PP7HHH,0
000BE0 0423           01471         DECF PP7,W,0
000BE2 6FD4           01472         MOVWF SD_TEMP_DWORD
000BE4 0E00           01473         MOVLW 0
000BE6 5824           01474         SUBWFB PP7H,W,0
000BE8 6FD5           01475         MOVWF SD_TEMP_DWORDH
000BEA 0E00           01476         MOVLW 0
000BEC 5825           01477         SUBWFB PP7HH,W,0
000BEE 6FD6           01478         MOVWF SD_TEMP_DWORDHH
000BF0 0E00           01479         MOVLW 0
000BF2 5826           01480         SUBWFB PP7HHH,W,0
000BF4 6FD7           01481         MOVWF SD_TEMP_DWORDHHH
  00000BF6            01482 F4_000332 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Sec_Num = SD_Root_Dir To SD_Temp_Dword
000BF6 C272 F254      01483         MOVFF SD_ROOT_DIRHHH,SD_SEC_NUMHHH
000BFA C271 F253      01484         MOVFF SD_ROOT_DIRHH,SD_SEC_NUMHH
000BFE C270 F252      01485         MOVFF SD_ROOT_DIRH,SD_SEC_NUMH
000C02 C26F F251      01486         MOVFF SD_ROOT_DIR,SD_SEC_NUM
000C06                01487 FR@LB66
000C06 0100           01488         MOVLB 0
  00000000            01489 RAM_BANK = 0
000C08 0102           01490         MOVLB 2
  00000002            01491 RAM_BANK = 2
000C0A 5151           01492         MOVF SD_SEC_NUM,W
000C0C 5DD4           01493         SUBWF SD_TEMP_DWORD,W
000C0E 5152           01494         MOVF SD_SEC_NUMH,W
000C10 59D5           01495         SUBWFB SD_TEMP_DWORDH,W
000C12 5153           01496         MOVF SD_SEC_NUMHH,W
000C14 59D6           01497         SUBWFB SD_TEMP_DWORDHH,W
000C16 5154           01498         MOVF SD_SEC_NUMHHH,W
000C18 59D7           01499         SUBWFB SD_TEMP_DWORDHHH,W
000C1A 5154           01500         MOVF SD_SEC_NUMHHH,W
000C1C 19D7           01501         XORWF SD_TEMP_DWORDHHH,W
000C1E B0D8           01502         BTFSC STATUS,0,0
000C20 0A80           01503         XORLW 128
000C22 0100           01504         MOVLB 0
  00000000            01505 RAM_BANK = 0
000C24 A8D8           01506         BTFSS STATUS,4,0
                      01507         GO@TO NX@LB67
  00000C2A            01508 F4_000333 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sec_Num
000C2A C254 F037      01509         MOVFF SD_SEC_NUMHHH,SD_SECTOR_NUMHHH
000C2E C253 F036      01510         MOVFF SD_SEC_NUMHH,SD_SECTOR_NUMHH
000C32 C252 F035      01511         MOVFF SD_SEC_NUMH,SD_SECTOR_NUMH
000C36 C251 F034      01512         MOVFF SD_SEC_NUM,SD_SECTOR_NUM
  00000C3A            01513 F4_000334 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
000C3A 0E01           01514         MOVLW 1
000C3C 0102           01515         MOVLB 2
  00000002            01516 RAM_BANK = 2
000C3E 6F4A           01517         MOVWF SD_RW_OPTION
  00000C40            01518 F4_000335 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
000C40 0100           01519         MOVLB 0
  00000000            01520 RAM_BANK = 0
                      01521         F@CALL SD_SECTOR_SUB
  00000C46            01522 F4_000337 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Buffer_Pos = $000 To $1FF Step 32
000C46 0102           01523         MOVLB 2
  00000002            01524 RAM_BANK = 2
000C48 6B4F           01525         CLRF SD_BUFFER_POSH
000C4A 6B4E           01526         CLRF SD_BUFFER_POS
000C4C                01527 FR@LB68
000C4C 0100           01528         MOVLB 0
  00000000            01529 RAM_BANK = 0
000C4E 0E02           01530         MOVLW 2
000C50 0102           01531         MOVLB 2
  00000002            01532 RAM_BANK = 2
000C52 5D4F           01533         SUBWF SD_BUFFER_POSH,W
000C54 0100           01534         MOVLB 0
  00000000            01535 RAM_BANK = 0
000C56 B0D8           01536         BTFSC STATUS,0,0
                      01537         GO@TO NX@LB69
  00000C5C            01538 F4_000338 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = 0 To 31
000C5C 0102           01539         MOVLB 2
  00000002            01540 RAM_BANK = 2
000C5E 6B50           01541         CLRF SD_ROOT_DIR_FILE_POS
000C60                01542 FR@LB70
000C60 0100           01543         MOVLB 0
  00000000            01544 RAM_BANK = 0
000C62 0E20           01545         MOVLW 32
000C64 0102           01546         MOVLB 2
  00000002            01547 RAM_BANK = 2
000C66 5D50           01548         SUBWF SD_ROOT_DIR_FILE_POS,W
000C68 0100           01549         MOVLB 0
  00000000            01550 RAM_BANK = 0
000C6A B0D8           01551         BTFSC STATUS,0,0
                      01552         GO@TO NX@LB71
  00000C70            01553 F4_000339 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Temp = SD_Buffer_Pos + SD_Root_Dir_File_Pos
000C70 0102           01554         MOVLB 2
  00000002            01555 RAM_BANK = 2
000C72 5150           01556         MOVF SD_ROOT_DIR_FILE_POS,W
000C74 254E           01557         ADDWF SD_BUFFER_POS,W
000C76 6FD2           01558         MOVWF SD_TEMP
000C78 0E00           01559         MOVLW 0
000C7A 214F           01560         ADDWFC SD_BUFFER_POSH,W
000C7C 6FD3           01561         MOVWF SD_TEMPH
  00000C7E            01562 F4_000340 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Temp > $0FF Then
000C7E 0E01           01563         MOVLW 1
000C80 5DD3           01564         SUBWF SD_TEMPH,W
000C82 0100           01565         MOVLB 0
  00000000            01566 RAM_BANK = 0
000C84 A0D8           01567         BTFSS STATUS,0,0
                      01568         GO@TO BC@LL72
  00000C8A            01569 F4_000341 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_File[SD_Root_Dir_File_Pos] = SD_Buffer1[SD_Temp - $100]
000C8A 0102           01570         MOVLB 2
  00000002            01571 RAM_BANK = 2
000C8C 51D2           01572         MOVF SD_TEMP,W
000C8E EE01 F041      01573         LFSR 0,SD_BUFFER1
000C92 26E9           01574         ADDWF FSR0L,F,0
000C94 0E00           01575         MOVLW 0
000C96 22EA           01576         ADDWFC FSR0H,F,0
000C98 CFEF F008      01577         MOVFF INDF0,PBP#VAR0
000C9C EE02 F09E      01578         LFSR 0,SD_ROOT_DIR_FILE
000CA0 5150           01579         MOVF SD_ROOT_DIR_FILE_POS,W
000CA2 C008 FFEB      01580         MOVFF PBP#VAR0,PLUSW0
000CA6 0100           01581         MOVLB 0
  00000000            01582 RAM_BANK = 0
                      01583         F@JUMP BC@LL73
000CAC                01584 BC@LL72
  00000CAC            01585 F4_000342 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  00000CAC            01586 F4_000343 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_File[SD_Root_Dir_File_Pos] = SD_Buffer0[SD_Temp]
000CAC EE00 F041      01587         LFSR 0,SD_BUFFER0
000CB0 0102           01588         MOVLB 2
  00000002            01589 RAM_BANK = 2
000CB2 51D2           01590         MOVF SD_TEMP,W
000CB4 26E9           01591         ADDWF FSR0L,F,0
000CB6 0E00           01592         MOVLW 0
000CB8 22EA           01593         ADDWFC FSR0H,F,0
000CBA CFEF F008      01594         MOVFF INDF0,PBP#VAR0
000CBE EE02 F09E      01595         LFSR 0,SD_ROOT_DIR_FILE
000CC2 5150           01596         MOVF SD_ROOT_DIR_FILE_POS,W
000CC4 C008 FFEB      01597         MOVFF PBP#VAR0,PLUSW0
  00000CC8            01598 F4_000344 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000CC8                01599 BC@LL73
000CC8 0100           01600         MOVLB 0
  00000000            01601 RAM_BANK = 0
  00000CCA            01602 F4_000345 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000CCA 0102           01603         MOVLB 2
  00000002            01604 RAM_BANK = 2
000CCC 2B50           01605         INCF SD_ROOT_DIR_FILE_POS,F
000CCE 0100           01606         MOVLB 0
  00000000            01607 RAM_BANK = 0
000CD0 A4D8           01608         BTFSS STATUS,2,0
                      01609         GO@TO FR@LB70
000CD4                01610 NX@LB71
  00000CD4            01611 F4_000346 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Select SD_Find_Root_Dir_Entry_F
  00000CD4            01612 F4_000347 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Case 0
000CD4 0102           01613         MOVLB 2
  00000002            01614 RAM_BANK = 2
000CD6 53E0           01615         MOVF SD_FIND_ROOT_DIR_ENTRY_F,F
000CD8 0100           01616         MOVLB 0
  00000000            01617 RAM_BANK = 0
000CDA A4D8           01618         BTFSS STATUS,2,0
                      01619         GO@TO BC@LL75
  00000CE0            01620 F4_000348 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[0] = $00 Or SD_Root_Dir_File[0] = $E5 Then
000CE0 0102           01621         MOVLB 2
  00000002            01622 RAM_BANK = 2
000CE2 519E           01623         MOVF SD_ROOT_DIR_FILE#0,W
000CE4 6E08           01624         MOVWF PBP#VAR0,0
000CE6 0E01           01625         MOVLW 1
000CE8 5208           01626         MOVF PBP#VAR0,F,0
000CEA A4D8           01627         BTFSS STATUS,2,0
000CEC 0E00           01628         MOVLW 0
000CEE 6E2D           01629         MOVWF SP#P9,0
000CF0 519E           01630         MOVF SD_ROOT_DIR_FILE#0,W
000CF2 6E08           01631         MOVWF PBP#VAR0,0
000CF4 0EE5           01632         MOVLW 229
000CF6 5C08           01633         SUBWF PBP#VAR0,W,0
000CF8 0E01           01634         MOVLW 1
000CFA A4D8           01635         BTFSS STATUS,2,0
000CFC 0E00           01636         MOVLW 0
000CFE 102D           01637         IORWF SP#P9,W,0
000D00 0100           01638         MOVLB 0
  00000000            01639 RAM_BANK = 0
000D02 B4D8           01640         BTFSC STATUS,2,0
                      01641         GO@TO BC@LL78
  00000D08            01642 F4_000349 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Store_Root_Direct_Position
                      01643         F@JUMP SD_STORE_ROOT_DIRECT_POSITION
  00000D0C            01644 F4_000350 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000D0C                01645 BC@LL78
                      01646         F@JUMP BC@LL74
000D10                01647 BC@LL75
  00000D10            01648 F4_000351 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Case 1
000D10 0E01           01649         MOVLW 1
000D12 0102           01650         MOVLB 2
  00000002            01651 RAM_BANK = 2
000D14 5DE0           01652         SUBWF SD_FIND_ROOT_DIR_ENTRY_F,W
000D16 0100           01653         MOVLB 0
  00000000            01654 RAM_BANK = 0
000D18 A4D8           01655         BTFSS STATUS,2,0
                      01656         GO@TO BC@LL80
  00000D1E            01657 F4_000352 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 0
000D1E 0102           01658         MOVLB 2
  00000002            01659 RAM_BANK = 2
000D20 6BC4           01660         CLRF SD_NULL_F
  00000D22            01661 F4_000353 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
000D22 6B50           01662         CLRF SD_ROOT_DIR_FILE_POS
000D24                01663 FR@LB82
000D24 0100           01664         MOVLB 0
  00000000            01665 RAM_BANK = 0
000D26 0E08           01666         MOVLW 8
000D28 0102           01667         MOVLB 2
  00000002            01668 RAM_BANK = 2
000D2A 5D50           01669         SUBWF SD_ROOT_DIR_FILE_POS,W
000D2C 0100           01670         MOVLB 0
  00000000            01671 RAM_BANK = 0
000D2E B0D8           01672         BTFSC STATUS,0,0
                      01673         GO@TO NX@LB83
  00000D34            01674 F4_000354 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[SD_Root_Dir_File_Pos] <> SD_File_Name[SD_Root_Dir_File_Pos] Then
000D34 EE02 F09E      01675         LFSR 0,SD_ROOT_DIR_FILE
000D38 0102           01676         MOVLB 2
  00000002            01677 RAM_BANK = 2
000D3A 5150           01678         MOVF SD_ROOT_DIR_FILE_POS,W
000D3C 50EB           01679         MOVF PLUSW0,W,0
000D3E 6E08           01680         MOVWF PBP#VAR0,0
000D40 EE02 F091      01681         LFSR 0,SD_FILE_NAME
000D44 5150           01682         MOVF SD_ROOT_DIR_FILE_POS,W
000D46 50EB           01683         MOVF PLUSW0,W,0
000D48 6E0C           01684         MOVWF PBP#VAR1,0
000D4A 5008           01685         MOVF PBP#VAR0,W,0
000D4C 5C0C           01686         SUBWF PBP#VAR1,W,0
000D4E 0100           01687         MOVLB 0
  00000000            01688 RAM_BANK = 0
000D50 B4D8           01689         BTFSC STATUS,2,0
                      01690         GO@TO BC@LL84
  00000D56            01691 F4_000355 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000D56 0E01           01692         MOVLW 1
000D58 0102           01693         MOVLB 2
  00000002            01694 RAM_BANK = 2
000D5A 6FC4           01695         MOVWF SD_NULL_F
  00000D5C            01696 F4_000356 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Break
000D5C 0100           01697         MOVLB 0
  00000000            01698 RAM_BANK = 0
                      01699         F@JUMP NX@LB83
  00000D62            01700 F4_000357 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000D62                01701 BC@LL84
  00000D62            01702 F4_000358 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000D62 0102           01703         MOVLB 2
  00000002            01704 RAM_BANK = 2
000D64 2B50           01705         INCF SD_ROOT_DIR_FILE_POS,F
000D66 0100           01706         MOVLB 0
  00000000            01707 RAM_BANK = 0
000D68 A4D8           01708         BTFSS STATUS,2,0
                      01709         GO@TO FR@LB82
000D6C                01710 NX@LB83
  00000D6C            01711 F4_000359 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
000D6C 0E08           01712         MOVLW 8
000D6E 0102           01713         MOVLB 2
  00000002            01714 RAM_BANK = 2
000D70 6F50           01715         MOVWF SD_ROOT_DIR_FILE_POS
000D72                01716 FR@LB86
000D72 0100           01717         MOVLB 0
  00000000            01718 RAM_BANK = 0
000D74 0E0B           01719         MOVLW 11
000D76 0102           01720         MOVLB 2
  00000002            01721 RAM_BANK = 2
000D78 5D50           01722         SUBWF SD_ROOT_DIR_FILE_POS,W
000D7A 0100           01723         MOVLB 0
  00000000            01724 RAM_BANK = 0
000D7C B0D8           01725         BTFSC STATUS,0,0
                      01726         GO@TO NX@LB87
  00000D82            01727 F4_000360 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[SD_Root_Dir_File_Pos] <> SD_File_Ext[SD_Root_Dir_File_Pos - $08] Then
000D82 EE02 F09E      01728         LFSR 0,SD_ROOT_DIR_FILE
000D86 0102           01729         MOVLB 2
  00000002            01730 RAM_BANK = 2
000D88 5150           01731         MOVF SD_ROOT_DIR_FILE_POS,W
000D8A 50EB           01732         MOVF PLUSW0,W,0
000D8C 6E08           01733         MOVWF PBP#VAR0,0
000D8E 0E08           01734         MOVLW 8
000D90 5D50           01735         SUBWF SD_ROOT_DIR_FILE_POS,W
000D92 EE02 F09A      01736         LFSR 0,SD_FILE_EXT
000D96 50EB           01737         MOVF PLUSW0,W,0
000D98 6E0C           01738         MOVWF PBP#VAR1,0
000D9A 5008           01739         MOVF PBP#VAR0,W,0
000D9C 5C0C           01740         SUBWF PBP#VAR1,W,0
000D9E 0100           01741         MOVLB 0
  00000000            01742 RAM_BANK = 0
000DA0 B4D8           01743         BTFSC STATUS,2,0
                      01744         GO@TO BC@LL88
  00000DA6            01745 F4_000361 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000DA6 0E01           01746         MOVLW 1
000DA8 0102           01747         MOVLB 2
  00000002            01748 RAM_BANK = 2
000DAA 6FC4           01749         MOVWF SD_NULL_F
  00000DAC            01750 F4_000362 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Break
000DAC 0100           01751         MOVLB 0
  00000000            01752 RAM_BANK = 0
                      01753         F@JUMP NX@LB87
  00000DB2            01754 F4_000363 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000DB2                01755 BC@LL88
  00000DB2            01756 F4_000364 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000DB2 0102           01757         MOVLB 2
  00000002            01758 RAM_BANK = 2
000DB4 2B50           01759         INCF SD_ROOT_DIR_FILE_POS,F
000DB6 0100           01760         MOVLB 0
  00000000            01761 RAM_BANK = 0
000DB8 A4D8           01762         BTFSS STATUS,2,0
                      01763         GO@TO FR@LB86
000DBC                01764 NX@LB87
  00000DBC            01765 F4_000365 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Null_F = 0 Then GoTo SD_Store_Root_Direct_Position
000DBC 0102           01766         MOVLB 2
  00000002            01767 RAM_BANK = 2
000DBE 53C4           01768         MOVF SD_NULL_F,F
000DC0 0100           01769         MOVLB 0
  00000000            01770 RAM_BANK = 0
000DC2 A4D8           01771         BTFSS STATUS,2,0
                      01772         GO@TO BC@LL90
                      01773         F@JUMP SD_STORE_ROOT_DIRECT_POSITION
000DCC                01774 BC@LL90
                      01775         F@JUMP BC@LL74
000DD0                01776 BC@LL80
  00000DD0            01777 F4_000366 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Case 2
000DD0 0E02           01778         MOVLW 2
000DD2 0102           01779         MOVLB 2
  00000002            01780 RAM_BANK = 2
000DD4 5DE0           01781         SUBWF SD_FIND_ROOT_DIR_ENTRY_F,W
000DD6 0100           01782         MOVLB 0
  00000000            01783 RAM_BANK = 0
000DD8 A4D8           01784         BTFSS STATUS,2,0
                      01785         GO@TO BC@LL92
  00000DDE            01786 F4_000367 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$0B] | %11110000 <> $FF Then
000DDE 0102           01787         MOVLB 2
  00000002            01788 RAM_BANK = 2
000DE0 51A9           01789         MOVF SD_ROOT_DIR_FILE#11,W
000DE2 6E0C           01790         MOVWF PBP#VAR1,0
000DE4 0EF0           01791         MOVLW 240
000DE6 100C           01792         IORWF PBP#VAR1,W,0
000DE8 6E08           01793         MOVWF PBP#VAR0,0
000DEA 0E00           01794         MOVLW 0
000DEC 6E09           01795         MOVWF PBP#VAR0H,0
000DEE 2808           01796         INCF PBP#VAR0,W,0
000DF0 1009           01797         IORWF PBP#VAR0H,W,0
000DF2 0100           01798         MOVLB 0
  00000000            01799 RAM_BANK = 0
000DF4 B4D8           01800         BTFSC STATUS,2,0
                      01801         GO@TO BC@LL94
  00000DFA            01802 F4_000368 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$00] <> $00 Then
000DFA 0102           01803         MOVLB 2
  00000002            01804 RAM_BANK = 2
000DFC 519E           01805         MOVF SD_ROOT_DIR_FILE#0,W
000DFE 6E08           01806         MOVWF PBP#VAR0,0
000E00 5208           01807         MOVF PBP#VAR0,F,0
000E02 0100           01808         MOVLB 0
  00000000            01809 RAM_BANK = 0
000E04 B4D8           01810         BTFSC STATUS,2,0
                      01811         GO@TO BC@LL96
  00000E0A            01812 F4_000369 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$00] <> $E5 Then
000E0A 0102           01813         MOVLB 2
  00000002            01814 RAM_BANK = 2
000E0C 519E           01815         MOVF SD_ROOT_DIR_FILE#0,W
000E0E 6E08           01816         MOVWF PBP#VAR0,0
000E10 0EE5           01817         MOVLW 229
000E12 5C08           01818         SUBWF PBP#VAR0,W,0
000E14 0100           01819         MOVLB 0
  00000000            01820 RAM_BANK = 0
000E16 B4D8           01821         BTFSC STATUS,2,0
                      01822         GO@TO BC@LL98
  00000E1C            01823 F4_000370 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$0B] & %00011110 = 0 Then
000E1C 0102           01824         MOVLB 2
  00000002            01825 RAM_BANK = 2
000E1E 51A9           01826         MOVF SD_ROOT_DIR_FILE#11,W
000E20 6E0C           01827         MOVWF PBP#VAR1,0
000E22 0E1E           01828         MOVLW 30
000E24 140C           01829         ANDWF PBP#VAR1,W,0
000E26 6A09           01830         CLRF PBP#VAR0H,0
000E28 6E08           01831         MOVWF PBP#VAR0,0
000E2A 5009           01832         MOVF PBP#VAR0H,W,0
000E2C 1008           01833         IORWF PBP#VAR0,W,0
000E2E 0100           01834         MOVLB 0
  00000000            01835 RAM_BANK = 0
000E30 A4D8           01836         BTFSS STATUS,2,0
                      01837         GO@TO BC@LL100
  00000E36            01838 F4_000371 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Num_of_Root_Entries
000E36 0102           01839         MOVLB 2
  00000002            01840 RAM_BANK = 2
000E38 4B61           01841         INFSNZ SD_NUM_OF_ROOT_ENTRIES,F
000E3A 2B62           01842         INCF SD_NUM_OF_ROOT_ENTRIESH,F
  00000E3C            01843 F4_000372 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Num_of_Root_Entries = SD_File_Num Then
000E3C 51E7           01844         MOVF SD_FILE_NUMH,W
000E3E 5D62           01845         SUBWF SD_NUM_OF_ROOT_ENTRIESH,W
000E40 0100           01846         MOVLB 0
  00000000            01847 RAM_BANK = 0
000E42 A4D8           01848         BTFSS STATUS,2,0
                      01849         GO@TO BC@LL102
000E48 0102           01850         MOVLB 2
  00000002            01851 RAM_BANK = 2
000E4A 51E6           01852         MOVF SD_FILE_NUM,W
000E4C 5D61           01853         SUBWF SD_NUM_OF_ROOT_ENTRIES,W
000E4E 0100           01854         MOVLB 0
  00000000            01855 RAM_BANK = 0
000E50 A4D8           01856         BTFSS STATUS,2,0
                      01857         GO@TO BC@LL102
  00000E56            01858 F4_000373 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
000E56 0102           01859         MOVLB 2
  00000002            01860 RAM_BANK = 2
000E58 6B50           01861         CLRF SD_ROOT_DIR_FILE_POS
000E5A                01862 FR@LB104
000E5A 0100           01863         MOVLB 0
  00000000            01864 RAM_BANK = 0
000E5C 0E08           01865         MOVLW 8
000E5E 0102           01866         MOVLB 2
  00000002            01867 RAM_BANK = 2
000E60 5D50           01868         SUBWF SD_ROOT_DIR_FILE_POS,W
000E62 0100           01869         MOVLB 0
  00000000            01870 RAM_BANK = 0
000E64 B0D8           01871         BTFSC STATUS,0,0
                      01872         GO@TO NX@LB105
  00000E6A            01873 F4_000374 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Name[SD_Root_Dir_File_Pos] = SD_Root_Dir_File[SD_Root_Dir_File_Pos]
000E6A EE02 F09E      01874         LFSR 0,SD_ROOT_DIR_FILE
000E6E 0102           01875         MOVLB 2
  00000002            01876 RAM_BANK = 2
000E70 5150           01877         MOVF SD_ROOT_DIR_FILE_POS,W
000E72 CFEB F008      01878         MOVFF PLUSW0,PBP#VAR0
000E76 EE02 F091      01879         LFSR 0,SD_FILE_NAME
000E7A 5150           01880         MOVF SD_ROOT_DIR_FILE_POS,W
000E7C C008 FFEB      01881         MOVFF PBP#VAR0,PLUSW0
  00000E80            01882 F4_000375 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000E80 2B50           01883         INCF SD_ROOT_DIR_FILE_POS,F
000E82 0100           01884         MOVLB 0
  00000000            01885 RAM_BANK = 0
000E84 A4D8           01886         BTFSS STATUS,2,0
                      01887         GO@TO FR@LB104
000E88                01888 NX@LB105
  00000E88            01889 F4_000376 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
000E88 0E08           01890         MOVLW 8
000E8A 0102           01891         MOVLB 2
  00000002            01892 RAM_BANK = 2
000E8C 6F50           01893         MOVWF SD_ROOT_DIR_FILE_POS
000E8E                01894 FR@LB106
000E8E 0100           01895         MOVLB 0
  00000000            01896 RAM_BANK = 0
000E90 0E0B           01897         MOVLW 11
000E92 0102           01898         MOVLB 2
  00000002            01899 RAM_BANK = 2
000E94 5D50           01900         SUBWF SD_ROOT_DIR_FILE_POS,W
000E96 0100           01901         MOVLB 0
  00000000            01902 RAM_BANK = 0
000E98 B0D8           01903         BTFSC STATUS,0,0
                      01904         GO@TO NX@LB107
  00000E9E            01905 F4_000377 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Ext[SD_Root_Dir_File_Pos - $08] = SD_Root_Dir_File[SD_Root_Dir_File_Pos]
000E9E 0E08           01906         MOVLW 8
000EA0 0102           01907         MOVLB 2
  00000002            01908 RAM_BANK = 2
000EA2 5D50           01909         SUBWF SD_ROOT_DIR_FILE_POS,W
000EA4 6E08           01910         MOVWF PBP#VAR0,0
000EA6 EE02 F09E      01911         LFSR 0,SD_ROOT_DIR_FILE
000EAA 5150           01912         MOVF SD_ROOT_DIR_FILE_POS,W
000EAC CFEB F00C      01913         MOVFF PLUSW0,PBP#VAR1
000EB0 EE02 F09A      01914         LFSR 0,SD_FILE_EXT
000EB4 5008           01915         MOVF PBP#VAR0,W,0
000EB6 C00C FFEB      01916         MOVFF PBP#VAR1,PLUSW0
  00000EBA            01917 F4_000378 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000EBA 2B50           01918         INCF SD_ROOT_DIR_FILE_POS,F
000EBC 0100           01919         MOVLB 0
  00000000            01920 RAM_BANK = 0
000EBE A4D8           01921         BTFSS STATUS,2,0
                      01922         GO@TO FR@LB106
000EC2                01923 NX@LB107
  00000EC2            01924 F4_000379 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Store_Root_Direct_Position
                      01925         F@JUMP SD_STORE_ROOT_DIRECT_POSITION
  00000EC6            01926 F4_000380 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC6                01927 BC@LL102
  00000EC6            01928 F4_000381 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC6                01929 BC@LL100
  00000EC6            01930 F4_000382 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC6                01931 BC@LL98
  00000EC6            01932 F4_000383 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC6                01933 BC@LL96
  00000EC6            01934 F4_000384 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC6                01935 BC@LL94
  00000EC6            01936 F4_000385 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndSelect
000EC6                01937 BC@LL92
000EC6                01938 BC@LL74
  00000EC6            01939 F4_000386 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Buffer_Pos
000EC6 0E20           01940         MOVLW 32
000EC8 0102           01941         MOVLB 2
  00000002            01942 RAM_BANK = 2
000ECA 274E           01943         ADDWF SD_BUFFER_POS,F
000ECC 0100           01944         MOVLB 0
  00000000            01945 RAM_BANK = 0
000ECE A0D8           01946         BTFSS STATUS,0,0
                      01947         GO@TO FR@LB68
000ED2 0102           01948         MOVLB 2
  00000002            01949 RAM_BANK = 2
000ED4 2B4F           01950         INCF SD_BUFFER_POSH,F
000ED6 0100           01951         MOVLB 0
  00000000            01952 RAM_BANK = 0
000ED8 A4D8           01953         BTFSS STATUS,2,0
                      01954         GO@TO FR@LB68
000EDC                01955 NX@LB69
  00000EDC            01956 F4_000387 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Sec_Num
000EDC 0102           01957         MOVLB 2
  00000002            01958 RAM_BANK = 2
000EDE 2B51           01959         INCF SD_SEC_NUM,F
000EE0 0E00           01960         MOVLW 0
000EE2 2352           01961         ADDWFC SD_SEC_NUMH,F
000EE4 2353           01962         ADDWFC SD_SEC_NUMHH,F
000EE6 2354           01963         ADDWFC SD_SEC_NUMHHH,F
000EE8 0100           01964         MOVLB 0
  00000000            01965 RAM_BANK = 0
000EEA A0D8           01966         BTFSS STATUS,0,0
                      01967         GO@TO FR@LB66
000EEE                01968 NX@LB67
  00000EEE            01969 F4_000388 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return_Root_Dir = 1
000EEE 0E01           01970         MOVLW 1
000EF0 0102           01971         MOVLB 2
  00000002            01972 RAM_BANK = 2
000EF2 6F4C           01973         MOVWF SD_EXTENDED_RETURN_ROOT_DIR
  00000EF4            01974 F4_000389 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000EF4 0100           01975         MOVLB 0
  00000000            01976 RAM_BANK = 0
000EF6 0012           01977         RETURN 0
000EF8                01978 SD_STORE_ROOT_DIRECT_POSITION
  00000EF8            01979 F4_000391 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_Sec = SD_Sec_Num - SD_Root_Dir
000EF8 0102           01980         MOVLB 2
  00000002            01981 RAM_BANK = 2
000EFA 516F           01982         MOVF SD_ROOT_DIR,W
000EFC 5D51           01983         SUBWF SD_SEC_NUM,W
000EFE 6F85           01984         MOVWF SD_ROOT_DIR_SEC
000F00 5170           01985         MOVF SD_ROOT_DIRH,W
000F02 5952           01986         SUBWFB SD_SEC_NUMH,W
000F04 6F86           01987         MOVWF SD_ROOT_DIR_SECH
000F06 5171           01988         MOVF SD_ROOT_DIRHH,W
000F08 5953           01989         SUBWFB SD_SEC_NUMHH,W
000F0A 6F87           01990         MOVWF SD_ROOT_DIR_SECHH
000F0C 5172           01991         MOVF SD_ROOT_DIRHHH,W
000F0E 5954           01992         SUBWFB SD_SEC_NUMHHH,W
000F10 6F88           01993         MOVWF SD_ROOT_DIR_SECHHH
  00000F12            01994 F4_000392 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_Pos = SD_Buffer_Pos
000F12 C24F F28A      01995         MOVFF SD_BUFFER_POSH,SD_ROOT_DIR_POSH
000F16 C24E F289      01996         MOVFF SD_BUFFER_POS,SD_ROOT_DIR_POS
  00000F1A            01997 F4_000393 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return_Root_Dir = 0
000F1A 6B4C           01998         CLRF SD_EXTENDED_RETURN_ROOT_DIR
  00000F1C            01999 F4_000394 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000F1C 0100           02000         MOVLB 0
  00000000            02001 RAM_BANK = 0
000F1E 0012           02002         RETURN 0
000F20                02003 SD_INSERT_BYTE_INTO_BUFFER
  00000F20            02004 F4_000397 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Write_Buffer_Pos > $0FF Then
000F20 0E01           02005         MOVLW 1
000F22 0102           02006         MOVLB 2
  00000002            02007 RAM_BANK = 2
000F24 5DC3           02008         SUBWF SD_WRITE_BUFFER_POSH,W
000F26 0100           02009         MOVLB 0
  00000000            02010 RAM_BANK = 0
000F28 A0D8           02011         BTFSS STATUS,0,0
                      02012         GO@TO BC@LL108
  00000F2E            02013 F4_000398 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Write_Buffer_Pos - $100] = SD_Data_IO
000F2E 0102           02014         MOVLB 2
  00000002            02015 RAM_BANK = 2
000F30 51C2           02016         MOVF SD_WRITE_BUFFER_POS,W
000F32 EE01 F041      02017         LFSR 0,SD_BUFFER1
000F36 26E9           02018         ADDWF FSR0L,F,0
000F38 0E00           02019         MOVLW 0
000F3A 22EA           02020         ADDWFC FSR0H,F,0
000F3C C24D FFEF      02021         MOVFF SD_DATA_IO,INDF0
000F40 0100           02022         MOVLB 0
  00000000            02023 RAM_BANK = 0
                      02024         F@JUMP BC@LL109
000F46                02025 BC@LL108
  00000F46            02026 F4_000399 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  00000F46            02027 F4_000400 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Write_Buffer_Pos] = SD_Data_IO
000F46 EE00 F041      02028         LFSR 0,SD_BUFFER0
000F4A 0102           02029         MOVLB 2
  00000002            02030 RAM_BANK = 2
000F4C 51C2           02031         MOVF SD_WRITE_BUFFER_POS,W
000F4E 26E9           02032         ADDWF FSR0L,F,0
000F50 0E00           02033         MOVLW 0
000F52 22EA           02034         ADDWFC FSR0H,F,0
000F54 C24D FFEF      02035         MOVFF SD_DATA_IO,INDF0
  00000F58            02036 F4_000401 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
000F58                02037 BC@LL109
000F58 0100           02038         MOVLB 0
  00000000            02039 RAM_BANK = 0
  00000F5A            02040 F4_000402 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000F5A 0012           02041         RETURN 0
000F5C                02042 SD_ASSEMBLE_FAT_SECTOR
  00000F5C            02043 F4_000405 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_FAT_Buffer_Pos_Prev
000F5C C284 F2C3      02044         MOVFF SD_FAT_BUFFER_POS_PREVH,SD_WRITE_BUFFER_POSH
000F60 C283 F2C2      02045         MOVFF SD_FAT_BUFFER_POS_PREV,SD_WRITE_BUFFER_POS
  00000F64            02046 F4_000406 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Sec_Prev * $100)
000F64 C27F F2C6      02047         MOVFF SD_FAT_SEC_PREV,SD_CLUSTER_NUMH
000F68 0102           02048         MOVLB 2
  00000002            02049 RAM_BANK = 2
000F6A 6BC5           02050         CLRF SD_CLUSTER_NUM
  00000F6C            02051 F4_000407 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Buffer_Pos_Prev / 2) + SD_Cluster_Num
000F6C 90D8           02052         BCF STATUS,0,0
000F6E 3184           02053         RRCF SD_FAT_BUFFER_POS_PREVH,W
000F70 6E24           02054         MOVWF PP7H,0
000F72 3183           02055         RRCF SD_FAT_BUFFER_POS_PREV,W
000F74 6E23           02056         MOVWF PP7,0
000F76 5023           02057         MOVF PP7,W,0
000F78 27C5           02058         ADDWF SD_CLUSTER_NUM,F
000F7A 5024           02059         MOVF PP7H,W,0
000F7C 23C6           02060         ADDWFC SD_CLUSTER_NUMH,F
  00000F7E            02061 F4_000408 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Num
000F7E 4BC5           02062         INFSNZ SD_CLUSTER_NUM,F
000F80 2BC6           02063         INCF SD_CLUSTER_NUMH,F
  00000F82            02064 F4_000409 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] While SD_Cluster_Seq_Num_Prev > 1
000F82                02065 BC@LL110
000F82 0100           02066         MOVLB 0
  00000000            02067 RAM_BANK = 0
000F84 0102           02068         MOVLB 2
  00000002            02069 RAM_BANK = 2
000F86 53DD           02070         MOVF SD_CLUSTER_SEQ_NUM_PREVH,F
000F88 0100           02071         MOVLB 0
  00000000            02072 RAM_BANK = 0
000F8A A4D8           02073         BTFSS STATUS,2,0
                      02074         GO@TO CP@LB18
000F90 0E02           02075         MOVLW 2
000F92 0102           02076         MOVLB 2
  00000002            02077 RAM_BANK = 2
000F94 5DDC           02078         SUBWF SD_CLUSTER_SEQ_NUM_PREV,W
000F96 0100           02079         MOVLB 0
  00000000            02080 RAM_BANK = 0
000F98 A0D8           02081         BTFSS STATUS,0,0
                      02082         GO@TO BC@LL111
000F9E                02083 CP@LB18
  00000F9E            02084 F4_000410 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE0
000F9E C2C5 F24D      02085         MOVFF SD_CLUSTER_NUM,SD_DATA_IO
  00000FA2            02086 F4_000411 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
                      02087         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FA4            02088 F4_000412 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
000FA4 0102           02089         MOVLB 2
  00000002            02090 RAM_BANK = 2
000FA6 4BC2           02091         INFSNZ SD_WRITE_BUFFER_POS,F
000FA8 2BC3           02092         INCF SD_WRITE_BUFFER_POSH,F
  00000FAA            02093 F4_000413 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE1
000FAA C2C6 F24D      02094         MOVFF SD_CLUSTER_NUMH,SD_DATA_IO
  00000FAE            02095 F4_000414 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
000FAE 0100           02096         MOVLB 0
  00000000            02097 RAM_BANK = 0
                      02098         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FB2            02099 F4_000415 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
000FB2 0102           02100         MOVLB 2
  00000002            02101 RAM_BANK = 2
000FB4 4BC2           02102         INFSNZ SD_WRITE_BUFFER_POS,F
000FB6 2BC3           02103         INCF SD_WRITE_BUFFER_POSH,F
  00000FB8            02104 F4_000416 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Num
000FB8 4BC5           02105         INFSNZ SD_CLUSTER_NUM,F
000FBA 2BC6           02106         INCF SD_CLUSTER_NUMH,F
  00000FBC            02107 F4_000417 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Dec SD_Cluster_Seq_Num_Prev
000FBC 07DC           02108         DECF SD_CLUSTER_SEQ_NUM_PREV,F
000FBE 0E00           02109         MOVLW 0
000FC0 5BDD           02110         SUBWFB SD_CLUSTER_SEQ_NUM_PREVH,F
  00000FC2            02111 F4_000418 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Wend
000FC2 0100           02112         MOVLB 0
  00000000            02113 RAM_BANK = 0
                      02114         F@JUMP BC@LL110
000FC6                02115 BC@LL111
  00000FC6            02116 F4_000419 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000FC6 0012           02117         RETURN 0
000FC8                02118 SD_ASSEMBLE_FAT_SECTOR_END_CONT
  00000FC8            02119 F4_000422 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Sec * $100)
000FC8 C279 F2C6      02120         MOVFF SD_FAT_SEC,SD_CLUSTER_NUMH
000FCC 0102           02121         MOVLB 2
  00000002            02122 RAM_BANK = 2
000FCE 6BC5           02123         CLRF SD_CLUSTER_NUM
  00000FD0            02124 F4_000423 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Buffer_Pos / 2) + SD_Cluster_Num
000FD0 90D8           02125         BCF STATUS,0,0
000FD2 317E           02126         RRCF SD_FAT_BUFFER_POSH,W
000FD4 6E24           02127         MOVWF PP7H,0
000FD6 317D           02128         RRCF SD_FAT_BUFFER_POS,W
000FD8 6E23           02129         MOVWF PP7,0
000FDA 5023           02130         MOVF PP7,W,0
000FDC 27C5           02131         ADDWF SD_CLUSTER_NUM,F
000FDE 5024           02132         MOVF PP7H,W,0
000FE0 23C6           02133         ADDWFC SD_CLUSTER_NUMH,F
  00000FE2            02134 F4_000424 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE0
000FE2 C2C5 F24D      02135         MOVFF SD_CLUSTER_NUM,SD_DATA_IO
  00000FE6            02136 F4_000425 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
000FE6 0100           02137         MOVLB 0
  00000000            02138 RAM_BANK = 0
                      02139         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FEA            02140 F4_000426 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
000FEA 0102           02141         MOVLB 2
  00000002            02142 RAM_BANK = 2
000FEC 4BC2           02143         INFSNZ SD_WRITE_BUFFER_POS,F
000FEE 2BC3           02144         INCF SD_WRITE_BUFFER_POSH,F
  00000FF0            02145 F4_000427 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE1
000FF0 C2C6 F24D      02146         MOVFF SD_CLUSTER_NUMH,SD_DATA_IO
  00000FF4            02147 F4_000428 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
000FF4 0100           02148         MOVLB 0
  00000000            02149 RAM_BANK = 0
                      02150         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FF8            02151 F4_000429 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
000FF8 0012           02152         RETURN 0
000FFA                02153 SD_ASSEMBLE_FAT_SECTOR_END_CLOSE
  00000FFA            02154 F4_000432 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = $FF
000FFA 0102           02155         MOVLB 2
  00000002            02156 RAM_BANK = 2
000FFC 694D           02157         SETF SD_DATA_IO
  00000FFE            02158 F4_000433 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
000FFE 0100           02159         MOVLB 0
  00000000            02160 RAM_BANK = 0
                      02161         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001002            02162 F4_000434 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001002 0102           02163         MOVLB 2
  00000002            02164 RAM_BANK = 2
001004 4BC2           02165         INFSNZ SD_WRITE_BUFFER_POS,F
001006 2BC3           02166         INCF SD_WRITE_BUFFER_POSH,F
  00001008            02167 F4_000435 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001008 0100           02168         MOVLB 0
  00000000            02169 RAM_BANK = 0
                      02170         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  0000100C            02171 F4_000436 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
00100C 0012           02172         RETURN 0
00100E                02173 SD_WRITE_BYTE_TO_FILE_SUB
  0000100E            02174 F4_000439 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_RW_Ptr
00100E 0102           02175         MOVLB 2
  00000002            02176 RAM_BANK = 2
001010 2BE1           02177         INCF SD_BYTES_READ,F
001012 0E00           02178         MOVLW 0
001014 23E2           02179         ADDWFC SD_BYTES_READH,F
001016 23E3           02180         ADDWFC SD_BYTES_READHH,F
001018 23E4           02181         ADDWFC SD_BYTES_READHHH,F
  0000101A            02182 F4_000440 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_RW_Ptr > SD_File_Size Then
00101A 51E1           02183         MOVF SD_BYTES_READ,W
00101C 5DCC           02184         SUBWF SD_FILE_SIZE,W
00101E 51E2           02185         MOVF SD_BYTES_READH,W
001020 59CD           02186         SUBWFB SD_FILE_SIZEH,W
001022 51E3           02187         MOVF SD_BYTES_READHH,W
001024 59CE           02188         SUBWFB SD_FILE_SIZEHH,W
001026 51E4           02189         MOVF SD_BYTES_READHHH,W
001028 59CF           02190         SUBWFB SD_FILE_SIZEHHH,W
00102A 51E4           02191         MOVF SD_BYTES_READHHH,W
00102C 19CF           02192         XORWF SD_FILE_SIZEHHH,W
00102E B0D8           02193         BTFSC STATUS,0,0
001030 0A80           02194         XORLW 128
001032 0100           02195         MOVLB 0
  00000000            02196 RAM_BANK = 0
001034 B8D8           02197         BTFSC STATUS,4,0
                      02198         GO@TO BC@LL113
  0000103A            02199 F4_000441 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_File_Size
00103A 0102           02200         MOVLB 2
  00000002            02201 RAM_BANK = 2
00103C 2BCC           02202         INCF SD_FILE_SIZE,F
00103E 0E00           02203         MOVLW 0
001040 23CD           02204         ADDWFC SD_FILE_SIZEH,F
001042 23CE           02205         ADDWFC SD_FILE_SIZEHH,F
001044 23CF           02206         ADDWFC SD_FILE_SIZEHHH,F
  00001046            02207 F4_000442 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
001046 81E5           02208         BSF _B#VR1,0
  00001048            02209 F4_000443 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001048                02210 BC@LL113
001048 0100           02211         MOVLB 0
  00000000            02212 RAM_BANK = 0
  0000104A            02213 F4_000444 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Buffer_Pos
00104A 0102           02214         MOVLB 2
  00000002            02215 RAM_BANK = 2
00104C 4B8F           02216         INFSNZ SD_DATA_BUFFER_POS,F
00104E 2B90           02217         INCF SD_DATA_BUFFER_POSH,F
  00001050            02218 F4_000445 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Data_Buffer_Pos > SD_Bytes_Per_Sec Then
001050 518F           02219         MOVF SD_DATA_BUFFER_POS,W
001052 5D5F           02220         SUBWF SD_BYTES_PER_SEC,W
001054 5190           02221         MOVF SD_DATA_BUFFER_POSH,W
001056 5960           02222         SUBWFB SD_BYTES_PER_SECH,W
001058 0100           02223         MOVLB 0
  00000000            02224 RAM_BANK = 0
00105A B0D8           02225         BTFSC STATUS,0,0
                      02226         GO@TO BC@LL115
  00001060            02227 F4_000446 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Sec
001060 0102           02228         MOVLB 2
  00000002            02229 RAM_BANK = 2
001062 2B8B           02230         INCF SD_DATA_SEC,F
001064 0E00           02231         MOVLW 0
001066 238C           02232         ADDWFC SD_DATA_SECH,F
001068 238D           02233         ADDWFC SD_DATA_SECHH,F
00106A 238E           02234         ADDWFC SD_DATA_SECHHH,F
  0000106C            02235 F4_000447 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sec_in_Cluster
00106C 2BCB           02236         INCF SD_SEC_IN_CLUSTER,F
  0000106E            02237 F4_000448 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Sec_in_Cluster > SD_Secs_Per_Cluster Then
00106E 51CB           02238         MOVF SD_SEC_IN_CLUSTER,W
001070 5D55           02239         SUBWF SD_SECS_PER_CLUSTER,W
001072 0100           02240         MOVLB 0
  00000000            02241 RAM_BANK = 0
001074 B0D8           02242         BTFSC STATUS,0,0
                      02243         GO@TO BC@LL117
  0000107A            02244 F4_000449 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_EOF = 0 Then
00107A 96D8           02245         BCF STATUS,3,0
00107C 0102           02246         MOVLB 2
  00000002            02247 RAM_BANK = 2
00107E B1E5           02248         BTFSC _B#VR1,0
001080 86D8           02249         BSF STATUS,3,0
001082 0100           02250         MOVLB 0
  00000000            02251 RAM_BANK = 0
                      02252         G@OTO BC@LL119
  0000108A            02253 F4_000450 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
00108A 6A14           02254         CLRF PP0HHH,0
00108C 6A13           02255         CLRF PP0HH,0
00108E C2C6 F012      02256         MOVFF SD_CLUSTER_NUMH,PP0H
001092 C2C5 F011      02257         MOVFF SD_CLUSTER_NUM,PP0
001096 6A1C           02258         CLRF PP2HHH,0
001098 6A1B           02259         CLRF PP2HH,0
00109A 0E01           02260         MOVLW 1
00109C 6E1A           02261         MOVWF PP2H,0
00109E 6A19           02262         CLRF PP2,0
                      02263         F@CALL L@DIV
0010A4 C014 F27C      02264         MOVFF PP0HHH,SD_FAT_SECHHH
0010A8 C013 F27B      02265         MOVFF PP0HH,SD_FAT_SECHH
0010AC C012 F27A      02266         MOVFF PP0H,SD_FAT_SECH
0010B0 C011 F279      02267         MOVFF PP0,SD_FAT_SEC
  000010B4            02268 F4_000451 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
0010B4 C2C5 F27D      02269         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
0010B8 0102           02270         MOVLB 2
  00000002            02271 RAM_BANK = 2
0010BA 6B7E           02272         CLRF SD_FAT_BUFFER_POSH
  000010BC            02273 F4_000452 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
0010BC 90D8           02274         BCF STATUS,0,0
0010BE 377D           02275         RLCF SD_FAT_BUFFER_POS,F
0010C0 377E           02276         RLCF SD_FAT_BUFFER_POSH,F
  000010C2            02277 F4_000453 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
0010C2 5179           02278         MOVF SD_FAT_SEC,W
0010C4 2567           02279         ADDWF SD_FAT1,W
0010C6 6E34           02280         MOVWF SD_SECTOR_NUM,0
0010C8 517A           02281         MOVF SD_FAT_SECH,W
0010CA 2168           02282         ADDWFC SD_FAT1H,W
0010CC 6E35           02283         MOVWF SD_SECTOR_NUMH,0
0010CE 517B           02284         MOVF SD_FAT_SECHH,W
0010D0 2169           02285         ADDWFC SD_FAT1HH,W
0010D2 6E36           02286         MOVWF SD_SECTOR_NUMHH,0
0010D4 517C           02287         MOVF SD_FAT_SECHHH,W
0010D6 216A           02288         ADDWFC SD_FAT1HHH,W
0010D8 6E37           02289         MOVWF SD_SECTOR_NUMHHH,0
  000010DA            02290 F4_000454 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0010DA 0E01           02291         MOVLW 1
0010DC 6F4A           02292         MOVWF SD_RW_OPTION
  000010DE            02293 F4_000455 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0010DE 0100           02294         MOVLB 0
  00000000            02295 RAM_BANK = 0
                      02296         F@CALL SD_SECTOR_SUB
  000010E4            02297 F4_000456 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
0010E4 C27E F24F      02298         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
0010E8 C27D F24E      02299         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  000010EC            02300 F4_000457 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      02301         F@CALL SD_READ_FAT_ENTRY
  000010F0            02302 F4_000458 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
0010F0 C278 F2C6      02303         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
0010F4 C277 F2C5      02304         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  000010F8            02305 F4_000459 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
0010F8 0EFE           02306         MOVLW 254
0010FA 0102           02307         MOVLB 2
  00000002            02308 RAM_BANK = 2
0010FC 25C5           02309         ADDWF SD_CLUSTER_NUM,W
0010FE 6E23           02310         MOVWF PP7,0
001100 0EFF           02311         MOVLW 255
001102 21C6           02312         ADDWFC SD_CLUSTER_NUMH,W
001104 6E24           02313         MOVWF PP7H,0
001106 0EFF           02314         MOVLW 255
001108 6A25           02315         CLRF PP7HH,0
00110A 2225           02316         ADDWFC PP7HH,F,0
00110C 6A26           02317         CLRF PP7HHH,0
00110E 2226           02318         ADDWFC PP7HHH,F,0
001110 C026 F014      02319         MOVFF PP7HHH,PP0HHH
001114 C025 F013      02320         MOVFF PP7HH,PP0HH
001118 C024 F012      02321         MOVFF PP7H,PP0H
00111C C023 F011      02322         MOVFF PP7,PP0
001120 6A1C           02323         CLRF PP2HHH,0
001122 6A1B           02324         CLRF PP2HH,0
001124 6A1A           02325         CLRF PP2H,0
001126 C255 F019      02326         MOVFF SD_SECS_PER_CLUSTER,PP2
                      02327         F@CALL AL@MUL
00112E C014 F28E      02328         MOVFF PP0HHH,SD_DATA_SECHHH
001132 C013 F28D      02329         MOVFF PP0HH,SD_DATA_SECHH
001136 C012 F28C      02330         MOVFF PP0H,SD_DATA_SECH
00113A C011 F28B      02331         MOVFF PP0,SD_DATA_SEC
  0000113E            02332 F4_000460 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
00113E 5173           02333         MOVF SD_DATA_AREA,W
001140 278B           02334         ADDWF SD_DATA_SEC,F
001142 5174           02335         MOVF SD_DATA_AREAH,W
001144 238C           02336         ADDWFC SD_DATA_SECH,F
001146 5175           02337         MOVF SD_DATA_AREAHH,W
001148 238D           02338         ADDWFC SD_DATA_SECHH,F
00114A 5176           02339         MOVF SD_DATA_AREAHHH,W
00114C 238E           02340         ADDWFC SD_DATA_SECHHH,F
  0000114E            02341 F4_000461 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
00114E C28E F037      02342         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001152 C28D F036      02343         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001156 C28C F035      02344         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
00115A C28B F034      02345         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  0000115E            02346 F4_000462 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
00115E 0E01           02347         MOVLW 1
001160 6F4A           02348         MOVWF SD_RW_OPTION
  00001162            02349 F4_000463 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001162 0100           02350         MOVLB 0
  00000000            02351 RAM_BANK = 0
                      02352         F@CALL SD_SECTOR_SUB
  00001168            02353 F4_000464 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
001168 0E01           02354         MOVLW 1
00116A 0102           02355         MOVLB 2
  00000002            02356 RAM_BANK = 2
00116C 6FCB           02357         MOVWF SD_SEC_IN_CLUSTER
  0000116E            02358 F4_000466 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
00116E 6A14           02359         CLRF PP0HHH,0
001170 6A13           02360         CLRF PP0HH,0
001172 C2C6 F012      02361         MOVFF SD_CLUSTER_NUMH,PP0H
001176 C2C5 F011      02362         MOVFF SD_CLUSTER_NUM,PP0
00117A 6A1C           02363         CLRF PP2HHH,0
00117C 6A1B           02364         CLRF PP2HH,0
00117E 0E01           02365         MOVLW 1
001180 6E1A           02366         MOVWF PP2H,0
001182 6A19           02367         CLRF PP2,0
                      02368         F@CALL L@DIV
001188 C014 F27C      02369         MOVFF PP0HHH,SD_FAT_SECHHH
00118C C013 F27B      02370         MOVFF PP0HH,SD_FAT_SECHH
001190 C012 F27A      02371         MOVFF PP0H,SD_FAT_SECH
001194 C011 F279      02372         MOVFF PP0,SD_FAT_SEC
  00001198            02373 F4_000467 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001198 C2C5 F27D      02374         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
00119C 6B7E           02375         CLRF SD_FAT_BUFFER_POSH
  0000119E            02376 F4_000468 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
00119E 90D8           02377         BCF STATUS,0,0
0011A0 377D           02378         RLCF SD_FAT_BUFFER_POS,F
0011A2 377E           02379         RLCF SD_FAT_BUFFER_POSH,F
0011A4 0100           02380         MOVLB 0
  00000000            02381 RAM_BANK = 0
                      02382         F@JUMP BC@LL120
0011AA                02383 BC@LL119
  000011AA            02384 F4_000470 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  000011AA            02385 F4_000471 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Seq_Idx
0011AA 0102           02386         MOVLB 2
  00000002            02387 RAM_BANK = 2
0011AC 4BDA           02388         INFSNZ SD_CLUSTER_SEQ_IDX,F
0011AE 2BDB           02389         INCF SD_CLUSTER_SEQ_IDXH,F
  000011B0            02390 F4_000472 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Cluster_Seq_Idx > SD_Cluster_Seq_Num Then
0011B0 51DA           02391         MOVF SD_CLUSTER_SEQ_IDX,W
0011B2 5DD8           02392         SUBWF SD_CLUSTER_SEQ_NUM,W
0011B4 51DB           02393         MOVF SD_CLUSTER_SEQ_IDXH,W
0011B6 59D9           02394         SUBWFB SD_CLUSTER_SEQ_NUMH,W
0011B8 0100           02395         MOVLB 0
  00000000            02396 RAM_BANK = 0
0011BA B0D8           02397         BTFSC STATUS,0,0
                      02398         GO@TO BC@LL122
  000011C0            02399 F4_000473 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos_Prev = SD_FAT_Buffer_Pos
0011C0 C27E F284      02400         MOVFF SD_FAT_BUFFER_POSH,SD_FAT_BUFFER_POS_PREVH
0011C4 C27D F283      02401         MOVFF SD_FAT_BUFFER_POS,SD_FAT_BUFFER_POS_PREV
  000011C8            02402 F4_000474 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec_Prev = SD_FAT_Sec
0011C8 C27C F282      02403         MOVFF SD_FAT_SECHHH,SD_FAT_SEC_PREVHHH
0011CC C27B F281      02404         MOVFF SD_FAT_SECHH,SD_FAT_SEC_PREVHH
0011D0 C27A F280      02405         MOVFF SD_FAT_SECH,SD_FAT_SEC_PREVH
0011D4 C279 F27F      02406         MOVFF SD_FAT_SEC,SD_FAT_SEC_PREV
  000011D8            02407 F4_000475 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Idx_Prev = SD_Cluster_Seq_Idx
0011D8 C2DB F2DF      02408         MOVFF SD_CLUSTER_SEQ_IDXH,SD_CLUSTER_SEQ_IDX_PREVH
0011DC C2DA F2DE      02409         MOVFF SD_CLUSTER_SEQ_IDX,SD_CLUSTER_SEQ_IDX_PREV
  000011E0            02410 F4_000476 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num_Prev = SD_Cluster_Seq_Num
0011E0 C2D9 F2DD      02411         MOVFF SD_CLUSTER_SEQ_NUMH,SD_CLUSTER_SEQ_NUM_PREVH
0011E4 C2D8 F2DC      02412         MOVFF SD_CLUSTER_SEQ_NUM,SD_CLUSTER_SEQ_NUM_PREV
  000011E8            02413 F4_000478 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Free_Cluster
                      02414         F@CALL SD_FIND_FREE_CLUSTER
  000011EC            02415 F4_000479 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return = 1 Then Return
0011EC 0E01           02416         MOVLW 1
0011EE 0102           02417         MOVLB 2
  00000002            02418 RAM_BANK = 2
0011F0 5D4B           02419         SUBWF SD_EXTENDED_RETURN,W
0011F2 0100           02420         MOVLB 0
  00000000            02421 RAM_BANK = 0
0011F4 A4D8           02422         BTFSS STATUS,2,0
                      02423         GO@TO BC@LL124
0011FA 0012           02424         RETURN 0
0011FC                02425 BC@LL124
  000011FC            02426 F4_000480 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_FAT1 + SD_FAT_Sec_Prev
0011FC 0102           02427         MOVLB 2
  00000002            02428 RAM_BANK = 2
0011FE 517F           02429         MOVF SD_FAT_SEC_PREV,W
001200 2567           02430         ADDWF SD_FAT1,W
001202 6FBE           02431         MOVWF SD_WRITE_SEC_NUM
001204 5180           02432         MOVF SD_FAT_SEC_PREVH,W
001206 2168           02433         ADDWFC SD_FAT1H,W
001208 6FBF           02434         MOVWF SD_WRITE_SEC_NUMH
00120A 5181           02435         MOVF SD_FAT_SEC_PREVHH,W
00120C 2169           02436         ADDWFC SD_FAT1HH,W
00120E 6FC0           02437         MOVWF SD_WRITE_SEC_NUMHH
001210 5182           02438         MOVF SD_FAT_SEC_PREVHHH,W
001212 216A           02439         ADDWFC SD_FAT1HHH,W
001214 6FC1           02440         MOVWF SD_WRITE_SEC_NUMHHH
  00001216            02441 F4_000481 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
001216 C2C1 F037      02442         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
00121A C2C0 F036      02443         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
00121E C2BF F035      02444         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
001222 C2BE F034      02445         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  00001226            02446 F4_000482 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001226 0E01           02447         MOVLW 1
001228 6F4A           02448         MOVWF SD_RW_OPTION
  0000122A            02449 F4_000483 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00122A 0100           02450         MOVLB 0
  00000000            02451 RAM_BANK = 0
                      02452         F@CALL SD_SECTOR_SUB
  00001230            02453 F4_000485 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector
                      02454         F@CALL SD_ASSEMBLE_FAT_SECTOR
  00001232            02455 F4_000486 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector_End_Cont
                      02456         F@CALL SD_ASSEMBLE_FAT_SECTOR_END_CONT
  00001234            02457 F4_000487 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      02458         F@CALL SD_WRITE_SECTOR
  00001238            02459 F4_000488 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT2 + SD_FAT_Sec_Prev
001238 0102           02460         MOVLB 2
  00000002            02461 RAM_BANK = 2
00123A 517F           02462         MOVF SD_FAT_SEC_PREV,W
00123C 256B           02463         ADDWF SD_FAT2,W
00123E 6E34           02464         MOVWF SD_SECTOR_NUM,0
001240 5180           02465         MOVF SD_FAT_SEC_PREVH,W
001242 216C           02466         ADDWFC SD_FAT2H,W
001244 6E35           02467         MOVWF SD_SECTOR_NUMH,0
001246 5181           02468         MOVF SD_FAT_SEC_PREVHH,W
001248 216D           02469         ADDWFC SD_FAT2HH,W
00124A 6E36           02470         MOVWF SD_SECTOR_NUMHH,0
00124C 5182           02471         MOVF SD_FAT_SEC_PREVHHH,W
00124E 216E           02472         ADDWFC SD_FAT2HHH,W
001250 6E37           02473         MOVWF SD_SECTOR_NUMHHH,0
  00001252            02474 F4_000489 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
001252 0100           02475         MOVLB 0
  00000000            02476 RAM_BANK = 0
                      02477         F@CALL SD_WRITE_SECTOR
  00001258            02478 F4_000490 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001258 0EFE           02479         MOVLW 254
00125A 0102           02480         MOVLB 2
  00000002            02481 RAM_BANK = 2
00125C 25C5           02482         ADDWF SD_CLUSTER_NUM,W
00125E 6E23           02483         MOVWF PP7,0
001260 0EFF           02484         MOVLW 255
001262 21C6           02485         ADDWFC SD_CLUSTER_NUMH,W
001264 6E24           02486         MOVWF PP7H,0
001266 0EFF           02487         MOVLW 255
001268 6A25           02488         CLRF PP7HH,0
00126A 2225           02489         ADDWFC PP7HH,F,0
00126C 6A26           02490         CLRF PP7HHH,0
00126E 2226           02491         ADDWFC PP7HHH,F,0
001270 C026 F014      02492         MOVFF PP7HHH,PP0HHH
001274 C025 F013      02493         MOVFF PP7HH,PP0HH
001278 C024 F012      02494         MOVFF PP7H,PP0H
00127C C023 F011      02495         MOVFF PP7,PP0
001280 6A1C           02496         CLRF PP2HHH,0
001282 6A1B           02497         CLRF PP2HH,0
001284 6A1A           02498         CLRF PP2H,0
001286 C255 F019      02499         MOVFF SD_SECS_PER_CLUSTER,PP2
                      02500         F@CALL AL@MUL
00128E C014 F28E      02501         MOVFF PP0HHH,SD_DATA_SECHHH
001292 C013 F28D      02502         MOVFF PP0HH,SD_DATA_SECHH
001296 C012 F28C      02503         MOVFF PP0H,SD_DATA_SECH
00129A C011 F28B      02504         MOVFF PP0,SD_DATA_SEC
  0000129E            02505 F4_000491 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
00129E 5173           02506         MOVF SD_DATA_AREA,W
0012A0 278B           02507         ADDWF SD_DATA_SEC,F
0012A2 5174           02508         MOVF SD_DATA_AREAH,W
0012A4 238C           02509         ADDWFC SD_DATA_SECH,F
0012A6 5175           02510         MOVF SD_DATA_AREAHH,W
0012A8 238D           02511         ADDWFC SD_DATA_SECHH,F
0012AA 5176           02512         MOVF SD_DATA_AREAHHH,W
0012AC 238E           02513         ADDWFC SD_DATA_SECHHH,F
  000012AE            02514 F4_000492 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
0012AE C28E F037      02515         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
0012B2 C28D F036      02516         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
0012B6 C28C F035      02517         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
0012BA C28B F034      02518         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  000012BE            02519 F4_000493 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 0
0012BE 6B4A           02520         CLRF SD_RW_OPTION
  000012C0            02521 F4_000494 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0012C0 0100           02522         MOVLB 0
  00000000            02523 RAM_BANK = 0
                      02524         F@CALL SD_SECTOR_SUB
                      02525         F@JUMP BC@LL125
0012CA                02526 BC@LL122
  000012CA            02527 F4_000496 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  000012CA            02528 F4_000497 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Num
0012CA 0102           02529         MOVLB 2
  00000002            02530 RAM_BANK = 2
0012CC 4BC5           02531         INFSNZ SD_CLUSTER_NUM,F
0012CE 2BC6           02532         INCF SD_CLUSTER_NUMH,F
  000012D0            02533 F4_000498 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0012D0                02534 BC@LL125
0012D0 0100           02535         MOVLB 0
  00000000            02536 RAM_BANK = 0
  000012D2            02537 F4_000499 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
0012D2 0E01           02538         MOVLW 1
0012D4 0102           02539         MOVLB 2
  00000002            02540 RAM_BANK = 2
0012D6 6FCB           02541         MOVWF SD_SEC_IN_CLUSTER
  000012D8            02542 F4_000500 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0012D8                02543 BC@LL120
0012D8 0100           02544         MOVLB 0
  00000000            02545 RAM_BANK = 0
                      02546         F@JUMP BC@LL126
0012DE                02547 BC@LL117
  000012DE            02548 F4_000501 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  000012DE            02549 F4_000502 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_Sector
                      02550         F@CALL SD_READ_SECTOR
  000012E2            02551 F4_000503 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0012E2                02552 BC@LL126
  000012E2            02553 F4_000504 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 1
0012E2 0102           02554         MOVLB 2
  00000002            02555 RAM_BANK = 2
0012E4 6B90           02556         CLRF SD_DATA_BUFFER_POSH
0012E6 0E01           02557         MOVLW 1
0012E8 6F8F           02558         MOVWF SD_DATA_BUFFER_POS
  000012EA            02559 F4_000505 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0012EA                02560 BC@LL115
0012EA 0100           02561         MOVLB 0
  00000000            02562 RAM_BANK = 0
  000012EC            02563 F4_000506 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte_RW = SD_IO_Byte
0012EC C2D0 F249      02564         MOVFF SD_IO_BYTE,SD_BYTE_RW
  000012F0            02565 F4_000507 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sub
                      02566         F@CALL SD_WRITE_SUB
  000012F4            02567 F4_000508 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
0012F4 0102           02568         MOVLB 2
  00000002            02569 RAM_BANK = 2
0012F6 6B4B           02570         CLRF SD_EXTENDED_RETURN
  000012F8            02571 F4_000509 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0012F8 0100           02572         MOVLB 0
  00000000            02573 RAM_BANK = 0
0012FA 0012           02574         RETURN 0
0012FC                02575 SD_CHECK_FOR_FILE_SUB
  000012FC            02576 F4_000512 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Find_Root_Dir_Entry_F = 1
0012FC 0E01           02577         MOVLW 1
0012FE 0102           02578         MOVLB 2
  00000002            02579 RAM_BANK = 2
001300 6FE0           02580         MOVWF SD_FIND_ROOT_DIR_ENTRY_F
  00001302            02581 F4_000513 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Root_Dir_Entry
001302 0100           02582         MOVLB 0
  00000000            02583 RAM_BANK = 0
                      02584         F@CALL SD_FIND_ROOT_DIR_ENTRY
  00001308            02585 F4_000514 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001308 0012           02586         RETURN 0
00130A                02587 SD_READ_SUB
  0000130A            02588 F4_000517 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx > $1FF Then
00130A 0E02           02589         MOVLW 2
00130C 0102           02590         MOVLB 2
  00000002            02591 RAM_BANK = 2
00130E 5D48           02592         SUBWF SD_BUFFER_IDXH,W
001310 0100           02593         MOVLB 0
  00000000            02594 RAM_BANK = 0
001312 A0D8           02595         BTFSS STATUS,0,0
                      02596         GO@TO BC@LL128
  00001318            02597 F4_000524 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
001318 0102           02598         MOVLB 2
  00000002            02599 RAM_BANK = 2
00131A 6B48           02600         CLRF SD_BUFFER_IDXH
00131C 6B47           02601         CLRF SD_BUFFER_IDX
  0000131E            02602 F4_000525 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sector_Num
00131E 2A34           02603         INCF SD_SECTOR_NUM,F,0
001320 0E00           02604         MOVLW 0
001322 2235           02605         ADDWFC SD_SECTOR_NUMH,F,0
001324 2236           02606         ADDWFC SD_SECTOR_NUMHH,F,0
001326 2237           02607         ADDWFC SD_SECTOR_NUMHHH,F,0
  00001328            02608 F4_000526 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001328 0E01           02609         MOVLW 1
00132A 6F4A           02610         MOVWF SD_RW_OPTION
  0000132C            02611 F4_000527 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00132C 0100           02612         MOVLB 0
  00000000            02613 RAM_BANK = 0
                      02614         F@CALL SD_SECTOR_SUB
  00001332            02615 F4_000528 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001332                02616 BC@LL128
  00001332            02617 F4_000529 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx > $0FF Then
001332 0E01           02618         MOVLW 1
001334 0102           02619         MOVLB 2
  00000002            02620 RAM_BANK = 2
001336 5D48           02621         SUBWF SD_BUFFER_IDXH,W
001338 0100           02622         MOVLB 0
  00000000            02623 RAM_BANK = 0
00133A A0D8           02624         BTFSS STATUS,0,0
                      02625         GO@TO BC@LL130
  00001340            02626 F4_000530 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte_RW = SD_Buffer1[SD_Buffer_Idx - $100]
001340 0102           02627         MOVLB 2
  00000002            02628 RAM_BANK = 2
001342 5147           02629         MOVF SD_BUFFER_IDX,W
001344 EE01 F041      02630         LFSR 0,SD_BUFFER1
001348 26E9           02631         ADDWF FSR0L,F,0
00134A 0E00           02632         MOVLW 0
00134C 22EA           02633         ADDWFC FSR0H,F,0
00134E 50EF           02634         MOVF INDF0,W,0
001350 6F49           02635         MOVWF SD_BYTE_RW
001352 0100           02636         MOVLB 0
  00000000            02637 RAM_BANK = 0
                      02638         F@JUMP BC@LL131
001358                02639 BC@LL130
  00001358            02640 F4_000531 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  00001358            02641 F4_000532 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte_RW = SD_Buffer0[SD_Buffer_Idx]
001358 EE00 F041      02642         LFSR 0,SD_BUFFER0
00135C 0102           02643         MOVLB 2
  00000002            02644 RAM_BANK = 2
00135E 5147           02645         MOVF SD_BUFFER_IDX,W
001360 26E9           02646         ADDWF FSR0L,F,0
001362 0E00           02647         MOVLW 0
001364 22EA           02648         ADDWFC FSR0H,F,0
001366 50EF           02649         MOVF INDF0,W,0
001368 6F49           02650         MOVWF SD_BYTE_RW
  0000136A            02651 F4_000533 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
00136A                02652 BC@LL131
00136A 0100           02653         MOVLB 0
  00000000            02654 RAM_BANK = 0
  0000136C            02655 F4_000534 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Buffer_Idx
00136C 0102           02656         MOVLB 2
  00000002            02657 RAM_BANK = 2
00136E 4B47           02658         INFSNZ SD_BUFFER_IDX,F
001370 2B48           02659         INCF SD_BUFFER_IDXH,F
  00001372            02660 F4_000535 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001372 0100           02661         MOVLB 0
  00000000            02662 RAM_BANK = 0
001374 0012           02663         RETURN 0
  00001376            02664 F4_000541 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Init_MSSP MACRO P1
                      02665 SD_INIT_MSSP    MACRO P1,.,.,.,.,.,.,.,.,.
                      02666  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      02667  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      02668         IF (PRM_COUNT > 1)
                      02669         ERROR "(In Asm) SD_Init_MSSP - Too many parameters"
                      02670         ELSE
                      02671         IF (PRM_COUNT == 0)
                      02672         MOVLW 32
                      02673         MOVWF SSPCON1,0
                      02674         ELSE
                      02675         IF (PRM_1 != BYTE) && (PRM_1 != NUM8)
                      02676         ERROR "(In Asm) SD_Init_MSSP - Speed(Param1) should be a Byte variable or number"
                      02677         ENDIF
                      02678         IF (PRM_1 == BYTE)
                      02679         BYTE_BYTE P1, SSPCON1
                      02680         BSF SSPCON1,5,0
                      02681         ENDIF
                      02682         IF (PRM_1 == NUM8)
                      02683         NUM_DWORD P1, SSPCON1
                      02684 RAM_BANK = 0
                      02685         BSF SSPCON1,5,0
                      02686         ENDIF
                      02687         ENDIF
                      02688         ENDIF
                      02689         F@CALL SD_INIT_MSSP_SUB
                      02690         IF (SD_INIT_MSSP_RETURN != 1)
                      02691         ELSE
                      02692         IF (RETURN_TYPE != BYTE)
                      02693         ERROR "(In Asm) SD_Init_MSSP - Return variable should be a Byte variable"
                      02694         ENDIF
                      02695         IF (RETURN_TYPE == BYTE)
                      02696         BYTE_BYTE SD_RETURN, RETURN_VAR
                      02697         ENDIF
                      02698         ENDIF
                      02699         ENDM
001376                02700 SD_SEND_CMD
  00001376            02701 F4_000580 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte0
001376 C241 FFC9      02702         MOVFF SD_BYTE0,SSPBUF
  0000137A            02703 F4_000581 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
00137A A0C7           02704         BTFSS SSPSTAT,0
  0000137C            02705 F4_000582 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
00137C D7FE           02706         BRA $ - 2
  0000137E            02707 F4_000583 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
00137E CFC9 F032      02708         MOVFF SSPBUF,SD_BYTER
  00001382            02709 F4_000584 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte1
001382 C242 FFC9      02710         MOVFF SD_BYTE1,SSPBUF
  00001386            02711 F4_000585 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
001386 A0C7           02712         BTFSS SSPSTAT,0
  00001388            02713 F4_000586 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
001388 D7FE           02714         BRA $ - 2
  0000138A            02715 F4_000587 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
00138A CFC9 F032      02716         MOVFF SSPBUF,SD_BYTER
  0000138E            02717 F4_000588 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte2
00138E C243 FFC9      02718         MOVFF SD_BYTE2,SSPBUF
  00001392            02719 F4_000589 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
001392 A0C7           02720         BTFSS SSPSTAT,0
  00001394            02721 F4_000590 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
001394 D7FE           02722         BRA $ - 2
  00001396            02723 F4_000591 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
001396 CFC9 F032      02724         MOVFF SSPBUF,SD_BYTER
  0000139A            02725 F4_000592 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte3
00139A C244 FFC9      02726         MOVFF SD_BYTE3,SSPBUF
  0000139E            02727 F4_000593 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
00139E A0C7           02728         BTFSS SSPSTAT,0
  000013A0            02729 F4_000594 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013A0 D7FE           02730         BRA $ - 2
  000013A2            02731 F4_000595 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013A2 CFC9 F032      02732         MOVFF SSPBUF,SD_BYTER
  000013A6            02733 F4_000596 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte4
0013A6 C245 FFC9      02734         MOVFF SD_BYTE4,SSPBUF
  000013AA            02735 F4_000597 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013AA A0C7           02736         BTFSS SSPSTAT,0
  000013AC            02737 F4_000598 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013AC D7FE           02738         BRA $ - 2
  000013AE            02739 F4_000599 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013AE CFC9 F032      02740         MOVFF SSPBUF,SD_BYTER
0013B2                02741 SD_SEND_BYTE
  000013B2            02742 F4_000601 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte5
0013B2 C246 FFC9      02743         MOVFF SD_BYTE5,SSPBUF
  000013B6            02744 F4_000602 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013B6 A0C7           02745         BTFSS SSPSTAT,0
  000013B8            02746 F4_000603 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013B8 D7FE           02747         BRA $ - 2
  000013BA            02748 F4_000604 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013BA CFC9 F032      02749         MOVFF SSPBUF,SD_BYTER
  000013BE            02750 F4_000605 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0013BE 0012           02751         RETURN 0
0013C0                02752 SD_RECEIVE_BYTE
  000013C0            02753 F4_000608 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SSPBUF = $FF
0013C0 68C9           02754         SETF SSPBUF,0
  000013C2            02755 F4_000609 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013C2 A0C7           02756         BTFSS SSPSTAT,0
  000013C4            02757 F4_000610 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013C4 D7FE           02758         BRA $ - 2
  000013C6            02759 F4_000611 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013C6 CFC9 F032      02760         MOVFF SSPBUF,SD_BYTER
  000013CA            02761 F4_000612 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0013CA 0012           02762         RETURN 0
0013CC                02763 SD_INIT_MSSP_SUB
  000013CC            02764 F4_000616 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SSPSTAT = %01000000
0013CC 0E40           02765         MOVLW 64
0013CE 6EC7           02766         MOVWF SSPSTAT,0
  000013D0            02767 F4_000617 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Output SD_CS : Output SD_DI : Output SD_CLK : Input SD_DO
0013D0 9494           02768         BCF TRISC,2,0
0013D2 9A94           02769         BCF TRISC,5,0
0013D4 9694           02770         BCF TRISC,3,0
0013D6 8894           02771         BSF TRISC,4,0
  000013D8            02772 F4_000618 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0013D8 9494           02773         BCF TRISC,2,0
0013DA 8482           02774         BSF PORTC,2,0
  000013DC            02775 F4_000619 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $FF
0013DC 0102           02776         MOVLB 2
  00000002            02777 RAM_BANK = 2
0013DE 6941           02778         SETF SD_BYTE0
  000013E0            02779 F4_000620 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = $FF
0013E0 6942           02780         SETF SD_BYTE1
  000013E2            02781 F4_000621 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = $FF
0013E2 6943           02782         SETF SD_BYTE2
  000013E4            02783 F4_000622 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = $FF
0013E4 6944           02784         SETF SD_BYTE3
  000013E6            02785 F4_000623 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = $FF
0013E6 6945           02786         SETF SD_BYTE4
  000013E8            02787 F4_000624 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
0013E8 6946           02788         SETF SD_BYTE5
  000013EA            02789 F4_000625 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
0013EA 0100           02790         MOVLB 0
  00000000            02791 RAM_BANK = 0
                      02792         F@CALL SD_SEND_CMD
  000013EE            02793 F4_000626 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
                      02794         F@CALL SD_SEND_CMD
  000013F0            02795 F4_000628 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] DelayMS 100
0013F0 0E64           02796         MOVLW 100
                      02797         F@CALL DL@MS
  000013F6            02798 F4_000629 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Low SD_CS
0013F6 9494           02799         BCF TRISC,2,0
0013F8 9482           02800         BCF PORTC,2,0
  000013FA            02801 F4_000630 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $40
0013FA 0E40           02802         MOVLW 64
0013FC 0102           02803         MOVLB 2
  00000002            02804 RAM_BANK = 2
0013FE 6F41           02805         MOVWF SD_BYTE0
  00001400            02806 F4_000631 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = $00
001400 6B42           02807         CLRF SD_BYTE1
  00001402            02808 F4_000632 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = $00
001402 6B43           02809         CLRF SD_BYTE2
  00001404            02810 F4_000633 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = $00
001404 6B44           02811         CLRF SD_BYTE3
  00001406            02812 F4_000634 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = $00
001406 6B45           02813         CLRF SD_BYTE4
  00001408            02814 F4_000635 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $95
001408 0E95           02815         MOVLW 149
00140A 6F46           02816         MOVWF SD_BYTE5
  0000140C            02817 F4_000636 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
00140C 0100           02818         MOVLB 0
  00000000            02819 RAM_BANK = 0
                      02820         F@CALL SD_SEND_CMD
  00001410            02821 F4_000637 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $01
001410 0E01           02822         MOVLW 1
001412 6E3E           02823         MOVWF SD_SEEK_RESPONSE_REQD,0
  00001414            02824 F4_000638 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FF
001414 6A3D           02825         CLRF SD_SEEK_RESPONSE_IDXH,0
001416 683C           02826         SETF SD_SEEK_RESPONSE_IDX,0
  00001418            02827 F4_000639 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      02828         F@CALL SD_SEEK_RESPONSE
  0000141C            02829 F4_000640 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then
00141C 0E01           02830         MOVLW 1
00141E 5C3F           02831         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
001420 A4D8           02832         BTFSS STATUS,2,0
                      02833         GO@TO BC@LL133
  00001426            02834 F4_000641 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] High SD_CS
001426 9494           02835         BCF TRISC,2,0
001428 8482           02836         BSF PORTC,2,0
  0000142A            02837 F4_000642 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
00142A 0E01           02838         MOVLW 1
00142C 6E40           02839         MOVWF SD_RETURN,0
  0000142E            02840 F4_000643 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
00142E 0012           02841         RETURN 0
  00001430            02842 F4_000644 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001430                02843 BC@LL133
  00001430            02844 F4_000646 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Idx = $FF
001430 6833           02845         SETF SD_IDX,0
  00001432            02846 F4_000647 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Repeat
001432                02847 BC@LL134
  00001432            02848 F4_000648 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $41
001432 0E41           02849         MOVLW 65
001434 0102           02850         MOVLB 2
  00000002            02851 RAM_BANK = 2
001436 6F41           02852         MOVWF SD_BYTE0
  00001438            02853 F4_000649 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = $00
001438 6B42           02854         CLRF SD_BYTE1
  0000143A            02855 F4_000650 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = $00
00143A 6B43           02856         CLRF SD_BYTE2
  0000143C            02857 F4_000651 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = $00
00143C 6B44           02858         CLRF SD_BYTE3
  0000143E            02859 F4_000652 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = $00
00143E 6B45           02860         CLRF SD_BYTE4
  00001440            02861 F4_000653 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
001440 6946           02862         SETF SD_BYTE5
  00001442            02863 F4_000654 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
001442 0100           02864         MOVLB 0
  00000000            02865 RAM_BANK = 0
                      02866         F@CALL SD_SEND_CMD
  00001446            02867 F4_000655 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $00
001446 6A3E           02868         CLRF SD_SEEK_RESPONSE_REQD,0
  00001448            02869 F4_000656 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FF
001448 6A3D           02870         CLRF SD_SEEK_RESPONSE_IDXH,0
00144A 683C           02871         SETF SD_SEEK_RESPONSE_IDX,0
  0000144C            02872 F4_000657 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      02873         F@CALL SD_SEEK_RESPONSE
  00001450            02874 F4_000658 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Dec SD_Idx
001450 0633           02875         DECF SD_IDX,F,0
  00001452            02876 F4_000659 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Until SD_Seek_Response_Return = 0 Or SD_Idx = 0
001452 0E01           02877         MOVLW 1
001454 523F           02878         MOVF SD_SEEK_RESPONSE_RETURN,F,0
001456 A4D8           02879         BTFSS STATUS,2,0
001458 0E00           02880         MOVLW 0
00145A 6E2D           02881         MOVWF SP#P9,0
00145C 0E01           02882         MOVLW 1
00145E 5233           02883         MOVF SD_IDX,F,0
001460 A4D8           02884         BTFSS STATUS,2,0
001462 0E00           02885         MOVLW 0
001464 102D           02886         IORWF SP#P9,W,0
001466 B4D8           02887         BTFSC STATUS,2,0
                      02888         GO@TO BC@LL134
00146A                02889 BC@LL135
  0000146A            02890 F4_000660 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Idx = 0 Then
00146A 5233           02891         MOVF SD_IDX,F,0
00146C A4D8           02892         BTFSS STATUS,2,0
                      02893         GO@TO BC@LL137
  00001472            02894 F4_000661 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] High SD_CS
001472 9494           02895         BCF TRISC,2,0
001474 8482           02896         BSF PORTC,2,0
  00001476            02897 F4_000662 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
001476 0E01           02898         MOVLW 1
001478 6E40           02899         MOVWF SD_RETURN,0
  0000147A            02900 F4_000663 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
00147A 0012           02901         RETURN 0
  0000147C            02902 F4_000664 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
00147C                02903 BC@LL137
  0000147C            02904 F4_000665 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] High SD_CS
00147C 9494           02905         BCF TRISC,2,0
00147E 8482           02906         BSF PORTC,2,0
  00001480            02907 F4_000666 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
001480 0102           02908         MOVLB 2
  00000002            02909 RAM_BANK = 2
001482 6946           02910         SETF SD_BYTE5
  00001484            02911 F4_000667 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
001484 0100           02912         MOVLB 0
  00000000            02913 RAM_BANK = 0
                      02914         F@CALL SD_SEND_BYTE
  00001488            02915 F4_000668 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
001488 0102           02916         MOVLB 2
  00000002            02917 RAM_BANK = 2
00148A 6B48           02918         CLRF SD_BUFFER_IDXH
00148C 6B47           02919         CLRF SD_BUFFER_IDX
  0000148E            02920 F4_000669 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Return = 0
00148E 6A40           02921         CLRF SD_RETURN,0
  00001490            02922 F4_000670 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001490 0100           02923         MOVLB 0
  00000000            02924 RAM_BANK = 0
001492 0012           02925         RETURN 0
  00001494            02926 F4_000676 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Close_File MACRO
                      02927 SD_CLOSE_FILE   MACRO .,.,.,.,.,.,.,.,.,.
                      02928  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      02929  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      02930         IF (PRM_COUNT != 0)
                      02931         ERROR "(In Asm) No parameters required for SD_Close_File"
                      02932         EXITM
                      02933         ENDIF
                      02934         F@CALL SD_CLOSE_FILE_SUB
                      02935         ENDM
001494                02936 SD_CLOSE_FILE_SUB
  00001494            02937 F4_000698 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Is_Dirty = 1 Then
001494 0E01           02938         MOVLW 1
001496 0102           02939         MOVLB 2
  00000002            02940 RAM_BANK = 2
001498 5DF6           02941         SUBWF SD_IS_DIRTY,W
00149A 0100           02942         MOVLB 0
  00000000            02943 RAM_BANK = 0
00149C A4D8           02944         BTFSS STATUS,2,0
                      02945         GO@TO BC@LL139
  000014A2            02946 F4_000699 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Repeat
0014A2                02947 BC@LL140
  000014A2            02948 F4_000700 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      02949         F@CALL SD_WRITE_SECTOR
  000014A6            02950 F4_000701 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Until SD_Return = 0
0014A6 5240           02951         MOVF SD_RETURN,F,0
0014A8 A4D8           02952         BTFSS STATUS,2,0
                      02953         GO@TO BC@LL140
0014AC                02954 BC@LL141
  000014AC            02955 F4_000702 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0014AC                02956 BC@LL139
  000014AC            02957 F4_000703 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_Root_Dir + SD_Root_Dir_Sec
0014AC 0102           02958         MOVLB 2
  00000002            02959 RAM_BANK = 2
0014AE 5185           02960         MOVF SD_ROOT_DIR_SEC,W
0014B0 256F           02961         ADDWF SD_ROOT_DIR,W
0014B2 6FBE           02962         MOVWF SD_WRITE_SEC_NUM
0014B4 5186           02963         MOVF SD_ROOT_DIR_SECH,W
0014B6 2170           02964         ADDWFC SD_ROOT_DIRH,W
0014B8 6FBF           02965         MOVWF SD_WRITE_SEC_NUMH
0014BA 5187           02966         MOVF SD_ROOT_DIR_SECHH,W
0014BC 2171           02967         ADDWFC SD_ROOT_DIRHH,W
0014BE 6FC0           02968         MOVWF SD_WRITE_SEC_NUMHH
0014C0 5188           02969         MOVF SD_ROOT_DIR_SECHHH,W
0014C2 2172           02970         ADDWFC SD_ROOT_DIRHHH,W
0014C4 6FC1           02971         MOVWF SD_WRITE_SEC_NUMHHH
  000014C6            02972 F4_000704 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
0014C6 C2C1 F037      02973         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
0014CA C2C0 F036      02974         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
0014CE C2BF F035      02975         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
0014D2 C2BE F034      02976         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  000014D6            02977 F4_000705 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0014D6 0E01           02978         MOVLW 1
0014D8 6F4A           02979         MOVWF SD_RW_OPTION
  000014DA            02980 F4_000706 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0014DA 0100           02981         MOVLB 0
  00000000            02982 RAM_BANK = 0
                      02983         F@CALL SD_SECTOR_SUB
  000014E0            02984 F4_000708 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $1C
0014E0 0E1C           02985         MOVLW 28
0014E2 0102           02986         MOVLB 2
  00000002            02987 RAM_BANK = 2
0014E4 2589           02988         ADDWF SD_ROOT_DIR_POS,W
0014E6 6FC2           02989         MOVWF SD_WRITE_BUFFER_POS
0014E8 0E00           02990         MOVLW 0
0014EA 218A           02991         ADDWFC SD_ROOT_DIR_POSH,W
0014EC 6FC3           02992         MOVWF SD_WRITE_BUFFER_POSH
  000014EE            02993 F4_000709 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE0
0014EE C2CC F24D      02994         MOVFF SD_FILE_SIZE,SD_DATA_IO
  000014F2            02995 F4_000710 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
0014F2 0100           02996         MOVLB 0
  00000000            02997 RAM_BANK = 0
                      02998         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  000014F8            02999 F4_000711 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
0014F8 0102           03000         MOVLB 2
  00000002            03001 RAM_BANK = 2
0014FA 4BC2           03002         INFSNZ SD_WRITE_BUFFER_POS,F
0014FC 2BC3           03003         INCF SD_WRITE_BUFFER_POSH,F
  000014FE            03004 F4_000712 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE1
0014FE C2CD F24D      03005         MOVFF SD_FILE_SIZEH,SD_DATA_IO
  00001502            03006 F4_000713 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001502 0100           03007         MOVLB 0
  00000000            03008 RAM_BANK = 0
                      03009         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001508            03010 F4_000714 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001508 0102           03011         MOVLB 2
  00000002            03012 RAM_BANK = 2
00150A 4BC2           03013         INFSNZ SD_WRITE_BUFFER_POS,F
00150C 2BC3           03014         INCF SD_WRITE_BUFFER_POSH,F
  0000150E            03015 F4_000715 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE2
00150E C2CE F24D      03016         MOVFF SD_FILE_SIZEHH,SD_DATA_IO
  00001512            03017 F4_000716 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001512 0100           03018         MOVLB 0
  00000000            03019 RAM_BANK = 0
                      03020         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001518            03021 F4_000717 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001518 0102           03022         MOVLB 2
  00000002            03023 RAM_BANK = 2
00151A 4BC2           03024         INFSNZ SD_WRITE_BUFFER_POS,F
00151C 2BC3           03025         INCF SD_WRITE_BUFFER_POSH,F
  0000151E            03026 F4_000718 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE3
00151E C2CF F24D      03027         MOVFF SD_FILE_SIZEHHH,SD_DATA_IO
  00001522            03028 F4_000719 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001522 0100           03029         MOVLB 0
  00000000            03030 RAM_BANK = 0
                      03031         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001528            03032 F4_000720 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $16
001528 0E16           03033         MOVLW 22
00152A 0102           03034         MOVLB 2
  00000002            03035 RAM_BANK = 2
00152C 2589           03036         ADDWF SD_ROOT_DIR_POS,W
00152E 6FC2           03037         MOVWF SD_WRITE_BUFFER_POS
001530 0E00           03038         MOVLW 0
001532 218A           03039         ADDWFC SD_ROOT_DIR_POSH,W
001534 6FC3           03040         MOVWF SD_WRITE_BUFFER_POSH
  00001536            03041 F4_000721 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Set_File_Time_Modified
001536 0100           03042         MOVLB 0
  00000000            03043 RAM_BANK = 0
                      03044         F@CALL SD_SET_FILE_TIME_MODIFIED
  0000153C            03045 F4_000722 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      03046         F@CALL SD_WRITE_SECTOR
  00001540            03047 F4_000723 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_EOF = 1 Then
001540 96D8           03048         BCF STATUS,3,0
001542 0102           03049         MOVLB 2
  00000002            03050 RAM_BANK = 2
001544 A1E5           03051         BTFSS _B#VR1,0
001546 86D8           03052         BSF STATUS,3,0
001548 0100           03053         MOVLB 0
  00000000            03054 RAM_BANK = 0
                      03055         G@OTO BC@LL143
  00001550            03056 F4_000724 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos_Prev = SD_FAT_Buffer_Pos
001550 C27E F284      03057         MOVFF SD_FAT_BUFFER_POSH,SD_FAT_BUFFER_POS_PREVH
001554 C27D F283      03058         MOVFF SD_FAT_BUFFER_POS,SD_FAT_BUFFER_POS_PREV
  00001558            03059 F4_000725 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec_Prev = SD_FAT_Sec
001558 C27C F282      03060         MOVFF SD_FAT_SECHHH,SD_FAT_SEC_PREVHHH
00155C C27B F281      03061         MOVFF SD_FAT_SECHH,SD_FAT_SEC_PREVHH
001560 C27A F280      03062         MOVFF SD_FAT_SECH,SD_FAT_SEC_PREVH
001564 C279 F27F      03063         MOVFF SD_FAT_SEC,SD_FAT_SEC_PREV
  00001568            03064 F4_000726 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_FAT1 + SD_FAT_Sec_Prev
001568 0102           03065         MOVLB 2
  00000002            03066 RAM_BANK = 2
00156A 517F           03067         MOVF SD_FAT_SEC_PREV,W
00156C 2567           03068         ADDWF SD_FAT1,W
00156E 6FBE           03069         MOVWF SD_WRITE_SEC_NUM
001570 5180           03070         MOVF SD_FAT_SEC_PREVH,W
001572 2168           03071         ADDWFC SD_FAT1H,W
001574 6FBF           03072         MOVWF SD_WRITE_SEC_NUMH
001576 5181           03073         MOVF SD_FAT_SEC_PREVHH,W
001578 2169           03074         ADDWFC SD_FAT1HH,W
00157A 6FC0           03075         MOVWF SD_WRITE_SEC_NUMHH
00157C 5182           03076         MOVF SD_FAT_SEC_PREVHHH,W
00157E 216A           03077         ADDWFC SD_FAT1HHH,W
001580 6FC1           03078         MOVWF SD_WRITE_SEC_NUMHHH
  00001582            03079 F4_000727 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
001582 C2C1 F037      03080         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
001586 C2C0 F036      03081         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
00158A C2BF F035      03082         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
00158E C2BE F034      03083         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  00001592            03084 F4_000728 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001592 0E01           03085         MOVLW 1
001594 6F4A           03086         MOVWF SD_RW_OPTION
  00001596            03087 F4_000729 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001596 0100           03088         MOVLB 0
  00000000            03089 RAM_BANK = 0
                      03090         F@CALL SD_SECTOR_SUB
  0000159C            03091 F4_000731 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num_Prev = SD_Cluster_Seq_Idx
00159C C2DB F2DD      03092         MOVFF SD_CLUSTER_SEQ_IDXH,SD_CLUSTER_SEQ_NUM_PREVH
0015A0 C2DA F2DC      03093         MOVFF SD_CLUSTER_SEQ_IDX,SD_CLUSTER_SEQ_NUM_PREV
  000015A4            03094 F4_000732 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector
                      03095         F@CALL SD_ASSEMBLE_FAT_SECTOR
  000015A8            03096 F4_000733 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector_End_Close
                      03097         F@CALL SD_ASSEMBLE_FAT_SECTOR_END_CLOSE
  000015AC            03098 F4_000734 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      03099         F@CALL SD_WRITE_SECTOR
  000015B0            03100 F4_000735 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT2 + SD_FAT_Sec_Prev
0015B0 0102           03101         MOVLB 2
  00000002            03102 RAM_BANK = 2
0015B2 517F           03103         MOVF SD_FAT_SEC_PREV,W
0015B4 256B           03104         ADDWF SD_FAT2,W
0015B6 6E34           03105         MOVWF SD_SECTOR_NUM,0
0015B8 5180           03106         MOVF SD_FAT_SEC_PREVH,W
0015BA 216C           03107         ADDWFC SD_FAT2H,W
0015BC 6E35           03108         MOVWF SD_SECTOR_NUMH,0
0015BE 5181           03109         MOVF SD_FAT_SEC_PREVHH,W
0015C0 216D           03110         ADDWFC SD_FAT2HH,W
0015C2 6E36           03111         MOVWF SD_SECTOR_NUMHH,0
0015C4 5182           03112         MOVF SD_FAT_SEC_PREVHHH,W
0015C6 216E           03113         ADDWFC SD_FAT2HHH,W
0015C8 6E37           03114         MOVWF SD_SECTOR_NUMHHH,0
  000015CA            03115 F4_000736 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
0015CA 0100           03116         MOVLB 0
  00000000            03117 RAM_BANK = 0
                      03118         F@CALL SD_WRITE_SECTOR
  000015D0            03119 F4_000737 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0015D0                03120 BC@LL143
  000015D0            03121 F4_000738 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0015D0 0012           03122         RETURN 0
0015D2                03123 SD_SET_FILE_TIME_CREATE
  000015D2            03124 F4_000742 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_MSeconds + ((SD_Seconds // 2) * 100)
0015D2 6A24           03125         CLRF PP7H,0
0015D4 C2F2 F023      03126         MOVFF SD_MSECONDS,PP7
0015D8 6A28           03127         CLRF PP8H,0
0015DA C2F3 F027      03128         MOVFF SD_SECONDS,PP8
0015DE 0E01           03129         MOVLW 1
0015E0 1627           03130         ANDWF PP8,F,0
0015E2 6A28           03131         CLRF PP8H,0
0015E4 5028           03132         MOVF PP8H,W,0
0015E6 0D64           03133         MULLW 100
0015E8 CFF3 F028      03134         MOVFF PRODL,PP8H
0015EC 5027           03135         MOVF PP8,W,0
0015EE 0D64           03136         MULLW 100
0015F0 CFF3 F027      03137         MOVFF PRODL,PP8
0015F4 50F4           03138         MOVF PRODH,W,0
0015F6 2628           03139         ADDWF PP8H,F,0
0015F8 5023           03140         MOVF PP7,W,0
0015FA 2427           03141         ADDWF PP8,W,0
0015FC 0102           03142         MOVLB 2
  00000002            03143 RAM_BANK = 2
0015FE 6F4D           03144         MOVWF SD_DATA_IO
  00001600            03145 F4_000743 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001600 0100           03146         MOVLB 0
  00000000            03147 RAM_BANK = 0
                      03148         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001606            03149 F4_000744 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001606 0102           03150         MOVLB 2
  00000002            03151 RAM_BANK = 2
001608 4BC2           03152         INFSNZ SD_WRITE_BUFFER_POS,F
00160A 2BC3           03153         INCF SD_WRITE_BUFFER_POSH,F
00160C                03154 SD_SET_FILE_TIME_MODIFIED
00160C 0100           03155         MOVLB 0
  00000000            03156 RAM_BANK = 0
  0000160E            03157 F4_000746 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = (SD_Seconds / 2) | (SD_Minutes << 5)
00160E 6A24           03158         CLRF PP7H,0
001610 C2F3 F023      03159         MOVFF SD_SECONDS,PP7
001614 90D8           03160         BCF STATUS,0,0
001616 3224           03161         RRCF PP7H,F,0
001618 3223           03162         RRCF PP7,F,0
00161A 6A28           03163         CLRF PP8H,0
00161C C2F4 F027      03164         MOVFF SD_MINUTES,PP8
001620 0E05           03165         MOVLW 5
001622                03166 SL@LB32
001622 90D8           03167         BCF STATUS,0,0
001624 3627           03168         RLCF PP8,F,0
001626 3628           03169         RLCF PP8H,F,0
001628 2EE8           03170         DECFSZ WREG,F,0
00162A D7FB           03171         BRA SL@LB32
00162C 5023           03172         MOVF PP7,W,0
00162E 1027           03173         IORWF PP8,W,0
001630 0102           03174         MOVLB 2
  00000002            03175 RAM_BANK = 2
001632 6F4D           03176         MOVWF SD_DATA_IO
  00001634            03177 F4_000747 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001634 0100           03178         MOVLB 0
  00000000            03179 RAM_BANK = 0
                      03180         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  0000163A            03181 F4_000748 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
00163A 0102           03182         MOVLB 2
  00000002            03183 RAM_BANK = 2
00163C 4BC2           03184         INFSNZ SD_WRITE_BUFFER_POS,F
00163E 2BC3           03185         INCF SD_WRITE_BUFFER_POSH,F
  00001640            03186 F4_000749 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = (SD_Minutes >> 3) | (SD_Hours << 3)
001640 6A24           03187         CLRF PP7H,0
001642 C2F4 F023      03188         MOVFF SD_MINUTES,PP7
001646 3224           03189         RRCF PP7H,F,0
001648 3223           03190         RRCF PP7,F,0
00164A 3224           03191         RRCF PP7H,F,0
00164C 3223           03192         RRCF PP7,F,0
00164E 3224           03193         RRCF PP7H,F,0
001650 3223           03194         RRCF PP7,F,0
001652 0E1F           03195         MOVLW 31
001654 1624           03196         ANDWF PP7H,F,0
001656 6A28           03197         CLRF PP8H,0
001658 C2F5 F027      03198         MOVFF SD_HOURS,PP8
00165C 0E03           03199         MOVLW 3
00165E                03200 SL@LB33
00165E 90D8           03201         BCF STATUS,0,0
001660 3627           03202         RLCF PP8,F,0
001662 3628           03203         RLCF PP8H,F,0
001664 2EE8           03204         DECFSZ WREG,F,0
001666 D7FB           03205         BRA SL@LB33
001668 5023           03206         MOVF PP7,W,0
00166A 1027           03207         IORWF PP8,W,0
00166C 6F4D           03208         MOVWF SD_DATA_IO
  0000166E            03209 F4_000750 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
00166E 0100           03210         MOVLB 0
  00000000            03211 RAM_BANK = 0
                      03212         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001674            03213 F4_000751 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001674 0102           03214         MOVLB 2
  00000002            03215 RAM_BANK = 2
001676 4BC2           03216         INFSNZ SD_WRITE_BUFFER_POS,F
001678 2BC3           03217         INCF SD_WRITE_BUFFER_POSH,F
  0000167A            03218 F4_000752 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Day | (SD_Month << 5)
00167A C2F0 F024      03219         MOVFF SD_MONTH,PP7H
00167E 6A23           03220         CLRF PP7,0
001680 90D8           03221         BCF STATUS,0,0
001682 3224           03222         RRCF PP7H,F,0
001684 3223           03223         RRCF PP7,F,0
001686 3224           03224         RRCF PP7H,F,0
001688 3223           03225         RRCF PP7,F,0
00168A 3224           03226         RRCF PP7H,F,0
00168C 3223           03227         RRCF PP7,F,0
00168E 51EF           03228         MOVF SD_DAY,W
001690 1023           03229         IORWF PP7,W,0
001692 6F4D           03230         MOVWF SD_DATA_IO
  00001694            03231 F4_000753 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001694 0100           03232         MOVLB 0
  00000000            03233 RAM_BANK = 0
                      03234         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  0000169A            03235 F4_000754 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
00169A 0102           03236         MOVLB 2
  00000002            03237 RAM_BANK = 2
00169C 4BC2           03238         INFSNZ SD_WRITE_BUFFER_POS,F
00169E 2BC3           03239         INCF SD_WRITE_BUFFER_POSH,F
  000016A0            03240 F4_000755 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = (SD_Month >> 3) | ((SD_Year + 20) << 1)
0016A0 6A24           03241         CLRF PP7H,0
0016A2 C2F0 F023      03242         MOVFF SD_MONTH,PP7
0016A6 3224           03243         RRCF PP7H,F,0
0016A8 3223           03244         RRCF PP7,F,0
0016AA 3224           03245         RRCF PP7H,F,0
0016AC 3223           03246         RRCF PP7,F,0
0016AE 3224           03247         RRCF PP7H,F,0
0016B0 3223           03248         RRCF PP7,F,0
0016B2 0E1F           03249         MOVLW 31
0016B4 1624           03250         ANDWF PP7H,F,0
0016B6 6A28           03251         CLRF PP8H,0
0016B8 C2F1 F027      03252         MOVFF SD_YEAR,PP8
0016BC 0E14           03253         MOVLW 20
0016BE 2627           03254         ADDWF PP8,F,0
0016C0 0E00           03255         MOVLW 0
0016C2 2228           03256         ADDWFC PP8H,F,0
0016C4 90D8           03257         BCF STATUS,0,0
0016C6 3627           03258         RLCF PP8,F,0
0016C8 3628           03259         RLCF PP8H,F,0
0016CA 5023           03260         MOVF PP7,W,0
0016CC 1027           03261         IORWF PP8,W,0
0016CE 6F4D           03262         MOVWF SD_DATA_IO
  000016D0            03263 F4_000756 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
0016D0 0100           03264         MOVLB 0
  00000000            03265 RAM_BANK = 0
                      03266         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  000016D6            03267 F4_000757 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0016D6 0012           03268         RETURN 0
  000016D8            03269 F4_000763 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Open_File MACRO
                      03270 SD_OPEN_FILE    MACRO .,.,.,.,.,.,.,.,.,.
                      03271  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03272  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03273         F@CALL SD_OPEN_FILE_SUB
                      03274         IF (RETURN_TYPE !=BYTE) && (RETURN_TYPE !=WORD) && (RETURN_TYPE !=DWORD)
                      03275         ERROR "(In Asm) SD_Open_File - Return variable should be a Byte, Word, or DWord variable"
                      03276         ELSE
                      03277         IF (RETURN_TYPE == BYTE)
                      03278         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      03279         ENDIF
                      03280         IF (RETURN_TYPE == WORD)
                      03281         BYTE_WORD SD_EXTENDED_RETURN, RETURN_VAR
                      03282 RAM_BANK = 0
                      03283         ENDIF
                      03284         IF (RETURN_TYPE == DWORD)
                      03285         BYTE_DWORD SD_EXTENDED_RETURN, RETURN_VAR
                      03286 RAM_BANK = 0
                      03287         ENDIF
                      03288         ENDIF
                      03289         ENDM
0016D8                03290 SD_OPEN_FILE_SUB
  000016D8            03291 F4_000787 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Check_For_File_Sub
                      03292         F@CALL SD_CHECK_FOR_FILE_SUB
  000016DA            03293 F4_000788 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir <> 0 Then
0016DA 0102           03294         MOVLB 2
  00000002            03295 RAM_BANK = 2
0016DC 534C           03296         MOVF SD_EXTENDED_RETURN_ROOT_DIR,F
0016DE 0100           03297         MOVLB 0
  00000000            03298 RAM_BANK = 0
0016E0 B4D8           03299         BTFSC STATUS,2,0
                      03300         GO@TO BC@LL145
  000016E6            03301 F4_000789 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
0016E6 0E01           03302         MOVLW 1
0016E8 0102           03303         MOVLB 2
  00000002            03304 RAM_BANK = 2
0016EA 6F4B           03305         MOVWF SD_EXTENDED_RETURN
  000016EC            03306 F4_000790 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0016EC 0100           03307         MOVLB 0
  00000000            03308 RAM_BANK = 0
0016EE 0012           03309         RETURN 0
  000016F0            03310 F4_000791 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0016F0                03311 BC@LL145
  000016F0            03312 F4_000792 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE0 = SD_Root_Dir_File[$1A]
0016F0 0102           03313         MOVLB 2
  00000002            03314 RAM_BANK = 2
0016F2 51B8           03315         MOVF SD_ROOT_DIR_FILE#26,W
0016F4 6FC5           03316         MOVWF SD_CLUSTER_NUM
  000016F6            03317 F4_000793 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE1 = SD_Root_Dir_File[$1B]
0016F6 51B9           03318         MOVF SD_ROOT_DIR_FILE#27,W
0016F8 6FC6           03319         MOVWF SD_CLUSTER_NUMH
  000016FA            03320 F4_000794 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE0 = SD_Root_Dir_File[$1C]
0016FA 51BA           03321         MOVF SD_ROOT_DIR_FILE#28,W
0016FC 6FCC           03322         MOVWF SD_FILE_SIZE
  000016FE            03323 F4_000795 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE1 = SD_Root_Dir_File[$1D]
0016FE 51BB           03324         MOVF SD_ROOT_DIR_FILE#29,W
001700 6FCD           03325         MOVWF SD_FILE_SIZEH
  00001702            03326 F4_000796 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE2 = SD_Root_Dir_File[$1E]
001702 51BC           03327         MOVF SD_ROOT_DIR_FILE#30,W
001704 6FCE           03328         MOVWF SD_FILE_SIZEHH
  00001706            03329 F4_000797 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE3 = SD_Root_Dir_File[$1F]
001706 51BD           03330         MOVF SD_ROOT_DIR_FILE#31,W
001708 6FCF           03331         MOVWF SD_FILE_SIZEHHH
  0000170A            03332 F4_000798 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
00170A 0EFE           03333         MOVLW 254
00170C 25C5           03334         ADDWF SD_CLUSTER_NUM,W
00170E 6E23           03335         MOVWF PP7,0
001710 0EFF           03336         MOVLW 255
001712 21C6           03337         ADDWFC SD_CLUSTER_NUMH,W
001714 6E24           03338         MOVWF PP7H,0
001716 0EFF           03339         MOVLW 255
001718 6A25           03340         CLRF PP7HH,0
00171A 2225           03341         ADDWFC PP7HH,F,0
00171C 6A26           03342         CLRF PP7HHH,0
00171E 2226           03343         ADDWFC PP7HHH,F,0
001720 C026 F014      03344         MOVFF PP7HHH,PP0HHH
001724 C025 F013      03345         MOVFF PP7HH,PP0HH
001728 C024 F012      03346         MOVFF PP7H,PP0H
00172C C023 F011      03347         MOVFF PP7,PP0
001730 6A1C           03348         CLRF PP2HHH,0
001732 6A1B           03349         CLRF PP2HH,0
001734 6A1A           03350         CLRF PP2H,0
001736 C255 F019      03351         MOVFF SD_SECS_PER_CLUSTER,PP2
                      03352         F@CALL AL@MUL
00173E C014 F28E      03353         MOVFF PP0HHH,SD_DATA_SECHHH
001742 C013 F28D      03354         MOVFF PP0HH,SD_DATA_SECHH
001746 C012 F28C      03355         MOVFF PP0H,SD_DATA_SECH
00174A C011 F28B      03356         MOVFF PP0,SD_DATA_SEC
  0000174E            03357 F4_000799 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
00174E 5173           03358         MOVF SD_DATA_AREA,W
001750 278B           03359         ADDWF SD_DATA_SEC,F
001752 5174           03360         MOVF SD_DATA_AREAH,W
001754 238C           03361         ADDWFC SD_DATA_SECH,F
001756 5175           03362         MOVF SD_DATA_AREAHH,W
001758 238D           03363         ADDWFC SD_DATA_SECHH,F
00175A 5176           03364         MOVF SD_DATA_AREAHHH,W
00175C 238E           03365         ADDWFC SD_DATA_SECHHH,F
  0000175E            03366 F4_000800 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
00175E 0E01           03367         MOVLW 1
001760 6FCB           03368         MOVWF SD_SEC_IN_CLUSTER
  00001762            03369 F4_000801 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001762 C28E F037      03370         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001766 C28D F036      03371         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
00176A C28C F035      03372         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
00176E C28B F034      03373         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001772            03374 F4_000802 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001772 0E01           03375         MOVLW 1
001774 6F4A           03376         MOVWF SD_RW_OPTION
  00001776            03377 F4_000803 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001776 0100           03378         MOVLB 0
  00000000            03379 RAM_BANK = 0
                      03380         F@CALL SD_SECTOR_SUB
  0000177C            03381 F4_000805 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Return = 1 Then
00177C 0E01           03382         MOVLW 1
00177E 5C40           03383         SUBWF SD_RETURN,W,0
001780 A4D8           03384         BTFSS STATUS,2,0
                      03385         GO@TO BC@LL147
  00001786            03386 F4_000806 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001786 0E01           03387         MOVLW 1
001788 0102           03388         MOVLB 2
  00000002            03389 RAM_BANK = 2
00178A 6F4B           03390         MOVWF SD_EXTENDED_RETURN
  0000178C            03391 F4_000807 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
00178C 0100           03392         MOVLB 0
  00000000            03393 RAM_BANK = 0
00178E 0012           03394         RETURN 0
  00001790            03395 F4_000808 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001790                03396 BC@LL147
  00001790            03397 F4_000809 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 0
001790 0102           03398         MOVLB 2
  00000002            03399 RAM_BANK = 2
001792 6B90           03400         CLRF SD_DATA_BUFFER_POSH
001794 6B8F           03401         CLRF SD_DATA_BUFFER_POS
  00001796            03402 F4_000810 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Bytes_Read = 0
001796 6BE4           03403         CLRF SD_BYTES_READHHH
001798 6BE3           03404         CLRF SD_BYTES_READHH
00179A 6BE2           03405         CLRF SD_BYTES_READH
00179C 6BE1           03406         CLRF SD_BYTES_READ
  0000179E            03407 F4_000811 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_File_Size > 0 Then
00179E 96D8           03408         BCF STATUS,3,0
0017A0 BFCF           03409         BTFSC SD_FILE_SIZEHHH,7
0017A2 86D8           03410         BSF STATUS,3,0
0017A4 0100           03411         MOVLB 0
  00000000            03412 RAM_BANK = 0
                      03413         G@OTO BC@LL149
0017AC 0102           03414         MOVLB 2
  00000002            03415 RAM_BANK = 2
0017AE 51CC           03416         MOVF SD_FILE_SIZE,W
0017B0 11CD           03417         IORWF SD_FILE_SIZEH,W
0017B2 11CE           03418         IORWF SD_FILE_SIZEHH,W
0017B4 11CF           03419         IORWF SD_FILE_SIZEHHH,W
0017B6 0100           03420         MOVLB 0
  00000000            03421 RAM_BANK = 0
0017B8 B4D8           03422         BTFSC STATUS,2,0
                      03423         GO@TO BC@LL149
0017BE 96D8           03424         BCF STATUS,3,0
0017C0 0102           03425         MOVLB 2
  00000002            03426 RAM_BANK = 2
0017C2 BFCF           03427         BTFSC SD_FILE_SIZEHHH,7
0017C4 86D8           03428         BSF STATUS,3,0
0017C6 0100           03429         MOVLB 0
  00000000            03430 RAM_BANK = 0
                      03431         G@OTO BC@LL149
0017CE 0102           03432         MOVLB 2
  00000002            03433 RAM_BANK = 2
0017D0 51CD           03434         MOVF SD_FILE_SIZEH,W
0017D2 11CE           03435         IORWF SD_FILE_SIZEHH,W
0017D4 11CF           03436         IORWF SD_FILE_SIZEHHH,W
0017D6 E106           03437         BNZ CP@LB23
0017D8 0E01           03438         MOVLW 1
0017DA 5DCC           03439         SUBWF SD_FILE_SIZE,W
0017DC 0100           03440         MOVLB 0
  00000000            03441 RAM_BANK = 0
0017DE A0D8           03442         BTFSS STATUS,0,0
                      03443         GO@TO BC@LL149
0017E4                03444 CP@LB23
  000017E4            03445 F4_000812 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 0
0017E4 0102           03446         MOVLB 2
  00000002            03447 RAM_BANK = 2
0017E6 91E5           03448         BCF _B#VR1,0
0017E8 0100           03449         MOVLB 0
  00000000            03450 RAM_BANK = 0
                      03451         F@JUMP BC@LL150
0017EE                03452 BC@LL149
  000017EE            03453 F4_000813 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  000017EE            03454 F4_000814 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
0017EE 0102           03455         MOVLB 2
  00000002            03456 RAM_BANK = 2
0017F0 81E5           03457         BSF _B#VR1,0
  000017F2            03458 F4_000815 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0017F2                03459 BC@LL150
0017F2 0100           03460         MOVLB 0
  00000000            03461 RAM_BANK = 0
  000017F4            03462 F4_000816 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 0
0017F4 0102           03463         MOVLB 2
  00000002            03464 RAM_BANK = 2
0017F6 6BF6           03465         CLRF SD_IS_DIRTY
  000017F8            03466 F4_000817 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 1
0017F8 6BD9           03467         CLRF SD_CLUSTER_SEQ_NUMH
0017FA 0E01           03468         MOVLW 1
0017FC 6FD8           03469         MOVWF SD_CLUSTER_SEQ_NUM
  000017FE            03470 F4_000818 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
0017FE 6B4B           03471         CLRF SD_EXTENDED_RETURN
  00001800            03472 F4_000819 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001800 0100           03473         MOVLB 0
  00000000            03474 RAM_BANK = 0
001802 0012           03475         RETURN 0
  00001804            03476 F4_000825 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Read_Byte_From_File MACRO
                      03477 SD_READ_BYTE_FROM_FILE  MACRO .,.,.,.,.,.,.,.,.,.
                      03478  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03479  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03480         F@CALL SD_READ_BYTE_FROM_FILE_SUB
                      03481         IF (SD_READ_BYTE_FROM_FILE_RETURN != 1)
                      03482         ERROR "(In Asm) SD_Read_Byte_From_File -  Mandatory return parameter missing"
                      03483         ELSE
                      03484         IF (RETURN_TYPE !=BYTE) && (RETURN_TYPE !=WORD) && (RETURN_TYPE !=DWORD)
                      03485         ERROR "(In Asm) SD_Read_Byte_From_File - Return variable should be a Byte, Word or DWord variable"
                      03486         ELSE
                      03487         IF (RETURN_TYPE == BYTE)
                      03488         BYTE_BYTE SD_BYTE_RW, RETURN_VAR
                      03489         ENDIF
                      03490         IF (RETURN_TYPE == WORD)
                      03491         BYTE_WORD SD_BYTE_RW, RETURN_VAR
                      03492 RAM_BANK = 0
                      03493         ENDIF
                      03494         IF (RETURN_TYPE == DWORD)
                      03495         BYTE_DWORD SD_BYTE_RW, RETURN_VAR
                      03496 RAM_BANK = 0
                      03497         ENDIF
                      03498         ENDIF
                      03499         ENDIF
                      03500         ENDM
001804                03501 SD_READ_BYTE_FROM_FILE_SUB
  00001804            03502 F4_000853 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_EOF = 0 Then
001804 96D8           03503         BCF STATUS,3,0
001806 0102           03504         MOVLB 2
  00000002            03505 RAM_BANK = 2
001808 B1E5           03506         BTFSC _B#VR1,0
00180A 86D8           03507         BSF STATUS,3,0
00180C 0100           03508         MOVLB 0
  00000000            03509 RAM_BANK = 0
                      03510         G@OTO BC@LL152
  00001814            03511 F4_000854 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Buffer_Pos
001814 0102           03512         MOVLB 2
  00000002            03513 RAM_BANK = 2
001816 4B8F           03514         INFSNZ SD_DATA_BUFFER_POS,F
001818 2B90           03515         INCF SD_DATA_BUFFER_POSH,F
  0000181A            03516 F4_000855 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Data_Buffer_Pos > SD_Bytes_Per_Sec Then
00181A 518F           03517         MOVF SD_DATA_BUFFER_POS,W
00181C 5D5F           03518         SUBWF SD_BYTES_PER_SEC,W
00181E 5190           03519         MOVF SD_DATA_BUFFER_POSH,W
001820 5960           03520         SUBWFB SD_BYTES_PER_SECH,W
001822 0100           03521         MOVLB 0
  00000000            03522 RAM_BANK = 0
001824 B0D8           03523         BTFSC STATUS,0,0
                      03524         GO@TO BC@LL154
  0000182A            03525 F4_000856 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Is_Dirty = 1 Then
00182A 0E01           03526         MOVLW 1
00182C 0102           03527         MOVLB 2
  00000002            03528 RAM_BANK = 2
00182E 5DF6           03529         SUBWF SD_IS_DIRTY,W
001830 0100           03530         MOVLB 0
  00000000            03531 RAM_BANK = 0
001832 A4D8           03532         BTFSS STATUS,2,0
                      03533         GO@TO BC@LL156
  00001838            03534 F4_000857 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Repeat
001838                03535 BC@LL157
  00001838            03536 F4_000858 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      03537         F@CALL SD_WRITE_SECTOR
  0000183C            03538 F4_000859 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Until SD_Return = 0
00183C 5240           03539         MOVF SD_RETURN,F,0
00183E A4D8           03540         BTFSS STATUS,2,0
                      03541         GO@TO BC@LL157
001842                03542 BC@LL158
  00001842            03543 F4_000860 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 0
001842 0102           03544         MOVLB 2
  00000002            03545 RAM_BANK = 2
001844 6BF6           03546         CLRF SD_IS_DIRTY
  00001846            03547 F4_000861 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001846                03548 BC@LL156
001846 0100           03549         MOVLB 0
  00000000            03550 RAM_BANK = 0
  00001848            03551 F4_000862 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Sec
001848 0102           03552         MOVLB 2
  00000002            03553 RAM_BANK = 2
00184A 2B8B           03554         INCF SD_DATA_SEC,F
00184C 0E00           03555         MOVLW 0
00184E 238C           03556         ADDWFC SD_DATA_SECH,F
001850 238D           03557         ADDWFC SD_DATA_SECHH,F
001852 238E           03558         ADDWFC SD_DATA_SECHHH,F
  00001854            03559 F4_000863 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sec_in_Cluster
001854 2BCB           03560         INCF SD_SEC_IN_CLUSTER,F
  00001856            03561 F4_000864 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Sec_in_Cluster > SD_Secs_Per_Cluster Then
001856 51CB           03562         MOVF SD_SEC_IN_CLUSTER,W
001858 5D55           03563         SUBWF SD_SECS_PER_CLUSTER,W
00185A 0100           03564         MOVLB 0
  00000000            03565 RAM_BANK = 0
00185C B0D8           03566         BTFSC STATUS,0,0
                      03567         GO@TO BC@LL160
  00001862            03568 F4_000865 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001862 6A14           03569         CLRF PP0HHH,0
001864 6A13           03570         CLRF PP0HH,0
001866 C2C6 F012      03571         MOVFF SD_CLUSTER_NUMH,PP0H
00186A C2C5 F011      03572         MOVFF SD_CLUSTER_NUM,PP0
00186E 6A1C           03573         CLRF PP2HHH,0
001870 6A1B           03574         CLRF PP2HH,0
001872 0E01           03575         MOVLW 1
001874 6E1A           03576         MOVWF PP2H,0
001876 6A19           03577         CLRF PP2,0
                      03578         F@CALL L@DIV
00187C C014 F27C      03579         MOVFF PP0HHH,SD_FAT_SECHHH
001880 C013 F27B      03580         MOVFF PP0HH,SD_FAT_SECHH
001884 C012 F27A      03581         MOVFF PP0H,SD_FAT_SECH
001888 C011 F279      03582         MOVFF PP0,SD_FAT_SEC
  0000188C            03583 F4_000866 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
00188C C2C5 F27D      03584         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001890 0102           03585         MOVLB 2
  00000002            03586 RAM_BANK = 2
001892 6B7E           03587         CLRF SD_FAT_BUFFER_POSH
  00001894            03588 F4_000867 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001894 90D8           03589         BCF STATUS,0,0
001896 377D           03590         RLCF SD_FAT_BUFFER_POS,F
001898 377E           03591         RLCF SD_FAT_BUFFER_POSH,F
  0000189A            03592 F4_000868 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
00189A 5179           03593         MOVF SD_FAT_SEC,W
00189C 2567           03594         ADDWF SD_FAT1,W
00189E 6E34           03595         MOVWF SD_SECTOR_NUM,0
0018A0 517A           03596         MOVF SD_FAT_SECH,W
0018A2 2168           03597         ADDWFC SD_FAT1H,W
0018A4 6E35           03598         MOVWF SD_SECTOR_NUMH,0
0018A6 517B           03599         MOVF SD_FAT_SECHH,W
0018A8 2169           03600         ADDWFC SD_FAT1HH,W
0018AA 6E36           03601         MOVWF SD_SECTOR_NUMHH,0
0018AC 517C           03602         MOVF SD_FAT_SECHHH,W
0018AE 216A           03603         ADDWFC SD_FAT1HHH,W
0018B0 6E37           03604         MOVWF SD_SECTOR_NUMHHH,0
  000018B2            03605 F4_000869 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0018B2 0E01           03606         MOVLW 1
0018B4 6F4A           03607         MOVWF SD_RW_OPTION
  000018B6            03608 F4_000870 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0018B6 0100           03609         MOVLB 0
  00000000            03610 RAM_BANK = 0
                      03611         F@CALL SD_SECTOR_SUB
  000018BC            03612 F4_000872 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
0018BC C27E F24F      03613         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
0018C0 C27D F24E      03614         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  000018C4            03615 F4_000873 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      03616         F@CALL SD_READ_FAT_ENTRY
  000018C8            03617 F4_000874 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
0018C8 C278 F2C6      03618         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
0018CC C277 F2C5      03619         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  000018D0            03620 F4_000875 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
0018D0 0EFE           03621         MOVLW 254
0018D2 0102           03622         MOVLB 2
  00000002            03623 RAM_BANK = 2
0018D4 25C5           03624         ADDWF SD_CLUSTER_NUM,W
0018D6 6E23           03625         MOVWF PP7,0
0018D8 0EFF           03626         MOVLW 255
0018DA 21C6           03627         ADDWFC SD_CLUSTER_NUMH,W
0018DC 6E24           03628         MOVWF PP7H,0
0018DE 0EFF           03629         MOVLW 255
0018E0 6A25           03630         CLRF PP7HH,0
0018E2 2225           03631         ADDWFC PP7HH,F,0
0018E4 6A26           03632         CLRF PP7HHH,0
0018E6 2226           03633         ADDWFC PP7HHH,F,0
0018E8 C026 F014      03634         MOVFF PP7HHH,PP0HHH
0018EC C025 F013      03635         MOVFF PP7HH,PP0HH
0018F0 C024 F012      03636         MOVFF PP7H,PP0H
0018F4 C023 F011      03637         MOVFF PP7,PP0
0018F8 6A1C           03638         CLRF PP2HHH,0
0018FA 6A1B           03639         CLRF PP2HH,0
0018FC 6A1A           03640         CLRF PP2H,0
0018FE C255 F019      03641         MOVFF SD_SECS_PER_CLUSTER,PP2
                      03642         F@CALL AL@MUL
001906 C014 F28E      03643         MOVFF PP0HHH,SD_DATA_SECHHH
00190A C013 F28D      03644         MOVFF PP0HH,SD_DATA_SECHH
00190E C012 F28C      03645         MOVFF PP0H,SD_DATA_SECH
001912 C011 F28B      03646         MOVFF PP0,SD_DATA_SEC
  00001916            03647 F4_000876 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
001916 5173           03648         MOVF SD_DATA_AREA,W
001918 278B           03649         ADDWF SD_DATA_SEC,F
00191A 5174           03650         MOVF SD_DATA_AREAH,W
00191C 238C           03651         ADDWFC SD_DATA_SECH,F
00191E 5175           03652         MOVF SD_DATA_AREAHH,W
001920 238D           03653         ADDWFC SD_DATA_SECHH,F
001922 5176           03654         MOVF SD_DATA_AREAHHH,W
001924 238E           03655         ADDWFC SD_DATA_SECHHH,F
  00001926            03656 F4_000877 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001926 C28E F037      03657         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
00192A C28D F036      03658         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
00192E C28C F035      03659         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001932 C28B F034      03660         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001936            03661 F4_000878 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001936 0E01           03662         MOVLW 1
001938 6F4A           03663         MOVWF SD_RW_OPTION
  0000193A            03664 F4_000879 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00193A 0100           03665         MOVLB 0
  00000000            03666 RAM_BANK = 0
                      03667         F@CALL SD_SECTOR_SUB
  00001940            03668 F4_000881 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
001940 0E01           03669         MOVLW 1
001942 0102           03670         MOVLB 2
  00000002            03671 RAM_BANK = 2
001944 6FCB           03672         MOVWF SD_SEC_IN_CLUSTER
  00001946            03673 F4_000882 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001946                03674 BC@LL160
001946 0100           03675         MOVLB 0
  00000000            03676 RAM_BANK = 0
  00001948            03677 F4_000883 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 1
001948 0102           03678         MOVLB 2
  00000002            03679 RAM_BANK = 2
00194A 6B90           03680         CLRF SD_DATA_BUFFER_POSH
00194C 0E01           03681         MOVLW 1
00194E 6F8F           03682         MOVWF SD_DATA_BUFFER_POS
  00001950            03683 F4_000884 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001950                03684 BC@LL154
001950 0100           03685         MOVLB 0
  00000000            03686 RAM_BANK = 0
  00001952            03687 F4_000885 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_Sub
                      03688         F@CALL SD_READ_SUB
  00001956            03689 F4_000886 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Bytes_Read
001956 0102           03690         MOVLB 2
  00000002            03691 RAM_BANK = 2
001958 2BE1           03692         INCF SD_BYTES_READ,F
00195A 0E00           03693         MOVLW 0
00195C 23E2           03694         ADDWFC SD_BYTES_READH,F
00195E 23E3           03695         ADDWFC SD_BYTES_READHH,F
001960 23E4           03696         ADDWFC SD_BYTES_READHHH,F
  00001962            03697 F4_000887 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Bytes_Read >= SD_File_Size Then SD_EOF = 1
001962 51CC           03698         MOVF SD_FILE_SIZE,W
001964 5DE1           03699         SUBWF SD_BYTES_READ,W
001966 51CD           03700         MOVF SD_FILE_SIZEH,W
001968 59E2           03701         SUBWFB SD_BYTES_READH,W
00196A 51CE           03702         MOVF SD_FILE_SIZEHH,W
00196C 59E3           03703         SUBWFB SD_BYTES_READHH,W
00196E 51CF           03704         MOVF SD_FILE_SIZEHHH,W
001970 59E4           03705         SUBWFB SD_BYTES_READHHH,W
001972 51E4           03706         MOVF SD_BYTES_READHHH,W
001974 19CF           03707         XORWF SD_FILE_SIZEHHH,W
001976 B0D8           03708         BTFSC STATUS,0,0
001978 0A80           03709         XORLW 128
00197A 0100           03710         MOVLB 0
  00000000            03711 RAM_BANK = 0
00197C A8D8           03712         BTFSS STATUS,4,0
                      03713         GO@TO BC@LL162
001982 0102           03714         MOVLB 2
  00000002            03715 RAM_BANK = 2
001984 81E5           03716         BSF _B#VR1,0
001986                03717 BC@LL162
001986 0100           03718         MOVLB 0
  00000000            03719 RAM_BANK = 0
  00001988            03720 F4_000888 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001988                03721 BC@LL152
  00001988            03722 F4_000889 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001988 0012           03723         RETURN 0
  0000198A            03724 F4_000895 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Check_For_File MACRO
                      03725 SD_CHECK_FOR_FILE       MACRO .,.,.,.,.,.,.,.,.,.
                      03726  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03727  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03728         F@CALL SD_CHECK_FOR_FILE_SUB
                      03729         IF (SD_CHECK_FOR_FILE_RETURN != 1)
                      03730         ERROR "(In Asm) SD_Check_For_File -  Mandatory return parameter missing"
                      03731         ELSE
                      03732         IF (RETURN_TYPE != BYTE) && (RETURN_TYPE != WORD) && (RETURN_TYPE != DWORD)
                      03733         ERROR "(In Asm) SD_Check_For_File - Return variable should be a Byte, Word or DWord variable"
                      03734         ENDIF
                      03735         IF (RETURN_TYPE == BYTE)
                      03736         BYTE_BYTE SD_EXTENDED_RETURN_ROOT_DIR, RETURN_VAR
                      03737         ENDIF
                      03738         IF (RETURN_TYPE == WORD)
                      03739         BYTE_WORD SD_EXTENDED_RETURN_ROOT_DIR, RETURN_VAR
                      03740 RAM_BANK = 0
                      03741         ENDIF
                      03742         IF (RETURN_TYPE == DWORD)
                      03743         BYTE_DWORD SD_EXTENDED_RETURN_ROOT_DIR, RETURN_VAR
                      03744 RAM_BANK = 0
                      03745         ENDIF
                      03746         ENDIF
                      03747         ENDM
  0000198A            03748 F4_000924 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_New_File MACRO
                      03749 SD_NEW_FILE     MACRO .,.,.,.,.,.,.,.,.,.
                      03750  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03751  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03752         IF (PRM_COUNT != 0)
                      03753         ERROR "(In Asm) No parameters required for SD_New_File"
                      03754         EXITM
                      03755         ENDIF
                      03756         F@CALL SD_NEW_FILE_SUB
                      03757         IF (SD_NEW_FILE_RETURN != 1)
                      03758         ELSE
                      03759         IF (RETURN_TYPE != BYTE)
                      03760         ERROR "(In Asm) SD_New_File - Return variable should be a Byte variable"
                      03761         ENDIF
                      03762         IF (RETURN_TYPE == BYTE)
                      03763         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      03764         ENDIF
                      03765         ENDIF
                      03766         ENDM
00198A                03767 SD_NEW_FILE_SUB
  0000198A            03768 F4_000949 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Return_F = 0
00198A 0102           03769         MOVLB 2
  00000002            03770 RAM_BANK = 2
00198C 6BF8           03771         CLRF SD_RETURN_F
  0000198E            03772 F4_000950 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = 0
00198E 6B7C           03773         CLRF SD_FAT_SECHHH
001990 6B7B           03774         CLRF SD_FAT_SECHH
001992 6B7A           03775         CLRF SD_FAT_SECH
001994 6B79           03776         CLRF SD_FAT_SEC
  00001996            03777 F4_000951 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = 0
001996 6B7E           03778         CLRF SD_FAT_BUFFER_POSH
001998 6B7D           03779         CLRF SD_FAT_BUFFER_POS
  0000199A            03780 F4_000952 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 0
00199A 6BD9           03781         CLRF SD_CLUSTER_SEQ_NUMH
00199C 6BD8           03782         CLRF SD_CLUSTER_SEQ_NUM
  0000199E            03783 F4_000953 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Free_Cluster
00199E 0100           03784         MOVLB 0
  00000000            03785 RAM_BANK = 0
                      03786         F@CALL SD_FIND_FREE_CLUSTER
  000019A4            03787 F4_000954 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return = 1 Then Return
0019A4 0E01           03788         MOVLW 1
0019A6 0102           03789         MOVLB 2
  00000002            03790 RAM_BANK = 2
0019A8 5D4B           03791         SUBWF SD_EXTENDED_RETURN,W
0019AA 0100           03792         MOVLB 0
  00000000            03793 RAM_BANK = 0
0019AC A4D8           03794         BTFSS STATUS,2,0
                      03795         GO@TO BC@LL164
0019B2 0012           03796         RETURN 0
0019B4                03797 BC@LL164
  000019B4            03798 F4_000955 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Find_Root_Dir_Entry_F = 0
0019B4 0102           03799         MOVLB 2
  00000002            03800 RAM_BANK = 2
0019B6 6BE0           03801         CLRF SD_FIND_ROOT_DIR_ENTRY_F
  000019B8            03802 F4_000956 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Root_Dir_Entry
0019B8 0100           03803         MOVLB 0
  00000000            03804 RAM_BANK = 0
                      03805         F@CALL SD_FIND_ROOT_DIR_ENTRY
  000019BE            03806 F4_000957 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir = 1 Then
0019BE 0E01           03807         MOVLW 1
0019C0 0102           03808         MOVLB 2
  00000002            03809 RAM_BANK = 2
0019C2 5D4C           03810         SUBWF SD_EXTENDED_RETURN_ROOT_DIR,W
0019C4 0100           03811         MOVLB 0
  00000000            03812 RAM_BANK = 0
0019C6 A4D8           03813         BTFSS STATUS,2,0
                      03814         GO@TO BC@LL166
  000019CC            03815 F4_000958 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
0019CC 0E01           03816         MOVLW 1
0019CE 0102           03817         MOVLB 2
  00000002            03818 RAM_BANK = 2
0019D0 6F4B           03819         MOVWF SD_EXTENDED_RETURN
  000019D2            03820 F4_000959 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0019D2 0100           03821         MOVLB 0
  00000000            03822 RAM_BANK = 0
0019D4 0012           03823         RETURN 0
  000019D6            03824 F4_000960 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0019D6                03825 BC@LL166
  000019D6            03826 F4_000961 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_Root_Dir + SD_Root_Dir_Sec
0019D6 0102           03827         MOVLB 2
  00000002            03828 RAM_BANK = 2
0019D8 5185           03829         MOVF SD_ROOT_DIR_SEC,W
0019DA 256F           03830         ADDWF SD_ROOT_DIR,W
0019DC 6FBE           03831         MOVWF SD_WRITE_SEC_NUM
0019DE 5186           03832         MOVF SD_ROOT_DIR_SECH,W
0019E0 2170           03833         ADDWFC SD_ROOT_DIRH,W
0019E2 6FBF           03834         MOVWF SD_WRITE_SEC_NUMH
0019E4 5187           03835         MOVF SD_ROOT_DIR_SECHH,W
0019E6 2171           03836         ADDWFC SD_ROOT_DIRHH,W
0019E8 6FC0           03837         MOVWF SD_WRITE_SEC_NUMHH
0019EA 5188           03838         MOVF SD_ROOT_DIR_SECHHH,W
0019EC 2172           03839         ADDWFC SD_ROOT_DIRHHH,W
0019EE 6FC1           03840         MOVWF SD_WRITE_SEC_NUMHHH
  000019F0            03841 F4_000962 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
0019F0 C2C1 F037      03842         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
0019F4 C2C0 F036      03843         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
0019F8 C2BF F035      03844         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
0019FC C2BE F034      03845         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  00001A00            03846 F4_000963 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001A00 0E01           03847         MOVLW 1
001A02 6F4A           03848         MOVWF SD_RW_OPTION
  00001A04            03849 F4_000964 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001A04 0100           03850         MOVLB 0
  00000000            03851 RAM_BANK = 0
                      03852         F@CALL SD_SECTOR_SUB
  00001A0A            03853 F4_000966 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $1F
001A0A 0102           03854         MOVLB 2
  00000002            03855 RAM_BANK = 2
001A0C 6B50           03856         CLRF SD_ROOT_DIR_FILE_POS
001A0E                03857 FR@LB168
001A0E 0100           03858         MOVLB 0
  00000000            03859 RAM_BANK = 0
001A10 0E20           03860         MOVLW 32
001A12 0102           03861         MOVLB 2
  00000002            03862 RAM_BANK = 2
001A14 5D50           03863         SUBWF SD_ROOT_DIR_FILE_POS,W
001A16 0100           03864         MOVLB 0
  00000000            03865 RAM_BANK = 0
001A18 B0D8           03866         BTFSC STATUS,0,0
                      03867         GO@TO NX@LB169
  00001A1E            03868 F4_000967 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + SD_Root_Dir_File_Pos
001A1E 0102           03869         MOVLB 2
  00000002            03870 RAM_BANK = 2
001A20 5150           03871         MOVF SD_ROOT_DIR_FILE_POS,W
001A22 2589           03872         ADDWF SD_ROOT_DIR_POS,W
001A24 6FC2           03873         MOVWF SD_WRITE_BUFFER_POS
001A26 0E00           03874         MOVLW 0
001A28 218A           03875         ADDWFC SD_ROOT_DIR_POSH,W
001A2A 6FC3           03876         MOVWF SD_WRITE_BUFFER_POSH
  00001A2C            03877 F4_000968 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = 0
001A2C 6B4D           03878         CLRF SD_DATA_IO
  00001A2E            03879 F4_000969 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001A2E 0100           03880         MOVLB 0
  00000000            03881 RAM_BANK = 0
                      03882         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001A34            03883 F4_000970 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
001A34 0102           03884         MOVLB 2
  00000002            03885 RAM_BANK = 2
001A36 2B50           03886         INCF SD_ROOT_DIR_FILE_POS,F
001A38 0100           03887         MOVLB 0
  00000000            03888 RAM_BANK = 0
001A3A A4D8           03889         BTFSS STATUS,2,0
                      03890         GO@TO FR@LB168
001A3E                03891 NX@LB169
  00001A3E            03892 F4_000971 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Modify_File_Name
                      03893         F@CALL SD_MODIFY_FILE_NAME
  00001A42            03894 F4_000972 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
001A42 0102           03895         MOVLB 2
  00000002            03896 RAM_BANK = 2
001A44 6B50           03897         CLRF SD_ROOT_DIR_FILE_POS
001A46                03898 FR@LB170
001A46 0100           03899         MOVLB 0
  00000000            03900 RAM_BANK = 0
001A48 0E08           03901         MOVLW 8
001A4A 0102           03902         MOVLB 2
  00000002            03903 RAM_BANK = 2
001A4C 5D50           03904         SUBWF SD_ROOT_DIR_FILE_POS,W
001A4E 0100           03905         MOVLB 0
  00000000            03906 RAM_BANK = 0
001A50 B0D8           03907         BTFSC STATUS,0,0
                      03908         GO@TO NX@LB171
  00001A56            03909 F4_000973 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + SD_Root_Dir_File_Pos
001A56 0102           03910         MOVLB 2
  00000002            03911 RAM_BANK = 2
001A58 5150           03912         MOVF SD_ROOT_DIR_FILE_POS,W
001A5A 2589           03913         ADDWF SD_ROOT_DIR_POS,W
001A5C 6FC2           03914         MOVWF SD_WRITE_BUFFER_POS
001A5E 0E00           03915         MOVLW 0
001A60 218A           03916         ADDWFC SD_ROOT_DIR_POSH,W
001A62 6FC3           03917         MOVWF SD_WRITE_BUFFER_POSH
  00001A64            03918 F4_000974 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Name[SD_Root_Dir_File_Pos]
001A64 EE02 F091      03919         LFSR 0,SD_FILE_NAME
001A68 5150           03920         MOVF SD_ROOT_DIR_FILE_POS,W
001A6A 50EB           03921         MOVF PLUSW0,W,0
001A6C 6F4D           03922         MOVWF SD_DATA_IO
  00001A6E            03923 F4_000975 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001A6E 0100           03924         MOVLB 0
  00000000            03925 RAM_BANK = 0
                      03926         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001A74            03927 F4_000976 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
001A74 0102           03928         MOVLB 2
  00000002            03929 RAM_BANK = 2
001A76 2B50           03930         INCF SD_ROOT_DIR_FILE_POS,F
001A78 0100           03931         MOVLB 0
  00000000            03932 RAM_BANK = 0
001A7A A4D8           03933         BTFSS STATUS,2,0
                      03934         GO@TO FR@LB170
001A7E                03935 NX@LB171
  00001A7E            03936 F4_000977 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
001A7E 0E08           03937         MOVLW 8
001A80 0102           03938         MOVLB 2
  00000002            03939 RAM_BANK = 2
001A82 6F50           03940         MOVWF SD_ROOT_DIR_FILE_POS
001A84                03941 FR@LB172
001A84 0100           03942         MOVLB 0
  00000000            03943 RAM_BANK = 0
001A86 0E0B           03944         MOVLW 11
001A88 0102           03945         MOVLB 2
  00000002            03946 RAM_BANK = 2
001A8A 5D50           03947         SUBWF SD_ROOT_DIR_FILE_POS,W
001A8C 0100           03948         MOVLB 0
  00000000            03949 RAM_BANK = 0
001A8E B0D8           03950         BTFSC STATUS,0,0
                      03951         GO@TO NX@LB173
  00001A94            03952 F4_000978 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + SD_Root_Dir_File_Pos
001A94 0102           03953         MOVLB 2
  00000002            03954 RAM_BANK = 2
001A96 5150           03955         MOVF SD_ROOT_DIR_FILE_POS,W
001A98 2589           03956         ADDWF SD_ROOT_DIR_POS,W
001A9A 6FC2           03957         MOVWF SD_WRITE_BUFFER_POS
001A9C 0E00           03958         MOVLW 0
001A9E 218A           03959         ADDWFC SD_ROOT_DIR_POSH,W
001AA0 6FC3           03960         MOVWF SD_WRITE_BUFFER_POSH
  00001AA2            03961 F4_000979 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Ext[SD_Root_Dir_File_Pos - $08]
001AA2 0E08           03962         MOVLW 8
001AA4 5D50           03963         SUBWF SD_ROOT_DIR_FILE_POS,W
001AA6 EE02 F09A      03964         LFSR 0,SD_FILE_EXT
001AAA 50EB           03965         MOVF PLUSW0,W,0
001AAC 6F4D           03966         MOVWF SD_DATA_IO
  00001AAE            03967 F4_000980 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001AAE 0100           03968         MOVLB 0
  00000000            03969 RAM_BANK = 0
                      03970         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001AB4            03971 F4_000981 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
001AB4 0102           03972         MOVLB 2
  00000002            03973 RAM_BANK = 2
001AB6 2B50           03974         INCF SD_ROOT_DIR_FILE_POS,F
001AB8 0100           03975         MOVLB 0
  00000000            03976 RAM_BANK = 0
001ABA A4D8           03977         BTFSS STATUS,2,0
                      03978         GO@TO FR@LB172
001ABE                03979 NX@LB173
  00001ABE            03980 F4_000982 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $0B
001ABE 0E0B           03981         MOVLW 11
001AC0 0102           03982         MOVLB 2
  00000002            03983 RAM_BANK = 2
001AC2 2589           03984         ADDWF SD_ROOT_DIR_POS,W
001AC4 6FC2           03985         MOVWF SD_WRITE_BUFFER_POS
001AC6 0E00           03986         MOVLW 0
001AC8 218A           03987         ADDWFC SD_ROOT_DIR_POSH,W
001ACA 6FC3           03988         MOVWF SD_WRITE_BUFFER_POSH
  00001ACC            03989 F4_000983 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = %00100000
001ACC 0E20           03990         MOVLW 32
001ACE 6F4D           03991         MOVWF SD_DATA_IO
  00001AD0            03992 F4_000984 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001AD0 0100           03993         MOVLB 0
  00000000            03994 RAM_BANK = 0
                      03995         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001AD6            03996 F4_000985 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $0D
001AD6 0E0D           03997         MOVLW 13
001AD8 0102           03998         MOVLB 2
  00000002            03999 RAM_BANK = 2
001ADA 2589           04000         ADDWF SD_ROOT_DIR_POS,W
001ADC 6FC2           04001         MOVWF SD_WRITE_BUFFER_POS
001ADE 0E00           04002         MOVLW 0
001AE0 218A           04003         ADDWFC SD_ROOT_DIR_POSH,W
001AE2 6FC3           04004         MOVWF SD_WRITE_BUFFER_POSH
  00001AE4            04005 F4_000986 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Set_File_Time_Create
001AE4 0100           04006         MOVLB 0
  00000000            04007 RAM_BANK = 0
                      04008         F@CALL SD_SET_FILE_TIME_CREATE
  00001AEA            04009 F4_000987 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $1A
001AEA 0E1A           04010         MOVLW 26
001AEC 0102           04011         MOVLB 2
  00000002            04012 RAM_BANK = 2
001AEE 2589           04013         ADDWF SD_ROOT_DIR_POS,W
001AF0 6FC2           04014         MOVWF SD_WRITE_BUFFER_POS
001AF2 0E00           04015         MOVLW 0
001AF4 218A           04016         ADDWFC SD_ROOT_DIR_POSH,W
001AF6 6FC3           04017         MOVWF SD_WRITE_BUFFER_POSH
  00001AF8            04018 F4_000988 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE0
001AF8 C2C5 F24D      04019         MOVFF SD_CLUSTER_NUM,SD_DATA_IO
  00001AFC            04020 F4_000989 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001AFC 0100           04021         MOVLB 0
  00000000            04022 RAM_BANK = 0
                      04023         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001B02            04024 F4_000990 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001B02 0102           04025         MOVLB 2
  00000002            04026 RAM_BANK = 2
001B04 4BC2           04027         INFSNZ SD_WRITE_BUFFER_POS,F
001B06 2BC3           04028         INCF SD_WRITE_BUFFER_POSH,F
  00001B08            04029 F4_000991 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE1
001B08 C2C6 F24D      04030         MOVFF SD_CLUSTER_NUMH,SD_DATA_IO
  00001B0C            04031 F4_000992 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001B0C 0100           04032         MOVLB 0
  00000000            04033 RAM_BANK = 0
                      04034         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001B12            04035 F4_000993 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04036         F@CALL SD_WRITE_SECTOR
  00001B16            04037 F4_000994 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001B16 0EFE           04038         MOVLW 254
001B18 0102           04039         MOVLB 2
  00000002            04040 RAM_BANK = 2
001B1A 25C5           04041         ADDWF SD_CLUSTER_NUM,W
001B1C 6E23           04042         MOVWF PP7,0
001B1E 0EFF           04043         MOVLW 255
001B20 21C6           04044         ADDWFC SD_CLUSTER_NUMH,W
001B22 6E24           04045         MOVWF PP7H,0
001B24 0EFF           04046         MOVLW 255
001B26 6A25           04047         CLRF PP7HH,0
001B28 2225           04048         ADDWFC PP7HH,F,0
001B2A 6A26           04049         CLRF PP7HHH,0
001B2C 2226           04050         ADDWFC PP7HHH,F,0
001B2E C026 F014      04051         MOVFF PP7HHH,PP0HHH
001B32 C025 F013      04052         MOVFF PP7HH,PP0HH
001B36 C024 F012      04053         MOVFF PP7H,PP0H
001B3A C023 F011      04054         MOVFF PP7,PP0
001B3E 6A1C           04055         CLRF PP2HHH,0
001B40 6A1B           04056         CLRF PP2HH,0
001B42 6A1A           04057         CLRF PP2H,0
001B44 C255 F019      04058         MOVFF SD_SECS_PER_CLUSTER,PP2
                      04059         F@CALL AL@MUL
001B4C C014 F28E      04060         MOVFF PP0HHH,SD_DATA_SECHHH
001B50 C013 F28D      04061         MOVFF PP0HH,SD_DATA_SECHH
001B54 C012 F28C      04062         MOVFF PP0H,SD_DATA_SECH
001B58 C011 F28B      04063         MOVFF PP0,SD_DATA_SEC
  00001B5C            04064 F4_000995 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
001B5C 5173           04065         MOVF SD_DATA_AREA,W
001B5E 278B           04066         ADDWF SD_DATA_SEC,F
001B60 5174           04067         MOVF SD_DATA_AREAH,W
001B62 238C           04068         ADDWFC SD_DATA_SECH,F
001B64 5175           04069         MOVF SD_DATA_AREAHH,W
001B66 238D           04070         ADDWFC SD_DATA_SECHH,F
001B68 5176           04071         MOVF SD_DATA_AREAHHH,W
001B6A 238E           04072         ADDWFC SD_DATA_SECHHH,F
  00001B6C            04073 F4_000996 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
001B6C 0E01           04074         MOVLW 1
001B6E 6FCB           04075         MOVWF SD_SEC_IN_CLUSTER
  00001B70            04076 F4_000997 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001B70 C28E F037      04077         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001B74 C28D F036      04078         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001B78 C28C F035      04079         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001B7C C28B F034      04080         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001B80            04081 F4_000998 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 0
001B80 6B4A           04082         CLRF SD_RW_OPTION
  00001B82            04083 F4_000999 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001B82 0100           04084         MOVLB 0
  00000000            04085 RAM_BANK = 0
                      04086         F@CALL SD_SECTOR_SUB
  00001B88            04087 F4_001001 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 0
001B88 0102           04088         MOVLB 2
  00000002            04089 RAM_BANK = 2
001B8A 6B90           04090         CLRF SD_DATA_BUFFER_POSH
001B8C 6B8F           04091         CLRF SD_DATA_BUFFER_POS
  00001B8E            04092 F4_001002 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size = 0
001B8E 6BCF           04093         CLRF SD_FILE_SIZEHHH
001B90 6BCE           04094         CLRF SD_FILE_SIZEHH
001B92 6BCD           04095         CLRF SD_FILE_SIZEH
001B94 6BCC           04096         CLRF SD_FILE_SIZE
  00001B96            04097 F4_001003 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Ptr = 0
001B96 6BE4           04098         CLRF SD_BYTES_READHHH
001B98 6BE3           04099         CLRF SD_BYTES_READHH
001B9A 6BE2           04100         CLRF SD_BYTES_READH
001B9C 6BE1           04101         CLRF SD_BYTES_READ
  00001B9E            04102 F4_001004 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
001B9E 81E5           04103         BSF _B#VR1,0
  00001BA0            04104 F4_001005 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Return_F = 1
001BA0 0E01           04105         MOVLW 1
001BA2 6FF8           04106         MOVWF SD_RETURN_F
  00001BA4            04107 F4_001006 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001BA4 0100           04108         MOVLB 0
  00000000            04109 RAM_BANK = 0
001BA6 0012           04110         RETURN 0
  00001BA8            04111 F4_001012 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Append_File MACRO
                      04112 SD_APPEND_FILE  MACRO .,.,.,.,.,.,.,.,.,.
                      04113  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      04114  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      04115         F@CALL SD_APPEND_FILE_SUB
                      04116         IF (RETURN_TYPE !=BYTE)
                      04117         ERROR "(In Asm) SD_Append_File - Return variable should be a Byte variable"
                      04118         ELSE
                      04119         IF (RETURN_TYPE == BYTE)
                      04120         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      04121         ENDIF
                      04122         ENDIF
                      04123         ENDM
001BA8                04124 SD_APPEND_FILE_SUB
  00001BA8            04125 F4_001030 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Check_For_File_Sub
                      04126         F@CALL SD_CHECK_FOR_FILE_SUB
  00001BAC            04127 F4_001031 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir <> 0 Then
001BAC 0102           04128         MOVLB 2
  00000002            04129 RAM_BANK = 2
001BAE 534C           04130         MOVF SD_EXTENDED_RETURN_ROOT_DIR,F
001BB0 0100           04131         MOVLB 0
  00000000            04132 RAM_BANK = 0
001BB2 B4D8           04133         BTFSC STATUS,2,0
                      04134         GO@TO BC@LL174
  00001BB8            04135 F4_001032 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001BB8 0E01           04136         MOVLW 1
001BBA 0102           04137         MOVLB 2
  00000002            04138 RAM_BANK = 2
001BBC 6F4B           04139         MOVWF SD_EXTENDED_RETURN
  00001BBE            04140 F4_001033 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001BBE 0100           04141         MOVLB 0
  00000000            04142 RAM_BANK = 0
001BC0 0012           04143         RETURN 0
  00001BC2            04144 F4_001034 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001BC2                04145 BC@LL174
  00001BC2            04146 F4_001035 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE0 = SD_Root_Dir_File[$1A]
001BC2 0102           04147         MOVLB 2
  00000002            04148 RAM_BANK = 2
001BC4 51B8           04149         MOVF SD_ROOT_DIR_FILE#26,W
001BC6 6FC5           04150         MOVWF SD_CLUSTER_NUM
  00001BC8            04151 F4_001036 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE1 = SD_Root_Dir_File[$1B]
001BC8 51B9           04152         MOVF SD_ROOT_DIR_FILE#27,W
001BCA 6FC6           04153         MOVWF SD_CLUSTER_NUMH
  00001BCC            04154 F4_001037 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE0 = SD_Root_Dir_File[$1C]
001BCC 51BA           04155         MOVF SD_ROOT_DIR_FILE#28,W
001BCE 6FCC           04156         MOVWF SD_FILE_SIZE
  00001BD0            04157 F4_001038 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE1 = SD_Root_Dir_File[$1D]
001BD0 51BB           04158         MOVF SD_ROOT_DIR_FILE#29,W
001BD2 6FCD           04159         MOVWF SD_FILE_SIZEH
  00001BD4            04160 F4_001039 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE2 = SD_Root_Dir_File[$1E]
001BD4 51BC           04161         MOVF SD_ROOT_DIR_FILE#30,W
001BD6 6FCE           04162         MOVWF SD_FILE_SIZEHH
  00001BD8            04163 F4_001040 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE3 = SD_Root_Dir_File[$1F]
001BD8 51BD           04164         MOVF SD_ROOT_DIR_FILE#31,W
001BDA 6FCF           04165         MOVWF SD_FILE_SIZEHHH
  00001BDC            04166 F4_001041 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size_Left = SD_File_Size
001BDC C2CF F2ED      04167         MOVFF SD_FILE_SIZEHHH,SD_FILE_SIZE_LEFTHHH
001BE0 C2CE F2EC      04168         MOVFF SD_FILE_SIZEHH,SD_FILE_SIZE_LEFTHH
001BE4 C2CD F2EB      04169         MOVFF SD_FILE_SIZEH,SD_FILE_SIZE_LEFTH
001BE8 C2CC F2EA      04170         MOVFF SD_FILE_SIZE,SD_FILE_SIZE_LEFT
  00001BEC            04171 F4_001042 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = 0
001BEC 6A37           04172         CLRF SD_SECTOR_NUMHHH,0
001BEE 6A36           04173         CLRF SD_SECTOR_NUMHH,0
001BF0 6A35           04174         CLRF SD_SECTOR_NUMH,0
001BF2 6A34           04175         CLRF SD_SECTOR_NUM,0
  00001BF4            04176 F4_001043 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] While SD_File_Size_Left > (SD_Bytes_Per_Sec * SD_Secs_Per_Cluster)
001BF4                04177 BC@LL175
001BF4 0100           04178         MOVLB 0
  00000000            04179 RAM_BANK = 0
001BF6 0102           04180         MOVLB 2
  00000002            04181 RAM_BANK = 2
001BF8 5155           04182         MOVF SD_SECS_PER_CLUSTER,W
001BFA 035F           04183         MULWF SD_BYTES_PER_SEC
001BFC CFF3 F008      04184         MOVFF PRODL,PBP#VAR0
001C00 CFF4 F009      04185         MOVFF PRODH,PBP#VAR0H
001C04 0360           04186         MULWF SD_BYTES_PER_SECH
001C06 50F3           04187         MOVF PRODL,W,0
001C08 2609           04188         ADDWF PBP#VAR0H,F,0
001C0A 96D8           04189         BCF STATUS,3,0
001C0C BFED           04190         BTFSC SD_FILE_SIZE_LEFTHHH,7
001C0E 86D8           04191         BSF STATUS,3,0
001C10 0100           04192         MOVLB 0
  00000000            04193 RAM_BANK = 0
                      04194         G@OTO BC@LL176
001C18 0102           04195         MOVLB 2
  00000002            04196 RAM_BANK = 2
001C1A 53ED           04197         MOVF SD_FILE_SIZE_LEFTHHH,F
001C1C E110           04198         BNZ CP@LB25
001C1E 53EC           04199         MOVF SD_FILE_SIZE_LEFTHH,F
001C20 E10E           04200         BNZ CP@LB25
001C22 5009           04201         MOVF PBP#VAR0H,W,0
001C24 5DEB           04202         SUBWF SD_FILE_SIZE_LEFTH,W
001C26 0100           04203         MOVLB 0
  00000000            04204 RAM_BANK = 0
001C28 A0D8           04205         BTFSS STATUS,0,0
                      04206         GO@TO BC@LL176
001C2E E107           04207         BNZ CP@LB25
001C30 0102           04208         MOVLB 2
  00000002            04209 RAM_BANK = 2
001C32 51EA           04210         MOVF SD_FILE_SIZE_LEFT,W
001C34 5C08           04211         SUBWF PBP#VAR0,W,0
001C36 0100           04212         MOVLB 0
  00000000            04213 RAM_BANK = 0
001C38 B0D8           04214         BTFSC STATUS,0,0
                      04215         GO@TO BC@LL176
001C3E                04216 CP@LB25
  00001C3E            04217 F4_001044 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001C3E 6A14           04218         CLRF PP0HHH,0
001C40 6A13           04219         CLRF PP0HH,0
001C42 C2C6 F012      04220         MOVFF SD_CLUSTER_NUMH,PP0H
001C46 C2C5 F011      04221         MOVFF SD_CLUSTER_NUM,PP0
001C4A 6A1C           04222         CLRF PP2HHH,0
001C4C 6A1B           04223         CLRF PP2HH,0
001C4E 0E01           04224         MOVLW 1
001C50 6E1A           04225         MOVWF PP2H,0
001C52 6A19           04226         CLRF PP2,0
                      04227         F@CALL L@DIV
001C58 C014 F27C      04228         MOVFF PP0HHH,SD_FAT_SECHHH
001C5C C013 F27B      04229         MOVFF PP0HH,SD_FAT_SECHH
001C60 C012 F27A      04230         MOVFF PP0H,SD_FAT_SECH
001C64 C011 F279      04231         MOVFF PP0,SD_FAT_SEC
  00001C68            04232 F4_001045 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001C68 C2C5 F27D      04233         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001C6C 0102           04234         MOVLB 2
  00000002            04235 RAM_BANK = 2
001C6E 6B7E           04236         CLRF SD_FAT_BUFFER_POSH
  00001C70            04237 F4_001046 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001C70 90D8           04238         BCF STATUS,0,0
001C72 377D           04239         RLCF SD_FAT_BUFFER_POS,F
001C74 377E           04240         RLCF SD_FAT_BUFFER_POSH,F
  00001C76            04241 F4_001047 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Sector_Num <> (SD_FAT1 + SD_FAT_Sec) Then
001C76 5179           04242         MOVF SD_FAT_SEC,W
001C78 2567           04243         ADDWF SD_FAT1,W
001C7A 6E08           04244         MOVWF PBP#VAR0,0
001C7C 517A           04245         MOVF SD_FAT_SECH,W
001C7E 2168           04246         ADDWFC SD_FAT1H,W
001C80 6E09           04247         MOVWF PBP#VAR0H,0
001C82 517B           04248         MOVF SD_FAT_SECHH,W
001C84 2169           04249         ADDWFC SD_FAT1HH,W
001C86 6E0A           04250         MOVWF PBP#VAR0HH,0
001C88 517C           04251         MOVF SD_FAT_SECHHH,W
001C8A 216A           04252         ADDWFC SD_FAT1HHH,W
001C8C 6E0B           04253         MOVWF PBP#VAR0HHH,0
001C8E 5008           04254         MOVF PBP#VAR0,W,0
001C90 5C34           04255         SUBWF SD_SECTOR_NUM,W,0
001C92 E10C           04256         BNZ CP@LB26
001C94 5009           04257         MOVF PBP#VAR0H,W,0
001C96 5C35           04258         SUBWF SD_SECTOR_NUMH,W,0
001C98 E109           04259         BNZ CP@LB26
001C9A 500A           04260         MOVF PBP#VAR0HH,W,0
001C9C 5C36           04261         SUBWF SD_SECTOR_NUMHH,W,0
001C9E E106           04262         BNZ CP@LB26
001CA0 500B           04263         MOVF PBP#VAR0HHH,W,0
001CA2 5C37           04264         SUBWF SD_SECTOR_NUMHHH,W,0
001CA4 0100           04265         MOVLB 0
  00000000            04266 RAM_BANK = 0
001CA6 B4D8           04267         BTFSC STATUS,2,0
                      04268         GO@TO BC@LL178
001CAC                04269 CP@LB26
  00001CAC            04270 F4_001048 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
001CAC 0102           04271         MOVLB 2
  00000002            04272 RAM_BANK = 2
001CAE 5179           04273         MOVF SD_FAT_SEC,W
001CB0 2567           04274         ADDWF SD_FAT1,W
001CB2 6E34           04275         MOVWF SD_SECTOR_NUM,0
001CB4 517A           04276         MOVF SD_FAT_SECH,W
001CB6 2168           04277         ADDWFC SD_FAT1H,W
001CB8 6E35           04278         MOVWF SD_SECTOR_NUMH,0
001CBA 517B           04279         MOVF SD_FAT_SECHH,W
001CBC 2169           04280         ADDWFC SD_FAT1HH,W
001CBE 6E36           04281         MOVWF SD_SECTOR_NUMHH,0
001CC0 517C           04282         MOVF SD_FAT_SECHHH,W
001CC2 216A           04283         ADDWFC SD_FAT1HHH,W
001CC4 6E37           04284         MOVWF SD_SECTOR_NUMHHH,0
  00001CC6            04285 F4_001049 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001CC6 0E01           04286         MOVLW 1
001CC8 6F4A           04287         MOVWF SD_RW_OPTION
  00001CCA            04288 F4_001050 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001CCA 0100           04289         MOVLB 0
  00000000            04290 RAM_BANK = 0
                      04291         F@CALL SD_SECTOR_SUB
  00001CD0            04292 F4_001052 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001CD0                04293 BC@LL178
  00001CD0            04294 F4_001053 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
001CD0 C27E F24F      04295         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
001CD4 C27D F24E      04296         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  00001CD8            04297 F4_001054 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      04298         F@CALL SD_READ_FAT_ENTRY
  00001CDC            04299 F4_001055 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
001CDC C278 F2C6      04300         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
001CE0 C277 F2C5      04301         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  00001CE4            04302 F4_001056 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Size_Left = SD_File_Size_Left - (SD_Bytes_Per_Sec * SD_Secs_Per_Cluster)
001CE4 6A14           04303         CLRF PP0HHH,0
001CE6 6A13           04304         CLRF PP0HH,0
001CE8 C260 F012      04305         MOVFF SD_BYTES_PER_SECH,PP0H
001CEC C25F F011      04306         MOVFF SD_BYTES_PER_SEC,PP0
001CF0 6A1C           04307         CLRF PP2HHH,0
001CF2 6A1B           04308         CLRF PP2HH,0
001CF4 6A1A           04309         CLRF PP2H,0
001CF6 C255 F019      04310         MOVFF SD_SECS_PER_CLUSTER,PP2
                      04311         F@CALL AL@MUL
001CFE C014 F026      04312         MOVFF PP0HHH,PP7HHH
001D02 C013 F025      04313         MOVFF PP0HH,PP7HH
001D06 C012 F024      04314         MOVFF PP0H,PP7H
001D0A C011 F023      04315         MOVFF PP0,PP7
001D0E 5023           04316         MOVF PP7,W,0
001D10 0102           04317         MOVLB 2
  00000002            04318 RAM_BANK = 2
001D12 5FEA           04319         SUBWF SD_FILE_SIZE_LEFT,F
001D14 5024           04320         MOVF PP7H,W,0
001D16 5BEB           04321         SUBWFB SD_FILE_SIZE_LEFTH,F
001D18 5025           04322         MOVF PP7HH,W,0
001D1A 5BEC           04323         SUBWFB SD_FILE_SIZE_LEFTHH,F
001D1C 5026           04324         MOVF PP7HHH,W,0
001D1E 5BED           04325         SUBWFB SD_FILE_SIZE_LEFTHHH,F
  00001D20            04326 F4_001057 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Wend
001D20 0100           04327         MOVLB 0
  00000000            04328 RAM_BANK = 0
                      04329         F@JUMP BC@LL175
001D24                04330 BC@LL176
  00001D24            04331 F4_001058 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001D24 6A14           04332         CLRF PP0HHH,0
001D26 6A13           04333         CLRF PP0HH,0
001D28 C2C6 F012      04334         MOVFF SD_CLUSTER_NUMH,PP0H
001D2C C2C5 F011      04335         MOVFF SD_CLUSTER_NUM,PP0
001D30 6A1C           04336         CLRF PP2HHH,0
001D32 6A1B           04337         CLRF PP2HH,0
001D34 0E01           04338         MOVLW 1
001D36 6E1A           04339         MOVWF PP2H,0
001D38 6A19           04340         CLRF PP2,0
                      04341         F@CALL L@DIV
001D3E C014 F27C      04342         MOVFF PP0HHH,SD_FAT_SECHHH
001D42 C013 F27B      04343         MOVFF PP0HH,SD_FAT_SECHH
001D46 C012 F27A      04344         MOVFF PP0H,SD_FAT_SECH
001D4A C011 F279      04345         MOVFF PP0,SD_FAT_SEC
  00001D4E            04346 F4_001059 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001D4E C2C5 F27D      04347         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001D52 0102           04348         MOVLB 2
  00000002            04349 RAM_BANK = 2
001D54 6B7E           04350         CLRF SD_FAT_BUFFER_POSH
  00001D56            04351 F4_001060 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001D56 90D8           04352         BCF STATUS,0,0
001D58 377D           04353         RLCF SD_FAT_BUFFER_POS,F
001D5A 377E           04354         RLCF SD_FAT_BUFFER_POSH,F
  00001D5C            04355 F4_001061 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_File_Size_Left = 0 Then
001D5C 51ED           04356         MOVF SD_FILE_SIZE_LEFTHHH,W
001D5E 11EC           04357         IORWF SD_FILE_SIZE_LEFTHH,W
001D60 11EB           04358         IORWF SD_FILE_SIZE_LEFTH,W
001D62 11EA           04359         IORWF SD_FILE_SIZE_LEFT,W
001D64 0100           04360         MOVLB 0
  00000000            04361 RAM_BANK = 0
001D66 A4D8           04362         BTFSS STATUS,2,0
                      04363         GO@TO BC@LL180
  00001D6C            04364 F4_001062 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 0
001D6C 0102           04365         MOVLB 2
  00000002            04366 RAM_BANK = 2
001D6E 6BCB           04367         CLRF SD_SEC_IN_CLUSTER
001D70 0100           04368         MOVLB 0
  00000000            04369 RAM_BANK = 0
                      04370         F@JUMP BC@LL181
001D76                04371 BC@LL180
  00001D76            04372 F4_001063 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  00001D76            04373 F4_001064 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = (SD_File_Size_Left - 1) / SD_Bytes_Per_Sec
001D76 0102           04374         MOVLB 2
  00000002            04375 RAM_BANK = 2
001D78 05EA           04376         DECF SD_FILE_SIZE_LEFT,W
001D7A 6E23           04377         MOVWF PP7,0
001D7C 0E00           04378         MOVLW 0
001D7E 59EB           04379         SUBWFB SD_FILE_SIZE_LEFTH,W
001D80 6E24           04380         MOVWF PP7H,0
001D82 0E00           04381         MOVLW 0
001D84 59EC           04382         SUBWFB SD_FILE_SIZE_LEFTHH,W
001D86 6E25           04383         MOVWF PP7HH,0
001D88 0E00           04384         MOVLW 0
001D8A 59ED           04385         SUBWFB SD_FILE_SIZE_LEFTHHH,W
001D8C 6E26           04386         MOVWF PP7HHH,0
001D8E C026 F014      04387         MOVFF PP7HHH,PP0HHH
001D92 C025 F013      04388         MOVFF PP7HH,PP0HH
001D96 C024 F012      04389         MOVFF PP7H,PP0H
001D9A C023 F011      04390         MOVFF PP7,PP0
001D9E 6A1C           04391         CLRF PP2HHH,0
001DA0 6A1B           04392         CLRF PP2HH,0
001DA2 C260 F01A      04393         MOVFF SD_BYTES_PER_SECH,PP2H
001DA6 C25F F019      04394         MOVFF SD_BYTES_PER_SEC,PP2
                      04395         F@CALL L@DIV
001DAE C011 F2CB      04396         MOVFF PP0,SD_SEC_IN_CLUSTER
  00001DB2            04397 F4_001065 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001DB2                04398 BC@LL181
001DB2 0100           04399         MOVLB 0
  00000000            04400 RAM_BANK = 0
  00001DB4            04401 F4_001066 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001DB4 0EFE           04402         MOVLW 254
001DB6 0102           04403         MOVLB 2
  00000002            04404 RAM_BANK = 2
001DB8 25C5           04405         ADDWF SD_CLUSTER_NUM,W
001DBA 6E23           04406         MOVWF PP7,0
001DBC 0EFF           04407         MOVLW 255
001DBE 21C6           04408         ADDWFC SD_CLUSTER_NUMH,W
001DC0 6E24           04409         MOVWF PP7H,0
001DC2 0EFF           04410         MOVLW 255
001DC4 6A25           04411         CLRF PP7HH,0
001DC6 2225           04412         ADDWFC PP7HH,F,0
001DC8 6A26           04413         CLRF PP7HHH,0
001DCA 2226           04414         ADDWFC PP7HHH,F,0
001DCC C026 F014      04415         MOVFF PP7HHH,PP0HHH
001DD0 C025 F013      04416         MOVFF PP7HH,PP0HH
001DD4 C024 F012      04417         MOVFF PP7H,PP0H
001DD8 C023 F011      04418         MOVFF PP7,PP0
001DDC 6A1C           04419         CLRF PP2HHH,0
001DDE 6A1B           04420         CLRF PP2HH,0
001DE0 6A1A           04421         CLRF PP2H,0
001DE2 C255 F019      04422         MOVFF SD_SECS_PER_CLUSTER,PP2
                      04423         F@CALL AL@MUL
001DEA C014 F28E      04424         MOVFF PP0HHH,SD_DATA_SECHHH
001DEE C013 F28D      04425         MOVFF PP0HH,SD_DATA_SECHH
001DF2 C012 F28C      04426         MOVFF PP0H,SD_DATA_SECH
001DF6 C011 F28B      04427         MOVFF PP0,SD_DATA_SEC
  00001DFA            04428 F4_001067 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Sec_in_Cluster
001DFA 51CB           04429         MOVF SD_SEC_IN_CLUSTER,W
001DFC 258B           04430         ADDWF SD_DATA_SEC,W
001DFE 6F8B           04431         MOVWF SD_DATA_SEC
001E00 0E00           04432         MOVLW 0
001E02 218C           04433         ADDWFC SD_DATA_SECH,W
001E04 6F8C           04434         MOVWF SD_DATA_SECH
001E06 0E00           04435         MOVLW 0
001E08 218D           04436         ADDWFC SD_DATA_SECHH,W
001E0A 6F8D           04437         MOVWF SD_DATA_SECHH
001E0C 0E00           04438         MOVLW 0
001E0E 218E           04439         ADDWFC SD_DATA_SECHHH,W
001E10 6F8E           04440         MOVWF SD_DATA_SECHHH
  00001E12            04441 F4_001068 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
001E12 5173           04442         MOVF SD_DATA_AREA,W
001E14 278B           04443         ADDWF SD_DATA_SEC,F
001E16 5174           04444         MOVF SD_DATA_AREAH,W
001E18 238C           04445         ADDWFC SD_DATA_SECH,F
001E1A 5175           04446         MOVF SD_DATA_AREAHH,W
001E1C 238D           04447         ADDWFC SD_DATA_SECHH,F
001E1E 5176           04448         MOVF SD_DATA_AREAHHH,W
001E20 238E           04449         ADDWFC SD_DATA_SECHHH,F
  00001E22            04450 F4_001069 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = SD_Sec_in_Cluster + 1
001E22 2BCB           04451         INCF SD_SEC_IN_CLUSTER,F
  00001E24            04452 F4_001070 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001E24 C28E F037      04453         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001E28 C28D F036      04454         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001E2C C28C F035      04455         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001E30 C28B F034      04456         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001E34            04457 F4_001071 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001E34 0E01           04458         MOVLW 1
001E36 6F4A           04459         MOVWF SD_RW_OPTION
  00001E38            04460 F4_001072 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001E38 0100           04461         MOVLB 0
  00000000            04462 RAM_BANK = 0
                      04463         F@CALL SD_SECTOR_SUB
  00001E3E            04464 F4_001074 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Return = 1 Then
001E3E 0E01           04465         MOVLW 1
001E40 5C40           04466         SUBWF SD_RETURN,W,0
001E42 A4D8           04467         BTFSS STATUS,2,0
                      04468         GO@TO BC@LL183
  00001E48            04469 F4_001075 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001E48 0E01           04470         MOVLW 1
001E4A 0102           04471         MOVLB 2
  00000002            04472 RAM_BANK = 2
001E4C 6F4B           04473         MOVWF SD_EXTENDED_RETURN
  00001E4E            04474 F4_001076 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001E4E 0100           04475         MOVLB 0
  00000000            04476 RAM_BANK = 0
001E50 0012           04477         RETURN 0
  00001E52            04478 F4_001077 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001E52                04479 BC@LL183
  00001E52            04480 F4_001078 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = SD_File_Size_Left // SD_Bytes_Per_Sec
001E52 C2ED F014      04481         MOVFF SD_FILE_SIZE_LEFTHHH,PP0HHH
001E56 C2EC F013      04482         MOVFF SD_FILE_SIZE_LEFTHH,PP0HH
001E5A C2EB F012      04483         MOVFF SD_FILE_SIZE_LEFTH,PP0H
001E5E C2EA F011      04484         MOVFF SD_FILE_SIZE_LEFT,PP0
001E62 6A1C           04485         CLRF PP2HHH,0
001E64 6A1B           04486         CLRF PP2HH,0
001E66 C260 F01A      04487         MOVFF SD_BYTES_PER_SECH,PP2H
001E6A C25F F019      04488         MOVFF SD_BYTES_PER_SEC,PP2
                      04489         F@CALL L@MOD
001E72 C01A F290      04490         MOVFF PP2H,SD_DATA_BUFFER_POSH
001E76 C019 F28F      04491         MOVFF PP2,SD_DATA_BUFFER_POS
  00001E7A            04492 F4_001079 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = SD_Data_Buffer_Pos
001E7A C290 F248      04493         MOVFF SD_DATA_BUFFER_POSH,SD_BUFFER_IDXH
001E7E C28F F247      04494         MOVFF SD_DATA_BUFFER_POS,SD_BUFFER_IDX
  00001E82            04495 F4_001080 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Data_Buffer_Pos = 0 Then
001E82 0102           04496         MOVLB 2
  00000002            04497 RAM_BANK = 2
001E84 5190           04498         MOVF SD_DATA_BUFFER_POSH,W
001E86 118F           04499         IORWF SD_DATA_BUFFER_POS,W
001E88 0100           04500         MOVLB 0
  00000000            04501 RAM_BANK = 0
001E8A A4D8           04502         BTFSS STATUS,2,0
                      04503         GO@TO BC@LL185
  00001E90            04504 F4_001081 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_File_Size_Left > 0 Then
001E90 96D8           04505         BCF STATUS,3,0
001E92 0102           04506         MOVLB 2
  00000002            04507 RAM_BANK = 2
001E94 BFED           04508         BTFSC SD_FILE_SIZE_LEFTHHH,7
001E96 86D8           04509         BSF STATUS,3,0
001E98 0100           04510         MOVLB 0
  00000000            04511 RAM_BANK = 0
                      04512         G@OTO BC@LL187
001EA0 0102           04513         MOVLB 2
  00000002            04514 RAM_BANK = 2
001EA2 51EA           04515         MOVF SD_FILE_SIZE_LEFT,W
001EA4 11EB           04516         IORWF SD_FILE_SIZE_LEFTH,W
001EA6 11EC           04517         IORWF SD_FILE_SIZE_LEFTHH,W
001EA8 11ED           04518         IORWF SD_FILE_SIZE_LEFTHHH,W
001EAA 0100           04519         MOVLB 0
  00000000            04520 RAM_BANK = 0
001EAC B4D8           04521         BTFSC STATUS,2,0
                      04522         GO@TO BC@LL187
001EB2 96D8           04523         BCF STATUS,3,0
001EB4 0102           04524         MOVLB 2
  00000002            04525 RAM_BANK = 2
001EB6 BFED           04526         BTFSC SD_FILE_SIZE_LEFTHHH,7
001EB8 86D8           04527         BSF STATUS,3,0
001EBA 0100           04528         MOVLB 0
  00000000            04529 RAM_BANK = 0
                      04530         G@OTO BC@LL187
001EC2 0102           04531         MOVLB 2
  00000002            04532 RAM_BANK = 2
001EC4 51EB           04533         MOVF SD_FILE_SIZE_LEFTH,W
001EC6 11EC           04534         IORWF SD_FILE_SIZE_LEFTHH,W
001EC8 11ED           04535         IORWF SD_FILE_SIZE_LEFTHHH,W
001ECA E106           04536         BNZ CP@LB28
001ECC 0E01           04537         MOVLW 1
001ECE 5DEA           04538         SUBWF SD_FILE_SIZE_LEFT,W
001ED0 0100           04539         MOVLB 0
  00000000            04540 RAM_BANK = 0
001ED2 A0D8           04541         BTFSS STATUS,0,0
                      04542         GO@TO BC@LL187
001ED8                04543 CP@LB28
  00001ED8            04544 F4_001082 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = SD_Bytes_Per_Sec
001ED8 C260 F290      04545         MOVFF SD_BYTES_PER_SECH,SD_DATA_BUFFER_POSH
001EDC C25F F28F      04546         MOVFF SD_BYTES_PER_SEC,SD_DATA_BUFFER_POS
  00001EE0            04547 F4_001083 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sector_Num
001EE0 2A34           04548         INCF SD_SECTOR_NUM,F,0
001EE2 0E00           04549         MOVLW 0
001EE4 2235           04550         ADDWFC SD_SECTOR_NUMH,F,0
001EE6 2236           04551         ADDWFC SD_SECTOR_NUMHH,F,0
001EE8 2237           04552         ADDWFC SD_SECTOR_NUMHHH,F,0
  00001EEA            04553 F4_001084 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001EEA                04554 BC@LL187
  00001EEA            04555 F4_001085 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001EEA                04556 BC@LL185
  00001EEA            04557 F4_001086 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Idx = 1
001EEA 0102           04558         MOVLB 2
  00000002            04559 RAM_BANK = 2
001EEC 6BDB           04560         CLRF SD_CLUSTER_SEQ_IDXH
001EEE 0E01           04561         MOVLW 1
001EF0 6FDA           04562         MOVWF SD_CLUSTER_SEQ_IDX
  00001EF2            04563 F4_001087 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 1
001EF2 6BD9           04564         CLRF SD_CLUSTER_SEQ_NUMH
001EF4 0E01           04565         MOVLW 1
001EF6 6FD8           04566         MOVWF SD_CLUSTER_SEQ_NUM
  00001EF8            04567 F4_001088 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
001EF8 81E5           04568         BSF _B#VR1,0
  00001EFA            04569 F4_001089 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Ptr = SD_File_Size
001EFA C2CF F2E4      04570         MOVFF SD_FILE_SIZEHHH,SD_BYTES_READHHH
001EFE C2CE F2E3      04571         MOVFF SD_FILE_SIZEHH,SD_BYTES_READHH
001F02 C2CD F2E2      04572         MOVFF SD_FILE_SIZEH,SD_BYTES_READH
001F06 C2CC F2E1      04573         MOVFF SD_FILE_SIZE,SD_BYTES_READ
  00001F0A            04574 F4_001090 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
001F0A 6B4B           04575         CLRF SD_EXTENDED_RETURN
  00001F0C            04576 F4_001091 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001F0C 0100           04577         MOVLB 0
  00000000            04578 RAM_BANK = 0
001F0E 0012           04579         RETURN 0
  00001F10            04580 F4_001097 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Delete_File MACRO
                      04581 SD_DELETE_FILE  MACRO .,.,.,.,.,.,.,.,.,.
                      04582  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      04583  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      04584         F@CALL SD_DELETE_FILE_SUB
                      04585         ENDM
001F10                04586 SD_DELETE_FILE_SUB
  00001F10            04587 F4_001108 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Check_For_File_Sub
                      04588         F@CALL SD_CHECK_FOR_FILE_SUB
  00001F14            04589 F4_001109 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir <> 0 Then
001F14 0102           04590         MOVLB 2
  00000002            04591 RAM_BANK = 2
001F16 534C           04592         MOVF SD_EXTENDED_RETURN_ROOT_DIR,F
001F18 0100           04593         MOVLB 0
  00000000            04594 RAM_BANK = 0
001F1A B4D8           04595         BTFSC STATUS,2,0
                      04596         GO@TO BC@LL189
  00001F20            04597 F4_001110 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001F20 0E01           04598         MOVLW 1
001F22 0102           04599         MOVLB 2
  00000002            04600 RAM_BANK = 2
001F24 6F4B           04601         MOVWF SD_EXTENDED_RETURN
  00001F26            04602 F4_001111 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
001F26 0100           04603         MOVLB 0
  00000000            04604 RAM_BANK = 0
001F28 0012           04605         RETURN 0
  00001F2A            04606 F4_001112 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
001F2A                04607 BC@LL189
  00001F2A            04608 F4_001113 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE0 = SD_Root_Dir_File[$1A]
001F2A 0102           04609         MOVLB 2
  00000002            04610 RAM_BANK = 2
001F2C 51B8           04611         MOVF SD_ROOT_DIR_FILE#26,W
001F2E 6FC5           04612         MOVWF SD_CLUSTER_NUM
  00001F30            04613 F4_001114 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE1 = SD_Root_Dir_File[$1B]
001F30 51B9           04614         MOVF SD_ROOT_DIR_FILE#27,W
001F32 6FC6           04615         MOVWF SD_CLUSTER_NUMH
  00001F34            04616 F4_001115 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos
001F34 C28A F2C3      04617         MOVFF SD_ROOT_DIR_POSH,SD_WRITE_BUFFER_POSH
001F38 C289 F2C2      04618         MOVFF SD_ROOT_DIR_POS,SD_WRITE_BUFFER_POS
  00001F3C            04619 F4_001116 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = $E5
001F3C 0EE5           04620         MOVLW 229
001F3E 6F4D           04621         MOVWF SD_DATA_IO
  00001F40            04622 F4_001117 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001F40 0100           04623         MOVLB 0
  00000000            04624 RAM_BANK = 0
                      04625         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001F46            04626 F4_001118 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04627         F@CALL SD_WRITE_SECTOR
  00001F4A            04628 F4_001119 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 0
001F4A 0102           04629         MOVLB 2
  00000002            04630 RAM_BANK = 2
001F4C 6B4A           04631         CLRF SD_RW_OPTION
  00001F4E            04632 F4_001120 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Repeat
001F4E                04633 BC@LL190
001F4E 0100           04634         MOVLB 0
  00000000            04635 RAM_BANK = 0
  00001F50            04636 F4_001121 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001F50 6A14           04637         CLRF PP0HHH,0
001F52 6A13           04638         CLRF PP0HH,0
001F54 C2C6 F012      04639         MOVFF SD_CLUSTER_NUMH,PP0H
001F58 C2C5 F011      04640         MOVFF SD_CLUSTER_NUM,PP0
001F5C 6A1C           04641         CLRF PP2HHH,0
001F5E 6A1B           04642         CLRF PP2HH,0
001F60 0E01           04643         MOVLW 1
001F62 6E1A           04644         MOVWF PP2H,0
001F64 6A19           04645         CLRF PP2,0
                      04646         F@CALL L@DIV
001F6A C014 F27C      04647         MOVFF PP0HHH,SD_FAT_SECHHH
001F6E C013 F27B      04648         MOVFF PP0HH,SD_FAT_SECHH
001F72 C012 F27A      04649         MOVFF PP0H,SD_FAT_SECH
001F76 C011 F279      04650         MOVFF PP0,SD_FAT_SEC
  00001F7A            04651 F4_001122 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001F7A C2C5 F27D      04652         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001F7E 0102           04653         MOVLB 2
  00000002            04654 RAM_BANK = 2
001F80 6B7E           04655         CLRF SD_FAT_BUFFER_POSH
  00001F82            04656 F4_001123 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001F82 90D8           04657         BCF STATUS,0,0
001F84 377D           04658         RLCF SD_FAT_BUFFER_POS,F
001F86 377E           04659         RLCF SD_FAT_BUFFER_POSH,F
  00001F88            04660 F4_001124 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Sector_Num <> (SD_FAT1 + SD_FAT_Sec) Then
001F88 5179           04661         MOVF SD_FAT_SEC,W
001F8A 2567           04662         ADDWF SD_FAT1,W
001F8C 6E08           04663         MOVWF PBP#VAR0,0
001F8E 517A           04664         MOVF SD_FAT_SECH,W
001F90 2168           04665         ADDWFC SD_FAT1H,W
001F92 6E09           04666         MOVWF PBP#VAR0H,0
001F94 517B           04667         MOVF SD_FAT_SECHH,W
001F96 2169           04668         ADDWFC SD_FAT1HH,W
001F98 6E0A           04669         MOVWF PBP#VAR0HH,0
001F9A 517C           04670         MOVF SD_FAT_SECHHH,W
001F9C 216A           04671         ADDWFC SD_FAT1HHH,W
001F9E 6E0B           04672         MOVWF PBP#VAR0HHH,0
001FA0 5008           04673         MOVF PBP#VAR0,W,0
001FA2 5C34           04674         SUBWF SD_SECTOR_NUM,W,0
001FA4 E10C           04675         BNZ CP@LB29
001FA6 5009           04676         MOVF PBP#VAR0H,W,0
001FA8 5C35           04677         SUBWF SD_SECTOR_NUMH,W,0
001FAA E109           04678         BNZ CP@LB29
001FAC 500A           04679         MOVF PBP#VAR0HH,W,0
001FAE 5C36           04680         SUBWF SD_SECTOR_NUMHH,W,0
001FB0 E106           04681         BNZ CP@LB29
001FB2 500B           04682         MOVF PBP#VAR0HHH,W,0
001FB4 5C37           04683         SUBWF SD_SECTOR_NUMHHH,W,0
001FB6 0100           04684         MOVLB 0
  00000000            04685 RAM_BANK = 0
001FB8 B4D8           04686         BTFSC STATUS,2,0
                      04687         GO@TO BC@LL193
001FBE                04688 CP@LB29
  00001FBE            04689 F4_001125 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_RW_Option > 0 Then
001FBE 0102           04690         MOVLB 2
  00000002            04691 RAM_BANK = 2
001FC0 534A           04692         MOVF SD_RW_OPTION,F
001FC2 0100           04693         MOVLB 0
  00000000            04694 RAM_BANK = 0
001FC4 B4D8           04695         BTFSC STATUS,2,0
                      04696         GO@TO BC@LL195
  00001FCA            04697 F4_001126 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04698         F@CALL SD_WRITE_SECTOR
  00001FCE            04699 F4_001127 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num - SD_FAT1 + SD_FAT2
001FCE 0102           04700         MOVLB 2
  00000002            04701 RAM_BANK = 2
001FD0 5167           04702         MOVF SD_FAT1,W
001FD2 5C34           04703         SUBWF SD_SECTOR_NUM,W,0
001FD4 6E23           04704         MOVWF PP7,0
001FD6 5168           04705         MOVF SD_FAT1H,W
001FD8 5835           04706         SUBWFB SD_SECTOR_NUMH,W,0
001FDA 6E24           04707         MOVWF PP7H,0
001FDC 5169           04708         MOVF SD_FAT1HH,W
001FDE 5836           04709         SUBWFB SD_SECTOR_NUMHH,W,0
001FE0 6E25           04710         MOVWF PP7HH,0
001FE2 516A           04711         MOVF SD_FAT1HHH,W
001FE4 5837           04712         SUBWFB SD_SECTOR_NUMHHH,W,0
001FE6 6E26           04713         MOVWF PP7HHH,0
001FE8 516B           04714         MOVF SD_FAT2,W
001FEA 2423           04715         ADDWF PP7,W,0
001FEC 6E34           04716         MOVWF SD_SECTOR_NUM,0
001FEE 516C           04717         MOVF SD_FAT2H,W
001FF0 2024           04718         ADDWFC PP7H,W,0
001FF2 6E35           04719         MOVWF SD_SECTOR_NUMH,0
001FF4 516D           04720         MOVF SD_FAT2HH,W
001FF6 2025           04721         ADDWFC PP7HH,W,0
001FF8 6E36           04722         MOVWF SD_SECTOR_NUMHH,0
001FFA 516E           04723         MOVF SD_FAT2HHH,W
001FFC 2026           04724         ADDWFC PP7HHH,W,0
001FFE 6E37           04725         MOVWF SD_SECTOR_NUMHHH,0
  00002000            04726 F4_001128 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
002000 0100           04727         MOVLB 0
  00000000            04728 RAM_BANK = 0
                      04729         F@CALL SD_WRITE_SECTOR
  00002006            04730 F4_001129 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
002006                04731 BC@LL195
  00002006            04732 F4_001130 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
002006 0102           04733         MOVLB 2
  00000002            04734 RAM_BANK = 2
002008 5179           04735         MOVF SD_FAT_SEC,W
00200A 2567           04736         ADDWF SD_FAT1,W
00200C 6E34           04737         MOVWF SD_SECTOR_NUM,0
00200E 517A           04738         MOVF SD_FAT_SECH,W
002010 2168           04739         ADDWFC SD_FAT1H,W
002012 6E35           04740         MOVWF SD_SECTOR_NUMH,0
002014 517B           04741         MOVF SD_FAT_SECHH,W
002016 2169           04742         ADDWFC SD_FAT1HH,W
002018 6E36           04743         MOVWF SD_SECTOR_NUMHH,0
00201A 517C           04744         MOVF SD_FAT_SECHHH,W
00201C 216A           04745         ADDWFC SD_FAT1HHH,W
00201E 6E37           04746         MOVWF SD_SECTOR_NUMHHH,0
  00002020            04747 F4_001131 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
002020 0E01           04748         MOVLW 1
002022 6F4A           04749         MOVWF SD_RW_OPTION
  00002024            04750 F4_001132 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
002024 0100           04751         MOVLB 0
  00000000            04752 RAM_BANK = 0
                      04753         F@CALL SD_SECTOR_SUB
  0000202A            04754 F4_001134 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
00202A                04755 BC@LL193
  0000202A            04756 F4_001135 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
00202A C27E F24F      04757         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
00202E C27D F24E      04758         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  00002032            04759 F4_001136 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      04760         F@CALL SD_READ_FAT_ENTRY
  00002036            04761 F4_001137 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
002036 C278 F2C6      04762         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
00203A C277 F2C5      04763         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  0000203E            04764 F4_001138 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_FAT_Buffer_Pos
00203E C27E F2C3      04765         MOVFF SD_FAT_BUFFER_POSH,SD_WRITE_BUFFER_POSH
002042 C27D F2C2      04766         MOVFF SD_FAT_BUFFER_POS,SD_WRITE_BUFFER_POS
  00002046            04767 F4_001139 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = $00
002046 0102           04768         MOVLB 2
  00000002            04769 RAM_BANK = 2
002048 6B4D           04770         CLRF SD_DATA_IO
  0000204A            04771 F4_001140 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
00204A 0100           04772         MOVLB 0
  00000000            04773 RAM_BANK = 0
                      04774         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00002050            04775 F4_001141 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_FAT_Buffer_Pos + 1
002050 0E01           04776         MOVLW 1
002052 0102           04777         MOVLB 2
  00000002            04778 RAM_BANK = 2
002054 257D           04779         ADDWF SD_FAT_BUFFER_POS,W
002056 6FC2           04780         MOVWF SD_WRITE_BUFFER_POS
002058 0E00           04781         MOVLW 0
00205A 217E           04782         ADDWFC SD_FAT_BUFFER_POSH,W
00205C 6FC3           04783         MOVWF SD_WRITE_BUFFER_POSH
  0000205E            04784 F4_001142 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
00205E 0100           04785         MOVLB 0
  00000000            04786 RAM_BANK = 0
                      04787         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00002064            04788 F4_001143 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Until SD_Cluster_Num = $FFFF
002064 0102           04789         MOVLB 2
  00000002            04790 RAM_BANK = 2
002066 29C5           04791         INCF SD_CLUSTER_NUM,W
002068 E101           04792         BNZ CP@LB30
00206A 29C6           04793         INCF SD_CLUSTER_NUMH,W
00206C                04794 CP@LB30
00206C 0100           04795         MOVLB 0
  00000000            04796 RAM_BANK = 0
00206E A4D8           04797         BTFSS STATUS,2,0
                      04798         GO@TO BC@LL190
002072                04799 BC@LL191
  00002072            04800 F4_001144 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04801         F@CALL SD_WRITE_SECTOR
  00002076            04802 F4_001145 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num - SD_FAT1 + SD_FAT2
002076 0102           04803         MOVLB 2
  00000002            04804 RAM_BANK = 2
002078 5167           04805         MOVF SD_FAT1,W
00207A 5C34           04806         SUBWF SD_SECTOR_NUM,W,0
00207C 6E23           04807         MOVWF PP7,0
00207E 5168           04808         MOVF SD_FAT1H,W
002080 5835           04809         SUBWFB SD_SECTOR_NUMH,W,0
002082 6E24           04810         MOVWF PP7H,0
002084 5169           04811         MOVF SD_FAT1HH,W
002086 5836           04812         SUBWFB SD_SECTOR_NUMHH,W,0
002088 6E25           04813         MOVWF PP7HH,0
00208A 516A           04814         MOVF SD_FAT1HHH,W
00208C 5837           04815         SUBWFB SD_SECTOR_NUMHHH,W,0
00208E 6E26           04816         MOVWF PP7HHH,0
002090 516B           04817         MOVF SD_FAT2,W
002092 2423           04818         ADDWF PP7,W,0
002094 6E34           04819         MOVWF SD_SECTOR_NUM,0
002096 516C           04820         MOVF SD_FAT2H,W
002098 2024           04821         ADDWFC PP7H,W,0
00209A 6E35           04822         MOVWF SD_SECTOR_NUMH,0
00209C 516D           04823         MOVF SD_FAT2HH,W
00209E 2025           04824         ADDWFC PP7HH,W,0
0020A0 6E36           04825         MOVWF SD_SECTOR_NUMHH,0
0020A2 516E           04826         MOVF SD_FAT2HHH,W
0020A4 2026           04827         ADDWFC PP7HHH,W,0
0020A6 6E37           04828         MOVWF SD_SECTOR_NUMHHH,0
  000020A8            04829 F4_001146 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
0020A8 0100           04830         MOVLB 0
  00000000            04831 RAM_BANK = 0
                      04832         F@CALL SD_WRITE_SECTOR
  000020AE            04833 F4_001147 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
0020AE 0102           04834         MOVLB 2
  00000002            04835 RAM_BANK = 2
0020B0 6B4B           04836         CLRF SD_EXTENDED_RETURN
  000020B2            04837 F4_001148 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0020B2 0100           04838         MOVLB 0
  00000000            04839 RAM_BANK = 0
0020B4 0012           04840         RETURN 0
  000020B6            04841 F4_001154 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Init_FS_MSSP MACRO P1
                      04842 SD_INIT_FS_MSSP MACRO P1,.,.,.,.,.,.,.,.,.
                      04843  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      04844  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      04845         IF (PRM_COUNT > 1)
                      04846         ERROR "(In Asm) SD_Init_FS_MSSP - Too many parameters"
                      04847         ELSE
                      04848         IF (PRM_COUNT == 0)
                      04849         MOVLW 32
                      04850         MOVWF SSPCON1,0
                      04851         ELSE
                      04852         IF (PRM_1 != BYTE) && (PRM_1 != NUM8)
                      04853         ERROR "(In Asm) SD_Init_FS_MSSP - Speed(Param1) should be a Byte variable or number"
                      04854         ENDIF
                      04855         IF (PRM_1 == BYTE)
                      04856         BYTE_BYTE P1, SSPCON1
                      04857         BSF SSPCON1,5,0
                      04858         ENDIF
                      04859         IF (PRM_1 == NUM8)
                      04860         NUM_DWORD P1, SSPCON1
                      04861 RAM_BANK = 0
                      04862         BSF SSPCON1,5,0
                      04863         ENDIF
                      04864         ENDIF
                      04865         ENDIF
                      04866         F@CALL SD_INIT_FS_MSSP_SUB
                      04867         IF (SD_INIT_FS_MSSP_RETURN != 1)
                      04868         ELSE
                      04869         IF (RETURN_TYPE != BYTE)
                      04870         ERROR "(In Asm) SD_Init_FS_MSSP - Return variable should be a Byte variable"
                      04871         ENDIF
                      04872         IF (RETURN_TYPE == BYTE)
                      04873         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      04874         ENDIF
                      04875         ENDIF
                      04876         ENDM
0020B6                04877 SD_INIT_FS_MSSP_SUB
  000020B6            04878 F4_001193 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return_Int = SD_Init_MSSP SSPCON1
  0002                04879  VARIABLE PRM_1=2
  0000                04880  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                04881  VARIABLE SD_INIT_MSSP_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=SSPCON1
  000A                04882  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=SD_EXTENDED_RETURN_INT,SD_INIT_MSSP_RETURN=1,PRM_COUNT=1
                      04883         SD_INIT_MSSP SSPCON1,0,0,0,0,0,0,0,0,0
  000A                04884  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=SD_EXTENDED_RETURN_INT,SD_INIT_MSSP_RETURN=1,PRM_COUNT=1
  0002                04885  VARIABLE PRM_1=2
  0000                04886  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                04887  VARIABLE SD_INIT_MSSP_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=SSPCON1
  000020C4            04888 F4_001194 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Int = 1 Then
0020C4 0E01           04889         MOVLW 1
0020C6 0102           04890         MOVLB 2
  00000002            04891 RAM_BANK = 2
0020C8 5DE9           04892         SUBWF SD_EXTENDED_RETURN_INT,W
0020CA 0100           04893         MOVLB 0
  00000000            04894 RAM_BANK = 0
0020CC A4D8           04895         BTFSS STATUS,2,0
                      04896         GO@TO BC@LL197
  000020D2            04897 F4_001195 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
0020D2 0E01           04898         MOVLW 1
0020D4 0102           04899         MOVLB 2
  00000002            04900 RAM_BANK = 2
0020D6 6F4B           04901         MOVWF SD_EXTENDED_RETURN
  000020D8            04902 F4_001196 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
0020D8 0100           04903         MOVLB 0
  00000000            04904 RAM_BANK = 0
0020DA 0012           04905         RETURN 0
  000020DC            04906 F4_001197 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
0020DC                04907 BC@LL197
  000020DC            04908 F4_001198 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = $00
0020DC 6A37           04909         CLRF SD_SECTOR_NUMHHH,0
0020DE 6A36           04910         CLRF SD_SECTOR_NUMHH,0
0020E0 6A35           04911         CLRF SD_SECTOR_NUMH,0
0020E2 6A34           04912         CLRF SD_SECTOR_NUM,0
  000020E4            04913 F4_001199 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0020E4 0E01           04914         MOVLW 1
0020E6 0102           04915         MOVLB 2
  00000002            04916 RAM_BANK = 2
0020E8 6F4A           04917         MOVWF SD_RW_OPTION
  000020EA            04918 F4_001200 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0020EA 0100           04919         MOVLB 0
  00000000            04920 RAM_BANK = 0
                      04921         F@CALL SD_SECTOR_SUB
  000020F0            04922 F4_001202 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer0[0] = $EB And SD_Buffer0[2] = $90 Then
0020F0 5041           04923         MOVF SD_BUFFER0#0,W,0
0020F2 6E08           04924         MOVWF PBP#VAR0,0
0020F4 0EEB           04925         MOVLW 235
0020F6 5C08           04926         SUBWF PBP#VAR0,W,0
0020F8 0E01           04927         MOVLW 1
0020FA A4D8           04928         BTFSS STATUS,2,0
0020FC 0E00           04929         MOVLW 0
0020FE 6E2D           04930         MOVWF SP#P9,0
002100 5043           04931         MOVF SD_BUFFER0#2,W,0
002102 6E08           04932         MOVWF PBP#VAR0,0
002104 0E90           04933         MOVLW 144
002106 5C08           04934         SUBWF PBP#VAR0,W,0
002108 0E01           04935         MOVLW 1
00210A A4D8           04936         BTFSS STATUS,2,0
00210C 0E00           04937         MOVLW 0
00210E 142D           04938         ANDWF SP#P9,W,0
002110 B4D8           04939         BTFSC STATUS,2,0
                      04940         GO@TO BC@LL199
  00002116            04941 F4_001204 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Boot_Record = $0000
002116 0102           04942         MOVLB 2
  00000002            04943 RAM_BANK = 2
002118 6B66           04944         CLRF SD_BOOT_RECORDH
00211A 6B65           04945         CLRF SD_BOOT_RECORD
00211C 0100           04946         MOVLB 0
  00000000            04947 RAM_BANK = 0
                      04948         F@JUMP BC@LL198
  00002122            04949 F4_001205 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] ElseIf SD_Buffer0[0] = $E9 Then
002122                04950 BC@LL199
002122 5041           04951         MOVF SD_BUFFER0#0,W,0
002124 6E08           04952         MOVWF PBP#VAR0,0
002126 0EE9           04953         MOVLW 233
002128 5C08           04954         SUBWF PBP#VAR0,W,0
00212A A4D8           04955         BTFSS STATUS,2,0
                      04956         GO@TO BC@LL200
  00002130            04957 F4_001207 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Boot_Record = $0000
002130 0102           04958         MOVLB 2
  00000002            04959 RAM_BANK = 2
002132 6B66           04960         CLRF SD_BOOT_RECORDH
002134 6B65           04961         CLRF SD_BOOT_RECORD
002136 0100           04962         MOVLB 0
  00000000            04963 RAM_BANK = 0
                      04964         F@JUMP BC@LL201
00213C                04965 BC@LL200
  0000213C            04966 F4_001208 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Else
  0000213C            04967 F4_001210 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Boot_Record = SD_Buffer1[$0C6] + 0
00213C 0102           04968         MOVLB 2
  00000002            04969 RAM_BANK = 2
00213E 5107           04970         MOVF SD_BUFFER1#198,W
002140 6E0C           04971         MOVWF PBP#VAR1,0
002142 6B66           04972         CLRF SD_BOOT_RECORDH
002144 C00C F265      04973         MOVFF PBP#VAR1,SD_BOOT_RECORD
  00002148            04974 F4_001211 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] EndIf
002148                04975 BC@LL201
002148 0100           04976         MOVLB 0
  00000000            04977 RAM_BANK = 0
00214A                04978 BC@LL198
  0000214A            04979 F4_001212 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Boot_Record
00214A 6A37           04980         CLRF SD_SECTOR_NUMHHH,0
00214C 6A36           04981         CLRF SD_SECTOR_NUMHH,0
00214E C266 F035      04982         MOVFF SD_BOOT_RECORDH,SD_SECTOR_NUMH
002152 C265 F034      04983         MOVFF SD_BOOT_RECORD,SD_SECTOR_NUM
  00002156            04984 F4_001213 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
002156 0E01           04985         MOVLW 1
002158 0102           04986         MOVLB 2
  00000002            04987 RAM_BANK = 2
00215A 6F4A           04988         MOVWF SD_RW_OPTION
  0000215C            04989 F4_001214 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00215C 0100           04990         MOVLB 0
  00000000            04991 RAM_BANK = 0
                      04992         F@CALL SD_SECTOR_SUB
  00002162            04993 F4_001216 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Bytes_Per_Sec.BYTE0 = SD_Buffer0[$0B]
002162 504C           04994         MOVF SD_BUFFER0#11,W,0
002164 0102           04995         MOVLB 2
  00000002            04996 RAM_BANK = 2
002166 6F5F           04997         MOVWF SD_BYTES_PER_SEC
  00002168            04998 F4_001217 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Bytes_Per_Sec.BYTE1 = SD_Buffer0[$0C]
002168 504D           04999         MOVF SD_BUFFER0#12,W,0
00216A 6F60           05000         MOVWF SD_BYTES_PER_SECH
  0000216C            05001 F4_001218 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Secs_Per_Cluster = SD_Buffer0[$0D]
00216C 504E           05002         MOVF SD_BUFFER0#13,W,0
00216E 6F55           05003         MOVWF SD_SECS_PER_CLUSTER
  00002170            05004 F4_001219 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Reserved_Secs.BYTE0 = SD_Buffer0[$0E]
002170 504F           05005         MOVF SD_BUFFER0#14,W,0
002172 6F56           05006         MOVWF SD_RESERVED_SECS
  00002174            05007 F4_001220 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Reserved_Secs.BYTE1 = SD_Buffer0[$0F]
002174 5050           05008         MOVF SD_BUFFER0#15,W,0
002176 6F57           05009         MOVWF SD_RESERVED_SECSH
  00002178            05010 F4_001221 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_FATs = SD_Buffer0[$10]
002178 5051           05011         MOVF SD_BUFFER0#16,W,0
00217A 6F5A           05012         MOVWF SD_NUM_OF_FATS
  0000217C            05013 F4_001222 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Root_Entries.BYTE0 = SD_Buffer0[$11]
00217C 5052           05014         MOVF SD_BUFFER0#17,W,0
00217E 6F61           05015         MOVWF SD_NUM_OF_ROOT_ENTRIES
  00002180            05016 F4_001223 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Root_Entries.BYTE1 = SD_Buffer0[$12]
002180 5053           05017         MOVF SD_BUFFER0#18,W,0
002182 6F62           05018         MOVWF SD_NUM_OF_ROOT_ENTRIESH
  00002184            05019 F4_001224 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Secs_Per_FAT.BYTE0 = SD_Buffer0[$16]
002184 5057           05020         MOVF SD_BUFFER0#22,W,0
002186 6F58           05021         MOVWF SD_SECS_PER_FAT
  00002188            05022 F4_001225 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Secs_Per_FAT.BYTE1 = SD_Buffer0[$17]
002188 5058           05023         MOVF SD_BUFFER0#23,W,0
00218A 6F59           05024         MOVWF SD_SECS_PER_FATH
  0000218C            05025 F4_001226 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE0 = SD_Buffer0[$20]
00218C 5061           05026         MOVF SD_BUFFER0#32,W,0
00218E 6F5B           05027         MOVWF SD_NUM_OF_SECS
  00002190            05028 F4_001227 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE1 = SD_Buffer0[$21]
002190 5062           05029         MOVF SD_BUFFER0#33,W,0
002192 6F5C           05030         MOVWF SD_NUM_OF_SECSH
  00002194            05031 F4_001228 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE2 = SD_Buffer0[$22]
002194 5063           05032         MOVF SD_BUFFER0#34,W,0
002196 6F5D           05033         MOVWF SD_NUM_OF_SECSHH
  00002198            05034 F4_001229 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE3 = SD_Buffer0[$23]
002198 5064           05035         MOVF SD_BUFFER0#35,W,0
00219A 6F5E           05036         MOVWF SD_NUM_OF_SECSHHH
  0000219C            05037 F4_001230 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT1 = SD_Boot_Record + SD_Reserved_Secs
00219C 5156           05038         MOVF SD_RESERVED_SECS,W
00219E 2565           05039         ADDWF SD_BOOT_RECORD,W
0021A0 6F67           05040         MOVWF SD_FAT1
0021A2 5157           05041         MOVF SD_RESERVED_SECSH,W
0021A4 2166           05042         ADDWFC SD_BOOT_RECORDH,W
0021A6 6F68           05043         MOVWF SD_FAT1H
0021A8 0E00           05044         MOVLW 0
0021AA 6B69           05045         CLRF SD_FAT1HH
0021AC 2369           05046         ADDWFC SD_FAT1HH,F
0021AE 6B6A           05047         CLRF SD_FAT1HHH
  000021B0            05048 F4_001231 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_FAT2 = SD_Boot_Record + SD_Reserved_Secs + SD_Secs_Per_FAT
0021B0 5156           05049         MOVF SD_RESERVED_SECS,W
0021B2 2565           05050         ADDWF SD_BOOT_RECORD,W
0021B4 6E23           05051         MOVWF PP7,0
0021B6 5157           05052         MOVF SD_RESERVED_SECSH,W
0021B8 2166           05053         ADDWFC SD_BOOT_RECORDH,W
0021BA 6E24           05054         MOVWF PP7H,0
0021BC 0E00           05055         MOVLW 0
0021BE 6A25           05056         CLRF PP7HH,0
0021C0 2225           05057         ADDWFC PP7HH,F,0
0021C2 6A26           05058         CLRF PP7HHH,0
0021C4 5158           05059         MOVF SD_SECS_PER_FAT,W
0021C6 2423           05060         ADDWF PP7,W,0
0021C8 6F6B           05061         MOVWF SD_FAT2
0021CA 5159           05062         MOVF SD_SECS_PER_FATH,W
0021CC 2024           05063         ADDWFC PP7H,W,0
0021CE 6F6C           05064         MOVWF SD_FAT2H
0021D0 0E00           05065         MOVLW 0
0021D2 2025           05066         ADDWFC PP7HH,W,0
0021D4 6F6D           05067         MOVWF SD_FAT2HH
0021D6 0E00           05068         MOVLW 0
0021D8 2026           05069         ADDWFC PP7HHH,W,0
0021DA 6F6E           05070         MOVWF SD_FAT2HHH
  000021DC            05071 F4_001232 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir = SD_Num_of_FATs * SD_Secs_Per_FAT
0021DC 6A14           05072         CLRF PP0HHH,0
0021DE 6A13           05073         CLRF PP0HH,0
0021E0 6A12           05074         CLRF PP0H,0
0021E2 C25A F011      05075         MOVFF SD_NUM_OF_FATS,PP0
0021E6 6A1C           05076         CLRF PP2HHH,0
0021E8 6A1B           05077         CLRF PP2HH,0
0021EA C259 F01A      05078         MOVFF SD_SECS_PER_FATH,PP2H
0021EE C258 F019      05079         MOVFF SD_SECS_PER_FAT,PP2
                      05080         F@CALL AL@MUL
0021F6 C014 F272      05081         MOVFF PP0HHH,SD_ROOT_DIRHHH
0021FA C013 F271      05082         MOVFF PP0HH,SD_ROOT_DIRHH
0021FE C012 F270      05083         MOVFF PP0H,SD_ROOT_DIRH
002202 C011 F26F      05084         MOVFF PP0,SD_ROOT_DIR
  00002206            05085 F4_001233 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir = SD_Boot_Record + SD_Reserved_Secs + SD_Root_Dir
002206 5156           05086         MOVF SD_RESERVED_SECS,W
002208 2565           05087         ADDWF SD_BOOT_RECORD,W
00220A 6E23           05088         MOVWF PP7,0
00220C 5157           05089         MOVF SD_RESERVED_SECSH,W
00220E 2166           05090         ADDWFC SD_BOOT_RECORDH,W
002210 6E24           05091         MOVWF PP7H,0
002212 0E00           05092         MOVLW 0
002214 6A25           05093         CLRF PP7HH,0
002216 2225           05094         ADDWFC PP7HH,F,0
002218 6A26           05095         CLRF PP7HHH,0
00221A 5023           05096         MOVF PP7,W,0
00221C 276F           05097         ADDWF SD_ROOT_DIR,F
00221E 5024           05098         MOVF PP7H,W,0
002220 2370           05099         ADDWFC SD_ROOT_DIRH,F
002222 5025           05100         MOVF PP7HH,W,0
002224 2371           05101         ADDWFC SD_ROOT_DIRHH,F
002226 5026           05102         MOVF PP7HHH,W,0
002228 2372           05103         ADDWFC SD_ROOT_DIRHHH,F
  0000222A            05104 F4_001234 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Secs_in_Root = SD_Num_of_Root_Entries * 32
00222A 5162           05105         MOVF SD_NUM_OF_ROOT_ENTRIESH,W
00222C 0D20           05106         MULLW 32
00222E CFF3 F264      05107         MOVFF PRODL,SD_SECS_IN_ROOTH
002232 5161           05108         MOVF SD_NUM_OF_ROOT_ENTRIES,W
002234 0D20           05109         MULLW 32
002236 CFF3 F263      05110         MOVFF PRODL,SD_SECS_IN_ROOT
00223A 50F4           05111         MOVF PRODH,W,0
00223C 2764           05112         ADDWF SD_SECS_IN_ROOTH,F
  0000223E            05113 F4_001235 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Secs_in_Root = SD_Secs_in_Root / SD_Bytes_Per_Sec
00223E C264 F012      05114         MOVFF SD_SECS_IN_ROOTH,PP0H
002242 C263 F011      05115         MOVFF SD_SECS_IN_ROOT,PP0
002246 C260 F016      05116         MOVFF SD_BYTES_PER_SECH,PP1H
00224A C25F F015      05117         MOVFF SD_BYTES_PER_SEC,PP1
                      05118         F@CALL D@VD
002252 6F63           05119         MOVWF SD_SECS_IN_ROOT
002254 C012 F264      05120         MOVFF PP0H,SD_SECS_IN_ROOTH
  00002258            05121 F4_001236 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Data_Area = SD_Root_Dir + SD_Secs_in_Root
002258 5163           05122         MOVF SD_SECS_IN_ROOT,W
00225A 256F           05123         ADDWF SD_ROOT_DIR,W
00225C 6F73           05124         MOVWF SD_DATA_AREA
00225E 5164           05125         MOVF SD_SECS_IN_ROOTH,W
002260 2170           05126         ADDWFC SD_ROOT_DIRH,W
002262 6F74           05127         MOVWF SD_DATA_AREAH
002264 0E00           05128         MOVLW 0
002266 2171           05129         ADDWFC SD_ROOT_DIRHH,W
002268 6F75           05130         MOVWF SD_DATA_AREAHH
00226A 0E00           05131         MOVLW 0
00226C 2172           05132         ADDWFC SD_ROOT_DIRHHH,W
00226E 6F76           05133         MOVWF SD_DATA_AREAHHH
  00002270            05134 F4_001238 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Boot_Record + SD_Num_of_Secs - 1
002270 5165           05135         MOVF SD_BOOT_RECORD,W
002272 255B           05136         ADDWF SD_NUM_OF_SECS,W
002274 6E23           05137         MOVWF PP7,0
002276 5166           05138         MOVF SD_BOOT_RECORDH,W
002278 215C           05139         ADDWFC SD_NUM_OF_SECSH,W
00227A 6E24           05140         MOVWF PP7H,0
00227C 0E00           05141         MOVLW 0
00227E 215D           05142         ADDWFC SD_NUM_OF_SECSHH,W
002280 6E25           05143         MOVWF PP7HH,0
002282 0E00           05144         MOVLW 0
002284 215E           05145         ADDWFC SD_NUM_OF_SECSHHH,W
002286 6E26           05146         MOVWF PP7HHH,0
002288 0423           05147         DECF PP7,W,0
00228A 6E34           05148         MOVWF SD_SECTOR_NUM,0
00228C 0E00           05149         MOVLW 0
00228E 5824           05150         SUBWFB PP7H,W,0
002290 6E35           05151         MOVWF SD_SECTOR_NUMH,0
002292 0E00           05152         MOVLW 0
002294 5825           05153         SUBWFB PP7HH,W,0
002296 6E36           05154         MOVWF SD_SECTOR_NUMHH,0
002298 0E00           05155         MOVLW 0
00229A 5826           05156         SUBWFB PP7HHH,W,0
00229C 6E37           05157         MOVWF SD_SECTOR_NUMHHH,0
  0000229E            05158 F4_001239 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num - SD_Data_Area + 1
00229E 5173           05159         MOVF SD_DATA_AREA,W
0022A0 5C34           05160         SUBWF SD_SECTOR_NUM,W,0
0022A2 6E23           05161         MOVWF PP7,0
0022A4 5174           05162         MOVF SD_DATA_AREAH,W
0022A6 5835           05163         SUBWFB SD_SECTOR_NUMH,W,0
0022A8 6E24           05164         MOVWF PP7H,0
0022AA 5175           05165         MOVF SD_DATA_AREAHH,W
0022AC 5836           05166         SUBWFB SD_SECTOR_NUMHH,W,0
0022AE 6E25           05167         MOVWF PP7HH,0
0022B0 5176           05168         MOVF SD_DATA_AREAHHH,W
0022B2 5837           05169         SUBWFB SD_SECTOR_NUMHHH,W,0
0022B4 6E26           05170         MOVWF PP7HHH,0
0022B6 2823           05171         INCF PP7,W,0
0022B8 6E34           05172         MOVWF SD_SECTOR_NUM,0
0022BA 0E00           05173         MOVLW 0
0022BC 2024           05174         ADDWFC PP7H,W,0
0022BE 6E35           05175         MOVWF SD_SECTOR_NUMH,0
0022C0 0E00           05176         MOVLW 0
0022C2 2025           05177         ADDWFC PP7HH,W,0
0022C4 6E36           05178         MOVWF SD_SECTOR_NUMHH,0
0022C6 0E00           05179         MOVLW 0
0022C8 2026           05180         ADDWFC PP7HHH,W,0
0022CA 6E37           05181         MOVWF SD_SECTOR_NUMHHH,0
  000022CC            05182 F4_001240 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num / SD_Secs_Per_Cluster
0022CC C037 F014      05183         MOVFF SD_SECTOR_NUMHHH,PP0HHH
0022D0 C036 F013      05184         MOVFF SD_SECTOR_NUMHH,PP0HH
0022D4 C035 F012      05185         MOVFF SD_SECTOR_NUMH,PP0H
0022D8 C034 F011      05186         MOVFF SD_SECTOR_NUM,PP0
0022DC 6A1C           05187         CLRF PP2HHH,0
0022DE 6A1B           05188         CLRF PP2HH,0
0022E0 6A1A           05189         CLRF PP2H,0
0022E2 C255 F019      05190         MOVFF SD_SECS_PER_CLUSTER,PP2
                      05191         F@CALL L@DIV
0022EA C014 F037      05192         MOVFF PP0HHH,SD_SECTOR_NUMHHH
0022EE C013 F036      05193         MOVFF PP0HH,SD_SECTOR_NUMHH
0022F2 C012 F035      05194         MOVFF PP0H,SD_SECTOR_NUMH
0022F6 C011 F034      05195         MOVFF PP0,SD_SECTOR_NUM
  000022FA            05196 F4_001241 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Last_Cluster = SD_Sector_Num + 1
0022FA 0E01           05197         MOVLW 1
0022FC 2434           05198         ADDWF SD_SECTOR_NUM,W,0
0022FE 6FC9           05199         MOVWF SD_LAST_CLUSTER
002300 0E00           05200         MOVLW 0
002302 2035           05201         ADDWFC SD_SECTOR_NUMH,W,0
002304 6FCA           05202         MOVWF SD_LAST_CLUSTERH
  00002306            05203 F4_001243 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Name = "        "
002306 EE02 F091      05204         LFSR 0,SD_FILE_NAME
00230A 0E04           05205         MOVLW ((STR@LB1 >> 8) & 255)
00230C 6EF7           05206         MOVWF TBLPTRLH,0
00230E 0E68           05207         MOVLW (STR@LB1 & 255)
002310 6EF6           05208         MOVWF TBLPTRL,0
                      05209         F@CALL LOAD@MSTR
002316 6AEF           05210         CLRF INDF0,0
  00002318            05211 F4_001244 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Ext = "   "
002318 EE02 F09A      05212         LFSR 0,SD_FILE_EXT
00231C 0E20           05213         MOVLW 32
00231E 6EEE           05214         MOVWF POSTINC0,0
002320 6EEE           05215         MOVWF POSTINC0,0
002322 6EEE           05216         MOVWF POSTINC0,0
002324 6AEF           05217         CLRF INDF0,0
  00002326            05218 F4_001245 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Day = 1
002326 0E01           05219         MOVLW 1
002328 6FEF           05220         MOVWF SD_DAY
  0000232A            05221 F4_001246 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Month = 1
00232A 0E01           05222         MOVLW 1
00232C 6FF0           05223         MOVWF SD_MONTH
  0000232E            05224 F4_001247 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Year = 0
00232E 6BF1           05225         CLRF SD_YEAR
  00002330            05226 F4_001248 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_MSeconds = 0
002330 6BF2           05227         CLRF SD_MSECONDS
  00002332            05228 F4_001249 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Seconds = 0
002332 6BF3           05229         CLRF SD_SECONDS
  00002334            05230 F4_001250 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Minutes = 0
002334 6BF4           05231         CLRF SD_MINUTES
  00002336            05232 F4_001251 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Hours = 0
002336 6BF5           05233         CLRF SD_HOURS
  00002338            05234 F4_001252 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_File_Num = 0
002338 6BE7           05235         CLRF SD_FILE_NUMH
00233A 6BE6           05236         CLRF SD_FILE_NUM
  0000233C            05237 F4_001253 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
00233C 6B4B           05238         CLRF SD_EXTENDED_RETURN
  0000233E            05239 F4_001254 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
00233E 0100           05240         MOVLB 0
  00000000            05241 RAM_BANK = 0
002340 0012           05242         RETURN 0
  00002342            05243 F4_001260 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_Byte_To_File MACRO P1
                      05244 SD_WRITE_BYTE_TO_FILE   MACRO P1,.,.,.,.,.,.,.,.,.
                      05245  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      05246  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      05247         IF (PRM_COUNT >  1)
                      05248         ERROR "(In Asm) SD_Write_Byte_to_File - Too many parameters"
                      05249         ELSE
                      05250         IF (PRM_COUNT <  1)
                      05251         ERROR "(In Asm) SD_Write_Byte_to_File - Too few parameters"
                      05252         ELSE
                      05253         IF (PRM_1 != BYTE) && (PRM_1 != NUM8) && (PRM_1 != NUM16) && (PRM_1 != NUM32) && (PRM_1 != WORD) && (PRM_1 != DWORD)
                      05254         ERROR "(In Asm) SD_Write_Byte_to_File - Byte(Param 1) should be a Byte, Word or DWord variable or number"
                      05255         ENDIF
                      05256         IF (PRM_1 == BYTE)
                      05257         BYTE_BYTE P1, SD_IO_BYTE
                      05258         ENDIF
                      05259         IF (PRM_1 == NUM8)
                      05260         NUM_BYTE P1, SD_IO_BYTE
                      05261 RAM_BANK = 0
                      05262         ENDIF
                      05263         IF (PRM_1 == NUM16)
                      05264         NUM_BYTE P1, SD_IO_BYTE
                      05265 RAM_BANK = 0
                      05266         ENDIF
                      05267         IF (PRM_1 == NUM32)
                      05268         NUM_BYTE P1, SD_IO_BYTE
                      05269 RAM_BANK = 0
                      05270         ENDIF
                      05271         IF (PRM_1 == WORD)
                      05272         BYTE_BYTE P1, SD_IO_BYTE
                      05273         ENDIF
                      05274         IF (PRM_1 == DWORD)
                      05275         BYTE_BYTE P1, SD_IO_BYTE
                      05276         ENDIF
                      05277         IF (PRM_1 == FLOAT)
                      05278         FLOAT_BYTE P1, SD_IO_BYTE
                      05279         ENDIF
                      05280         F@CALL SD_WRITE_BYTE_TO_FILE_SUB
                      05281         IF (SD_WRITE_BYTE_TO_FILE_RETURN != 1)
                      05282         ELSE
                      05283         IF (RETURN_TYPE != BYTE)
                      05284         ERROR "(In Asm) SD_Write_Byte_To_File - Return variable should be a Byte variable"
                      05285         ENDIF
                      05286         IF (RETURN_TYPE == BYTE)
                      05287         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      05288         ENDIF
                      05289         ENDIF
                      05290         ENDIF
                      05291         ENDIF
                      05292         ENDM
  00002342            05293 F4_001318 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_Write_String_To_File MACRO
                      05294 SD_WRITE_STRING_TO_FILE MACRO .,.,.,.,.,.,.,.,.,.
                      05295  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      05296  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      05297         IF (PRM_COUNT != 0)
                      05298         ERROR "(In Asm) No parameters required for SD_Write_String_To_File"
                      05299         EXITM
                      05300         ENDIF
                      05301         F@CALL SD_WRITE_STRING_TO_FILE_SUB
                      05302         IF (SD_WRITE_STRING_TO_FILE_RETURN != 1)
                      05303         ELSE
                      05304         IF (RETURN_TYPE != BYTE)
                      05305         ERROR "(In Asm) SD_Write_String_To_File - Return variable should be a Byte variable"
                      05306         ENDIF
                      05307         IF (RETURN_TYPE == BYTE)
                      05308         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      05309         ENDIF
                      05310         ENDIF
                      05311         ENDM
002342                05312 SD_WRITE_STRING_TO_FILE_SUB
  00002342            05313 F4_001345 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_IO_String_Length = Len(SD_IO_String)
002342 EE02 F0FB      05314         LFSR 0,SD_IO_STRING
002346 6AE8           05315         CLRF WREG,0
002348 52EE           05316         MOVF POSTINC0,F,0
00234A E002           05317         BZ $ + 6
00234C 3EE8           05318         INCFSZ WREG,F,0
00234E D7FC           05319         BRA $ - 6
002350 0102           05320         MOVLB 2
  00000002            05321 RAM_BANK = 2
002352 6FF9           05322         MOVWF SD_IO_STRING_LENGTH
  00002354            05323 F4_001346 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_IO_String_Length = SD_IO_String_Length - 1
002354 07F9           05324         DECF SD_IO_STRING_LENGTH,F
  00002356            05325 F4_001347 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] For SD_IO_String_Pos = 0 To SD_IO_String_Length
002356 6BFA           05326         CLRF SD_IO_STRING_POS
002358                05327 FR@LB203
002358 0100           05328         MOVLB 0
  00000000            05329 RAM_BANK = 0
00235A 0102           05330         MOVLB 2
  00000002            05331 RAM_BANK = 2
00235C 51FA           05332         MOVF SD_IO_STRING_POS,W
00235E 5DF9           05333         SUBWF SD_IO_STRING_LENGTH,W
002360 0100           05334         MOVLB 0
  00000000            05335 RAM_BANK = 0
002362 A0D8           05336         BTFSS STATUS,0,0
                      05337         GO@TO NX@LB204
  00002368            05338 F4_001348 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] SD_IO_Byte = SD_IO_String[SD_IO_String_Pos]
002368 EE02 F0FB      05339         LFSR 0,SD_IO_STRING
00236C 0102           05340         MOVLB 2
  00000002            05341 RAM_BANK = 2
00236E 51FA           05342         MOVF SD_IO_STRING_POS,W
002370 26E9           05343         ADDWF FSR0L,F,0
002372 0E00           05344         MOVLW 0
002374 22EA           05345         ADDWFC FSR0H,F,0
002376 50EF           05346         MOVF INDF0,W,0
002378 6FD0           05347         MOVWF SD_IO_BYTE
  0000237A            05348 F4_001349 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Byte_To_File_Sub
00237A 0100           05349         MOVLB 0
  00000000            05350 RAM_BANK = 0
                      05351         F@CALL SD_WRITE_BYTE_TO_FILE_SUB
  00002380            05352 F4_001350 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return = 1 Then Return
002380 0E01           05353         MOVLW 1
002382 0102           05354         MOVLB 2
  00000002            05355 RAM_BANK = 2
002384 5D4B           05356         SUBWF SD_EXTENDED_RETURN,W
002386 0100           05357         MOVLB 0
  00000000            05358 RAM_BANK = 0
002388 A4D8           05359         BTFSS STATUS,2,0
                      05360         GO@TO BC@LL205
00238E 0012           05361         RETURN 0
002390                05362 BC@LL205
  00002390            05363 F4_001351 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Next SD_IO_String_Pos
002390 0102           05364         MOVLB 2
  00000002            05365 RAM_BANK = 2
002392 2BFA           05366         INCF SD_IO_STRING_POS,F
002394 0100           05367         MOVLB 0
  00000000            05368 RAM_BANK = 0
002396 A4D8           05369         BTFSS STATUS,2,0
                      05370         GO@TO FR@LB203
00239A                05371 NX@LB204
  0000239A            05372 F4_001352 EQU $ ; in [V4.0 RFID 2ND GENERATION_LIB.PBP] Return
00239A 0012           05373         RETURN 0
00239C                05374 OVERLIBCODE
  0000239C            05375 F4_EOF EQU $ ; V4.0 RFID 2ND GENERATION_LIB.PBP
  0000239C            05376 F2_EOF EQU $ ; V4.0 RFID 2ND GENERATION.PRP
  0000239C            05377 F1_SOF EQU $ ; V4.0 RFID 2ND GENERATION.BAS
  0000239C            05378 F5_SOF EQU $ ; INITIALIZE.INC
  0000239C            05379 F5_000036 EQU $ ; in [INITIALIZE.INC] ALL_DIGITAL = TRUE
00239C 0E07           05380         MOVLW 7
00239E 6EB4           05381         MOVWF CMCON,0
0023A0 0E0F           05382         MOVLW 15
0023A2 6EC1           05383         MOVWF ADCON1,0
  000023A4            05384 F5_EOF EQU $ ; INITIALIZE.INC
  000023A4            05385 F1_000043 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] DelayMS 200               'Allow chip to settle
0023A4 0EC8           05386         MOVLW 200
                      05387         F@CALL DL@MS
  000023AA            05388 F1_000045 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Input SD_Detect           'Set SD Detect port as input...
0023AA 8292           05389         BSF TRISA,1,0
  000023AC            05390 F1_000048 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Low RFIDEnable                ' Turn off RFID Reader
0023AC 9895           05391         BCF TRISD,4,0
0023AE 9883           05392         BCF PORTD,4,0
  000023B0            05393 F1_000049 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] User_Pointer.LowByte = ERead UPA_L    'Read the low and high bytes of...
0023B0 0E00           05394         MOVLW 0
                      05395         F@CALL EE@RD
0023B6 0103           05396         MOVLB 3
  00000003            05397 RAM_BANK = 3
0023B8 6FC4           05398         MOVWF USER_POINTER
  000023BA            05399 F1_000050 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] User_Pointer.HighByte = ERead UPA_H    '..user pointer address from EEprom
0023BA 0E01           05400         MOVLW 1
                      05401         F@CALL EE@RD
0023C0 6FC5           05402         MOVWF USER_POINTERH
  000023C2            05403 F1_000052 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] If User_Pointer = 0XFFFF Then             'If the value read from EEprom is OXFFFF then this is a new chip so....
0023C2 29C4           05404         INCF USER_POINTER,W
0023C4 E101           05405         BNZ CP@LB31
0023C6 29C5           05406         INCF USER_POINTERH,W
0023C8                05407 CP@LB31
0023C8 0100           05408         MOVLB 0
  00000000            05409 RAM_BANK = 0
0023CA A4D8           05410         BTFSS STATUS,2,0
                      05411         GO@TO BC@LL207
  000023D0            05412 F1_000053 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] User_Pointer = BUA                   '...we write the low and ..
0023D0 0E9C           05413         MOVLW 156
0023D2 0103           05414         MOVLB 3
  00000003            05415 RAM_BANK = 3
0023D4 6FC5           05416         MOVWF USER_POINTERH
0023D6 0E50           05417         MOVLW 80
0023D8 6FC4           05418         MOVWF USER_POINTER
  000023DA            05419 F1_000054 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] EWrite UPA_L, [User_Pointer.LowByte]  '...high bytes of the base user address (0X9C500...
0023DA 6AAA           05420         CLRF EEADRH,0
0023DC 6AA9           05421         CLRF EEADR,0
0023DE 51C4           05422         MOVF USER_POINTER,W
                      05423         F@CALL EE@WR@W
  000023E4            05424 F1_000055 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] EWrite UPA_H, [User_Pointer.HighByte]  '...into the EEProm Pointer storage spot (0X000 and 0X001)
0023E4 6AAA           05425         CLRF EEADRH,0
0023E6 0E01           05426         MOVLW 1
0023E8 6EA9           05427         MOVWF EEADR,0
0023EA 51C5           05428         MOVF USER_POINTERH,W
                      05429         F@CALL EE@WR@W
  000023F0            05430 F1_000056 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] EWrite num_UHE, [0X00]              'Initialize number of User histories to zero
0023F0 6AAA           05431         CLRF EEADRH,0
0023F2 0E03           05432         MOVLW 3
0023F4 6EA9           05433         MOVWF EEADR,0
0023F6 0E00           05434         MOVLW 0
                      05435         F@CALL EE@WR@W
  000023FC            05436 F1_000057 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] EWrite num_MHE, [0X00]               'Initialize number of Manager histories to zero
0023FC 6AAA           05437         CLRF EEADRH,0
0023FE 0E04           05438         MOVLW 4
002400 6EA9           05439         MOVWF EEADR,0
002402 0E00           05440         MOVLW 0
                      05441         F@CALL EE@WR@W
  00002408            05442 F1_000058 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] EndIf
002408                05443 BC@LL207
002408 0100           05444         MOVLB 0
  00000000            05445 RAM_BANK = 0
  0000240A            05446 F1_000071 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Pause 3000
00240A 0E0B           05447         MOVLW 11
00240C 6E16           05448         MOVWF PP1H,0
00240E 0EB8           05449         MOVLW 184
                      05450         F@CALL DLY@W
002414                05451 START
002414                05452 START2
  00002414            05453 F1_000078 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] GoSub Read_Tag
                      05454         F@CALL READ_TAG
  00002418            05455 F1_000080 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Cls
                      05456         F@CALL LCD@CLS
  0000241C            05457 F1_000081 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Print "Checking TAG"
00241C 0E04           05458         MOVLW ((STR@LB2 >> 8) & 255)
00241E 6EF7           05459         MOVWF TBLPTRLH,0
002420 0E72           05460         MOVLW (STR@LB2 & 255)
002422 6EF6           05461         MOVWF TBLPTRL,0
                      05462         F@CALL PRINT@MSTR
  00002428            05463 F1_000083 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] GoSub Check_Tag
                      05464         F@CALL CHECK_TAG
  0000242C            05465 F1_000084 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] If Response = 1 Then
00242C 0E01           05466         MOVLW 1
00242E 0103           05467         MOVLB 3
  00000003            05468 RAM_BANK = 3
002430 5DED           05469         SUBWF RESPONSE,W
002432 0100           05470         MOVLB 0
  00000000            05471 RAM_BANK = 0
002434 A4D8           05472         BTFSS STATUS,2,0
                      05473         GO@TO BC@LL209
  0000243A            05474 F1_000085 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Cls
                      05475         F@CALL LCD@CLS
  0000243E            05476 F1_000086 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Print At 1,1, "Got a match"
00243E 0E80           05477         MOVLW 128
002440 6E01           05478         MOVWF BPFH,0
002442 0E80           05479         MOVLW 128
                      05480         F@CALL LCD@CRS
002448 0E04           05481         MOVLW ((STR@LB3 >> 8) & 255)
00244A 6EF7           05482         MOVWF TBLPTRLH,0
00244C 0E80           05483         MOVLW (STR@LB3 & 255)
00244E 6EF6           05484         MOVWF TBLPTRL,0
                      05485         F@CALL PRINT@MSTR
  00002454            05486 F1_000087 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Print At 2,1, Str UserIn
002454 0E80           05487         MOVLW 128
002456 6E01           05488         MOVWF BPFH,0
002458 0EC0           05489         MOVLW 192
                      05490         F@CALL LCD@CRS
00245E 0E04           05491         MOVLW 4
002460 6E04           05492         MOVWF GEN4,0
002462 0E03           05493         MOVLW 3
002464 6E1A           05494         MOVWF PP2H,0
002466 0ED0           05495         MOVLW 208
                      05496         F@CALL SB@STROUT
  0000246C            05497 F1_000088 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] GoSub WriteH
                      05498         F@CALL WRITEH
  00002470            05499 F1_000089 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Cls
                      05500         F@CALL LCD@CLS
  00002474            05501 F1_000090 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Print "History DONE!"
002474 0E04           05502         MOVLW ((STR@LB4 >> 8) & 255)
002476 6EF7           05503         MOVWF TBLPTRLH,0
002478 0E8C           05504         MOVLW (STR@LB4 & 255)
00247A 6EF6           05505         MOVWF TBLPTRL,0
                      05506         F@CALL PRINT@MSTR
  00002480            05507 F1_000091 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Pause 2000
002480 0E07           05508         MOVLW 7
002482 6E16           05509         MOVWF PP1H,0
002484 0ED0           05510         MOVLW 208
                      05511         F@CALL DLY@W
  0000248A            05512 F1_000092 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] GoTo Start2
                      05513         F@JUMP START2
                      05514         F@JUMP BC@LL212
002490                05515 BC@LL209
  00002490            05516 F1_000093 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Else
  00002490            05517 F1_000094 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Cls
                      05518         F@CALL LCD@CLS
  00002494            05519 F1_000095 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Print "No Match"
002494 0E04           05520         MOVLW ((STR@LB5 >> 8) & 255)
002496 6EF7           05521         MOVWF TBLPTRLH,0
002498 0E9A           05522         MOVLW (STR@LB5 & 255)
00249A 6EF6           05523         MOVWF TBLPTRL,0
                      05524         F@CALL PRINT@MSTR
  000024A0            05525 F1_000096 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Pause 2000
0024A0 0E07           05526         MOVLW 7
0024A2 6E16           05527         MOVWF PP1H,0
0024A4 0ED0           05528         MOVLW 208
                      05529         F@CALL DLY@W
  000024AA            05530 F1_000097 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] GoTo Start2
                      05531         F@JUMP START2
  000024AC            05532 F1_000098 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] EndIf
0024AC                05533 BC@LL212
  000024AC            05534 F1_000099 EQU $ ; in [V4.0 RFID 2ND GENERATION.BAS] Stop
0024AC                05535 PB@LB214
0024AC D7FF           05536         BRA PB@LB214
  000024AE            05537 F6_SOF EQU $ ; READ TAG.INC
0024AE                05538 READ_TAG
  000024AE            05539 F6_000012 EQU $ ; in [READ TAG.INC] Cls
                      05540         F@CALL LCD@CLS
  000024B2            05541 F6_000013 EQU $ ; in [READ TAG.INC] Print At 1,1, "ATTEMPTING TO"
0024B2 0E80           05542         MOVLW 128
0024B4 6E01           05543         MOVWF BPFH,0
0024B6 0E80           05544         MOVLW 128
                      05545         F@CALL LCD@CRS
0024BC 0E04           05546         MOVLW ((STR@LB6 >> 8) & 255)
0024BE 6EF7           05547         MOVWF TBLPTRLH,0
0024C0 0EA4           05548         MOVLW (STR@LB6 & 255)
0024C2 6EF6           05549         MOVWF TBLPTRL,0
                      05550         F@CALL PRINT@MSTR
  000024C8            05551 F6_000014 EQU $ ; in [READ TAG.INC] Print At 2,1, "READ TAG...."
0024C8 0E80           05552         MOVLW 128
0024CA 6E01           05553         MOVWF BPFH,0
0024CC 0EC0           05554         MOVLW 192
                      05555         F@CALL LCD@CRS
0024D2 0E04           05556         MOVLW ((STR@LB7 >> 8) & 255)
0024D4 6EF7           05557         MOVWF TBLPTRLH,0
0024D6 0EB2           05558         MOVLW (STR@LB7 & 255)
0024D8 6EF6           05559         MOVWF TBLPTRL,0
                      05560         F@CALL PRINT@MSTR
  000024DE            05561 F6_000016 EQU $ ; in [READ TAG.INC] Flag = 0                  'Used to indicate a good read
0024DE 0102           05562         MOVLB 2
  00000002            05563 RAM_BANK = 2
0024E0 93E5           05564         BCF _B#VR1,1
  000024E2            05565 F6_000017 EQU $ ; in [READ TAG.INC] High RFIDEnable                 ' Turn on RFID Reader
0024E2 9895           05566         BCF TRISD,4,0
0024E4 8883           05567         BSF PORTD,4,0
  000024E6            05568 F6_000018 EQU $ ; in [READ TAG.INC] Pause 10               'Time for Reader to settle
0024E6 0E0A           05569         MOVLW 10
                      05570         F@CALL DL@MS
  000024EC            05571 F6_000020 EQU $ ; in [READ TAG.INC] HSerIn 30000, Timeout, [Wait (0X82) ,Str TagIn]  'Wait for header (0X82)
0024EC 0E75           05572         MOVLW 117
0024EE 6E06           05573         MOVWF GENH,0
0024F0 0E30           05574         MOVLW 48
0024F2 6E02           05575         MOVWF GEN,0
0024F4                05576 PB@LB215
0024F4 0100           05577         MOVLB 0
  00000000            05578 RAM_BANK = 0
                      05579         F@CALL HRSIN2
0024FA A0D8           05580         BTFSS STATUS,0,0
                      05581         GO@TO TIMEOUT
002500 0882           05582         SUBLW 130
002502 A4D8           05583         BTFSS STATUS,2,0
                      05584         GO@TO PB@LB215
002506 EE03 F0C6      05585         LFSR 0,TAGIN
00250A 0E0A           05586         MOVLW 10
00250C 6EF3           05587         MOVWF PRODL,0
00250E                05588 PB@LB218
00250E 80D8           05589         BSF STATUS,0,0
                      05590         F@CALL HRSIN2
002514 A0D8           05591         BTFSS STATUS,0,0
                      05592         GO@TO TIMEOUT
00251A 6EEE           05593         MOVWF POSTINC0,0
00251C 2EF3           05594         DECFSZ PRODL,F,0
00251E D7F7           05595         BRA PB@LB218
  00002520            05596 F6_000022 EQU $ ; in [READ TAG.INC] HSerIn [CheckSum]                'Check Sum
                      05597         F@CALL HRSIN
002524 0103           05598         MOVLB 3
  00000003            05599 RAM_BANK = 3
002526 6FE5           05600         MOVWF CHECKSUM
  00002528            05601 F6_000023 EQU $ ; in [READ TAG.INC] HSerIn [ETX]                      'End of Transmission (Footer...Should be 0X83)
                      05602         F@CALL HRSIN
00252C 6FE4           05603         MOVWF ETX
  0000252E            05604 F6_000024 EQU $ ; in [READ TAG.INC] Low RFIDEnable                ' Turn off RFID Reader
00252E 9895           05605         BCF TRISD,4,0
002530 9883           05606         BCF PORTD,4,0
  00002532            05607 F6_000025 EQU $ ; in [READ TAG.INC] If ETX <> 0X83 Then  GoTo Read_Tag 'Tag Footer was not correct
002532 0E83           05608         MOVLW 131
002534 5DE4           05609         SUBWF ETX,W
002536 0100           05610         MOVLB 0
  00000000            05611 RAM_BANK = 0
002538 B4D8           05612         BTFSC STATUS,2,0
                      05613         GO@TO BC@LL219
                      05614         F@JUMP READ_TAG
002540                05615 BC@LL219
  00002540            05616 F6_000029 EQU $ ; in [READ TAG.INC] For Index = 0 To 9
002540 0103           05617         MOVLB 3
  00000003            05618 RAM_BANK = 3
002542 6BF0           05619         CLRF INDEX
002544                05620 FR@LB221
002544 0100           05621         MOVLB 0
  00000000            05622 RAM_BANK = 0
002546 0E0A           05623         MOVLW 10
002548 0103           05624         MOVLB 3
  00000003            05625 RAM_BANK = 3
00254A 5DF0           05626         SUBWF INDEX,W
00254C 0100           05627         MOVLB 0
  00000000            05628 RAM_BANK = 0
00254E B0D8           05629         BTFSC STATUS,0,0
                      05630         GO@TO NX@LB222
  00002554            05631 F6_000030 EQU $ ; in [READ TAG.INC] Select TagIn[Index]
002554 EE03 F0C6      05632         LFSR 0,TAGIN
002558 0103           05633         MOVLB 3
  00000003            05634 RAM_BANK = 3
00255A 51F0           05635         MOVF INDEX,W
00255C 50EB           05636         MOVF PLUSW0,W,0
00255E 6E0C           05637         MOVWF PBP#VAR1,0
  00002560            05638 F6_000031 EQU $ ; in [READ TAG.INC] Case 0XB0 To 0XB9
002560 0EB0           05639         MOVLW 176
002562 5C0C           05640         SUBWF PBP#VAR1,W,0
002564 0100           05641         MOVLB 0
  00000000            05642 RAM_BANK = 0
002566 A0D8           05643         BTFSS STATUS,0,0
                      05644         GO@TO BC@LL223
00256C 0EBA           05645         MOVLW 186
00256E 5C0C           05646         SUBWF PBP#VAR1,W,0
002570 B0D8           05647         BTFSC STATUS,0,0
                      05648         GO@TO BC@LL223
  00002576            05649 F6_000032 EQU $ ; in [READ TAG.INC] TV1 = TagIn[Index]
002576 EE03 F0C6      05650         LFSR 0,TAGIN
00257A 0103           05651         MOVLB 3
  00000003            05652 RAM_BANK = 3
00257C 51F0           05653         MOVF INDEX,W
00257E 50EB           05654         MOVF PLUSW0,W,0
002580 6FF2           05655         MOVWF TV1
  00002582            05656 F6_000033 EQU $ ; in [READ TAG.INC] ClearBit TV1 , 7
002582 9FF2           05657         BCF TV1,7
  00002584            05658 F6_000034 EQU $ ; in [READ TAG.INC] TagIn[Index] = TV1
002584 EE03 F0C6      05659         LFSR 0,TAGIN
002588 51F0           05660         MOVF INDEX,W
00258A C3F2 FFEB      05661         MOVFF TV1,PLUSW0
00258E 0100           05662         MOVLB 0
  00000000            05663 RAM_BANK = 0
                      05664         F@JUMP BC@LL222
002594                05665 BC@LL223
  00002594            05666 F6_000036 EQU $ ; in [READ TAG.INC] Case 0X81 To 0X86
002594 0E81           05667         MOVLW 129
002596 5C0C           05668         SUBWF PBP#VAR1,W,0
002598 A0D8           05669         BTFSS STATUS,0,0
                      05670         GO@TO BC@LL226
00259E 0E87           05671         MOVLW 135
0025A0 5C0C           05672         SUBWF PBP#VAR1,W,0
0025A2 B0D8           05673         BTFSC STATUS,0,0
                      05674         GO@TO BC@LL226
  000025A8            05675 F6_000037 EQU $ ; in [READ TAG.INC] TV1 = TagIn[Index]
0025A8 EE03 F0C6      05676         LFSR 0,TAGIN
0025AC 0103           05677         MOVLB 3
  00000003            05678 RAM_BANK = 3
0025AE 51F0           05679         MOVF INDEX,W
0025B0 50EB           05680         MOVF PLUSW0,W,0
0025B2 6FF2           05681         MOVWF TV1
  000025B4            05682 F6_000038 EQU $ ; in [READ TAG.INC] ClearBit TV1 , 7
0025B4 9FF2           05683         BCF TV1,7
  000025B6            05684 F6_000039 EQU $ ; in [READ TAG.INC] SetBit TV1, 6
0025B6 8DF2           05685         BSF TV1,6
  000025B8            05686 F6_000040 EQU $ ; in [READ TAG.INC] TagIn[Index] = TV1
0025B8 EE03 F0C6      05687         LFSR 0,TAGIN
0025BC 51F0           05688         MOVF INDEX,W
0025BE C3F2 FFEB      05689         MOVFF TV1,PLUSW0
  000025C2            05690 F6_000042 EQU $ ; in [READ TAG.INC] End Select
0025C2                05691 BC@LL226
0025C2 0100           05692         MOVLB 0
  00000000            05693 RAM_BANK = 0
0025C4                05694 BC@LL222
  000025C4            05695 F6_000043 EQU $ ; in [READ TAG.INC] Next Index
0025C4 0103           05696         MOVLB 3
  00000003            05697 RAM_BANK = 3
0025C6 2BF0           05698         INCF INDEX,F
0025C8 0100           05699         MOVLB 0
  00000000            05700 RAM_BANK = 0
0025CA A4D8           05701         BTFSS STATUS,2,0
                      05702         GO@TO FR@LB221
0025CE                05703 NX@LB222
  000025CE            05704 F6_000044 EQU $ ; in [READ TAG.INC] Cls
                      05705         F@CALL LCD@CLS
  000025D2            05706 F6_000045 EQU $ ; in [READ TAG.INC] Print "Thank You"
0025D2 0E04           05707         MOVLW ((STR@LB8 >> 8) & 255)
0025D4 6EF7           05708         MOVWF TBLPTRLH,0
0025D6 0EC0           05709         MOVLW (STR@LB8 & 255)
0025D8 6EF6           05710         MOVWF TBLPTRL,0
                      05711         F@CALL PRINT@MSTR
  000025DE            05712 F6_000046 EQU $ ; in [READ TAG.INC] Stop
0025DE                05713 PB@LB228
0025DE D7FF           05714         BRA PB@LB228
  000025E0            05715 F6_000047 EQU $ ; in [READ TAG.INC] Return
0025E0 0012           05716         RETURN 0
0025E2                05717 TIMEOUT
  000025E2            05718 F6_000049 EQU $ ; in [READ TAG.INC] Timeout: Low RFIDEnable       ' Turn off RFID Reader ..No Tag detected for 30 sec
0025E2 9895           05719         BCF TRISD,4,0
0025E4 9883           05720         BCF PORTD,4,0
  000025E6            05721 F6_000051 EQU $ ; in [READ TAG.INC] Cls
                      05722         F@CALL LCD@CLS
  000025EA            05723 F6_000052 EQU $ ; in [READ TAG.INC] Print At 1,1, "No Tag Detected"
0025EA 0E80           05724         MOVLW 128
0025EC 6E01           05725         MOVWF BPFH,0
0025EE 0E80           05726         MOVLW 128
                      05727         F@CALL LCD@CRS
0025F4 0E04           05728         MOVLW ((STR@LB9 >> 8) & 255)
0025F6 6EF7           05729         MOVWF TBLPTRLH,0
0025F8 0ECA           05730         MOVLW (STR@LB9 & 255)
0025FA 6EF6           05731         MOVWF TBLPTRL,0
                      05732         F@CALL PRINT@MSTR
  00002600            05733 F6_000053 EQU $ ; in [READ TAG.INC] DelayMS 2000
002600 0E07           05734         MOVLW 7
002602 6E16           05735         MOVWF PP1H,0
002604 0ED0           05736         MOVLW 208
                      05737         F@CALL DLY@W
  0000260A            05738 F6_000054 EQU $ ; in [READ TAG.INC] Sleep
00260A 0003           05739         SLEEP
  0000260C            05740 F6_EOF EQU $ ; READ TAG.INC
  0000260C            05741 F7_SOF EQU $ ; READ SD.INC
00260C                05742 READ_SD
  0000260C            05743 F7_000012 EQU $ ; in [READ SD.INC] MyCount = 0
00260C 0103           05744         MOVLB 3
  00000003            05745 RAM_BANK = 3
00260E 6BEF           05746         CLRF MYCOUNT
  00002610            05747 F7_000014 EQU $ ; in [READ SD.INC] For Index = 0 To 7
002610 6BF0           05748         CLRF INDEX
002612                05749 FR@LB229
002612 0100           05750         MOVLB 0
  00000000            05751 RAM_BANK = 0
002614 0E08           05752         MOVLW 8
002616 0103           05753         MOVLB 3
  00000003            05754 RAM_BANK = 3
002618 5DF0           05755         SUBWF INDEX,W
00261A 0100           05756         MOVLB 0
  00000000            05757 RAM_BANK = 0
00261C B0D8           05758         BTFSC STATUS,0,0
                      05759         GO@TO NX@LB230
  00002622            05760 F7_000015 EQU $ ; in [READ SD.INC] ModNum[Index] = CRead 0X9C40 + Index    'Read the Module number into Variable
002622 0E40           05761         MOVLW 64
002624 0103           05762         MOVLB 3
  00000003            05763 RAM_BANK = 3
002626 25F0           05764         ADDWF INDEX,W
002628 6AF7           05765         CLRF TBLPTRLH,0
00262A 6EF6           05766         MOVWF TBLPTRL,0
00262C 0E9C           05767         MOVLW 156
00262E 22F7           05768         ADDWFC TBLPTRLH,F,0
002630 6AA6           05769         CLRF EECON1,0
002632 8EA6           05770         BSF EECON1,EEPGD,0
002634 0008           05771         TBLRD*
002636 CFF5 F00C      05772         MOVFF TABLAT,PBP#VAR1
00263A EE03 F0E6      05773         LFSR 0,MODNUM
00263E 51F0           05774         MOVF INDEX,W
002640 C00C FFEB      05775         MOVFF PBP#VAR1,PLUSW0
  00002644            05776 F7_000016 EQU $ ; in [READ SD.INC] Next
002644 2BF0           05777         INCF INDEX,F
002646 0100           05778         MOVLB 0
  00000000            05779 RAM_BANK = 0
002648 A4D8           05780         BTFSS STATUS,2,0
                      05781         GO@TO FR@LB229
00264C                05782 NX@LB230
  0000264C            05783 F7_000018 EQU $ ; in [READ SD.INC] SD_File_Name = Str ModNum          'File Name, upper case only
00264C EE02 F091      05784         LFSR 0,SD_FILE_NAME
002650 EE13 F0E6      05785         LFSR 1,MODNUM
002654 0E07           05786         MOVLW 7
002656 6EF3           05787         MOVWF PRODL,0
002658 50E6           05788         MOVF POSTINC1,W,0
00265A E003           05789         BZ $ + 8
00265C 6EEE           05790         MOVWF POSTINC0,0
00265E 2EF3           05791         DECFSZ PRODL,F,0
002660 D7FB           05792         BRA $ - 8
002662 6AEF           05793         CLRF INDF0,0
  00002664            05794 F7_000019 EQU $ ; in [READ SD.INC] SD_File_Ext = "TXT"                'File Ext, upper case only!
002664 EE02 F09A      05795         LFSR 0,SD_FILE_EXT
002668 0E54           05796         MOVLW 84
00266A 6EEE           05797         MOVWF POSTINC0,0
00266C 0E58           05798         MOVLW 88
00266E 6EEE           05799         MOVWF POSTINC0,0
002670 0E54           05800         MOVLW 84
002672 6EEE           05801         MOVWF POSTINC0,0
002674 6AEF           05802         CLRF INDF0,0
  00002676            05803 F7_000020 EQU $ ; in [READ SD.INC] Response = SD_Open_File
  000A                05804  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_OPEN_FILE_RETURN=1,PRM_COUNT=0
                      05805         SD_OPEN_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05806  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_OPEN_FILE_RETURN=1,PRM_COUNT=0
  0000267E            05807 F7_000021 EQU $ ; in [READ SD.INC] If Response = 1 Then
00267E 0E01           05808         MOVLW 1
002680 0103           05809         MOVLB 3
  00000003            05810 RAM_BANK = 3
002682 5DED           05811         SUBWF RESPONSE,W
002684 0100           05812         MOVLB 0
  00000000            05813 RAM_BANK = 0
002686 A4D8           05814         BTFSS STATUS,2,0
                      05815         GO@TO BC@LL231
  0000268C            05816 F7_000022 EQU $ ; in [READ SD.INC] Cls
                      05817         F@CALL LCD@CLS
  00002690            05818 F7_000023 EQU $ ; in [READ SD.INC] Print "File not found"
002690 0E04           05819         MOVLW ((STR@LB10 >> 8) & 255)
002692 6EF7           05820         MOVWF TBLPTRLH,0
002694 0EDA           05821         MOVLW (STR@LB10 & 255)
002696 6EF6           05822         MOVWF TBLPTRL,0
                      05823         F@CALL PRINT@MSTR
  0000269C            05824 F7_000025 EQU $ ; in [READ SD.INC] Sleep
00269C 0003           05825         SLEEP
  0000269E            05826 F7_000026 EQU $ ; in [READ SD.INC] EndIf
00269E                05827 BC@LL231
  0000269E            05828 F7_000029 EQU $ ; in [READ SD.INC] User_Pointer = BUA                   '...we write the low and ..
00269E 0E9C           05829         MOVLW 156
0026A0 0103           05830         MOVLB 3
  00000003            05831 RAM_BANK = 3
0026A2 6FC5           05832         MOVWF USER_POINTERH
0026A4 0E50           05833         MOVLW 80
0026A6 6FC4           05834         MOVWF USER_POINTER
  000026A8            05835 F7_000030 EQU $ ; in [READ SD.INC] EWrite UPA_L, [User_Pointer.LowByte]  '...high bytes of the base user address (0X9C500...
0026A8 6AAA           05836         CLRF EEADRH,0
0026AA 6AA9           05837         CLRF EEADR,0
0026AC 51C4           05838         MOVF USER_POINTER,W
                      05839         F@CALL EE@WR@W
  000026B2            05840 F7_000031 EQU $ ; in [READ SD.INC] EWrite UPA_H, [User_Pointer.HighByte]  '...into the EEProm Pointer storage spot (0X000 and 0X001)
0026B2 6AAA           05841         CLRF EEADRH,0
0026B4 0E01           05842         MOVLW 1
0026B6 6EA9           05843         MOVWF EEADR,0
0026B8 51C5           05844         MOVF USER_POINTERH,W
                      05845         F@CALL EE@WR@W
  000026BE            05846 F7_000033 EQU $ ; in [READ SD.INC] Pause 2000
0026BE 0E07           05847         MOVLW 7
0026C0 6E16           05848         MOVWF PP1H,0
0026C2 0ED0           05849         MOVLW 208
                      05850         F@CALL DLY@W
  000026C8            05851 F7_000035 EQU $ ; in [READ SD.INC] While SD_EOF < 1
0026C8                05852 BC@LL232
0026C8 0100           05853         MOVLB 0
  00000000            05854 RAM_BANK = 0
0026CA 96D8           05855         BCF STATUS,3,0
0026CC 0102           05856         MOVLB 2
  00000002            05857 RAM_BANK = 2
0026CE B1E5           05858         BTFSC _B#VR1,0
0026D0 86D8           05859         BSF STATUS,3,0
0026D2 0100           05860         MOVLB 0
  00000000            05861 RAM_BANK = 0
                      05862         G@OTO BC@LL233
  000026DA            05863 F7_000037 EQU $ ; in [READ SD.INC] Response = SD_Read_Byte_From_File
  000A                05864  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      05865         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05866  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
  000026E2            05867 F7_000039 EQU $ ; in [READ SD.INC] If Response <> 0X5E Then       'first character for each user should be "^"
0026E2 0E5E           05868         MOVLW 94
0026E4 0103           05869         MOVLB 3
  00000003            05870 RAM_BANK = 3
0026E6 5DED           05871         SUBWF RESPONSE,W
0026E8 0100           05872         MOVLB 0
  00000000            05873 RAM_BANK = 0
0026EA B4D8           05874         BTFSC STATUS,2,0
                      05875         GO@TO BC@LL235
  000026F0            05876 F7_000040 EQU $ ; in [READ SD.INC] If Response = 0X40 Then
0026F0 0E40           05877         MOVLW 64
0026F2 0103           05878         MOVLB 3
  00000003            05879 RAM_BANK = 3
0026F4 5DED           05880         SUBWF RESPONSE,W
0026F6 0100           05881         MOVLB 0
  00000000            05882 RAM_BANK = 0
0026F8 A4D8           05883         BTFSS STATUS,2,0
                      05884         GO@TO BC@LL237
  000026FE            05885 F7_000042 EQU $ ; in [READ SD.INC] EWrite NOU, [MyCount]     'Write total # of Users to EEProm
0026FE 6AAA           05886         CLRF EEADRH,0
002700 0E02           05887         MOVLW 2
002702 6EA9           05888         MOVWF EEADR,0
002704 0103           05889         MOVLB 3
  00000003            05890 RAM_BANK = 3
002706 51EF           05891         MOVF MYCOUNT,W
                      05892         F@CALL EE@WR@W
  0000270C            05893 F7_000043 EQU $ ; in [READ SD.INC] GoTo Write_Manager     'We are finished with the User table
00270C 0100           05894         MOVLB 0
  00000000            05895 RAM_BANK = 0
                      05896         F@JUMP WRITE_MANAGER
  00002712            05897 F7_000044 EQU $ ; in [READ SD.INC] Return
002712 0012           05898         RETURN 0
  00002714            05899 F7_000045 EQU $ ; in [READ SD.INC] EndIf
002714                05900 BC@LL237
  00002714            05901 F7_000046 EQU $ ; in [READ SD.INC] Cls
                      05902         F@CALL LCD@CLS
  00002718            05903 F7_000047 EQU $ ; in [READ SD.INC] Print At 1,1, "No 5E (^)"
002718 0E80           05904         MOVLW 128
00271A 6E01           05905         MOVWF BPFH,0
00271C 0E80           05906         MOVLW 128
                      05907         F@CALL LCD@CRS
002722 0E04           05908         MOVLW ((STR@LB11 >> 8) & 255)
002724 6EF7           05909         MOVWF TBLPTRLH,0
002726 0EEA           05910         MOVLW (STR@LB11 & 255)
002728 6EF6           05911         MOVWF TBLPTRL,0
                      05912         F@CALL PRINT@MSTR
  0000272E            05913 F7_000048 EQU $ ; in [READ SD.INC] Print At 2,1, "Stopped!"
00272E 0E80           05914         MOVLW 128
002730 6E01           05915         MOVWF BPFH,0
002732 0EC0           05916         MOVLW 192
                      05917         F@CALL LCD@CRS
002738 0E04           05918         MOVLW ((STR@LB12 >> 8) & 255)
00273A 6EF7           05919         MOVWF TBLPTRLH,0
00273C 0EF4           05920         MOVLW (STR@LB12 & 255)
00273E 6EF6           05921         MOVWF TBLPTRL,0
                      05922         F@CALL PRINT@MSTR
  00002744            05923 F7_000049 EQU $ ; in [READ SD.INC] Pause 3000
002744 0E0B           05924         MOVLW 11
002746 6E16           05925         MOVWF PP1H,0
002748 0EB8           05926         MOVLW 184
                      05927         F@CALL DLY@W
  0000274E            05928 F7_000050 EQU $ ; in [READ SD.INC] SD_Close_File
  000A                05929  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      05930         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05931  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002752            05932 F7_000051 EQU $ ; in [READ SD.INC] Stop
002752                05933 PB@LB239
002752 D7FF           05934         BRA PB@LB239
  00002754            05935 F7_000052 EQU $ ; in [READ SD.INC] Sleep
002754 0003           05936         SLEEP
  00002756            05937 F7_000054 EQU $ ; in [READ SD.INC] Cls
                      05938         F@CALL LCD@CLS
  0000275A            05939 F7_000055 EQU $ ; in [READ SD.INC] Print Response,"^ Problem.."      '*******Eventually will flash LED *************
00275A 0103           05940         MOVLB 3
  00000003            05941 RAM_BANK = 3
00275C 51ED           05942         MOVF RESPONSE,W
                      05943         F@CALL PRINT
002762 0E04           05944         MOVLW ((STR@LB13 >> 8) & 255)
002764 6EF7           05945         MOVWF TBLPTRLH,0
002766 0EFE           05946         MOVLW (STR@LB13 & 255)
002768 6EF6           05947         MOVWF TBLPTRL,0
                      05948         F@CALL PRINT@MSTR
  0000276E            05949 F7_000056 EQU $ ; in [READ SD.INC] SD_Close_File
  000A                05950  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      05951         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05952  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002772            05953 F7_000057 EQU $ ; in [READ SD.INC] Pause 4000
002772 0E0F           05954         MOVLW 15
002774 6E16           05955         MOVWF PP1H,0
002776 0EA0           05956         MOVLW 160
                      05957         F@CALL DLY@W
  0000277C            05958 F7_000058 EQU $ ; in [READ SD.INC] Sleep
00277C 0003           05959         SLEEP
  0000277E            05960 F7_000059 EQU $ ; in [READ SD.INC] EndIf
00277E                05961 BC@LL235
00277E 0100           05962         MOVLB 0
  00000000            05963 RAM_BANK = 0
  00002780            05964 F7_000063 EQU $ ; in [READ SD.INC] For Index = 0 To 3                'next 3 characters will be the User ID number
002780 0103           05965         MOVLB 3
  00000003            05966 RAM_BANK = 3
002782 6BF0           05967         CLRF INDEX
002784                05968 FR@LB240
002784 0100           05969         MOVLB 0
  00000000            05970 RAM_BANK = 0
002786 0E04           05971         MOVLW 4
002788 0103           05972         MOVLB 3
  00000003            05973 RAM_BANK = 3
00278A 5DF0           05974         SUBWF INDEX,W
00278C 0100           05975         MOVLB 0
  00000000            05976 RAM_BANK = 0
00278E B0D8           05977         BTFSC STATUS,0,0
                      05978         GO@TO NX@LB241
  00002794            05979 F7_000064 EQU $ ; in [READ SD.INC] UTag[Index] = SD_Read_Byte_From_File
  000A                05980  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      05981         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05982  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
00279C EE03 F0D4      05983         LFSR 0,UTAG
0027A0 0103           05984         MOVLB 3
  00000003            05985 RAM_BANK = 3
0027A2 51F0           05986         MOVF INDEX,W
0027A4 C00C FFEB      05987         MOVFF PBP#VAR1,PLUSW0
  000027A8            05988 F7_000065 EQU $ ; in [READ SD.INC] Next
0027A8 2BF0           05989         INCF INDEX,F
0027AA 0100           05990         MOVLB 0
  00000000            05991 RAM_BANK = 0
0027AC A4D8           05992         BTFSS STATUS,2,0
                      05993         GO@TO FR@LB240
0027B0                05994 NX@LB241
  000027B0            05995 F7_000067 EQU $ ; in [READ SD.INC] Response = SD_Read_Byte_From_File
  000A                05996  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      05997         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05998  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
  000027B8            05999 F7_000069 EQU $ ; in [READ SD.INC] If Response <> 0X3A Then       'first character for each tag should be ":"
0027B8 0E3A           06000         MOVLW 58
0027BA 0103           06001         MOVLB 3
  00000003            06002 RAM_BANK = 3
0027BC 5DED           06003         SUBWF RESPONSE,W
0027BE 0100           06004         MOVLB 0
  00000000            06005 RAM_BANK = 0
0027C0 B4D8           06006         BTFSC STATUS,2,0
                      06007         GO@TO BC@LL242
  000027C6            06008 F7_000070 EQU $ ; in [READ SD.INC] Cls
                      06009         F@CALL LCD@CLS
  000027CA            06010 F7_000071 EQU $ ; in [READ SD.INC] Print At 1,1, "No 3A (:).."      '*******Eventually will flash LED *************
0027CA 0E80           06011         MOVLW 128
0027CC 6E01           06012         MOVWF BPFH,0
0027CE 0E80           06013         MOVLW 128
                      06014         F@CALL LCD@CRS
0027D4 0E05           06015         MOVLW ((STR@LB14 >> 8) & 255)
0027D6 6EF7           06016         MOVWF TBLPTRLH,0
0027D8 0E0A           06017         MOVLW (STR@LB14 & 255)
0027DA 6EF6           06018         MOVWF TBLPTRL,0
                      06019         F@CALL PRINT@MSTR
  000027E0            06020 F7_000072 EQU $ ; in [READ SD.INC] Print At 2,1, "Stopped!"
0027E0 0E80           06021         MOVLW 128
0027E2 6E01           06022         MOVWF BPFH,0
0027E4 0EC0           06023         MOVLW 192
                      06024         F@CALL LCD@CRS
0027EA 0E05           06025         MOVLW ((STR@LB15 >> 8) & 255)
0027EC 6EF7           06026         MOVWF TBLPTRLH,0
0027EE 0E16           06027         MOVLW (STR@LB15 & 255)
0027F0 6EF6           06028         MOVWF TBLPTRL,0
                      06029         F@CALL PRINT@MSTR
  000027F6            06030 F7_000073 EQU $ ; in [READ SD.INC] Pause 3000
0027F6 0E0B           06031         MOVLW 11
0027F8 6E16           06032         MOVWF PP1H,0
0027FA 0EB8           06033         MOVLW 184
                      06034         F@CALL DLY@W
  00002800            06035 F7_000074 EQU $ ; in [READ SD.INC] SD_Close_File
  000A                06036  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06037         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06038  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002804            06039 F7_000075 EQU $ ; in [READ SD.INC] Sleep
002804 0003           06040         SLEEP
  00002806            06041 F7_000076 EQU $ ; in [READ SD.INC] EndIf
002806                06042 BC@LL242
  00002806            06043 F7_000078 EQU $ ; in [READ SD.INC] For Index = 4 To 13                'next 9 characters will be the User Tag number
002806 0E04           06044         MOVLW 4
002808 0103           06045         MOVLB 3
  00000003            06046 RAM_BANK = 3
00280A 6FF0           06047         MOVWF INDEX
00280C                06048 FR@LB244
00280C 0100           06049         MOVLB 0
  00000000            06050 RAM_BANK = 0
00280E 0E0E           06051         MOVLW 14
002810 0103           06052         MOVLB 3
  00000003            06053 RAM_BANK = 3
002812 5DF0           06054         SUBWF INDEX,W
002814 0100           06055         MOVLB 0
  00000000            06056 RAM_BANK = 0
002816 B0D8           06057         BTFSC STATUS,0,0
                      06058         GO@TO NX@LB245
  0000281C            06059 F7_000079 EQU $ ; in [READ SD.INC] UTag[Index] = SD_Read_Byte_From_File
  000A                06060  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      06061         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06062  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
002824 EE03 F0D4      06063         LFSR 0,UTAG
002828 0103           06064         MOVLB 3
  00000003            06065 RAM_BANK = 3
00282A 51F0           06066         MOVF INDEX,W
00282C C00C FFEB      06067         MOVFF PBP#VAR1,PLUSW0
  00002830            06068 F7_000080 EQU $ ; in [READ SD.INC] Next
002830 2BF0           06069         INCF INDEX,F
002832 0100           06070         MOVLB 0
  00000000            06071 RAM_BANK = 0
002834 A4D8           06072         BTFSS STATUS,2,0
                      06073         GO@TO FR@LB244
002838                06074 NX@LB245
  00002838            06075 F7_000082 EQU $ ; in [READ SD.INC] UTag[14] = 0XFF   'Dummy byte
002838 0103           06076         MOVLB 3
  00000003            06077 RAM_BANK = 3
00283A 69E2           06078         SETF UTAG#14
  0000283C            06079 F7_000083 EQU $ ; in [READ SD.INC] UTag[15] = 0XFF   'Dummy byte
00283C 69E3           06080         SETF UTAG#15
  0000283E            06081 F7_000084 EQU $ ; in [READ SD.INC] For Index = 0 To 15
00283E 6BF0           06082         CLRF INDEX
002840                06083 FR@LB246
002840 0100           06084         MOVLB 0
  00000000            06085 RAM_BANK = 0
002842 0E10           06086         MOVLW 16
002844 0103           06087         MOVLB 3
  00000003            06088 RAM_BANK = 3
002846 5DF0           06089         SUBWF INDEX,W
002848 0100           06090         MOVLB 0
  00000000            06091 RAM_BANK = 0
00284A B0D8           06092         BTFSC STATUS,0,0
                      06093         GO@TO NX@LB247
  00002850            06094 F7_000085 EQU $ ; in [READ SD.INC] CWrite User_Pointer + Index, [UTag[Index]]    'Here we are writing 16 byte chunk to the program memory (Must be written in 8 or 16 byte chunks)
002850 0103           06095         MOVLB 3
  00000003            06096 RAM_BANK = 3
002852 51F0           06097         MOVF INDEX,W
002854 25C4           06098         ADDWF USER_POINTER,W
002856 6EF6           06099         MOVWF TBLPTRL,0
002858 0E00           06100         MOVLW 0
00285A 21C5           06101         ADDWFC USER_POINTERH,W
00285C 6EF7           06102         MOVWF TBLPTRLH,0
00285E EE03 F0D4      06103         LFSR 0,UTAG
002862 51F0           06104         MOVF INDEX,W
002864 50EB           06105         MOVF PLUSW0,W,0
                      06106         F@CALL C@WRITE
  0000286A            06107 F7_000086 EQU $ ; in [READ SD.INC] Next
00286A 2BF0           06108         INCF INDEX,F
00286C 0100           06109         MOVLB 0
  00000000            06110 RAM_BANK = 0
00286E A4D8           06111         BTFSS STATUS,2,0
                      06112         GO@TO FR@LB246
002872                06113 NX@LB247
  00002872            06114 F7_000087 EQU $ ; in [READ SD.INC] User_Pointer = User_Pointer + 16      'Here we will update the user pointer to reflect..
002872 0E10           06115         MOVLW 16
002874 0103           06116         MOVLB 3
  00000003            06117 RAM_BANK = 3
002876 27C4           06118         ADDWF USER_POINTER,F
002878 0E00           06119         MOVLW 0
00287A 23C5           06120         ADDWFC USER_POINTERH,F
  0000287C            06121 F7_000088 EQU $ ; in [READ SD.INC] EWrite UPA_L, [User_Pointer.LowByte]   'our progress so far. If a problem arises then we have not lost all
00287C 6AAA           06122         CLRF EEADRH,0
00287E 6AA9           06123         CLRF EEADR,0
002880 51C4           06124         MOVF USER_POINTER,W
                      06125         F@CALL EE@WR@W
  00002886            06126 F7_000089 EQU $ ; in [READ SD.INC] EWrite UPA_H, [User_Pointer.HighByte]
002886 6AAA           06127         CLRF EEADRH,0
002888 0E01           06128         MOVLW 1
00288A 6EA9           06129         MOVWF EEADR,0
00288C 51C5           06130         MOVF USER_POINTERH,W
                      06131         F@CALL EE@WR@W
  00002892            06132 F7_000090 EQU $ ; in [READ SD.INC] Inc MyCount    'Keeps track of how many Users we have added
002892 2BEF           06133         INCF MYCOUNT,F
  00002894            06134 F7_000092 EQU $ ; in [READ SD.INC] Wend
002894 0100           06135         MOVLB 0
  00000000            06136 RAM_BANK = 0
                      06137         F@JUMP BC@LL232
002898                06138 BC@LL233
  00002898            06139 F7_EOF EQU $ ; READ SD.INC
  00002898            06140 F8_SOF EQU $ ; WRITE SD.INC
002898                06141 WRITE_SD
  00002898            06142 F8_000016 EQU $ ; in [WRITE SD.INC] SD_File_Name = Str ModNum + "W"      'Module File Name with 'W' appended to differeniate from Input file, upper case only!
002898 EE02 F091      06143         LFSR 0,SD_FILE_NAME
00289C EE13 F0E6      06144         LFSR 1,MODNUM
0028A0 0E07           06145         MOVLW 7
0028A2 6EF3           06146         MOVWF PRODL,0
0028A4 50E6           06147         MOVF POSTINC1,W,0
0028A6 E003           06148         BZ $ + 8
0028A8 6EEE           06149         MOVWF POSTINC0,0
0028AA 2EF3           06150         DECFSZ PRODL,F,0
0028AC D7FB           06151         BRA $ - 8
0028AE 0E57           06152         MOVLW 87
0028B0 6EEE           06153         MOVWF POSTINC0,0
0028B2 6AEF           06154         CLRF INDF0,0
  000028B4            06155 F8_000017 EQU $ ; in [WRITE SD.INC] SD_File_Ext = "TXT"                  'File Ext, upper case only!
0028B4 EE02 F09A      06156         LFSR 0,SD_FILE_EXT
0028B8 0E54           06157         MOVLW 84
0028BA 6EEE           06158         MOVWF POSTINC0,0
0028BC 0E58           06159         MOVLW 88
0028BE 6EEE           06160         MOVWF POSTINC0,0
0028C0 0E54           06161         MOVLW 84
0028C2 6EEE           06162         MOVWF POSTINC0,0
0028C4 6AEF           06163         CLRF INDF0,0
  000028C6            06164 F8_000018 EQU $ ; in [WRITE SD.INC] Response = SD_Check_For_File         'Check if file exists already
  000A                06165  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_CHECK_FOR_FILE_RETURN=1,PRM_COUNT=0
                      06166         SD_CHECK_FOR_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06167  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_CHECK_FOR_FILE_RETURN=1,PRM_COUNT=0
  000028CE            06168 F8_000019 EQU $ ; in [WRITE SD.INC] If Response = 0 Then
0028CE 0103           06169         MOVLB 3
  00000003            06170 RAM_BANK = 3
0028D0 53ED           06171         MOVF RESPONSE,F
0028D2 0100           06172         MOVLB 0
  00000000            06173 RAM_BANK = 0
0028D4 A4D8           06174         BTFSS STATUS,2,0
                      06175         GO@TO BC@LL248
  000028DA            06176 F8_000020 EQU $ ; in [WRITE SD.INC] SD_Delete_File               ' If file exists then delete it........
  000A                06177  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
                      06178         SD_DELETE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06179  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
  000028DE            06180 F8_000021 EQU $ ; in [WRITE SD.INC] EndIf
0028DE                06181 BC@LL248
  000028DE            06182 F8_000022 EQU $ ; in [WRITE SD.INC] SD_New_File     'Create new file
  000A                06183  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
                      06184         SD_NEW_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06185  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
  000028E2            06186 F8_000023 EQU $ ; in [WRITE SD.INC] SD_Close_File   'Close file now that is has been created... Only one file at a time can be opened
  000A                06187  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06188         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06189  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  000028E6            06190 F8_000025 EQU $ ; in [WRITE SD.INC] SD_File_Name = Str ModNum + "W"      'Module File Name with 'W' appended to differeniate from Input file, upper case only!
0028E6 EE02 F091      06191         LFSR 0,SD_FILE_NAME
0028EA EE13 F0E6      06192         LFSR 1,MODNUM
0028EE 0E07           06193         MOVLW 7
0028F0 6EF3           06194         MOVWF PRODL,0
0028F2 50E6           06195         MOVF POSTINC1,W,0
0028F4 E003           06196         BZ $ + 8
0028F6 6EEE           06197         MOVWF POSTINC0,0
0028F8 2EF3           06198         DECFSZ PRODL,F,0
0028FA D7FB           06199         BRA $ - 8
0028FC 0E57           06200         MOVLW 87
0028FE 6EEE           06201         MOVWF POSTINC0,0
002900 6AEF           06202         CLRF INDF0,0
  00002902            06203 F8_000026 EQU $ ; in [WRITE SD.INC] SD_File_Ext = "TXT"                'File Ext, upper case only!
002902 EE02 F09A      06204         LFSR 0,SD_FILE_EXT
002906 0E54           06205         MOVLW 84
002908 6EEE           06206         MOVWF POSTINC0,0
00290A 0E58           06207         MOVLW 88
00290C 6EEE           06208         MOVWF POSTINC0,0
00290E 0E54           06209         MOVLW 84
002910 6EEE           06210         MOVWF POSTINC0,0
002912 6AEF           06211         CLRF INDF0,0
  00002914            06212 F8_000027 EQU $ ; in [WRITE SD.INC] Response = SD_Append_File     'Here we are going to 'Append' the Output file with data so far
  000A                06213  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_APPEND_FILE_RETURN=1,PRM_COUNT=0
                      06214         SD_APPEND_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06215  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_APPEND_FILE_RETURN=1,PRM_COUNT=0
  0000291C            06216 F8_000028 EQU $ ; in [WRITE SD.INC] If Response = 1 Then
00291C 0E01           06217         MOVLW 1
00291E 0103           06218         MOVLB 3
  00000003            06219 RAM_BANK = 3
002920 5DED           06220         SUBWF RESPONSE,W
002922 0100           06221         MOVLB 0
  00000000            06222 RAM_BANK = 0
002924 A4D8           06223         BTFSS STATUS,2,0
                      06224         GO@TO BC@LL250
  0000292A            06225 F8_000029 EQU $ ; in [WRITE SD.INC] Cls
                      06226         F@CALL LCD@CLS
  0000292E            06227 F8_000030 EQU $ ; in [WRITE SD.INC] Print "File not found"
00292E 0E05           06228         MOVLW ((STR@LB16 >> 8) & 255)
002930 6EF7           06229         MOVWF TBLPTRLH,0
002932 0E20           06230         MOVLW (STR@LB16 & 255)
002934 6EF6           06231         MOVWF TBLPTRL,0
                      06232         F@CALL PRINT@MSTR
  0000293A            06233 F8_000032 EQU $ ; in [WRITE SD.INC] Sleep
00293A 0003           06234         SLEEP
  0000293C            06235 F8_000033 EQU $ ; in [WRITE SD.INC] EndIf
00293C                06236 BC@LL250
00293C                06237 CLOSE_FILE
  0000293C            06238 F8_000039 EQU $ ; in [WRITE SD.INC] SD_Close_File                                           'Close file
  000A                06239  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06240         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06241  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002940            06242 F8_000040 EQU $ ; in [WRITE SD.INC] Return
002940 0012           06243         RETURN 0
  00002942            06244 F8_EOF EQU $ ; WRITE SD.INC
  00002942            06245 F9_SOF EQU $ ; INIT SD.INC
002942                06246 INIT_SD
  00002942            06247 F9_000013 EQU $ ; in [INIT SD.INC] For Index = 0 To 2   'We allow 3 tries to intialize the SD card
002942 0103           06248         MOVLB 3
  00000003            06249 RAM_BANK = 3
002944 6BF0           06250         CLRF INDEX
002946                06251 FR@LB252
002946 0100           06252         MOVLB 0
  00000000            06253 RAM_BANK = 0
002948 0E03           06254         MOVLW 3
00294A 0103           06255         MOVLB 3
  00000003            06256 RAM_BANK = 3
00294C 5DF0           06257         SUBWF INDEX,W
00294E 0100           06258         MOVLB 0
  00000000            06259 RAM_BANK = 0
002950 B0D8           06260         BTFSC STATUS,0,0
                      06261         GO@TO NX@LB253
  00002956            06262 F9_000015 EQU $ ; in [INIT SD.INC] Response = SD_Init_FS_MSSP SD_SPI_FOSC_04
  0008                06263  VARIABLE PRM_1=8
  0000                06264  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06265  VARIABLE SD_INIT_FS_MSSP_LST_PRM=0
  000A                06266  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_INIT_FS_MSSP_RETURN=1,PRM_COUNT=1
                      06267         SD_INIT_FS_MSSP 0,0,0,0,0,0,0,0,0,0
  000A                06268  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_INIT_FS_MSSP_RETURN=1,PRM_COUNT=1
  0008                06269  VARIABLE PRM_1=8
  0000                06270  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06271  VARIABLE SD_INIT_FS_MSSP_LST_PRM=0
  00002970            06272 F9_000016 EQU $ ; in [INIT SD.INC] If Response = 0 Then
002970 0103           06273         MOVLB 3
  00000003            06274 RAM_BANK = 3
002972 53ED           06275         MOVF RESPONSE,F
002974 0100           06276         MOVLB 0
  00000000            06277 RAM_BANK = 0
002976 A4D8           06278         BTFSS STATUS,2,0
                      06279         GO@TO BC@LL254
  0000297C            06280 F9_000017 EQU $ ; in [INIT SD.INC] Return
00297C 0012           06281         RETURN 0
  0000297E            06282 F9_000018 EQU $ ; in [INIT SD.INC] EndIf
00297E                06283 BC@LL254
  0000297E            06284 F9_000019 EQU $ ; in [INIT SD.INC] Next Index     'Next try to intitialize card
00297E 0103           06285         MOVLB 3
  00000003            06286 RAM_BANK = 3
002980 2BF0           06287         INCF INDEX,F
002982 0100           06288         MOVLB 0
  00000000            06289 RAM_BANK = 0
002984 A4D8           06290         BTFSS STATUS,2,0
                      06291         GO@TO FR@LB252
002988                06292 NX@LB253
  00002988            06293 F9_000022 EQU $ ; in [INIT SD.INC] Cls
                      06294         F@CALL LCD@CLS
  0000298C            06295 F9_000023 EQU $ ; in [INIT SD.INC] Print "No Init!"     'Eventually we will flash a LED here to tell operator the Init failed
00298C 0E05           06296         MOVLW ((STR@LB17 >> 8) & 255)
00298E 6EF7           06297         MOVWF TBLPTRLH,0
002990 0E30           06298         MOVLW (STR@LB17 & 255)
002992 6EF6           06299         MOVWF TBLPTRL,0
                      06300         F@CALL PRINT@MSTR
  00002998            06301 F9_000024 EQU $ ; in [INIT SD.INC] Pause 3000
002998 0E0B           06302         MOVLW 11
00299A 6E16           06303         MOVWF PP1H,0
00299C 0EB8           06304         MOVLW 184
                      06305         F@CALL DLY@W
  000029A2            06306 F9_000025 EQU $ ; in [INIT SD.INC] Return
0029A2 0012           06307         RETURN 0
  000029A4            06308 F9_EOF EQU $ ; INIT SD.INC
  000029A4            06309 F10_SOF EQU $ ; CHECK TAG.INC
0029A4                06310 CHECK_TAG
  000029A4            06311 F10_000004 EQU $ ; in [CHECK TAG.INC] Check_Tag:    Response = 0        'Process will set Response to 1 if Tag is found
0029A4 0103           06312         MOVLB 3
  00000003            06313 RAM_BANK = 3
0029A6 6BED           06314         CLRF RESPONSE
  000029A8            06315 F10_000005 EQU $ ; in [CHECK TAG.INC] If User_Pointer = BUA Then    'there are no User entries in the table
0029A8 51C5           06316         MOVF USER_POINTERH,W
0029AA 0A9C           06317         XORLW 156
0029AC 0E50           06318         MOVLW 80
0029AE B4D8           06319         BTFSC STATUS,2,0
0029B0 19C4           06320         XORWF USER_POINTER,W
0029B2 0100           06321         MOVLB 0
  00000000            06322 RAM_BANK = 0
0029B4 A4D8           06323         BTFSS STATUS,2,0
                      06324         GO@TO BC@LL256
  000029BA            06325 F10_000006 EQU $ ; in [CHECK TAG.INC] Cls
                      06326         F@CALL LCD@CLS
  000029BE            06327 F10_000007 EQU $ ; in [CHECK TAG.INC] Print "No Users"
0029BE 0E05           06328         MOVLW ((STR@LB18 >> 8) & 255)
0029C0 6EF7           06329         MOVWF TBLPTRLH,0
0029C2 0E3A           06330         MOVLW (STR@LB18 & 255)
0029C4 6EF6           06331         MOVWF TBLPTRL,0
                      06332         F@CALL PRINT@MSTR
  000029CA            06333 F10_000008 EQU $ ; in [CHECK TAG.INC] Pause 2000
0029CA 0E07           06334         MOVLW 7
0029CC 6E16           06335         MOVWF PP1H,0
0029CE 0ED0           06336         MOVLW 208
                      06337         F@CALL DLY@W
  000029D4            06338 F10_000009 EQU $ ; in [CHECK TAG.INC] Return
0029D4 0012           06339         RETURN 0
  000029D6            06340 F10_000010 EQU $ ; in [CHECK TAG.INC] EndIf
0029D6                06341 BC@LL256
  000029D6            06342 F10_000011 EQU $ ; in [CHECK TAG.INC] Word_Var = BUA   ' Start search in first user memory spot
0029D6 0E9C           06343         MOVLW 156
0029D8 0103           06344         MOVLB 3
  00000003            06345 RAM_BANK = 3
0029DA 6FF4           06346         MOVWF WORD_VARH
0029DC 0E50           06347         MOVLW 80
0029DE 6FF3           06348         MOVWF WORD_VAR
0029E0                06349 NEXTTAG
0029E0 0100           06350         MOVLB 0
  00000000            06351 RAM_BANK = 0
  000029E2            06352 F10_000012 EQU $ ; in [CHECK TAG.INC] NextTag:  Index = 0
0029E2 0103           06353         MOVLB 3
  00000003            06354 RAM_BANK = 3
0029E4 6BF0           06355         CLRF INDEX
  000029E6            06356 F10_000013 EQU $ ; in [CHECK TAG.INC] Response = 0     'Process will set Flag to 1 if Tag is found
0029E6 6BED           06357         CLRF RESPONSE
  000029E8            06358 F10_000014 EQU $ ; in [CHECK TAG.INC] Repeat      'Repeat until all Tag digits are checked
0029E8                06359 BC@LL257
0029E8 0100           06360         MOVLB 0
  00000000            06361 RAM_BANK = 0
  000029EA            06362 F10_000015 EQU $ ; in [CHECK TAG.INC] TV1 = CRead TagOffset + Word_Var + Index   'TagOffset jumps over User #
0029EA 0E04           06363         MOVLW 4
0029EC 0103           06364         MOVLB 3
  00000003            06365 RAM_BANK = 3
0029EE 25F3           06366         ADDWF WORD_VAR,W
0029F0 6E23           06367         MOVWF PP7,0
0029F2 0E00           06368         MOVLW 0
0029F4 21F4           06369         ADDWFC WORD_VARH,W
0029F6 6E24           06370         MOVWF PP7H,0
0029F8 51F0           06371         MOVF INDEX,W
0029FA 2423           06372         ADDWF PP7,W,0
0029FC 6EF6           06373         MOVWF TBLPTRL,0
0029FE 0E00           06374         MOVLW 0
002A00 2024           06375         ADDWFC PP7H,W,0
002A02 6EF7           06376         MOVWF TBLPTRLH,0
002A04 6AA6           06377         CLRF EECON1,0
002A06 8EA6           06378         BSF EECON1,EEPGD,0
002A08 0008           06379         TBLRD*
002A0A CFF5 F3F2      06380         MOVFF TABLAT,TV1
  00002A0E            06381 F10_000016 EQU $ ; in [CHECK TAG.INC] If TV1 = TagIn[Index] Then
002A0E EE03 F0C6      06382         LFSR 0,TAGIN
002A12 51F0           06383         MOVF INDEX,W
002A14 50EB           06384         MOVF PLUSW0,W,0
002A16 6E0C           06385         MOVWF PBP#VAR1,0
002A18 51F2           06386         MOVF TV1,W
002A1A 5C0C           06387         SUBWF PBP#VAR1,W,0
002A1C 0100           06388         MOVLB 0
  00000000            06389 RAM_BANK = 0
002A1E A4D8           06390         BTFSS STATUS,2,0
                      06391         GO@TO BC@LL260
  00002A24            06392 F10_000017 EQU $ ; in [CHECK TAG.INC] Response = 1      'Digits Match
002A24 0E01           06393         MOVLW 1
002A26 0103           06394         MOVLB 3
  00000003            06395 RAM_BANK = 3
002A28 6FED           06396         MOVWF RESPONSE
  00002A2A            06397 F10_000018 EQU $ ; in [CHECK TAG.INC] Inc Index      'Check Next Digit
002A2A 2BF0           06398         INCF INDEX,F
002A2C 0100           06399         MOVLB 0
  00000000            06400 RAM_BANK = 0
                      06401         F@JUMP BC@LL261
002A32                06402 BC@LL260
  00002A32            06403 F10_000019 EQU $ ; in [CHECK TAG.INC] Else
  00002A32            06404 F10_000020 EQU $ ; in [CHECK TAG.INC] Response = 0     'Digit does not match, therefore
002A32 0103           06405         MOVLB 3
  00000003            06406 RAM_BANK = 3
002A34 6BED           06407         CLRF RESPONSE
  00002A36            06408 F10_000021 EQU $ ; in [CHECK TAG.INC] Index = 10  'we are finished with this Tag
002A36 0E0A           06409         MOVLW 10
002A38 6FF0           06410         MOVWF INDEX
  00002A3A            06411 F10_000022 EQU $ ; in [CHECK TAG.INC] EndIf
002A3A                06412 BC@LL261
002A3A 0100           06413         MOVLB 0
  00000000            06414 RAM_BANK = 0
  00002A3C            06415 F10_000023 EQU $ ; in [CHECK TAG.INC] Until Index > 9
002A3C 0E0A           06416         MOVLW 10
002A3E 0103           06417         MOVLB 3
  00000003            06418 RAM_BANK = 3
002A40 5DF0           06419         SUBWF INDEX,W
002A42 0100           06420         MOVLB 0
  00000000            06421 RAM_BANK = 0
002A44 A0D8           06422         BTFSS STATUS,0,0
                      06423         GO@TO BC@LL257
002A48                06424 BC@LL258
  00002A48            06425 F10_000024 EQU $ ; in [CHECK TAG.INC] If Response = 1 Then      'Write User of Tag into UserIn variable array
002A48 0E01           06426         MOVLW 1
002A4A 0103           06427         MOVLB 3
  00000003            06428 RAM_BANK = 3
002A4C 5DED           06429         SUBWF RESPONSE,W
002A4E 0100           06430         MOVLB 0
  00000000            06431 RAM_BANK = 0
002A50 A4D8           06432         BTFSS STATUS,2,0
                      06433         GO@TO BC@LL263
  00002A56            06434 F10_000025 EQU $ ; in [CHECK TAG.INC] For Index = 0 To 3
002A56 0103           06435         MOVLB 3
  00000003            06436 RAM_BANK = 3
002A58 6BF0           06437         CLRF INDEX
002A5A                06438 FR@LB265
002A5A 0100           06439         MOVLB 0
  00000000            06440 RAM_BANK = 0
002A5C 0E04           06441         MOVLW 4
002A5E 0103           06442         MOVLB 3
  00000003            06443 RAM_BANK = 3
002A60 5DF0           06444         SUBWF INDEX,W
002A62 0100           06445         MOVLB 0
  00000000            06446 RAM_BANK = 0
002A64 B0D8           06447         BTFSC STATUS,0,0
                      06448         GO@TO NX@LB266
  00002A6A            06449 F10_000026 EQU $ ; in [CHECK TAG.INC] UserIn[Index] = CRead Word_Var + Index
002A6A 0103           06450         MOVLB 3
  00000003            06451 RAM_BANK = 3
002A6C 51F0           06452         MOVF INDEX,W
002A6E 25F3           06453         ADDWF WORD_VAR,W
002A70 6EF6           06454         MOVWF TBLPTRL,0
002A72 0E00           06455         MOVLW 0
002A74 21F4           06456         ADDWFC WORD_VARH,W
002A76 6EF7           06457         MOVWF TBLPTRLH,0
002A78 6AA6           06458         CLRF EECON1,0
002A7A 8EA6           06459         BSF EECON1,EEPGD,0
002A7C 0008           06460         TBLRD*
002A7E CFF5 F00C      06461         MOVFF TABLAT,PBP#VAR1
002A82 EE03 F0D0      06462         LFSR 0,USERIN
002A86 51F0           06463         MOVF INDEX,W
002A88 C00C FFEB      06464         MOVFF PBP#VAR1,PLUSW0
  00002A8C            06465 F10_000027 EQU $ ; in [CHECK TAG.INC] Next
002A8C 2BF0           06466         INCF INDEX,F
002A8E 0100           06467         MOVLB 0
  00000000            06468 RAM_BANK = 0
002A90 A4D8           06469         BTFSS STATUS,2,0
                      06470         GO@TO FR@LB265
002A94                06471 NX@LB266
  00002A94            06472 F10_000028 EQU $ ; in [CHECK TAG.INC] Return
002A94 0012           06473         RETURN 0
  00002A96            06474 F10_000029 EQU $ ; in [CHECK TAG.INC] EndIf
002A96                06475 BC@LL263
  00002A96            06476 F10_000031 EQU $ ; in [CHECK TAG.INC] Word_Var = Word_Var + 16
002A96 0E10           06477         MOVLW 16
002A98 0103           06478         MOVLB 3
  00000003            06479 RAM_BANK = 3
002A9A 27F3           06480         ADDWF WORD_VAR,F
002A9C 0E00           06481         MOVLW 0
002A9E 23F4           06482         ADDWFC WORD_VARH,F
  00002AA0            06483 F10_000032 EQU $ ; in [CHECK TAG.INC] If Word_Var = User_Pointer Then Return
002AA0 51C5           06484         MOVF USER_POINTERH,W
002AA2 5DF4           06485         SUBWF WORD_VARH,W
002AA4 0100           06486         MOVLB 0
  00000000            06487 RAM_BANK = 0
002AA6 A4D8           06488         BTFSS STATUS,2,0
                      06489         GO@TO BC@LL267
002AAC 0103           06490         MOVLB 3
  00000003            06491 RAM_BANK = 3
002AAE 51C4           06492         MOVF USER_POINTER,W
002AB0 5DF3           06493         SUBWF WORD_VAR,W
002AB2 0100           06494         MOVLB 0
  00000000            06495 RAM_BANK = 0
002AB4 A4D8           06496         BTFSS STATUS,2,0
                      06497         GO@TO BC@LL267
002ABA 0012           06498         RETURN 0
002ABC                06499 BC@LL267
  00002ABC            06500 F10_000034 EQU $ ; in [CHECK TAG.INC] GoTo NextTag
                      06501         F@JUMP NEXTTAG
  00002ABE            06502 F10_EOF EQU $ ; CHECK TAG.INC
  00002ABE            06503 F11_SOF EQU $ ; WRITE_U_H.INC
002ABE                06504 WRITEH
  00002ABE            06505 F11_000012 EQU $ ; in [WRITE_U_H.INC] For Index = num_UH To 0 Step -1          'Here we move all old history down one notch to ready 1st place for new entry
002ABE 0EC8           06506         MOVLW 200
002AC0 0103           06507         MOVLB 3
  00000003            06508 RAM_BANK = 3
002AC2 6FF0           06509         MOVWF INDEX
002AC4                06510 FR@LB269
002AC4 0100           06511         MOVLB 0
  00000000            06512 RAM_BANK = 0
  00002AC6            06513 F11_000013 EQU $ ; in [WRITE_U_H.INC] For Index2 = 0 To 3
002AC6 0103           06514         MOVLB 3
  00000003            06515 RAM_BANK = 3
002AC8 6BF1           06516         CLRF INDEX2
002ACA                06517 FR@LB271
002ACA 0100           06518         MOVLB 0
  00000000            06519 RAM_BANK = 0
002ACC 0E04           06520         MOVLW 4
002ACE 0103           06521         MOVLB 3
  00000003            06522 RAM_BANK = 3
002AD0 5DF1           06523         SUBWF INDEX2,W
002AD2 0100           06524         MOVLB 0
  00000000            06525 RAM_BANK = 0
002AD4 B0D8           06526         BTFSC STATUS,0,0
                      06527         GO@TO NX@LB272
  00002ADA            06528 F11_000014 EQU $ ; in [WRITE_U_H.INC] TV1 = ERead (Index * 4) + Index2 + UHA
002ADA 6A24           06529         CLRF PP7H,0
002ADC C3F0 F023      06530         MOVFF INDEX,PP7
002AE0 90D8           06531         BCF STATUS,0,0
002AE2 3623           06532         RLCF PP7,F,0
002AE4 3624           06533         RLCF PP7H,F,0
002AE6 90D8           06534         BCF STATUS,0,0
002AE8 3623           06535         RLCF PP7,F,0
002AEA 3624           06536         RLCF PP7H,F,0
002AEC 0103           06537         MOVLB 3
  00000003            06538 RAM_BANK = 3
002AEE 51F1           06539         MOVF INDEX2,W
002AF0 2623           06540         ADDWF PP7,F,0
002AF2 0E00           06541         MOVLW 0
002AF4 2224           06542         ADDWFC PP7H,F,0
002AF6 0E10           06543         MOVLW 16
002AF8 2423           06544         ADDWF PP7,W,0
002AFA 6EA9           06545         MOVWF EEADR,0
002AFC 0E00           06546         MOVLW 0
002AFE 2024           06547         ADDWFC PP7H,W,0
002B00 6EAA           06548         MOVWF EEADRH,0
                      06549         F@CALL EE@RD@W
002B06 6FF2           06550         MOVWF TV1
  00002B08            06551 F11_000015 EQU $ ; in [WRITE_U_H.INC] EWrite (Index * 4) + Index2 + 4 + UHA,[TV1]
002B08 6A24           06552         CLRF PP7H,0
002B0A C3F0 F023      06553         MOVFF INDEX,PP7
002B0E 90D8           06554         BCF STATUS,0,0
002B10 3623           06555         RLCF PP7,F,0
002B12 3624           06556         RLCF PP7H,F,0
002B14 90D8           06557         BCF STATUS,0,0
002B16 3623           06558         RLCF PP7,F,0
002B18 3624           06559         RLCF PP7H,F,0
002B1A 51F1           06560         MOVF INDEX2,W
002B1C 2623           06561         ADDWF PP7,F,0
002B1E 0E00           06562         MOVLW 0
002B20 2224           06563         ADDWFC PP7H,F,0
002B22 0E04           06564         MOVLW 4
002B24 2623           06565         ADDWF PP7,F,0
002B26 0E00           06566         MOVLW 0
002B28 2224           06567         ADDWFC PP7H,F,0
002B2A 0E10           06568         MOVLW 16
002B2C 2423           06569         ADDWF PP7,W,0
002B2E 6EA9           06570         MOVWF EEADR,0
002B30 0E00           06571         MOVLW 0
002B32 2024           06572         ADDWFC PP7H,W,0
002B34 6EAA           06573         MOVWF EEADRH,0
002B36 51F2           06574         MOVF TV1,W
                      06575         F@CALL EE@WR@W
  00002B3C            06576 F11_000016 EQU $ ; in [WRITE_U_H.INC] WOrd_Var = (Index * 4) + Index2 + 4 + UHA
002B3C 6A24           06577         CLRF PP7H,0
002B3E C3F0 F023      06578         MOVFF INDEX,PP7
002B42 90D8           06579         BCF STATUS,0,0
002B44 3623           06580         RLCF PP7,F,0
002B46 3624           06581         RLCF PP7H,F,0
002B48 90D8           06582         BCF STATUS,0,0
002B4A 3623           06583         RLCF PP7,F,0
002B4C 3624           06584         RLCF PP7H,F,0
002B4E 51F1           06585         MOVF INDEX2,W
002B50 2623           06586         ADDWF PP7,F,0
002B52 0E00           06587         MOVLW 0
002B54 2224           06588         ADDWFC PP7H,F,0
002B56 0E04           06589         MOVLW 4
002B58 2623           06590         ADDWF PP7,F,0
002B5A 0E00           06591         MOVLW 0
002B5C 2224           06592         ADDWFC PP7H,F,0
002B5E 0E10           06593         MOVLW 16
002B60 2423           06594         ADDWF PP7,W,0
002B62 6FF3           06595         MOVWF WORD_VAR
002B64 0E00           06596         MOVLW 0
002B66 2024           06597         ADDWFC PP7H,W,0
002B68 6FF4           06598         MOVWF WORD_VARH
  00002B6A            06599 F11_000017 EQU $ ; in [WRITE_U_H.INC] Next Index2
002B6A 2BF1           06600         INCF INDEX2,F
002B6C 0100           06601         MOVLB 0
  00000000            06602 RAM_BANK = 0
002B6E A4D8           06603         BTFSS STATUS,2,0
                      06604         GO@TO FR@LB271
002B72                06605 NX@LB272
  00002B72            06606 F11_000018 EQU $ ; in [WRITE_U_H.INC] Next Index
002B72 0E01           06607         MOVLW 1
002B74 0103           06608         MOVLB 3
  00000003            06609 RAM_BANK = 3
002B76 5FF0           06610         SUBWF INDEX,F
002B78 0100           06611         MOVLB 0
  00000000            06612 RAM_BANK = 0
002B7A B0D8           06613         BTFSC STATUS,0,0
                      06614         GO@TO FR@LB269
002B7E                06615 NX@LB270
  00002B7E            06616 F11_000020 EQU $ ; in [WRITE_U_H.INC] Cls
                      06617         F@CALL LCD@CLS
  00002B82            06618 F11_000022 EQU $ ; in [WRITE_U_H.INC] For Index = 0 To 3               'Write User # to History
002B82 0103           06619         MOVLB 3
  00000003            06620 RAM_BANK = 3
002B84 6BF0           06621         CLRF INDEX
002B86                06622 FR@LB273
002B86 0100           06623         MOVLB 0
  00000000            06624 RAM_BANK = 0
002B88 0E04           06625         MOVLW 4
002B8A 0103           06626         MOVLB 3
  00000003            06627 RAM_BANK = 3
002B8C 5DF0           06628         SUBWF INDEX,W
002B8E 0100           06629         MOVLB 0
  00000000            06630 RAM_BANK = 0
002B90 B0D8           06631         BTFSC STATUS,0,0
                      06632         GO@TO NX@LB274
  00002B96            06633 F11_000023 EQU $ ; in [WRITE_U_H.INC] TV1 = UserIn[Index]
002B96 EE03 F0D0      06634         LFSR 0,USERIN
002B9A 0103           06635         MOVLB 3
  00000003            06636 RAM_BANK = 3
002B9C 51F0           06637         MOVF INDEX,W
002B9E 50EB           06638         MOVF PLUSW0,W,0
002BA0 6FF2           06639         MOVWF TV1
  00002BA2            06640 F11_000024 EQU $ ; in [WRITE_U_H.INC] EWrite UHA + Index, [TV1]
002BA2 0E10           06641         MOVLW 16
002BA4 25F0           06642         ADDWF INDEX,W
002BA6 6AAA           06643         CLRF EEADRH,0
002BA8 6EA9           06644         MOVWF EEADR,0
002BAA 36AA           06645         RLCF EEADRH,F,0
002BAC 51F2           06646         MOVF TV1,W
                      06647         F@CALL EE@WR@W
  00002BB2            06648 F11_000025 EQU $ ; in [WRITE_U_H.INC] Next 'Index
002BB2 2BF0           06649         INCF INDEX,F
002BB4 0100           06650         MOVLB 0
  00000000            06651 RAM_BANK = 0
002BB6 A4D8           06652         BTFSS STATUS,2,0
                      06653         GO@TO FR@LB273
002BBA                06654 NX@LB274
  00002BBA            06655 F11_000026 EQU $ ; in [WRITE_U_H.INC] TV1 = ERead num_UHE
002BBA 0E03           06656         MOVLW 3
                      06657         F@CALL EE@RD
002BC0 0103           06658         MOVLB 3
  00000003            06659 RAM_BANK = 3
002BC2 6FF2           06660         MOVWF TV1
  00002BC4            06661 F11_000027 EQU $ ; in [WRITE_U_H.INC] If TV1 < num_UH Then
002BC4 0EC8           06662         MOVLW 200
002BC6 5DF2           06663         SUBWF TV1,W
002BC8 0100           06664         MOVLB 0
  00000000            06665 RAM_BANK = 0
002BCA B0D8           06666         BTFSC STATUS,0,0
                      06667         GO@TO BC@LL275
  00002BD0            06668 F11_000028 EQU $ ; in [WRITE_U_H.INC] Inc TV1
002BD0 0103           06669         MOVLB 3
  00000003            06670 RAM_BANK = 3
002BD2 2BF2           06671         INCF TV1,F
  00002BD4            06672 F11_000029 EQU $ ; in [WRITE_U_H.INC] EWrite num_UHE, [TV1]
002BD4 6AAA           06673         CLRF EEADRH,0
002BD6 0E03           06674         MOVLW 3
002BD8 6EA9           06675         MOVWF EEADR,0
002BDA 51F2           06676         MOVF TV1,W
                      06677         F@CALL EE@WR@W
  00002BE0            06678 F11_000030 EQU $ ; in [WRITE_U_H.INC] EndIf
002BE0                06679 BC@LL275
002BE0 0100           06680         MOVLB 0
  00000000            06681 RAM_BANK = 0
  00002BE2            06682 F11_000031 EQU $ ; in [WRITE_U_H.INC] Return
002BE2 0012           06683         RETURN 0
  00002BE4            06684 F11_EOF EQU $ ; WRITE_U_H.INC
  00002BE4            06685 F12_SOF EQU $ ; WRITE_M_H.INC
002BE4                06686 WRITE_MANAGER
  00002BE4            06687 F12_000013 EQU $ ; in [WRITE_M_H.INC] For Index = num_MH To 0 Step -1       'Here we move all old history down one notch to ready 1st place for new entry
002BE4 0E0A           06688         MOVLW 10
002BE6 0103           06689         MOVLB 3
  00000003            06690 RAM_BANK = 3
002BE8 6FF0           06691         MOVWF INDEX
002BEA                06692 FR@LB277
002BEA 0100           06693         MOVLB 0
  00000000            06694 RAM_BANK = 0
  00002BEC            06695 F12_000014 EQU $ ; in [WRITE_M_H.INC] For Index2 = 0 To 7
002BEC 0103           06696         MOVLB 3
  00000003            06697 RAM_BANK = 3
002BEE 6BF1           06698         CLRF INDEX2
002BF0                06699 FR@LB279
002BF0 0100           06700         MOVLB 0
  00000000            06701 RAM_BANK = 0
002BF2 0E08           06702         MOVLW 8
002BF4 0103           06703         MOVLB 3
  00000003            06704 RAM_BANK = 3
002BF6 5DF1           06705         SUBWF INDEX2,W
002BF8 0100           06706         MOVLB 0
  00000000            06707 RAM_BANK = 0
002BFA B0D8           06708         BTFSC STATUS,0,0
                      06709         GO@TO NX@LB280
  00002C00            06710 F12_000015 EQU $ ; in [WRITE_M_H.INC] TV1 = ERead (Index * 8) + Index2 + MHA
002C00 6A24           06711         CLRF PP7H,0
002C02 C3F0 F023      06712         MOVFF INDEX,PP7
002C06 5024           06713         MOVF PP7H,W,0
002C08 0D08           06714         MULLW 8
002C0A CFF3 F024      06715         MOVFF PRODL,PP7H
002C0E 5023           06716         MOVF PP7,W,0
002C10 0D08           06717         MULLW 8
002C12 CFF3 F023      06718         MOVFF PRODL,PP7
002C16 50F4           06719         MOVF PRODH,W,0
002C18 2624           06720         ADDWF PP7H,F,0
002C1A 0103           06721         MOVLB 3
  00000003            06722 RAM_BANK = 3
002C1C 51F1           06723         MOVF INDEX2,W
002C1E 2623           06724         ADDWF PP7,F,0
002C20 0E00           06725         MOVLW 0
002C22 2224           06726         ADDWFC PP7H,F,0
002C24 0E90           06727         MOVLW 144
002C26 2423           06728         ADDWF PP7,W,0
002C28 6EA9           06729         MOVWF EEADR,0
002C2A 0E03           06730         MOVLW 3
002C2C 2024           06731         ADDWFC PP7H,W,0
002C2E 6EAA           06732         MOVWF EEADRH,0
                      06733         F@CALL EE@RD@W
002C34 6FF2           06734         MOVWF TV1
  00002C36            06735 F12_000016 EQU $ ; in [WRITE_M_H.INC] EWrite (Index * 8) + Index2 + 8 + MHA,[TV1]
002C36 6A24           06736         CLRF PP7H,0
002C38 C3F0 F023      06737         MOVFF INDEX,PP7
002C3C 5024           06738         MOVF PP7H,W,0
002C3E 0D08           06739         MULLW 8
002C40 CFF3 F024      06740         MOVFF PRODL,PP7H
002C44 5023           06741         MOVF PP7,W,0
002C46 0D08           06742         MULLW 8
002C48 CFF3 F023      06743         MOVFF PRODL,PP7
002C4C 50F4           06744         MOVF PRODH,W,0
002C4E 2624           06745         ADDWF PP7H,F,0
002C50 51F1           06746         MOVF INDEX2,W
002C52 2623           06747         ADDWF PP7,F,0
002C54 0E00           06748         MOVLW 0
002C56 2224           06749         ADDWFC PP7H,F,0
002C58 0E08           06750         MOVLW 8
002C5A 2623           06751         ADDWF PP7,F,0
002C5C 0E00           06752         MOVLW 0
002C5E 2224           06753         ADDWFC PP7H,F,0
002C60 0E90           06754         MOVLW 144
002C62 2423           06755         ADDWF PP7,W,0
002C64 6EA9           06756         MOVWF EEADR,0
002C66 0E03           06757         MOVLW 3
002C68 2024           06758         ADDWFC PP7H,W,0
002C6A 6EAA           06759         MOVWF EEADRH,0
002C6C 51F2           06760         MOVF TV1,W
                      06761         F@CALL EE@WR@W
  00002C72            06762 F12_000017 EQU $ ; in [WRITE_M_H.INC] Next Index2
002C72 2BF1           06763         INCF INDEX2,F
002C74 0100           06764         MOVLB 0
  00000000            06765 RAM_BANK = 0
002C76 A4D8           06766         BTFSS STATUS,2,0
                      06767         GO@TO FR@LB279
002C7A                06768 NX@LB280
  00002C7A            06769 F12_000018 EQU $ ; in [WRITE_M_H.INC] Next Index
002C7A 0E01           06770         MOVLW 1
002C7C 0103           06771         MOVLB 3
  00000003            06772 RAM_BANK = 3
002C7E 5FF0           06773         SUBWF INDEX,F
002C80 0100           06774         MOVLB 0
  00000000            06775 RAM_BANK = 0
002C82 B0D8           06776         BTFSC STATUS,0,0
                      06777         GO@TO FR@LB277
002C86                06778 NX@LB278
  00002C86            06779 F12_000020 EQU $ ; in [WRITE_M_H.INC] For Index = 0 To 7    'Write Manager ID and date to history file in spot 1
002C86 0103           06780         MOVLB 3
  00000003            06781 RAM_BANK = 3
002C88 6BF0           06782         CLRF INDEX
002C8A                06783 FR@LB281
002C8A 0100           06784         MOVLB 0
  00000000            06785 RAM_BANK = 0
002C8C 0E08           06786         MOVLW 8
002C8E 0103           06787         MOVLB 3
  00000003            06788 RAM_BANK = 3
002C90 5DF0           06789         SUBWF INDEX,W
002C92 0100           06790         MOVLB 0
  00000000            06791 RAM_BANK = 0
002C94 B0D8           06792         BTFSC STATUS,0,0
                      06793         GO@TO NX@LB282
  00002C9A            06794 F12_000021 EQU $ ; in [WRITE_M_H.INC] Response = SD_Read_Byte_From_File
  000A                06795  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      06796         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06797  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
  00002CA2            06798 F12_000022 EQU $ ; in [WRITE_M_H.INC] EWrite MHA + Index, [Response]
002CA2 0E90           06799         MOVLW 144
002CA4 0103           06800         MOVLB 3
  00000003            06801 RAM_BANK = 3
002CA6 25F0           06802         ADDWF INDEX,W
002CA8 6AAA           06803         CLRF EEADRH,0
002CAA 6EA9           06804         MOVWF EEADR,0
002CAC 0E03           06805         MOVLW 3
002CAE 22AA           06806         ADDWFC EEADRH,F,0
002CB0 51ED           06807         MOVF RESPONSE,W
                      06808         F@CALL EE@WR@W
  00002CB6            06809 F12_000023 EQU $ ; in [WRITE_M_H.INC] Next 'Index
002CB6 2BF0           06810         INCF INDEX,F
002CB8 0100           06811         MOVLB 0
  00000000            06812 RAM_BANK = 0
002CBA A4D8           06813         BTFSS STATUS,2,0
                      06814         GO@TO FR@LB281
002CBE                06815 NX@LB282
  00002CBE            06816 F12_000024 EQU $ ; in [WRITE_M_H.INC] TV1 = ERead num_MHE
002CBE 0E04           06817         MOVLW 4
                      06818         F@CALL EE@RD
002CC4 0103           06819         MOVLB 3
  00000003            06820 RAM_BANK = 3
002CC6 6FF2           06821         MOVWF TV1
  00002CC8            06822 F12_000025 EQU $ ; in [WRITE_M_H.INC] If TV1 < num_MH Then
002CC8 0E0A           06823         MOVLW 10
002CCA 5DF2           06824         SUBWF TV1,W
002CCC 0100           06825         MOVLB 0
  00000000            06826 RAM_BANK = 0
002CCE B0D8           06827         BTFSC STATUS,0,0
                      06828         GO@TO BC@LL283
  00002CD4            06829 F12_000026 EQU $ ; in [WRITE_M_H.INC] Inc TV1
002CD4 0103           06830         MOVLB 3
  00000003            06831 RAM_BANK = 3
002CD6 2BF2           06832         INCF TV1,F
  00002CD8            06833 F12_000027 EQU $ ; in [WRITE_M_H.INC] EWrite num_MHE, [TV1]
002CD8 6AAA           06834         CLRF EEADRH,0
002CDA 0E04           06835         MOVLW 4
002CDC 6EA9           06836         MOVWF EEADR,0
002CDE 51F2           06837         MOVF TV1,W
                      06838         F@CALL EE@WR@W
  00002CE4            06839 F12_000028 EQU $ ; in [WRITE_M_H.INC] EndIf
002CE4                06840 BC@LL283
002CE4 0100           06841         MOVLB 0
  00000000            06842 RAM_BANK = 0
  00002CE6            06843 F12_000029 EQU $ ; in [WRITE_M_H.INC] SD_Close_File
  000A                06844  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06845         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06846  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002CEA            06847 F12_000030 EQU $ ; in [WRITE_M_H.INC] Cls
                      06848         F@CALL LCD@CLS
  00002CEE            06849 F12_000031 EQU $ ; in [WRITE_M_H.INC] Print "Manager Done"
002CEE 0E05           06850         MOVLW ((STR@LB19 >> 8) & 255)
002CF0 6EF7           06851         MOVWF TBLPTRLH,0
002CF2 0E44           06852         MOVLW (STR@LB19 & 255)
002CF4 6EF6           06853         MOVWF TBLPTRL,0
                      06854         F@CALL PRINT@MSTR
  00002CFA            06855 F12_000032 EQU $ ; in [WRITE_M_H.INC] Return
002CFA 0012           06856         RETURN 0
  00002CFC            06857 F12_EOF EQU $ ; WRITE_M_H.INC
  00002CFC            06858 F13_SOF EQU $ ; WRITE_M_SD.INC
002CFC                06859 WRITE_M_SD
  00002CFC            06860 F13_000013 EQU $ ; in [WRITE_M_SD.INC] GoSub Read_Mod
                      06861         F@CALL READ_MOD
  00002D00            06862 F13_000015 EQU $ ; in [WRITE_M_SD.INC] SD_File_Name = Str ModNum          'File Name, upper case only
002D00 EE02 F091      06863         LFSR 0,SD_FILE_NAME
002D04 EE13 F0E6      06864         LFSR 1,MODNUM
002D08 0E07           06865         MOVLW 7
002D0A 6EF3           06866         MOVWF PRODL,0
002D0C 50E6           06867         MOVF POSTINC1,W,0
002D0E E003           06868         BZ $ + 8
002D10 6EEE           06869         MOVWF POSTINC0,0
002D12 2EF3           06870         DECFSZ PRODL,F,0
002D14 D7FB           06871         BRA $ - 8
002D16 6AEF           06872         CLRF INDF0,0
  00002D18            06873 F13_000016 EQU $ ; in [WRITE_M_SD.INC] SD_File_Name = SD_File_Name +"M"
002D18 EE02 F091      06874         LFSR 0,SD_FILE_NAME
002D1C 50EE           06875         MOVF POSTINC0,W,0
002D1E E1FE           06876         BNZ $ - 2
002D20 52ED           06877         MOVF POSTDEC0,F,0
002D22 0E4D           06878         MOVLW 77
002D24 6EEE           06879         MOVWF POSTINC0,0
002D26 6AEF           06880         CLRF INDF0,0
  00002D28            06881 F13_000017 EQU $ ; in [WRITE_M_SD.INC] SD_File_Ext = "TXT"                'File Ext, upper case only!
002D28 EE02 F09A      06882         LFSR 0,SD_FILE_EXT
002D2C 0E54           06883         MOVLW 84
002D2E 6EEE           06884         MOVWF POSTINC0,0
002D30 0E58           06885         MOVLW 88
002D32 6EEE           06886         MOVWF POSTINC0,0
002D34 0E54           06887         MOVLW 84
002D36 6EEE           06888         MOVWF POSTINC0,0
002D38 6AEF           06889         CLRF INDF0,0
  00002D3A            06890 F13_000019 EQU $ ; in [WRITE_M_SD.INC] SD_Delete_File          'If file already exists then delete it..
  000A                06891  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
                      06892         SD_DELETE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06893  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
  00002D3E            06894 F13_000022 EQU $ ; in [WRITE_M_SD.INC] SD_New_File
  000A                06895  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
                      06896         SD_NEW_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06897  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
  00002D42            06898 F13_000023 EQU $ ; in [WRITE_M_SD.INC] Index2 = ERead num_MHE   'Load number of Manager History entries
002D42 0E04           06899         MOVLW 4
                      06900         F@CALL EE@RD
002D48 0103           06901         MOVLB 3
  00000003            06902 RAM_BANK = 3
002D4A 6FF1           06903         MOVWF INDEX2
  00002D4C            06904 F13_000024 EQU $ ; in [WRITE_M_SD.INC] MyNum = Str$ (Dec,Index2) 'Change number into a string to send to SD card
002D4C EE03 F0F5      06905         LFSR 0,MYNUM
002D50 0E02           06906         MOVLW 2
002D52 6E01           06907         MOVWF BPFH,0
002D54 51F1           06908         MOVF INDEX2,W
                      06909         F@CALL OUT@DECB
002D5A 6AEF           06910         CLRF INDF0,0
  00002D5C            06911 F13_000025 EQU $ ; in [WRITE_M_SD.INC] If Index2 = 0 Then  'If there is no Manager History then..
002D5C 53F1           06912         MOVF INDEX2,F
002D5E 0100           06913         MOVLB 0
  00000000            06914 RAM_BANK = 0
002D60 A4D8           06915         BTFSS STATUS,2,0
                      06916         GO@TO BC@LL285
  00002D66            06917 F13_000026 EQU $ ; in [WRITE_M_SD.INC] SD_IO_String = "No Manager History"
002D66 EE02 F0FB      06918         LFSR 0,SD_IO_STRING
002D6A 0E05           06919         MOVLW ((STR@LB20 >> 8) & 255)
002D6C 6EF7           06920         MOVWF TBLPTRLH,0
002D6E 0E52           06921         MOVLW (STR@LB20 & 255)
002D70 6EF6           06922         MOVWF TBLPTRL,0
                      06923         F@CALL LOAD@MSTR
002D76 6AEF           06924         CLRF INDF0,0
  00002D78            06925 F13_000027 EQU $ ; in [WRITE_M_SD.INC] SD_Write_String_To_File
  000A                06926  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
                      06927         SD_WRITE_STRING_TO_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06928  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
  00002D7C            06929 F13_000028 EQU $ ; in [WRITE_M_SD.INC] SD_CLOSE_FILE
  000A                06930  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06931         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06932  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002D80            06933 F13_000029 EQU $ ; in [WRITE_M_SD.INC] Return
002D80 0012           06934         RETURN 0
  00002D82            06935 F13_000030 EQU $ ; in [WRITE_M_SD.INC] EndIf
002D82                06936 BC@LL285
  00002D82            06937 F13_000031 EQU $ ; in [WRITE_M_SD.INC] SD_IO_String = MyNum   'Write number of Mangager History entries to SD
002D82 EE02 F0FB      06938         LFSR 0,SD_IO_STRING
002D86 EE13 F0F5      06939         LFSR 1,MYNUM
002D8A 0E03           06940         MOVLW 3
002D8C 52E7           06941         MOVF INDF1,F,0
002D8E E004           06942         BZ $ + 10
002D90 CFE6 FFEE      06943         MOVFF POSTINC1,POSTINC0
002D94 2EE8           06944         DECFSZ WREG,F,0
002D96 D7FA           06945         BRA $ - 10
002D98 6AEF           06946         CLRF INDF0,0
  00002D9A            06947 F13_000032 EQU $ ; in [WRITE_M_SD.INC] SD_Write_String_To_File
  000A                06948  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
                      06949         SD_WRITE_STRING_TO_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06950  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
  00002D9E            06951 F13_000033 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File "|"  ' Add a Separator
  0008                06952  VARIABLE PRM_1=8
  0000                06953  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06954  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                06955  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      06956         SD_WRITE_BYTE_TO_FILE 124,0,0,0,0,0,0,0,0,0
  000A                06957  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                06958  VARIABLE PRM_1=8
  0000                06959  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06960  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002DA8            06961 F13_000035 EQU $ ; in [WRITE_M_SD.INC] MyCount = 0
002DA8 0103           06962         MOVLB 3
  00000003            06963 RAM_BANK = 3
002DAA 6BEF           06964         CLRF MYCOUNT
  00002DAC            06965 F13_000036 EQU $ ; in [WRITE_M_SD.INC] Repeat
002DAC                06966 BC@LL286
002DAC 0100           06967         MOVLB 0
  00000000            06968 RAM_BANK = 0
  00002DAE            06969 F13_000037 EQU $ ; in [WRITE_M_SD.INC] For Index = 0 To 1
002DAE 0103           06970         MOVLB 3
  00000003            06971 RAM_BANK = 3
002DB0 6BF0           06972         CLRF INDEX
002DB2                06973 FR@LB289
002DB2 0100           06974         MOVLB 0
  00000000            06975 RAM_BANK = 0
002DB4 0E02           06976         MOVLW 2
002DB6 0103           06977         MOVLB 3
  00000003            06978 RAM_BANK = 3
002DB8 5DF0           06979         SUBWF INDEX,W
002DBA 0100           06980         MOVLB 0
  00000000            06981 RAM_BANK = 0
002DBC B0D8           06982         BTFSC STATUS,0,0
                      06983         GO@TO NX@LB290
  00002DC2            06984 F13_000038 EQU $ ; in [WRITE_M_SD.INC] TV1 = ERead MHA + MyCount * 8 + Index
002DC2 0E03           06985         MOVLW 3
002DC4 6E24           06986         MOVWF PP7H,0
002DC6 0E90           06987         MOVLW 144
002DC8 6E23           06988         MOVWF PP7,0
002DCA 6A28           06989         CLRF PP8H,0
002DCC C3EF F027      06990         MOVFF MYCOUNT,PP8
002DD0 5028           06991         MOVF PP8H,W,0
002DD2 0D08           06992         MULLW 8
002DD4 CFF3 F028      06993         MOVFF PRODL,PP8H
002DD8 5027           06994         MOVF PP8,W,0
002DDA 0D08           06995         MULLW 8
002DDC CFF3 F027      06996         MOVFF PRODL,PP8
002DE0 50F4           06997         MOVF PRODH,W,0
002DE2 2628           06998         ADDWF PP8H,F,0
002DE4 5027           06999         MOVF PP8,W,0
002DE6 2623           07000         ADDWF PP7,F,0
002DE8 5028           07001         MOVF PP8H,W,0
002DEA 2224           07002         ADDWFC PP7H,F,0
002DEC 0103           07003         MOVLB 3
  00000003            07004 RAM_BANK = 3
002DEE 51F0           07005         MOVF INDEX,W
002DF0 2423           07006         ADDWF PP7,W,0
002DF2 6EA9           07007         MOVWF EEADR,0
002DF4 0E00           07008         MOVLW 0
002DF6 2024           07009         ADDWFC PP7H,W,0
002DF8 6EAA           07010         MOVWF EEADRH,0
                      07011         F@CALL EE@RD@W
002DFE 6FF2           07012         MOVWF TV1
  00002E00            07013 F13_000039 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File TV1
002E00 0100           07014         MOVLB 0
  00000000            07015 RAM_BANK = 0
  0002                07016  VARIABLE PRM_1=2
  0000                07017  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07018  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  000A                07019  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07020         SD_WRITE_BYTE_TO_FILE TV1,0,0,0,0,0,0,0,0,0
  000A                07021  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0002                07022  VARIABLE PRM_1=2
  0000                07023  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07024  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  00002E0A            07025 F13_000040 EQU $ ; in [WRITE_M_SD.INC] Next Index
002E0A 0103           07026         MOVLB 3
  00000003            07027 RAM_BANK = 3
002E0C 2BF0           07028         INCF INDEX,F
002E0E 0100           07029         MOVLB 0
  00000000            07030 RAM_BANK = 0
002E10 A4D8           07031         BTFSS STATUS,2,0
                      07032         GO@TO FR@LB289
002E14                07033 NX@LB290
  00002E14            07034 F13_000041 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File ":"  ' Add a Separator
  0008                07035  VARIABLE PRM_1=8
  0000                07036  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07037  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                07038  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07039         SD_WRITE_BYTE_TO_FILE 58,0,0,0,0,0,0,0,0,0
  000A                07040  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                07041  VARIABLE PRM_1=8
  0000                07042  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07043  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002E1E            07044 F13_000042 EQU $ ; in [WRITE_M_SD.INC] For Index = 2 To 7
002E1E 0E02           07045         MOVLW 2
002E20 0103           07046         MOVLB 3
  00000003            07047 RAM_BANK = 3
002E22 6FF0           07048         MOVWF INDEX
002E24                07049 FR@LB291
002E24 0100           07050         MOVLB 0
  00000000            07051 RAM_BANK = 0
002E26 0E08           07052         MOVLW 8
002E28 0103           07053         MOVLB 3
  00000003            07054 RAM_BANK = 3
002E2A 5DF0           07055         SUBWF INDEX,W
002E2C 0100           07056         MOVLB 0
  00000000            07057 RAM_BANK = 0
002E2E B0D8           07058         BTFSC STATUS,0,0
                      07059         GO@TO NX@LB292
  00002E34            07060 F13_000043 EQU $ ; in [WRITE_M_SD.INC] TV1 = ERead MHA + MyCount * 8 + Index
002E34 0E03           07061         MOVLW 3
002E36 6E24           07062         MOVWF PP7H,0
002E38 0E90           07063         MOVLW 144
002E3A 6E23           07064         MOVWF PP7,0
002E3C 6A28           07065         CLRF PP8H,0
002E3E C3EF F027      07066         MOVFF MYCOUNT,PP8
002E42 5028           07067         MOVF PP8H,W,0
002E44 0D08           07068         MULLW 8
002E46 CFF3 F028      07069         MOVFF PRODL,PP8H
002E4A 5027           07070         MOVF PP8,W,0
002E4C 0D08           07071         MULLW 8
002E4E CFF3 F027      07072         MOVFF PRODL,PP8
002E52 50F4           07073         MOVF PRODH,W,0
002E54 2628           07074         ADDWF PP8H,F,0
002E56 5027           07075         MOVF PP8,W,0
002E58 2623           07076         ADDWF PP7,F,0
002E5A 5028           07077         MOVF PP8H,W,0
002E5C 2224           07078         ADDWFC PP7H,F,0
002E5E 0103           07079         MOVLB 3
  00000003            07080 RAM_BANK = 3
002E60 51F0           07081         MOVF INDEX,W
002E62 2423           07082         ADDWF PP7,W,0
002E64 6EA9           07083         MOVWF EEADR,0
002E66 0E00           07084         MOVLW 0
002E68 2024           07085         ADDWFC PP7H,W,0
002E6A 6EAA           07086         MOVWF EEADRH,0
                      07087         F@CALL EE@RD@W
002E70 6FF2           07088         MOVWF TV1
  00002E72            07089 F13_000044 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File TV1
002E72 0100           07090         MOVLB 0
  00000000            07091 RAM_BANK = 0
  0002                07092  VARIABLE PRM_1=2
  0000                07093  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07094  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  000A                07095  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07096         SD_WRITE_BYTE_TO_FILE TV1,0,0,0,0,0,0,0,0,0
  000A                07097  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0002                07098  VARIABLE PRM_1=2
  0000                07099  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07100  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  00002E7C            07101 F13_000045 EQU $ ; in [WRITE_M_SD.INC] Next Index
002E7C 0103           07102         MOVLB 3
  00000003            07103 RAM_BANK = 3
002E7E 2BF0           07104         INCF INDEX,F
002E80 0100           07105         MOVLB 0
  00000000            07106 RAM_BANK = 0
002E82 A4D8           07107         BTFSS STATUS,2,0
                      07108         GO@TO FR@LB291
002E86                07109 NX@LB292
  00002E86            07110 F13_000046 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File "/"  ' Add a Separator
  0008                07111  VARIABLE PRM_1=8
  0000                07112  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07113  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                07114  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07115         SD_WRITE_BYTE_TO_FILE 47,0,0,0,0,0,0,0,0,0
  000A                07116  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                07117  VARIABLE PRM_1=8
  0000                07118  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07119  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002E90            07120 F13_000047 EQU $ ; in [WRITE_M_SD.INC] Inc MyCount
002E90 0103           07121         MOVLB 3
  00000003            07122 RAM_BANK = 3
002E92 2BEF           07123         INCF MYCOUNT,F
  00002E94            07124 F13_000048 EQU $ ; in [WRITE_M_SD.INC] Until MyCount = Index2
002E94 51EF           07125         MOVF MYCOUNT,W
002E96 5DF1           07126         SUBWF INDEX2,W
002E98 0100           07127         MOVLB 0
  00000000            07128 RAM_BANK = 0
002E9A A4D8           07129         BTFSS STATUS,2,0
                      07130         GO@TO BC@LL286
002E9E                07131 BC@LL287
  00002E9E            07132 F13_000049 EQU $ ; in [WRITE_M_SD.INC] SD_CLOSE_FILE
  000A                07133  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      07134         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07135  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002EA2            07136 F13_000050 EQU $ ; in [WRITE_M_SD.INC] Return
002EA2 0012           07137         RETURN 0
  00002EA4            07138 F13_EOF EQU $ ; WRITE_M_SD.INC
  00002EA4            07139 F14_SOF EQU $ ; WRITE_USERS_SD.INC
002EA4                07140 WRITE_USERS_SD
  00002EA4            07141 F14_000014 EQU $ ; in [WRITE_USERS_SD.INC] GoSub Read_Mod 'Get the Module # from chip
                      07142         F@CALL READ_MOD
  00002EA8            07143 F14_000015 EQU $ ; in [WRITE_USERS_SD.INC] SD_File_Name = Str ModNum          'File Name, upper case only
002EA8 EE02 F091      07144         LFSR 0,SD_FILE_NAME
002EAC EE13 F0E6      07145         LFSR 1,MODNUM
002EB0 0E07           07146         MOVLW 7
002EB2 6EF3           07147         MOVWF PRODL,0
002EB4 50E6           07148         MOVF POSTINC1,W,0
002EB6 E003           07149         BZ $ + 8
002EB8 6EEE           07150         MOVWF POSTINC0,0
002EBA 2EF3           07151         DECFSZ PRODL,F,0
002EBC D7FB           07152         BRA $ - 8
002EBE 6AEF           07153         CLRF INDF0,0
  00002EC0            07154 F14_000016 EQU $ ; in [WRITE_USERS_SD.INC] SD_File_Name = SD_File_Name + "R"
002EC0 EE02 F091      07155         LFSR 0,SD_FILE_NAME
002EC4 50EE           07156         MOVF POSTINC0,W,0
002EC6 E1FE           07157         BNZ $ - 2
002EC8 52ED           07158         MOVF POSTDEC0,F,0
002ECA 0E52           07159         MOVLW 82
002ECC 6EEE           07160         MOVWF POSTINC0,0
002ECE 6AEF           07161         CLRF INDF0,0
  00002ED0            07162 F14_000017 EQU $ ; in [WRITE_USERS_SD.INC] SD_File_Ext = "TXT"
002ED0 EE02 F09A      07163         LFSR 0,SD_FILE_EXT
002ED4 0E54           07164         MOVLW 84
002ED6 6EEE           07165         MOVWF POSTINC0,0
002ED8 0E58           07166         MOVLW 88
002EDA 6EEE           07167         MOVWF POSTINC0,0
002EDC 0E54           07168         MOVLW 84
002EDE 6EEE           07169         MOVWF POSTINC0,0
002EE0 6AEF           07170         CLRF INDF0,0
  00002EE2            07171 F14_000020 EQU $ ; in [WRITE_USERS_SD.INC] SD_Delete_File          'If it does exist then delete it..
  000A                07172  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
                      07173         SD_DELETE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07174  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
  00002EE6            07175 F14_000023 EQU $ ; in [WRITE_USERS_SD.INC] SD_New_File
  000A                07176  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
                      07177         SD_NEW_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07178  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
  00002EEA            07179 F14_000025 EQU $ ; in [WRITE_USERS_SD.INC] If User_Pointer = BUA Then    'there are no User entries in the table
002EEA 0103           07180         MOVLB 3
  00000003            07181 RAM_BANK = 3
002EEC 51C5           07182         MOVF USER_POINTERH,W
002EEE 0A9C           07183         XORLW 156
002EF0 0E50           07184         MOVLW 80
002EF2 B4D8           07185         BTFSC STATUS,2,0
002EF4 19C4           07186         XORWF USER_POINTER,W
002EF6 0100           07187         MOVLB 0
  00000000            07188 RAM_BANK = 0
002EF8 A4D8           07189         BTFSS STATUS,2,0
                      07190         GO@TO BC@LL293
  00002EFE            07191 F14_000026 EQU $ ; in [WRITE_USERS_SD.INC] Cls
                      07192         F@CALL LCD@CLS
  00002F02            07193 F14_000027 EQU $ ; in [WRITE_USERS_SD.INC] Print "No Users"
002F02 0E05           07194         MOVLW ((STR@LB21 >> 8) & 255)
002F04 6EF7           07195         MOVWF TBLPTRLH,0
002F06 0E66           07196         MOVLW (STR@LB21 & 255)
002F08 6EF6           07197         MOVWF TBLPTRL,0
                      07198         F@CALL PRINT@MSTR
  00002F0E            07199 F14_000028 EQU $ ; in [WRITE_USERS_SD.INC] Pause 2000
002F0E 0E07           07200         MOVLW 7
002F10 6E16           07201         MOVWF PP1H,0
002F12 0ED0           07202         MOVLW 208
                      07203         F@CALL DLY@W
  00002F18            07204 F14_000029 EQU $ ; in [WRITE_USERS_SD.INC] SD_IO_String = "No Users Exist"
002F18 EE02 F0FB      07205         LFSR 0,SD_IO_STRING
002F1C 0E05           07206         MOVLW ((STR@LB22 >> 8) & 255)
002F1E 6EF7           07207         MOVWF TBLPTRLH,0
002F20 0E70           07208         MOVLW (STR@LB22 & 255)
002F22 6EF6           07209         MOVWF TBLPTRL,0
                      07210         F@CALL LOAD@MSTR
002F28 6AEF           07211         CLRF INDF0,0
  00002F2A            07212 F14_000030 EQU $ ; in [WRITE_USERS_SD.INC] SD_Write_String_To_File
  000A                07213  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
                      07214         SD_WRITE_STRING_TO_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07215  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
  00002F2E            07216 F14_000031 EQU $ ; in [WRITE_USERS_SD.INC] SD_CLOSE_FILE
  000A                07217  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      07218         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07219  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002F32            07220 F14_000032 EQU $ ; in [WRITE_USERS_SD.INC] Return
002F32 0012           07221         RETURN 0
  00002F34            07222 F14_000033 EQU $ ; in [WRITE_USERS_SD.INC] EndIf
002F34                07223 BC@LL293
  00002F34            07224 F14_000036 EQU $ ; in [WRITE_USERS_SD.INC] Index2 = ERead NOU    'Read number of users into Index2
002F34 0E02           07225         MOVLW 2
                      07226         F@CALL EE@RD
002F3A 0103           07227         MOVLB 3
  00000003            07228 RAM_BANK = 3
002F3C 6FF1           07229         MOVWF INDEX2
  00002F3E            07230 F14_000037 EQU $ ; in [WRITE_USERS_SD.INC] MyCount = 0
002F3E 6BEF           07231         CLRF MYCOUNT
  00002F40            07232 F14_000038 EQU $ ; in [WRITE_USERS_SD.INC] Word_Var = BUA   ' Start in first user memory spot
002F40 0E9C           07233         MOVLW 156
002F42 6FF4           07234         MOVWF WORD_VARH
002F44 0E50           07235         MOVLW 80
002F46 6FF3           07236         MOVWF WORD_VAR
  00002F48            07237 F14_000039 EQU $ ; in [WRITE_USERS_SD.INC] Repeat
002F48                07238 BC@LL294
002F48 0100           07239         MOVLB 0
  00000000            07240 RAM_BANK = 0
  00002F4A            07241 F14_000040 EQU $ ; in [WRITE_USERS_SD.INC] For Index = 0 To 3     'Repeat until all Tag digits are checked
002F4A 0103           07242         MOVLB 3
  00000003            07243 RAM_BANK = 3
002F4C 6BF0           07244         CLRF INDEX
002F4E                07245 FR@LB297
002F4E 0100           07246         MOVLB 0
  00000000            07247 RAM_BANK = 0
002F50 0E04           07248         MOVLW 4
002F52 0103           07249         MOVLB 3
  00000003            07250 RAM_BANK = 3
002F54 5DF0           07251         SUBWF INDEX,W
002F56 0100           07252         MOVLB 0
  00000000            07253 RAM_BANK = 0
002F58 B0D8           07254         BTFSC STATUS,0,0
                      07255         GO@TO NX@LB298
  00002F5E            07256 F14_000041 EQU $ ; in [WRITE_USERS_SD.INC] TV1 = CRead Word_Var + Index
002F5E 0103           07257         MOVLB 3
  00000003            07258 RAM_BANK = 3
002F60 51F0           07259         MOVF INDEX,W
002F62 25F3           07260         ADDWF WORD_VAR,W
002F64 6EF6           07261         MOVWF TBLPTRL,0
002F66 0E00           07262         MOVLW 0
002F68 21F4           07263         ADDWFC WORD_VARH,W
002F6A 6EF7           07264         MOVWF TBLPTRLH,0
002F6C 6AA6           07265         CLRF EECON1,0
002F6E 8EA6           07266         BSF EECON1,EEPGD,0
002F70 0008           07267         TBLRD*
002F72 CFF5 F3F2      07268         MOVFF TABLAT,TV1
  00002F76            07269 F14_000042 EQU $ ; in [WRITE_USERS_SD.INC] SD_Write_Byte_To_File TV1 'append to file.
002F76 0100           07270         MOVLB 0
  00000000            07271 RAM_BANK = 0
  0002                07272  VARIABLE PRM_1=2
  0000                07273  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07274  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  000A                07275  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07276         SD_WRITE_BYTE_TO_FILE TV1,0,0,0,0,0,0,0,0,0
  000A                07277  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0002                07278  VARIABLE PRM_1=2
  0000                07279  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07280  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  00002F80            07281 F14_000043 EQU $ ; in [WRITE_USERS_SD.INC] Next Index
002F80 0103           07282         MOVLB 3
  00000003            07283 RAM_BANK = 3
002F82 2BF0           07284         INCF INDEX,F
002F84 0100           07285         MOVLB 0
  00000000            07286 RAM_BANK = 0
002F86 A4D8           07287         BTFSS STATUS,2,0
                      07288         GO@TO FR@LB297
002F8A                07289 NX@LB298
  00002F8A            07290 F14_000044 EQU $ ; in [WRITE_USERS_SD.INC] SD_Write_Byte_To_File ":"
  0008                07291  VARIABLE PRM_1=8
  0000                07292  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07293  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                07294  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07295         SD_WRITE_BYTE_TO_FILE 58,0,0,0,0,0,0,0,0,0
  000A                07296  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                07297  VARIABLE PRM_1=8
  0000                07298  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07299  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002F94            07300 F14_000045 EQU $ ; in [WRITE_USERS_SD.INC] Word_Var = Word_Var + 16
002F94 0E10           07301         MOVLW 16
002F96 0103           07302         MOVLB 3
  00000003            07303 RAM_BANK = 3
002F98 27F3           07304         ADDWF WORD_VAR,F
002F9A 0E00           07305         MOVLW 0
002F9C 23F4           07306         ADDWFC WORD_VARH,F
  00002F9E            07307 F14_000046 EQU $ ; in [WRITE_USERS_SD.INC] Inc MyCount
002F9E 2BEF           07308         INCF MYCOUNT,F
  00002FA0            07309 F14_000047 EQU $ ; in [WRITE_USERS_SD.INC] Print MyCount
002FA0 51EF           07310         MOVF MYCOUNT,W
                      07311         F@CALL PRINT
  00002FA6            07312 F14_000048 EQU $ ; in [WRITE_USERS_SD.INC] Until MyCount = Index2
002FA6 51EF           07313         MOVF MYCOUNT,W
002FA8 5DF1           07314         SUBWF INDEX2,W
002FAA 0100           07315         MOVLB 0
  00000000            07316 RAM_BANK = 0
002FAC A4D8           07317         BTFSS STATUS,2,0
                      07318         GO@TO BC@LL294
002FB0                07319 BC@LL295
  00002FB0            07320 F14_000051 EQU $ ; in [WRITE_USERS_SD.INC] Cls
                      07321         F@CALL LCD@CLS
  00002FB4            07322 F14_000052 EQU $ ; in [WRITE_USERS_SD.INC] Print "Done Users"
002FB4 0E05           07323         MOVLW ((STR@LB23 >> 8) & 255)
002FB6 6EF7           07324         MOVWF TBLPTRLH,0
002FB8 0E80           07325         MOVLW (STR@LB23 & 255)
002FBA 6EF6           07326         MOVWF TBLPTRL,0
                      07327         F@CALL PRINT@MSTR
  00002FC0            07328 F14_000053 EQU $ ; in [WRITE_USERS_SD.INC] Pause 2000
002FC0 0E07           07329         MOVLW 7
002FC2 6E16           07330         MOVWF PP1H,0
002FC4 0ED0           07331         MOVLW 208
                      07332         F@CALL DLY@W
  00002FCA            07333 F14_000054 EQU $ ; in [WRITE_USERS_SD.INC] SD_CLOSE_FILE
  000A                07334  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      07335         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07336  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002FCE            07337 F14_000055 EQU $ ; in [WRITE_USERS_SD.INC] Return
002FCE 0012           07338         RETURN 0
  00002FD0            07339 F14_EOF EQU $ ; WRITE_USERS_SD.INC
  00002FD0            07340 F15_SOF EQU $ ; READ_MOD.INC
002FD0                07341 READ_MOD
  00002FD0            07342 F15_000003 EQU $ ; in [READ_MOD.INC] For Index = 0 To 7
002FD0 0103           07343         MOVLB 3
  00000003            07344 RAM_BANK = 3
002FD2 6BF0           07345         CLRF INDEX
002FD4                07346 FR@LB299
002FD4 0100           07347         MOVLB 0
  00000000            07348 RAM_BANK = 0
002FD6 0E08           07349         MOVLW 8
002FD8 0103           07350         MOVLB 3
  00000003            07351 RAM_BANK = 3
002FDA 5DF0           07352         SUBWF INDEX,W
002FDC 0100           07353         MOVLB 0
  00000000            07354 RAM_BANK = 0
002FDE B0D8           07355         BTFSC STATUS,0,0
                      07356         GO@TO NX@LB300
  00002FE4            07357 F15_000004 EQU $ ; in [READ_MOD.INC] ModNum[Index] = CRead 0X9C40 + Index    'Read the Module number into Variable
002FE4 0E40           07358         MOVLW 64
002FE6 0103           07359         MOVLB 3
  00000003            07360 RAM_BANK = 3
002FE8 25F0           07361         ADDWF INDEX,W
002FEA 6AF7           07362         CLRF TBLPTRLH,0
002FEC 6EF6           07363         MOVWF TBLPTRL,0
002FEE 0E9C           07364         MOVLW 156
002FF0 22F7           07365         ADDWFC TBLPTRLH,F,0
002FF2 6AA6           07366         CLRF EECON1,0
002FF4 8EA6           07367         BSF EECON1,EEPGD,0
002FF6 0008           07368         TBLRD*
002FF8 CFF5 F00C      07369         MOVFF TABLAT,PBP#VAR1
002FFC EE03 F0E6      07370         LFSR 0,MODNUM
003000 51F0           07371         MOVF INDEX,W
003002 C00C FFEB      07372         MOVFF PBP#VAR1,PLUSW0
  00003006            07373 F15_000005 EQU $ ; in [READ_MOD.INC] Next
003006 2BF0           07374         INCF INDEX,F
003008 0100           07375         MOVLB 0
  00000000            07376 RAM_BANK = 0
00300A A4D8           07377         BTFSS STATUS,2,0
                      07378         GO@TO FR@LB299
00300E                07379 NX@LB300
  0000300E            07380 F15_000006 EQU $ ; in [READ_MOD.INC] Return
00300E 0012           07381         RETURN 0
  00003010            07382 F15_EOF EQU $ ; READ_MOD.INC
  00003010            07383 F16_SOF EQU $ ; GOSLEEP.INC
003010                07384 GOSLEEP
  00003010            07385 F16_000003 EQU $ ; in [GOSLEEP.INC] Cls
                      07386         F@CALL LCD@CLS
  00003014            07387 F16_000004 EQU $ ; in [GOSLEEP.INC] Print At 1,1, "Going to sleep.."
003014 0E80           07388         MOVLW 128
003016 6E01           07389         MOVWF BPFH,0
003018 0E80           07390         MOVLW 128
                      07391         F@CALL LCD@CRS
00301E 0E05           07392         MOVLW ((STR@LB24 >> 8) & 255)
003020 6EF7           07393         MOVWF TBLPTRLH,0
003022 0E8C           07394         MOVLW (STR@LB24 & 255)
003024 6EF6           07395         MOVWF TBLPTRL,0
                      07396         F@CALL PRINT@MSTR
  0000302A            07397 F16_000005 EQU $ ; in [GOSLEEP.INC] Pause 2000
00302A 0E07           07398         MOVLW 7
00302C 6E16           07399         MOVWF PP1H,0
00302E 0ED0           07400         MOVLW 208
                      07401         F@CALL DLY@W
  00003034            07402 F16_000006 EQU $ ; in [GOSLEEP.INC] INTCON.4 = 1 'Allow a the pulse on PortB.0 to wake program from sleep
003034 88F2           07403         BSF INTCON,4,0
  00003036            07404 F16_000007 EQU $ ; in [GOSLEEP.INC] INTCON.1 = 0  'Clear the interrupt flag for PortB.0
003036 92F2           07405         BCF INTCON,1,0
  00003038            07406 F16_000010 EQU $ ; in [GOSLEEP.INC] Sleep    'Chip goes into low power until it is triggered by a High to Low pulse on PortB.0
003038 0003           07407         SLEEP
  0000303A            07408 F16_000011 EQU $ ; in [GOSLEEP.INC] INTCON.4 = 0 'Stop any pulse from waking up program cause we just woke up
00303A 98F2           07409         BCF INTCON,4,0
  0000303C            07410 F16_000012 EQU $ ; in [GOSLEEP.INC] Cls
                      07411         F@CALL LCD@CLS
  00003040            07412 F16_000013 EQU $ ; in [GOSLEEP.INC] Print At 1,1, "I just woke up!!"
003040 0E80           07413         MOVLW 128
003042 6E01           07414         MOVWF BPFH,0
003044 0E80           07415         MOVLW 128
                      07416         F@CALL LCD@CRS
00304A 0E05           07417         MOVLW ((STR@LB25 >> 8) & 255)
00304C 6EF7           07418         MOVWF TBLPTRLH,0
00304E 0E9E           07419         MOVLW (STR@LB25 & 255)
003050 6EF6           07420         MOVWF TBLPTRL,0
                      07421         F@CALL PRINT@MSTR
  00003056            07422 F16_000018 EQU $ ; in [GOSLEEP.INC] Pause 2000
003056 0E07           07423         MOVLW 7
003058 6E16           07424         MOVWF PP1H,0
00305A 0ED0           07425         MOVLW 208
                      07426         F@CALL DLY@W
  00003060            07427 F16_000026 EQU $ ; in [GOSLEEP.INC] GoTo GoSleep      'Go back to sleep
                      07428         F@JUMP GOSLEEP
  00003062            07429 F16_EOF EQU $ ; GOSLEEP.INC
009C40                07430         ORG 40000
009C40 3241 4237 3338 07431         DB 65,50,55,66,56,51
009C46 0042           07432         DB 66,0
  00009C48            07433 F1_EOF EQU $ ; V4.0 RFID 2ND GENERATION.BAS
                      07434  LIST
                      07435 ;---------------------------------------------
                      07436 
01 18 1F 81 84 0F C0 007437 CONFIG OSC = XT
       F E0 0F 40 
                      07438 CONFIG PWRT = ON
                      07439 CONFIG BOREN = OFF
                      07440 CONFIG MCLRE = ON
                      07441 CONFIG PBADEN = OFF
                      07442 CONFIG STVREN = OFF
                      07443 CONFIG LVP = ON
                      07444         END
MPASM  5.06                      V40RFI~1.ASM   4-9-2010  16:12:27         PAGE  4


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
ADRESLH                           00000FC4
AL@MUL                            00000374
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN4                               00000005
AN8                               00000002
AN9                               00000003
BANK0_END                         255
BANK0_START                       128
BANK10_END                        2815
BANK10_START                      2560
BANK11_END                        3071
BANK11_START                      2816
BANK12_END                        3200
BANK12_START                      3072
BANK13_END                        3583
BANK13_START                      3328
BANK14_END                        3839
BANK14_START                      3584
BANK1_END                         511
BANK1_START                       256
BANK2_END                         767
BANK2_START                       512
BANK3_END                         1023
BANK3_START                       768
BANK4_END                         1279
BANK4_START                       1024
BANK5_END                         1535
BANK5_START                       1280
BANK6_END                         1791
BANK6_START                       1536
BANK7_END                         2047
BANK7_START                       1792
BANK8_END                         2303
BANK8_START                       2048
BANK9_END                         2559
BANK9_START                       2304
BANKA_END                         127
BANKA_START                       0
BANKED                            00000001
BAUDCTL                           00000FB8
BC@LL10                           0000067C
BC@LL100                          00000EC6
BC@LL102                          00000EC6
BC@LL108                          00000F46
BC@LL109                          00000F58
BC@LL110                          00000F82
BC@LL111                          00000FC6
BC@LL113                          00001048
BC@LL115                          000012EA
BC@LL117                          000012DE
BC@LL119                          000011AA
BC@LL120                          000012D8
BC@LL122                          000012CA
BC@LL124                          000011FC
BC@LL125                          000012D0
BC@LL126                          000012E2
BC@LL128                          00001332
BC@LL13                           00000680
BC@LL130                          00001358
BC@LL131                          0000136A
BC@LL133                          00001430
BC@LL134                          00001432
BC@LL135                          0000146A
BC@LL137                          0000147C
BC@LL139                          000014AC
BC@LL14                           00000682
BC@LL140                          000014A2
BC@LL141                          000014AC
BC@LL143                          000015D0
BC@LL145                          000016F0
BC@LL147                          00001790
BC@LL149                          000017EE
BC@LL15                           000006AE
BC@LL150                          000017F2
BC@LL152                          00001988
BC@LL154                          00001950
BC@LL156                          00001846
BC@LL157                          00001838
BC@LL158                          00001842
BC@LL160                          00001946
BC@LL162                          00001986
BC@LL164                          000019B4
BC@LL166                          000019D6
BC@LL17                           000006C0
BC@LL174                          00001BC2
BC@LL175                          00001BF4
BC@LL176                          00001D24
BC@LL178                          00001CD0
BC@LL18                           000006C2
BC@LL180                          00001D76
BC@LL181                          00001DB2
BC@LL183                          00001E52
BC@LL185                          00001EEA
BC@LL187                          00001EEA
BC@LL189                          00001F2A
BC@LL190                          00001F4E
BC@LL191                          00002072
BC@LL193                          0000202A
BC@LL195                          00002006
BC@LL197                          000020DC
BC@LL198                          0000214A
BC@LL199                          00002122
BC@LL2                            000005EE
BC@LL20                           00000716
BC@LL200                          0000213C
BC@LL201                          00002148
BC@LL205                          00002390
BC@LL207                          00002408
BC@LL209                          00002490
BC@LL212                          000024AC
BC@LL219                          00002540
BC@LL222                          000025C4
BC@LL223                          00002594
BC@LL226                          000025C2
BC@LL231                          0000269E
BC@LL232                          000026C8
BC@LL233                          00002898
BC@LL235                          0000277E
BC@LL237                          00002714
BC@LL242                          00002806
BC@LL248                          000028DE
BC@LL250                          0000293C
BC@LL254                          0000297E
BC@LL256                          000029D6
BC@LL257                          000029E8
BC@LL258                          00002A48
BC@LL26                           00000796
BC@LL260                          00002A32
BC@LL261                          00002A3A
BC@LL263                          00002A96
BC@LL267                          00002ABC
BC@LL275                          00002BE0
BC@LL28                           000007A4
BC@LL283                          00002CE4
BC@LL285                          00002D82
BC@LL286                          00002DAC
BC@LL287                          00002E9E
BC@LL293                          00002F34
BC@LL294                          00002F48
BC@LL295                          00002FB0
BC@LL3                            00000600
BC@LL30                           000007C4
BC@LL32                           00000818
BC@LL34                           00000830
BC@LL40                           0000089A
BC@LL42                           000008DE
BC@LL43                           00000900
BC@LL49                           00000A2A
BC@LL5                            0000063A
BC@LL51                           00000A2A
BC@LL55                           00000ACE
BC@LL56                           00000AD2
BC@LL6                            00000618
BC@LL60                           00000B4A
BC@LL64                           00000BB2
BC@LL7                            00000622
BC@LL72                           00000CAC
BC@LL73                           00000CC8
BC@LL74                           00000EC6
BC@LL75                           00000D10
BC@LL78                           00000D0C
BC@LL8                            00000640
BC@LL80                           00000DD0
BC@LL84                           00000D62
BC@LL88                           00000DB2
BC@LL90                           00000DCC
BC@LL92                           00000EC6
BC@LL94                           00000EC6
BC@LL96                           00000EC6
BC@LL98                           00000EC6
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BIT_BIT                           
BIT_BYTE                          
BIT_DWORD                         
BIT_FLOAT                         
BIT_WORD                          
BIT_WREG                          
BOR                               00000000
BOREN_NOSLP_2                     000000FD
BOREN_OFF_2                       000000F9
BOREN_ON_2                        000000FB
BOREN_SBORDIS_2                   000000FF
BORV_25_2                         000000FF
BORV_27_2                         000000F7
BORV_42_2                         000000EF
BORV_45_2                         000000E7
BPF                               00000000
BPFH                              00000001
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BUA                               40016
BUAH                              156
BYTE_BIT                          
BYTE_BYTE                         
BYTE_DWORD                        
BYTE_FLOAT                        
BYTE_WORD                         
BYTE_WREG                         
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
C@WRITE                           00000226
CCP1                              00000002
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2MX_PORTBE_3                   000000FE
CCP2MX_PORTC_3                    000000FF
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR1LH                           00000FBF
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CCPR2LH                           00000FBC
CFGS                              00000006
CH@SND                            000001E4
CHECKSUM                          000003E5
CHECK_TAG                         000029A4
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLOSE_FILE                        0000293C
CLRC                              BCF STATUS,C
CLRW                              CLRF WREG
CLRZ                              BCF STATUS,Z
CLS                               0000003A
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CN@EQ                             00000024
CONFIG1H                          00300001
CONFIG2H                          00300003
CONFIG2L                          00300002
CONFIG3H                          00300005
CONFIG4L                          00300006
CONFIG5H                          00300009
CONFIG5L                          00300008
CONFIG6H                          0030000B
CONFIG6L                          0030000A
CONFIG7H                          0030000D
CONFIG7L                          0030000C
CONFIG_REQ                        1
CP0_OFF_5                         000000FF
CP0_ON_5                          000000FE
CP1_OFF_5                         000000FF
CP1_ON_5                          000000FD
CP2_OFF_5                         000000FF
CP2_ON_5                          000000FB
CP@LB18                           00000F9E
CP@LB23                           000017E4
CP@LB25                           00001C3E
CP@LB26                           00001CAC
CP@LB28                           00001ED8
CP@LB29                           00001FBE
CP@LB30                           0000206C
CP@LB31                           000023C8
CP@LB4                            000006A6
CP@LB9                            000009DE
CPB_OFF_5                         000000FF
CPB_ON_5                          000000BF
CPD_OFF_5                         000000FF
CPD_ON_5                          0000007F
CR@EXIT                           00000242
CREN                              00000004
CS                                00000002
CSRC                              00000007
CURS@                             00000054
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
D@DIG                             00000094
D@K                               00000368
D@VD                              00000346
D@VD2                             0000034A
DAD5                              00000005
DAD6                              00000006
DAD7                              00000007
DC                                00000001
DDRA                              00000F92
DDRB                              00000F93
DDRC                              00000F94
DDRD                              00000F95
DDRE                              00000F96
DEBUG                             00000FD4
DEBUG_OFF_4                       000000FF
DEBUG_ON_4                        0000007F
DEVID1                            003FFFFE
DEVID2                            003FFFFF
DIVS@32X32EXIT                    00000324
DIVS@32X32LOOP                    000002D2
DIVS@32X32SKIP1                   000002A4
DIVS@32X32SKIP2                   000002B4
DIVS@32X32SKIP4                   00000308
DIVS@32X32SKIP5                   00000314
DL@H                              00000276
DL@MS                             00000248
DL@US                             00000262
DLUS@D                            0000028A
DLUS@LP                           00000270
DLUS@W                            00000264
DLY@P                             0000024C
DLY@W                             0000024A
DV@LP                             0000034E
DWORD_BIT                         
DWORD_BYTE                        
DWORD_DWORD                       
DWORD_FLOAT                       
DWORD_WORD                        
DWORD_WREG                        
D_A                               00000005
EBTR0_OFF_7                       000000FF
EBTR0_ON_7                        000000FE
EBTR1_OFF_7                       000000FF
EBTR1_ON_7                        000000FD
EBTR2_OFF_7                       000000FF
EBTR2_ON_7                        000000FB
EBTRB_OFF_7                       000000FF
EBTRB_ON_7                        000000BF
ECCP1CON                          00000FBD
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
ECIO6_OSC_1                       000000F5
EC_OSC_1                          000000F4
EE@RD                             000001F8
EE@RD@W                           000001FC
EE@WR                             00000208
EE@WR@W                           0000020A
EEADR                             00000FA9
EEADRH                            00000FAA
EECON1                            00000FA6
EECON2                            00000FA7
EEDAT                             00000FA8
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
ENHCPU_OFF_4                      0000009F
ENHCPU_ON_4                       000000FF
ETX                               000003E4
EX@SEND@IT                        000000C4
F10_000004                        000029A4
F10_000005                        000029A8
F10_000006                        000029BA
F10_000007                        000029BE
F10_000008                        000029CA
F10_000009                        000029D4
F10_000010                        000029D6
F10_000011                        000029D6
F10_000012                        000029E2
F10_000013                        000029E6
F10_000014                        000029E8
F10_000015                        000029EA
F10_000016                        00002A0E
F10_000017                        00002A24
F10_000018                        00002A2A
F10_000019                        00002A32
F10_000020                        00002A32
F10_000021                        00002A36
F10_000022                        00002A3A
F10_000023                        00002A3C
F10_000024                        00002A48
F10_000025                        00002A56
F10_000026                        00002A6A
F10_000027                        00002A8C
F10_000028                        00002A94
F10_000029                        00002A96
F10_000031                        00002A96
F10_000032                        00002AA0
F10_000034                        00002ABC
F10_EOF                           00002ABE
F10_SOF                           000029A4
F11_000012                        00002ABE
F11_000013                        00002AC6
F11_000014                        00002ADA
F11_000015                        00002B08
F11_000016                        00002B3C
F11_000017                        00002B6A
F11_000018                        00002B72
F11_000020                        00002B7E
F11_000022                        00002B82
F11_000023                        00002B96
F11_000024                        00002BA2
F11_000025                        00002BB2
F11_000026                        00002BBA
F11_000027                        00002BC4
F11_000028                        00002BD0
F11_000029                        00002BD4
F11_000030                        00002BE0
F11_000031                        00002BE2
F11_EOF                           00002BE4
F11_SOF                           00002ABE
F12_000013                        00002BE4
F12_000014                        00002BEC
F12_000015                        00002C00
F12_000016                        00002C36
F12_000017                        00002C72
F12_000018                        00002C7A
F12_000020                        00002C86
F12_000021                        00002C9A
F12_000022                        00002CA2
F12_000023                        00002CB6
F12_000024                        00002CBE
F12_000025                        00002CC8
F12_000026                        00002CD4
F12_000027                        00002CD8
F12_000028                        00002CE4
F12_000029                        00002CE6
F12_000030                        00002CEA
F12_000031                        00002CEE
F12_000032                        00002CFA
F12_EOF                           00002CFC
F12_SOF                           00002BE4
F13_000013                        00002CFC
F13_000015                        00002D00
F13_000016                        00002D18
F13_000017                        00002D28
F13_000019                        00002D3A
F13_000022                        00002D3E
F13_000023                        00002D42
F13_000024                        00002D4C
F13_000025                        00002D5C
F13_000026                        00002D66
F13_000027                        00002D78
F13_000028                        00002D7C
F13_000029                        00002D80
F13_000030                        00002D82
F13_000031                        00002D82
F13_000032                        00002D9A
F13_000033                        00002D9E
F13_000035                        00002DA8
F13_000036                        00002DAC
F13_000037                        00002DAE
F13_000038                        00002DC2
F13_000039                        00002E00
F13_000040                        00002E0A
F13_000041                        00002E14
F13_000042                        00002E1E
F13_000043                        00002E34
F13_000044                        00002E72
F13_000045                        00002E7C
F13_000046                        00002E86
F13_000047                        00002E90
F13_000048                        00002E94
F13_000049                        00002E9E
F13_000050                        00002EA2
F13_EOF                           00002EA4
F13_SOF                           00002CFC
F14_000014                        00002EA4
F14_000015                        00002EA8
F14_000016                        00002EC0
F14_000017                        00002ED0
F14_000020                        00002EE2
F14_000023                        00002EE6
F14_000025                        00002EEA
F14_000026                        00002EFE
F14_000027                        00002F02
F14_000028                        00002F0E
F14_000029                        00002F18
F14_000030                        00002F2A
F14_000031                        00002F2E
F14_000032                        00002F32
F14_000033                        00002F34
F14_000036                        00002F34
F14_000037                        00002F3E
F14_000038                        00002F40
F14_000039                        00002F48
F14_000040                        00002F4A
F14_000041                        00002F5E
F14_000042                        00002F76
F14_000043                        00002F80
F14_000044                        00002F8A
F14_000045                        00002F94
F14_000046                        00002F9E
F14_000047                        00002FA0
F14_000048                        00002FA6
F14_000051                        00002FB0
F14_000052                        00002FB4
F14_000053                        00002FC0
F14_000054                        00002FCA
F14_000055                        00002FCE
F14_EOF                           00002FD0
F14_SOF                           00002EA4
F15_000003                        00002FD0
F15_000004                        00002FE4
F15_000005                        00003006
F15_000006                        0000300E
F15_EOF                           00003010
F15_SOF                           00002FD0
F16_000003                        00003010
F16_000004                        00003014
F16_000005                        0000302A
F16_000006                        00003034
F16_000007                        00003036
F16_000010                        00003038
F16_000011                        0000303A
F16_000012                        0000303C
F16_000013                        00003040
F16_000018                        00003056
F16_000026                        00003060
F16_EOF                           00003062
F16_SOF                           00003010
F1_000043                         000023A4
F1_000045                         000023AA
F1_000048                         000023AC
F1_000049                         000023B0
F1_000050                         000023BA
F1_000052                         000023C2
F1_000053                         000023D0
F1_000054                         000023DA
F1_000055                         000023E4
F1_000056                         000023F0
F1_000057                         000023FC
F1_000058                         00002408
F1_000071                         0000240A
F1_000078                         00002414
F1_000080                         00002418
F1_000081                         0000241C
F1_000083                         00002428
F1_000084                         0000242C
F1_000085                         0000243A
F1_000086                         0000243E
F1_000087                         00002454
F1_000088                         0000246C
F1_000089                         00002470
F1_000090                         00002474
F1_000091                         00002480
F1_000092                         0000248A
F1_000093                         00002490
F1_000094                         00002490
F1_000095                         00002494
F1_000096                         000024A0
F1_000097                         000024AA
F1_000098                         000024AC
F1_000099                         000024AC
F1_EOF                            00009C48
F1_SOF                            0000239C
F2_EOF                            0000239C
F2_SOF                            000005C4
F3_EOF                            000005C4
F3_SOF                            000005C4
F4_000001                         000005C4
F4_000109                         000005C8
F4_000110                         000005D6
F4_000111                         000005EE
F4_000112                         000005EE
F4_000113                         00000600
F4_000114                         00000602
F4_000115                         00000608
F4_000116                         00000618
F4_000117                         00000618
F4_000118                         0000061C
F4_000119                         00000622
F4_000120                         00000626
F4_000121                         0000062A
F4_000122                         0000063A
F4_000123                         0000063A
F4_000124                         00000640
F4_000125                         00000642
F4_000128                         00000644
F4_000129                         0000064A
F4_000130                         00000654
F4_000131                         00000656
F4_000132                         00000664
F4_000133                         00000672
F4_000134                         0000067C
F4_000135                         0000067C
F4_000136                         00000680
F4_000137                         00000680
F4_000151                         00000682
F4_000152                         00000682
F4_000153                         00000686
F4_000154                         0000068C
F4_000155                         000006AE
F4_000156                         000006B8
F4_000157                         000006C0
F4_000158                         000006C0
F4_000159                         000006C2
F4_000160                         000006C2
F4_000163                         000006C4
F4_000164                         000006C8
F4_000166                         000006CE
F4_000168                         000006DE
F4_000169                         000006E2
F4_000170                         000006E8
F4_000171                         000006EC
F4_000172                         000006F0
F4_000173                         000006F4
F4_000174                         000006F8
F4_000175                         000006FA
F4_000176                         000006FC
F4_000177                         00000700
F4_000178                         00000706
F4_000179                         00000708
F4_000181                         00000716
F4_000182                         0000071C
F4_000184                         00000722
F4_000185                         00000724
F4_000186                         00000736
F4_000187                         0000073C
F4_000188                         00000742
F4_000189                         00000744
F4_000190                         00000756
F4_000191                         0000075C
F4_000193                         00000762
F4_000194                         00000766
F4_000195                         0000076C
F4_000197                         00000770
F4_000198                         00000772
F4_000199                         00000776
F4_000200                         0000077A
F4_000201                         0000077E
F4_000202                         00000780
F4_000203                         00000786
F4_000204                         00000796
F4_000205                         000007A4
F4_000206                         000007A6
F4_000207                         000007AA
F4_000209                         000007AE
F4_000210                         000007B2
F4_000211                         000007B6
F4_000212                         000007C2
F4_000213                         000007C4
F4_000215                         000007C4
F4_000218                         000007C6
F4_000219                         000007CA
F4_000221                         000007D0
F4_000223                         000007E0
F4_000224                         000007E4
F4_000225                         000007EA
F4_000226                         000007EE
F4_000227                         000007F2
F4_000228                         000007F6
F4_000229                         000007FA
F4_000230                         000007FC
F4_000231                         00000802
F4_000232                         00000804
F4_000233                         00000808
F4_000234                         0000080A
F4_000236                         00000818
F4_000237                         0000081C
F4_000238                         00000820
F4_000239                         00000822
F4_000241                         00000830
F4_000242                         00000832
F4_000243                         00000836
F4_000244                         00000846
F4_000245                         0000084C
F4_000246                         0000084E
F4_000247                         00000852
F4_000248                         00000862
F4_000250                         00000868
F4_000251                         0000086C
F4_000252                         00000870
F4_000253                         00000874
F4_000254                         00000878
F4_000255                         0000087E
F4_000256                         00000880
F4_000258                         00000884
F4_000259                         00000888
F4_000260                         0000088C
F4_000261                         00000898
F4_000262                         0000089A
F4_000264                         0000089A
F4_000267                         0000089C
F4_000268                         000008AA
F4_000269                         000008BC
F4_000270                         000008DE
F4_000271                         000008DE
F4_000272                         000008F0
F4_000273                         00000900
F4_000274                         00000902
F4_000277                         00000904
F4_000278                         00000934
F4_000279                         00000970
F4_000280                         00000980
F4_000281                         00000986
F4_000283                         0000098A
F4_000284                         000009A0
F4_000285                         00000A16
F4_000286                         00000A18
F4_000287                         00000A2A
F4_000288                         00000A2A
F4_000289                         00000A40
F4_000290                         00000A52
F4_000291                         00000A58
F4_000293                         00000A5C
F4_000294                         00000A76
F4_000295                         00000A7E
F4_000296                         00000A84
F4_000297                         00000A96
F4_000298                         00000A9A
F4_000299                         00000AB2
F4_000300                         00000AB4
F4_000301                         00000AC2
F4_000302                         00000ACE
F4_000303                         00000ACE
F4_000304                         00000AD2
F4_000305                         00000AD2
F4_000307                         00000AE8
F4_000308                         00000AF0
F4_000309                         00000AF2
F4_000312                         00000AF6
F4_000313                         00000AFA
F4_000314                         00000B0C
F4_000315                         00000B36
F4_000316                         00000B46
F4_000317                         00000B4A
F4_000318                         00000B4C
F4_000319                         00000B56
F4_000320                         00000B5A
F4_000321                         00000B6E
F4_000322                         00000B9A
F4_000323                         00000BAE
F4_000324                         00000BB2
F4_000325                         00000BB4
F4_000326                         00000BBE
F4_000329                         00000BC0
F4_000330                         00000BC2
F4_000331                         00000BC8
F4_000332                         00000BF6
F4_000333                         00000C2A
F4_000334                         00000C3A
F4_000335                         00000C40
F4_000337                         00000C46
F4_000338                         00000C5C
F4_000339                         00000C70
F4_000340                         00000C7E
F4_000341                         00000C8A
F4_000342                         00000CAC
F4_000343                         00000CAC
F4_000344                         00000CC8
F4_000345                         00000CCA
F4_000346                         00000CD4
F4_000347                         00000CD4
F4_000348                         00000CE0
F4_000349                         00000D08
F4_000350                         00000D0C
F4_000351                         00000D10
F4_000352                         00000D1E
F4_000353                         00000D22
F4_000354                         00000D34
F4_000355                         00000D56
F4_000356                         00000D5C
F4_000357                         00000D62
F4_000358                         00000D62
F4_000359                         00000D6C
F4_000360                         00000D82
F4_000361                         00000DA6
F4_000362                         00000DAC
F4_000363                         00000DB2
F4_000364                         00000DB2
F4_000365                         00000DBC
F4_000366                         00000DD0
F4_000367                         00000DDE
F4_000368                         00000DFA
F4_000369                         00000E0A
F4_000370                         00000E1C
F4_000371                         00000E36
F4_000372                         00000E3C
F4_000373                         00000E56
F4_000374                         00000E6A
F4_000375                         00000E80
F4_000376                         00000E88
F4_000377                         00000E9E
F4_000378                         00000EBA
F4_000379                         00000EC2
F4_000380                         00000EC6
F4_000381                         00000EC6
F4_000382                         00000EC6
F4_000383                         00000EC6
F4_000384                         00000EC6
F4_000385                         00000EC6
F4_000386                         00000EC6
F4_000387                         00000EDC
F4_000388                         00000EEE
F4_000389                         00000EF4
F4_000391                         00000EF8
F4_000392                         00000F12
F4_000393                         00000F1A
F4_000394                         00000F1C
F4_000397                         00000F20
F4_000398                         00000F2E
F4_000399                         00000F46
F4_000400                         00000F46
F4_000401                         00000F58
F4_000402                         00000F5A
F4_000405                         00000F5C
F4_000406                         00000F64
F4_000407                         00000F6C
F4_000408                         00000F7E
F4_000409                         00000F82
F4_000410                         00000F9E
F4_000411                         00000FA2
F4_000412                         00000FA4
F4_000413                         00000FAA
F4_000414                         00000FAE
F4_000415                         00000FB2
F4_000416                         00000FB8
F4_000417                         00000FBC
F4_000418                         00000FC2
F4_000419                         00000FC6
F4_000422                         00000FC8
F4_000423                         00000FD0
F4_000424                         00000FE2
F4_000425                         00000FE6
F4_000426                         00000FEA
F4_000427                         00000FF0
F4_000428                         00000FF4
F4_000429                         00000FF8
F4_000432                         00000FFA
F4_000433                         00000FFE
F4_000434                         00001002
F4_000435                         00001008
F4_000436                         0000100C
F4_000439                         0000100E
F4_000440                         0000101A
F4_000441                         0000103A
F4_000442                         00001046
F4_000443                         00001048
F4_000444                         0000104A
F4_000445                         00001050
F4_000446                         00001060
F4_000447                         0000106C
F4_000448                         0000106E
F4_000449                         0000107A
F4_000450                         0000108A
F4_000451                         000010B4
F4_000452                         000010BC
F4_000453                         000010C2
F4_000454                         000010DA
F4_000455                         000010DE
F4_000456                         000010E4
F4_000457                         000010EC
F4_000458                         000010F0
F4_000459                         000010F8
F4_000460                         0000113E
F4_000461                         0000114E
F4_000462                         0000115E
F4_000463                         00001162
F4_000464                         00001168
F4_000466                         0000116E
F4_000467                         00001198
F4_000468                         0000119E
F4_000470                         000011AA
F4_000471                         000011AA
F4_000472                         000011B0
F4_000473                         000011C0
F4_000474                         000011C8
F4_000475                         000011D8
F4_000476                         000011E0
F4_000478                         000011E8
F4_000479                         000011EC
F4_000480                         000011FC
F4_000481                         00001216
F4_000482                         00001226
F4_000483                         0000122A
F4_000485                         00001230
F4_000486                         00001232
F4_000487                         00001234
F4_000488                         00001238
F4_000489                         00001252
F4_000490                         00001258
F4_000491                         0000129E
F4_000492                         000012AE
F4_000493                         000012BE
F4_000494                         000012C0
F4_000496                         000012CA
F4_000497                         000012CA
F4_000498                         000012D0
F4_000499                         000012D2
F4_000500                         000012D8
F4_000501                         000012DE
F4_000502                         000012DE
F4_000503                         000012E2
F4_000504                         000012E2
F4_000505                         000012EA
F4_000506                         000012EC
F4_000507                         000012F0
F4_000508                         000012F4
F4_000509                         000012F8
F4_000512                         000012FC
F4_000513                         00001302
F4_000514                         00001308
F4_000517                         0000130A
F4_000524                         00001318
F4_000525                         0000131E
F4_000526                         00001328
F4_000527                         0000132C
F4_000528                         00001332
F4_000529                         00001332
F4_000530                         00001340
F4_000531                         00001358
F4_000532                         00001358
F4_000533                         0000136A
F4_000534                         0000136C
F4_000535                         00001372
F4_000541                         00001376
F4_000580                         00001376
F4_000581                         0000137A
F4_000582                         0000137C
F4_000583                         0000137E
F4_000584                         00001382
F4_000585                         00001386
F4_000586                         00001388
F4_000587                         0000138A
F4_000588                         0000138E
F4_000589                         00001392
F4_000590                         00001394
F4_000591                         00001396
F4_000592                         0000139A
F4_000593                         0000139E
F4_000594                         000013A0
F4_000595                         000013A2
F4_000596                         000013A6
F4_000597                         000013AA
F4_000598                         000013AC
F4_000599                         000013AE
F4_000601                         000013B2
F4_000602                         000013B6
F4_000603                         000013B8
F4_000604                         000013BA
F4_000605                         000013BE
F4_000608                         000013C0
F4_000609                         000013C2
F4_000610                         000013C4
F4_000611                         000013C6
F4_000612                         000013CA
F4_000616                         000013CC
F4_000617                         000013D0
F4_000618                         000013D8
F4_000619                         000013DC
F4_000620                         000013E0
F4_000621                         000013E2
F4_000622                         000013E4
F4_000623                         000013E6
F4_000624                         000013E8
F4_000625                         000013EA
F4_000626                         000013EE
F4_000628                         000013F0
F4_000629                         000013F6
F4_000630                         000013FA
F4_000631                         00001400
F4_000632                         00001402
F4_000633                         00001404
F4_000634                         00001406
F4_000635                         00001408
F4_000636                         0000140C
F4_000637                         00001410
F4_000638                         00001414
F4_000639                         00001418
F4_000640                         0000141C
F4_000641                         00001426
F4_000642                         0000142A
F4_000643                         0000142E
F4_000644                         00001430
F4_000646                         00001430
F4_000647                         00001432
F4_000648                         00001432
F4_000649                         00001438
F4_000650                         0000143A
F4_000651                         0000143C
F4_000652                         0000143E
F4_000653                         00001440
F4_000654                         00001442
F4_000655                         00001446
F4_000656                         00001448
F4_000657                         0000144C
F4_000658                         00001450
F4_000659                         00001452
F4_000660                         0000146A
F4_000661                         00001472
F4_000662                         00001476
F4_000663                         0000147A
F4_000664                         0000147C
F4_000665                         0000147C
F4_000666                         00001480
F4_000667                         00001484
F4_000668                         00001488
F4_000669                         0000148E
F4_000670                         00001490
F4_000676                         00001494
F4_000698                         00001494
F4_000699                         000014A2
F4_000700                         000014A2
F4_000701                         000014A6
F4_000702                         000014AC
F4_000703                         000014AC
F4_000704                         000014C6
F4_000705                         000014D6
F4_000706                         000014DA
F4_000708                         000014E0
F4_000709                         000014EE
F4_000710                         000014F2
F4_000711                         000014F8
F4_000712                         000014FE
F4_000713                         00001502
F4_000714                         00001508
F4_000715                         0000150E
F4_000716                         00001512
F4_000717                         00001518
F4_000718                         0000151E
F4_000719                         00001522
F4_000720                         00001528
F4_000721                         00001536
F4_000722                         0000153C
F4_000723                         00001540
F4_000724                         00001550
F4_000725                         00001558
F4_000726                         00001568
F4_000727                         00001582
F4_000728                         00001592
F4_000729                         00001596
F4_000731                         0000159C
F4_000732                         000015A4
F4_000733                         000015A8
F4_000734                         000015AC
F4_000735                         000015B0
F4_000736                         000015CA
F4_000737                         000015D0
F4_000738                         000015D0
F4_000742                         000015D2
F4_000743                         00001600
F4_000744                         00001606
F4_000746                         0000160E
F4_000747                         00001634
F4_000748                         0000163A
F4_000749                         00001640
F4_000750                         0000166E
F4_000751                         00001674
F4_000752                         0000167A
F4_000753                         00001694
F4_000754                         0000169A
F4_000755                         000016A0
F4_000756                         000016D0
F4_000757                         000016D6
F4_000763                         000016D8
F4_000787                         000016D8
F4_000788                         000016DA
F4_000789                         000016E6
F4_000790                         000016EC
F4_000791                         000016F0
F4_000792                         000016F0
F4_000793                         000016F6
F4_000794                         000016FA
F4_000795                         000016FE
F4_000796                         00001702
F4_000797                         00001706
F4_000798                         0000170A
F4_000799                         0000174E
F4_000800                         0000175E
F4_000801                         00001762
F4_000802                         00001772
F4_000803                         00001776
F4_000805                         0000177C
F4_000806                         00001786
F4_000807                         0000178C
F4_000808                         00001790
F4_000809                         00001790
F4_000810                         00001796
F4_000811                         0000179E
F4_000812                         000017E4
F4_000813                         000017EE
F4_000814                         000017EE
F4_000815                         000017F2
F4_000816                         000017F4
F4_000817                         000017F8
F4_000818                         000017FE
F4_000819                         00001800
F4_000825                         00001804
F4_000853                         00001804
F4_000854                         00001814
F4_000855                         0000181A
F4_000856                         0000182A
F4_000857                         00001838
F4_000858                         00001838
F4_000859                         0000183C
F4_000860                         00001842
F4_000861                         00001846
F4_000862                         00001848
F4_000863                         00001854
F4_000864                         00001856
F4_000865                         00001862
F4_000866                         0000188C
F4_000867                         00001894
F4_000868                         0000189A
F4_000869                         000018B2
F4_000870                         000018B6
F4_000872                         000018BC
F4_000873                         000018C4
F4_000874                         000018C8
F4_000875                         000018D0
F4_000876                         00001916
F4_000877                         00001926
F4_000878                         00001936
F4_000879                         0000193A
F4_000881                         00001940
F4_000882                         00001946
F4_000883                         00001948
F4_000884                         00001950
F4_000885                         00001952
F4_000886                         00001956
F4_000887                         00001962
F4_000888                         00001988
F4_000889                         00001988
F4_000895                         0000198A
F4_000924                         0000198A
F4_000949                         0000198A
F4_000950                         0000198E
F4_000951                         00001996
F4_000952                         0000199A
F4_000953                         0000199E
F4_000954                         000019A4
F4_000955                         000019B4
F4_000956                         000019B8
F4_000957                         000019BE
F4_000958                         000019CC
F4_000959                         000019D2
F4_000960                         000019D6
F4_000961                         000019D6
F4_000962                         000019F0
F4_000963                         00001A00
F4_000964                         00001A04
F4_000966                         00001A0A
F4_000967                         00001A1E
F4_000968                         00001A2C
F4_000969                         00001A2E
F4_000970                         00001A34
F4_000971                         00001A3E
F4_000972                         00001A42
F4_000973                         00001A56
F4_000974                         00001A64
F4_000975                         00001A6E
F4_000976                         00001A74
F4_000977                         00001A7E
F4_000978                         00001A94
F4_000979                         00001AA2
F4_000980                         00001AAE
F4_000981                         00001AB4
F4_000982                         00001ABE
F4_000983                         00001ACC
F4_000984                         00001AD0
F4_000985                         00001AD6
F4_000986                         00001AE4
F4_000987                         00001AEA
F4_000988                         00001AF8
F4_000989                         00001AFC
F4_000990                         00001B02
F4_000991                         00001B08
F4_000992                         00001B0C
F4_000993                         00001B12
F4_000994                         00001B16
F4_000995                         00001B5C
F4_000996                         00001B6C
F4_000997                         00001B70
F4_000998                         00001B80
F4_000999                         00001B82
F4_001001                         00001B88
F4_001002                         00001B8E
F4_001003                         00001B96
F4_001004                         00001B9E
F4_001005                         00001BA0
F4_001006                         00001BA4
F4_001012                         00001BA8
F4_001030                         00001BA8
F4_001031                         00001BAC
F4_001032                         00001BB8
F4_001033                         00001BBE
F4_001034                         00001BC2
F4_001035                         00001BC2
F4_001036                         00001BC8
F4_001037                         00001BCC
F4_001038                         00001BD0
F4_001039                         00001BD4
F4_001040                         00001BD8
F4_001041                         00001BDC
F4_001042                         00001BEC
F4_001043                         00001BF4
F4_001044                         00001C3E
F4_001045                         00001C68
F4_001046                         00001C70
F4_001047                         00001C76
F4_001048                         00001CAC
F4_001049                         00001CC6
F4_001050                         00001CCA
F4_001052                         00001CD0
F4_001053                         00001CD0
F4_001054                         00001CD8
F4_001055                         00001CDC
F4_001056                         00001CE4
F4_001057                         00001D20
F4_001058                         00001D24
F4_001059                         00001D4E
F4_001060                         00001D56
F4_001061                         00001D5C
F4_001062                         00001D6C
F4_001063                         00001D76
F4_001064                         00001D76
F4_001065                         00001DB2
F4_001066                         00001DB4
F4_001067                         00001DFA
F4_001068                         00001E12
F4_001069                         00001E22
F4_001070                         00001E24
F4_001071                         00001E34
F4_001072                         00001E38
F4_001074                         00001E3E
F4_001075                         00001E48
F4_001076                         00001E4E
F4_001077                         00001E52
F4_001078                         00001E52
F4_001079                         00001E7A
F4_001080                         00001E82
F4_001081                         00001E90
F4_001082                         00001ED8
F4_001083                         00001EE0
F4_001084                         00001EEA
F4_001085                         00001EEA
F4_001086                         00001EEA
F4_001087                         00001EF2
F4_001088                         00001EF8
F4_001089                         00001EFA
F4_001090                         00001F0A
F4_001091                         00001F0C
F4_001097                         00001F10
F4_001108                         00001F10
F4_001109                         00001F14
F4_001110                         00001F20
F4_001111                         00001F26
F4_001112                         00001F2A
F4_001113                         00001F2A
F4_001114                         00001F30
F4_001115                         00001F34
F4_001116                         00001F3C
F4_001117                         00001F40
F4_001118                         00001F46
F4_001119                         00001F4A
F4_001120                         00001F4E
F4_001121                         00001F50
F4_001122                         00001F7A
F4_001123                         00001F82
F4_001124                         00001F88
F4_001125                         00001FBE
F4_001126                         00001FCA
F4_001127                         00001FCE
F4_001128                         00002000
F4_001129                         00002006
F4_001130                         00002006
F4_001131                         00002020
F4_001132                         00002024
F4_001134                         0000202A
F4_001135                         0000202A
F4_001136                         00002032
F4_001137                         00002036
F4_001138                         0000203E
F4_001139                         00002046
F4_001140                         0000204A
F4_001141                         00002050
F4_001142                         0000205E
F4_001143                         00002064
F4_001144                         00002072
F4_001145                         00002076
F4_001146                         000020A8
F4_001147                         000020AE
F4_001148                         000020B2
F4_001154                         000020B6
F4_001193                         000020B6
F4_001194                         000020C4
F4_001195                         000020D2
F4_001196                         000020D8
F4_001197                         000020DC
F4_001198                         000020DC
F4_001199                         000020E4
F4_001200                         000020EA
F4_001202                         000020F0
F4_001204                         00002116
F4_001205                         00002122
F4_001207                         00002130
F4_001208                         0000213C
F4_001210                         0000213C
F4_001211                         00002148
F4_001212                         0000214A
F4_001213                         00002156
F4_001214                         0000215C
F4_001216                         00002162
F4_001217                         00002168
F4_001218                         0000216C
F4_001219                         00002170
F4_001220                         00002174
F4_001221                         00002178
F4_001222                         0000217C
F4_001223                         00002180
F4_001224                         00002184
F4_001225                         00002188
F4_001226                         0000218C
F4_001227                         00002190
F4_001228                         00002194
F4_001229                         00002198
F4_001230                         0000219C
F4_001231                         000021B0
F4_001232                         000021DC
F4_001233                         00002206
F4_001234                         0000222A
F4_001235                         0000223E
F4_001236                         00002258
F4_001238                         00002270
F4_001239                         0000229E
F4_001240                         000022CC
F4_001241                         000022FA
F4_001243                         00002306
F4_001244                         00002318
F4_001245                         00002326
F4_001246                         0000232A
F4_001247                         0000232E
F4_001248                         00002330
F4_001249                         00002332
F4_001250                         00002334
F4_001251                         00002336
F4_001252                         00002338
F4_001253                         0000233C
F4_001254                         0000233E
F4_001260                         00002342
F4_001318                         00002342
F4_001345                         00002342
F4_001346                         00002354
F4_001347                         00002356
F4_001348                         00002368
F4_001349                         0000237A
F4_001350                         00002380
F4_001351                         00002390
F4_001352                         0000239A
F4_EOF                            0000239C
F4_SOF                            000005C4
F5_000036                         0000239C
F5_EOF                            000023A4
F5_SOF                            0000239C
F6_000012                         000024AE
F6_000013                         000024B2
F6_000014                         000024C8
F6_000016                         000024DE
F6_000017                         000024E2
F6_000018                         000024E6
F6_000020                         000024EC
F6_000022                         00002520
F6_000023                         00002528
F6_000024                         0000252E
F6_000025                         00002532
F6_000029                         00002540
F6_000030                         00002554
F6_000031                         00002560
F6_000032                         00002576
F6_000033                         00002582
F6_000034                         00002584
F6_000036                         00002594
F6_000037                         000025A8
F6_000038                         000025B4
F6_000039                         000025B6
F6_000040                         000025B8
F6_000042                         000025C2
F6_000043                         000025C4
F6_000044                         000025CE
F6_000045                         000025D2
F6_000046                         000025DE
F6_000047                         000025E0
F6_000049                         000025E2
F6_000051                         000025E6
F6_000052                         000025EA
F6_000053                         00002600
F6_000054                         0000260A
F6_EOF                            0000260C
F6_SOF                            000024AE
F7_000012                         0000260C
F7_000014                         00002610
F7_000015                         00002622
F7_000016                         00002644
F7_000018                         0000264C
F7_000019                         00002664
F7_000020                         00002676
F7_000021                         0000267E
F7_000022                         0000268C
F7_000023                         00002690
F7_000025                         0000269C
F7_000026                         0000269E
F7_000029                         0000269E
F7_000030                         000026A8
F7_000031                         000026B2
F7_000033                         000026BE
F7_000035                         000026C8
F7_000037                         000026DA
F7_000039                         000026E2
F7_000040                         000026F0
F7_000042                         000026FE
F7_000043                         0000270C
F7_000044                         00002712
F7_000045                         00002714
F7_000046                         00002714
F7_000047                         00002718
F7_000048                         0000272E
F7_000049                         00002744
F7_000050                         0000274E
F7_000051                         00002752
F7_000052                         00002754
F7_000054                         00002756
F7_000055                         0000275A
F7_000056                         0000276E
F7_000057                         00002772
F7_000058                         0000277C
F7_000059                         0000277E
F7_000063                         00002780
F7_000064                         00002794
F7_000065                         000027A8
F7_000067                         000027B0
F7_000069                         000027B8
F7_000070                         000027C6
F7_000071                         000027CA
F7_000072                         000027E0
F7_000073                         000027F6
F7_000074                         00002800
F7_000075                         00002804
F7_000076                         00002806
F7_000078                         00002806
F7_000079                         0000281C
F7_000080                         00002830
F7_000082                         00002838
F7_000083                         0000283C
F7_000084                         0000283E
F7_000085                         00002850
F7_000086                         0000286A
F7_000087                         00002872
F7_000088                         0000287C
F7_000089                         00002886
F7_000090                         00002892
F7_000092                         00002894
F7_EOF                            00002898
F7_SOF                            0000260C
F8_000016                         00002898
F8_000017                         000028B4
F8_000018                         000028C6
F8_000019                         000028CE
F8_000020                         000028DA
F8_000021                         000028DE
F8_000022                         000028DE
F8_000023                         000028E2
F8_000025                         000028E6
F8_000026                         00002902
F8_000027                         00002914
F8_000028                         0000291C
F8_000029                         0000292A
F8_000030                         0000292E
F8_000032                         0000293A
F8_000033                         0000293C
F8_000039                         0000293C
F8_000040                         00002940
F8_EOF                            00002942
F8_SOF                            00002898
F9_000013                         00002942
F9_000015                         00002956
F9_000016                         00002970
F9_000017                         0000297C
F9_000018                         0000297E
F9_000019                         0000297E
F9_000022                         00002988
F9_000023                         0000298C
F9_000024                         00002998
F9_000025                         000029A2
F9_EOF                            000029A4
F9_SOF                            00002942
F@CALL                            
F@JUMP                            
FAST                              00000001
FCMEN_OFF_1                       000000BF
FCMEN_ON_1                        000000FF
FERR                              00000002
FLAG                              _B#VR1,1
FLOAT_BIT                         
FLOAT_BYTE                        
FLOAT_DWORD                       
FLOAT_FLOAT                       
FLOAT_WORD                        
FLOAT_WREG                        
FLTS                              00000002
FR@LB104                          00000E5A
FR@LB106                          00000E8E
FR@LB12                           00000656
FR@LB168                          00001A0E
FR@LB170                          00001A46
FR@LB172                          00001A84
FR@LB203                          00002358
FR@LB22                           00000724
FR@LB221                          00002544
FR@LB229                          00002612
FR@LB24                           00000744
FR@LB240                          00002784
FR@LB244                          0000280C
FR@LB246                          00002840
FR@LB252                          00002946
FR@LB265                          00002A5A
FR@LB269                          00002AC4
FR@LB271                          00002ACA
FR@LB273                          00002B86
FR@LB277                          00002BEA
FR@LB279                          00002BF0
FR@LB281                          00002C8A
FR@LB289                          00002DB2
FR@LB291                          00002E24
FR@LB297                          00002F4E
FR@LB299                          00002FD4
FR@LB36                           00000832
FR@LB38                           0000084E
FR@LB45                           0000094C
FR@LB47                           00000990
FR@LB53                           00000AA2
FR@LB58                           00000AFC
FR@LB62                           00000B5E
FR@LB66                           00000C06
FR@LB68                           00000C4C
FR@LB70                           00000C60
FR@LB82                           00000D24
FR@LB86                           00000D72
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR0LH                            00000FEA
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR1LH                            00000FE2
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FSR2LH                            00000FDA
FTO@I_1                           000003F6
FTO@I_2                           0000040C
FTO@I_3                           0000040E
FTO@I_4                           00000412
FTO@I_5                           00000422
FTO@I_6                           00000440
FTO@I_ASSIGNW                     0000045A
FTO@I_OVERFLOW                    00000456
FTO@I_RES0                        00000452
FTO@I_RETURN                      00000464
G@OTO                             
GCEN                              00000007
GEN                               00000002
GEN3H                             00000003
GEN4                              00000004
GEN4H                             00000005
GENH                              00000006
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GO                                00000001
GO@TO                             
GOSLEEP                           00003010
GO_DONE                           00000001
GPR                               00000007
H@RSIN                            000001DE
HLVDCON                           00000FD2
HRI@L                             000001B2
HRI@L0                            000001AE
HRSIN                             000001D4
HRSIN2                            0000019C
HSERIAL_BAUD                      00002580
HSERIAL_RCSTA                     00000090
HSERIAL_SPBRG                     00000006
HSERIAL_TXSTA                     00000020
HSPLL_OSC_1                       000000F6
HS_OSC_1                          000000F2
IBF                               00000007
IBOV                              00000005
IDLEN                             00000007
IDLOC0                            00200000
IDLOC1                            00200001
IDLOC2                            00200002
IDLOC3                            00200003
IDLOC4                            00200004
IDLOC5                            00200005
IDLOC6                            00200006
IDLOC7                            00200007
IESO_OFF_1                        0000007F
IESO_ON_1                         000000FF
INDEX                             000003F0
INDEX2                            000003F1
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT_SD                           00002942
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INT@3232                          000003C8
INT@3232_REQ                      00000001
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTIO67_OSC_1                     000000F8
INTIO7_OSC_1                      000000F9
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
JUMP                              
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L@DIV                             0000028C
L@MOD                             0000028C
LABEL_WORD                        
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LCD#DTPIN                         0
LCD#DTPORT                        PORTD
LCD#ENPIN                         6
LCD#ENPORT                        PORTD
LCD#INTERFACE                     4
LCD#LINES                         2
LCD#RSPIN                         7
LCD#RSPORT                        PORTD
LCD#TYPE                          0
LCD@CLS                           00000036
LCD@CRS                           00000050
LOAD@MSTR                         000003B8
LOAD@MSTRL                        000003B8
LP_OSC_1                          000000F0
LST_PRM_NAME                      000003F2
LST_PRM_TYPE                      00000002
LVDCON                            HLVDCON
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVP_OFF_4                         000000FB
LVP_ON_4                          000000FF
MAIN@PROG@START                   000005C4
MAX_PARAMS                        0000000A
MCLRE_OFF_3                       0000007F
MCLRE_ON_3                        000000FF
MHA                               912
MHAH                              3
MLT32@BR                          000003A2
MLT32@LP                          00000380
MODNUM                            000003E6
MODNUM#0                          000003E6
MODNUM#1                          000003E7
MODNUM#2                          000003E8
MODNUM#3                          000003E9
MODNUM#4                          000003EA
MODNUM#5                          000003EB
MODNUM#6                          000003EC
MOVFW                             
MYCOUNT                           000003EF
MYNUM                             000003F5
MYNUM#0                           000003F5
MYNUM#1                           000003F6
MYNUM#2                           000003F7
MYNUM#3                           000003F8
N                                 00000004
NEGW                              NEGF WREG
NEXTTAG                           000029E0
NOT_A                             00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOU                               2
NUM_BIT                           
NUM_BYTE                          
NUM_DWORD                         
NUM_FLOAT                         
NUM_FSR0                          
NUM_FSR1                          
NUM_FSR2                          
NUM_MH                            10
NUM_MHE                           4
NUM_UH                            200
NUM_UHE                           3
NUM_WORD                          
NUM_WREG                          
NX@LB105                          00000E88
NX@LB107                          00000EC2
NX@LB13                           00000678
NX@LB169                          00001A3E
NX@LB171                          00001A7E
NX@LB173                          00001ABE
NX@LB204                          0000239A
NX@LB222                          000025CE
NX@LB23                           00000742
NX@LB230                          0000264C
NX@LB241                          000027B0
NX@LB245                          00002838
NX@LB247                          00002872
NX@LB25                           00000762
NX@LB253                          00002988
NX@LB266                          00002A94
NX@LB270                          00002B7E
NX@LB272                          00002B72
NX@LB274                          00002BBA
NX@LB278                          00002C86
NX@LB280                          00002C7A
NX@LB282                          00002CBE
NX@LB290                          00002E14
NX@LB292                          00002E86
NX@LB298                          00002F8A
NX@LB300                          0000300E
NX@LB37                           0000084C
NX@LB39                           00000868
NX@LB46                           00000A52
NX@LB48                           00000A40
NX@LB54                           00000AE8
NX@LB59                           00000B56
NX@LB63                           00000BBE
NX@LB67                           00000EEE
NX@LB69                           00000EDC
NX@LB71                           00000CD4
NX@LB83                           00000D6C
NX@LB87                           00000DBC
OBF                               00000006
OERR                              00000001
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OUT@DEC                           00000068
OUT@DECB                          00000062
OUT@DECC                          00000064
OV                                00000003
OVERLIBCODE                       0000239C
P                                 00000004
P1B                               00000005
P1C                               00000006
P1D                               00000007
P1M0                              00000006
P1M1                              00000007
PB@LB214                          000024AC
PB@LB215                          000024F4
PB@LB218                          0000250E
PB@LB228                          000025DE
PB@LB239                          00002752
PBADEN_OFF_3                      000000FD
PBADEN_ON_3                       000000FF
PBP#VAR0                          00000008
PBP#VAR0H                         00000009
PBP#VAR0HH                        0000000A
PBP#VAR0HHH                       0000000B
PBP#VAR1                          0000000C
PBP_AARG                          0000000D
PBP_AARGH                         0000000E
PBP_AARGHH                        0000000F
PBP_AARGHHH                       00000010
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PP0                               00000011
PP0H                              00000012
PP0HH                             00000013
PP0HHH                            00000014
PP1                               00000015
PP1H                              00000016
PP1HH                             00000017
PP1HHH                            00000018
PP2                               00000019
PP2H                              0000001A
PP2HH                             0000001B
PP2HHH                            0000001C
PP3                               0000001D
PP3H                              0000001E
PP4                               0000001F
PP5                               00000020
PP6                               00000021
PP6H                              00000022
PP7                               00000023
PP7H                              00000024
PP7HH                             00000025
PP7HHH                            00000026
PP8                               00000027
PP8H                              00000028
PPZ                               00000029
PPZH                              0000002A
PPZHH                             0000002B
PPZHHH                            0000002C
PR2                               00000FCB
PR@CC                             0000016E
PR@CM                             00000150
PR@EX                             00000198
PR@LP                             0000017A
PR@SD                             00000176
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PRINT                             000000F8
PRINT@MSTR                        000000E8
PRINT@MSTRL                       000000E8
PRM_1                             00000008
PRM_10                            00000000
PRM_2                             00000000
PRM_3                             00000000
PRM_4                             00000000
PRM_5                             00000000
PRM_6                             00000000
PRM_7                             00000000
PRM_8                             00000000
PRM_9                             00000000
PRM_COUNT                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRODLH                            00000FF4
PRSEN                             00000007
PRT@1                             00000152
PRT@MTEXT                         000000F6
PRT@MTL1                          000000EC
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PWM1CON                           00000FB7
PWRT_OFF_2                        000000FF
PWRT_ON_2                         000000FE
R                                 00000002
R@B                               
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANK                          00000000
RAM_BANKS                         15
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIO6_OSC_1                       000000F7
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RC_OSC_1                          000000F3
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_MOD                          00002FD0
READ_SD                           0000260C
READ_TAG                          000024AE
RESPONSE                          000003ED
RETURN_TYPE                       00000002
RETURN_VAR                        000003ED
RFIDENABLE                        PORTD,4
RI                                00000004
RLF                               
RRF                               
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
S@B                               
SB@STROUT                         000000C6
SB@STROUTLP                       000000C8
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SD_ADDRESS                        00000038
SD_ADDRESSH                       00000039
SD_ADDRESSHH                      0000003A
SD_ADDRESSHHH                     0000003B
SD_APPEND_FILE                    
SD_APPEND_FILE#REQ                1
SD_APPEND_FILE_RETURN             00000001
SD_APPEND_FILE_SUB                00001BA8
SD_ASSEMBLE_FAT_SECTOR            00000F5C
SD_ASSEMBLE_FAT_SECTOR_END_CLOSE  00000FFA
SD_ASSEMBLE_FAT_SECTOR_END_CONT   00000FC8
SD_BOOT_RECORD                    00000265
SD_BOOT_RECORDH                   00000266
SD_BUFFER0                        00000041
SD_BUFFER0#0                      00000041
SD_BUFFER0#1                      00000042
SD_BUFFER0#10                     0000004B
SD_BUFFER0#100                    000000A5
SD_BUFFER0#101                    000000A6
SD_BUFFER0#102                    000000A7
SD_BUFFER0#103                    000000A8
SD_BUFFER0#104                    000000A9
SD_BUFFER0#105                    000000AA
SD_BUFFER0#106                    000000AB
SD_BUFFER0#107                    000000AC
SD_BUFFER0#108                    000000AD
SD_BUFFER0#109                    000000AE
SD_BUFFER0#11                     0000004C
SD_BUFFER0#110                    000000AF
SD_BUFFER0#111                    000000B0
SD_BUFFER0#112                    000000B1
SD_BUFFER0#113                    000000B2
SD_BUFFER0#114                    000000B3
SD_BUFFER0#115                    000000B4
SD_BUFFER0#116                    000000B5
SD_BUFFER0#117                    000000B6
SD_BUFFER0#118                    000000B7
SD_BUFFER0#119                    000000B8
SD_BUFFER0#12                     0000004D
SD_BUFFER0#120                    000000B9
SD_BUFFER0#121                    000000BA
SD_BUFFER0#122                    000000BB
SD_BUFFER0#123                    000000BC
SD_BUFFER0#124                    000000BD
SD_BUFFER0#125                    000000BE
SD_BUFFER0#126                    000000BF
SD_BUFFER0#127                    000000C0
SD_BUFFER0#128                    000000C1
SD_BUFFER0#129                    000000C2
SD_BUFFER0#13                     0000004E
SD_BUFFER0#130                    000000C3
SD_BUFFER0#131                    000000C4
SD_BUFFER0#132                    000000C5
SD_BUFFER0#133                    000000C6
SD_BUFFER0#134                    000000C7
SD_BUFFER0#135                    000000C8
SD_BUFFER0#136                    000000C9
SD_BUFFER0#137                    000000CA
SD_BUFFER0#138                    000000CB
SD_BUFFER0#139                    000000CC
SD_BUFFER0#14                     0000004F
SD_BUFFER0#140                    000000CD
SD_BUFFER0#141                    000000CE
SD_BUFFER0#142                    000000CF
SD_BUFFER0#143                    000000D0
SD_BUFFER0#144                    000000D1
SD_BUFFER0#145                    000000D2
SD_BUFFER0#146                    000000D3
SD_BUFFER0#147                    000000D4
SD_BUFFER0#148                    000000D5
SD_BUFFER0#149                    000000D6
SD_BUFFER0#15                     00000050
SD_BUFFER0#150                    000000D7
SD_BUFFER0#151                    000000D8
SD_BUFFER0#152                    000000D9
SD_BUFFER0#153                    000000DA
SD_BUFFER0#154                    000000DB
SD_BUFFER0#155                    000000DC
SD_BUFFER0#156                    000000DD
SD_BUFFER0#157                    000000DE
SD_BUFFER0#158                    000000DF
SD_BUFFER0#159                    000000E0
SD_BUFFER0#16                     00000051
SD_BUFFER0#160                    000000E1
SD_BUFFER0#161                    000000E2
SD_BUFFER0#162                    000000E3
SD_BUFFER0#163                    000000E4
SD_BUFFER0#164                    000000E5
SD_BUFFER0#165                    000000E6
SD_BUFFER0#166                    000000E7
SD_BUFFER0#167                    000000E8
SD_BUFFER0#168                    000000E9
SD_BUFFER0#169                    000000EA
SD_BUFFER0#17                     00000052
SD_BUFFER0#170                    000000EB
SD_BUFFER0#171                    000000EC
SD_BUFFER0#172                    000000ED
SD_BUFFER0#173                    000000EE
SD_BUFFER0#174                    000000EF
SD_BUFFER0#175                    000000F0
SD_BUFFER0#176                    000000F1
SD_BUFFER0#177                    000000F2
SD_BUFFER0#178                    000000F3
SD_BUFFER0#179                    000000F4
SD_BUFFER0#18                     00000053
SD_BUFFER0#180                    000000F5
SD_BUFFER0#181                    000000F6
SD_BUFFER0#182                    000000F7
SD_BUFFER0#183                    000000F8
SD_BUFFER0#184                    000000F9
SD_BUFFER0#185                    000000FA
SD_BUFFER0#186                    000000FB
SD_BUFFER0#187                    000000FC
SD_BUFFER0#188                    000000FD
SD_BUFFER0#189                    000000FE
SD_BUFFER0#19                     00000054
SD_BUFFER0#190                    000000FF
SD_BUFFER0#191                    00000100
SD_BUFFER0#192                    00000101
SD_BUFFER0#193                    00000102
SD_BUFFER0#194                    00000103
SD_BUFFER0#195                    00000104
SD_BUFFER0#196                    00000105
SD_BUFFER0#197                    00000106
SD_BUFFER0#198                    00000107
SD_BUFFER0#199                    00000108
SD_BUFFER0#2                      00000043
SD_BUFFER0#20                     00000055
SD_BUFFER0#200                    00000109
SD_BUFFER0#201                    0000010A
SD_BUFFER0#202                    0000010B
SD_BUFFER0#203                    0000010C
SD_BUFFER0#204                    0000010D
SD_BUFFER0#205                    0000010E
SD_BUFFER0#206                    0000010F
SD_BUFFER0#207                    00000110
SD_BUFFER0#208                    00000111
SD_BUFFER0#209                    00000112
SD_BUFFER0#21                     00000056
SD_BUFFER0#210                    00000113
SD_BUFFER0#211                    00000114
SD_BUFFER0#212                    00000115
SD_BUFFER0#213                    00000116
SD_BUFFER0#214                    00000117
SD_BUFFER0#215                    00000118
SD_BUFFER0#216                    00000119
SD_BUFFER0#217                    0000011A
SD_BUFFER0#218                    0000011B
SD_BUFFER0#219                    0000011C
SD_BUFFER0#22                     00000057
SD_BUFFER0#220                    0000011D
SD_BUFFER0#221                    0000011E
SD_BUFFER0#222                    0000011F
SD_BUFFER0#223                    00000120
SD_BUFFER0#224                    00000121
SD_BUFFER0#225                    00000122
SD_BUFFER0#226                    00000123
SD_BUFFER0#227                    00000124
SD_BUFFER0#228                    00000125
SD_BUFFER0#229                    00000126
SD_BUFFER0#23                     00000058
SD_BUFFER0#230                    00000127
SD_BUFFER0#231                    00000128
SD_BUFFER0#232                    00000129
SD_BUFFER0#233                    0000012A
SD_BUFFER0#234                    0000012B
SD_BUFFER0#235                    0000012C
SD_BUFFER0#236                    0000012D
SD_BUFFER0#237                    0000012E
SD_BUFFER0#238                    0000012F
SD_BUFFER0#239                    00000130
SD_BUFFER0#24                     00000059
SD_BUFFER0#240                    00000131
SD_BUFFER0#241                    00000132
SD_BUFFER0#242                    00000133
SD_BUFFER0#243                    00000134
SD_BUFFER0#244                    00000135
SD_BUFFER0#245                    00000136
SD_BUFFER0#246                    00000137
SD_BUFFER0#247                    00000138
SD_BUFFER0#248                    00000139
SD_BUFFER0#249                    0000013A
SD_BUFFER0#25                     0000005A
SD_BUFFER0#250                    0000013B
SD_BUFFER0#251                    0000013C
SD_BUFFER0#252                    0000013D
SD_BUFFER0#253                    0000013E
SD_BUFFER0#254                    0000013F
SD_BUFFER0#255                    00000140
SD_BUFFER0#26                     0000005B
SD_BUFFER0#27                     0000005C
SD_BUFFER0#28                     0000005D
SD_BUFFER0#29                     0000005E
SD_BUFFER0#3                      00000044
SD_BUFFER0#30                     0000005F
SD_BUFFER0#31                     00000060
SD_BUFFER0#32                     00000061
SD_BUFFER0#33                     00000062
SD_BUFFER0#34                     00000063
SD_BUFFER0#35                     00000064
SD_BUFFER0#36                     00000065
SD_BUFFER0#37                     00000066
SD_BUFFER0#38                     00000067
SD_BUFFER0#39                     00000068
SD_BUFFER0#4                      00000045
SD_BUFFER0#40                     00000069
SD_BUFFER0#41                     0000006A
SD_BUFFER0#42                     0000006B
SD_BUFFER0#43                     0000006C
SD_BUFFER0#44                     0000006D
SD_BUFFER0#45                     0000006E
SD_BUFFER0#46                     0000006F
SD_BUFFER0#47                     00000070
SD_BUFFER0#48                     00000071
SD_BUFFER0#49                     00000072
SD_BUFFER0#5                      00000046
SD_BUFFER0#50                     00000073
SD_BUFFER0#51                     00000074
SD_BUFFER0#52                     00000075
SD_BUFFER0#53                     00000076
SD_BUFFER0#54                     00000077
SD_BUFFER0#55                     00000078
SD_BUFFER0#56                     00000079
SD_BUFFER0#57                     0000007A
SD_BUFFER0#58                     0000007B
SD_BUFFER0#59                     0000007C
SD_BUFFER0#6                      00000047
SD_BUFFER0#60                     0000007D
SD_BUFFER0#61                     0000007E
SD_BUFFER0#62                     0000007F
SD_BUFFER0#63                     00000080
SD_BUFFER0#64                     00000081
SD_BUFFER0#65                     00000082
SD_BUFFER0#66                     00000083
SD_BUFFER0#67                     00000084
SD_BUFFER0#68                     00000085
SD_BUFFER0#69                     00000086
SD_BUFFER0#7                      00000048
SD_BUFFER0#70                     00000087
SD_BUFFER0#71                     00000088
SD_BUFFER0#72                     00000089
SD_BUFFER0#73                     0000008A
SD_BUFFER0#74                     0000008B
SD_BUFFER0#75                     0000008C
SD_BUFFER0#76                     0000008D
SD_BUFFER0#77                     0000008E
SD_BUFFER0#78                     0000008F
SD_BUFFER0#79                     00000090
SD_BUFFER0#8                      00000049
SD_BUFFER0#80                     00000091
SD_BUFFER0#81                     00000092
SD_BUFFER0#82                     00000093
SD_BUFFER0#83                     00000094
SD_BUFFER0#84                     00000095
SD_BUFFER0#85                     00000096
SD_BUFFER0#86                     00000097
SD_BUFFER0#87                     00000098
SD_BUFFER0#88                     00000099
SD_BUFFER0#89                     0000009A
SD_BUFFER0#9                      0000004A
SD_BUFFER0#90                     0000009B
SD_BUFFER0#91                     0000009C
SD_BUFFER0#92                     0000009D
SD_BUFFER0#93                     0000009E
SD_BUFFER0#94                     0000009F
SD_BUFFER0#95                     000000A0
SD_BUFFER0#96                     000000A1
SD_BUFFER0#97                     000000A2
SD_BUFFER0#98                     000000A3
SD_BUFFER0#99                     000000A4
SD_BUFFER1                        00000141
SD_BUFFER1#0                      00000141
SD_BUFFER1#1                      00000142
SD_BUFFER1#10                     0000014B
SD_BUFFER1#100                    000001A5
SD_BUFFER1#101                    000001A6
SD_BUFFER1#102                    000001A7
SD_BUFFER1#103                    000001A8
SD_BUFFER1#104                    000001A9
SD_BUFFER1#105                    000001AA
SD_BUFFER1#106                    000001AB
SD_BUFFER1#107                    000001AC
SD_BUFFER1#108                    000001AD
SD_BUFFER1#109                    000001AE
SD_BUFFER1#11                     0000014C
SD_BUFFER1#110                    000001AF
SD_BUFFER1#111                    000001B0
SD_BUFFER1#112                    000001B1
SD_BUFFER1#113                    000001B2
SD_BUFFER1#114                    000001B3
SD_BUFFER1#115                    000001B4
SD_BUFFER1#116                    000001B5
SD_BUFFER1#117                    000001B6
SD_BUFFER1#118                    000001B7
SD_BUFFER1#119                    000001B8
SD_BUFFER1#12                     0000014D
SD_BUFFER1#120                    000001B9
SD_BUFFER1#121                    000001BA
SD_BUFFER1#122                    000001BB
SD_BUFFER1#123                    000001BC
SD_BUFFER1#124                    000001BD
SD_BUFFER1#125                    000001BE
SD_BUFFER1#126                    000001BF
SD_BUFFER1#127                    000001C0
SD_BUFFER1#128                    000001C1
SD_BUFFER1#129                    000001C2
SD_BUFFER1#13                     0000014E
SD_BUFFER1#130                    000001C3
SD_BUFFER1#131                    000001C4
SD_BUFFER1#132                    000001C5
SD_BUFFER1#133                    000001C6
SD_BUFFER1#134                    000001C7
SD_BUFFER1#135                    000001C8
SD_BUFFER1#136                    000001C9
SD_BUFFER1#137                    000001CA
SD_BUFFER1#138                    000001CB
SD_BUFFER1#139                    000001CC
SD_BUFFER1#14                     0000014F
SD_BUFFER1#140                    000001CD
SD_BUFFER1#141                    000001CE
SD_BUFFER1#142                    000001CF
SD_BUFFER1#143                    000001D0
SD_BUFFER1#144                    000001D1
SD_BUFFER1#145                    000001D2
SD_BUFFER1#146                    000001D3
SD_BUFFER1#147                    000001D4
SD_BUFFER1#148                    000001D5
SD_BUFFER1#149                    000001D6
SD_BUFFER1#15                     00000150
SD_BUFFER1#150                    000001D7
SD_BUFFER1#151                    000001D8
SD_BUFFER1#152                    000001D9
SD_BUFFER1#153                    000001DA
SD_BUFFER1#154                    000001DB
SD_BUFFER1#155                    000001DC
SD_BUFFER1#156                    000001DD
SD_BUFFER1#157                    000001DE
SD_BUFFER1#158                    000001DF
SD_BUFFER1#159                    000001E0
SD_BUFFER1#16                     00000151
SD_BUFFER1#160                    000001E1
SD_BUFFER1#161                    000001E2
SD_BUFFER1#162                    000001E3
SD_BUFFER1#163                    000001E4
SD_BUFFER1#164                    000001E5
SD_BUFFER1#165                    000001E6
SD_BUFFER1#166                    000001E7
SD_BUFFER1#167                    000001E8
SD_BUFFER1#168                    000001E9
SD_BUFFER1#169                    000001EA
SD_BUFFER1#17                     00000152
SD_BUFFER1#170                    000001EB
SD_BUFFER1#171                    000001EC
SD_BUFFER1#172                    000001ED
SD_BUFFER1#173                    000001EE
SD_BUFFER1#174                    000001EF
SD_BUFFER1#175                    000001F0
SD_BUFFER1#176                    000001F1
SD_BUFFER1#177                    000001F2
SD_BUFFER1#178                    000001F3
SD_BUFFER1#179                    000001F4
SD_BUFFER1#18                     00000153
SD_BUFFER1#180                    000001F5
SD_BUFFER1#181                    000001F6
SD_BUFFER1#182                    000001F7
SD_BUFFER1#183                    000001F8
SD_BUFFER1#184                    000001F9
SD_BUFFER1#185                    000001FA
SD_BUFFER1#186                    000001FB
SD_BUFFER1#187                    000001FC
SD_BUFFER1#188                    000001FD
SD_BUFFER1#189                    000001FE
SD_BUFFER1#19                     00000154
SD_BUFFER1#190                    000001FF
SD_BUFFER1#191                    00000200
SD_BUFFER1#192                    00000201
SD_BUFFER1#193                    00000202
SD_BUFFER1#194                    00000203
SD_BUFFER1#195                    00000204
SD_BUFFER1#196                    00000205
SD_BUFFER1#197                    00000206
SD_BUFFER1#198                    00000207
SD_BUFFER1#199                    00000208
SD_BUFFER1#2                      00000143
SD_BUFFER1#20                     00000155
SD_BUFFER1#200                    00000209
SD_BUFFER1#201                    0000020A
SD_BUFFER1#202                    0000020B
SD_BUFFER1#203                    0000020C
SD_BUFFER1#204                    0000020D
SD_BUFFER1#205                    0000020E
SD_BUFFER1#206                    0000020F
SD_BUFFER1#207                    00000210
SD_BUFFER1#208                    00000211
SD_BUFFER1#209                    00000212
SD_BUFFER1#21                     00000156
SD_BUFFER1#210                    00000213
SD_BUFFER1#211                    00000214
SD_BUFFER1#212                    00000215
SD_BUFFER1#213                    00000216
SD_BUFFER1#214                    00000217
SD_BUFFER1#215                    00000218
SD_BUFFER1#216                    00000219
SD_BUFFER1#217                    0000021A
SD_BUFFER1#218                    0000021B
SD_BUFFER1#219                    0000021C
SD_BUFFER1#22                     00000157
SD_BUFFER1#220                    0000021D
SD_BUFFER1#221                    0000021E
SD_BUFFER1#222                    0000021F
SD_BUFFER1#223                    00000220
SD_BUFFER1#224                    00000221
SD_BUFFER1#225                    00000222
SD_BUFFER1#226                    00000223
SD_BUFFER1#227                    00000224
SD_BUFFER1#228                    00000225
SD_BUFFER1#229                    00000226
SD_BUFFER1#23                     00000158
SD_BUFFER1#230                    00000227
SD_BUFFER1#231                    00000228
SD_BUFFER1#232                    00000229
SD_BUFFER1#233                    0000022A
SD_BUFFER1#234                    0000022B
SD_BUFFER1#235                    0000022C
SD_BUFFER1#236                    0000022D
SD_BUFFER1#237                    0000022E
SD_BUFFER1#238                    0000022F
SD_BUFFER1#239                    00000230
SD_BUFFER1#24                     00000159
SD_BUFFER1#240                    00000231
SD_BUFFER1#241                    00000232
SD_BUFFER1#242                    00000233
SD_BUFFER1#243                    00000234
SD_BUFFER1#244                    00000235
SD_BUFFER1#245                    00000236
SD_BUFFER1#246                    00000237
SD_BUFFER1#247                    00000238
SD_BUFFER1#248                    00000239
SD_BUFFER1#249                    0000023A
SD_BUFFER1#25                     0000015A
SD_BUFFER1#250                    0000023B
SD_BUFFER1#251                    0000023C
SD_BUFFER1#252                    0000023D
SD_BUFFER1#253                    0000023E
SD_BUFFER1#254                    0000023F
SD_BUFFER1#255                    00000240
SD_BUFFER1#26                     0000015B
SD_BUFFER1#27                     0000015C
SD_BUFFER1#28                     0000015D
SD_BUFFER1#29                     0000015E
SD_BUFFER1#3                      00000144
SD_BUFFER1#30                     0000015F
SD_BUFFER1#31                     00000160
SD_BUFFER1#32                     00000161
SD_BUFFER1#33                     00000162
SD_BUFFER1#34                     00000163
SD_BUFFER1#35                     00000164
SD_BUFFER1#36                     00000165
SD_BUFFER1#37                     00000166
SD_BUFFER1#38                     00000167
SD_BUFFER1#39                     00000168
SD_BUFFER1#4                      00000145
SD_BUFFER1#40                     00000169
SD_BUFFER1#41                     0000016A
SD_BUFFER1#42                     0000016B
SD_BUFFER1#43                     0000016C
SD_BUFFER1#44                     0000016D
SD_BUFFER1#45                     0000016E
SD_BUFFER1#46                     0000016F
SD_BUFFER1#47                     00000170
SD_BUFFER1#48                     00000171
SD_BUFFER1#49                     00000172
SD_BUFFER1#5                      00000146
SD_BUFFER1#50                     00000173
SD_BUFFER1#51                     00000174
SD_BUFFER1#52                     00000175
SD_BUFFER1#53                     00000176
SD_BUFFER1#54                     00000177
SD_BUFFER1#55                     00000178
SD_BUFFER1#56                     00000179
SD_BUFFER1#57                     0000017A
SD_BUFFER1#58                     0000017B
SD_BUFFER1#59                     0000017C
SD_BUFFER1#6                      00000147
SD_BUFFER1#60                     0000017D
SD_BUFFER1#61                     0000017E
SD_BUFFER1#62                     0000017F
SD_BUFFER1#63                     00000180
SD_BUFFER1#64                     00000181
SD_BUFFER1#65                     00000182
SD_BUFFER1#66                     00000183
SD_BUFFER1#67                     00000184
SD_BUFFER1#68                     00000185
SD_BUFFER1#69                     00000186
SD_BUFFER1#7                      00000148
SD_BUFFER1#70                     00000187
SD_BUFFER1#71                     00000188
SD_BUFFER1#72                     00000189
SD_BUFFER1#73                     0000018A
SD_BUFFER1#74                     0000018B
SD_BUFFER1#75                     0000018C
SD_BUFFER1#76                     0000018D
SD_BUFFER1#77                     0000018E
SD_BUFFER1#78                     0000018F
SD_BUFFER1#79                     00000190
SD_BUFFER1#8                      00000149
SD_BUFFER1#80                     00000191
SD_BUFFER1#81                     00000192
SD_BUFFER1#82                     00000193
SD_BUFFER1#83                     00000194
SD_BUFFER1#84                     00000195
SD_BUFFER1#85                     00000196
SD_BUFFER1#86                     00000197
SD_BUFFER1#87                     00000198
SD_BUFFER1#88                     00000199
SD_BUFFER1#89                     0000019A
SD_BUFFER1#9                      0000014A
SD_BUFFER1#90                     0000019B
SD_BUFFER1#91                     0000019C
SD_BUFFER1#92                     0000019D
SD_BUFFER1#93                     0000019E
SD_BUFFER1#94                     0000019F
SD_BUFFER1#95                     000001A0
SD_BUFFER1#96                     000001A1
SD_BUFFER1#97                     000001A2
SD_BUFFER1#98                     000001A3
SD_BUFFER1#99                     000001A4
SD_BUFFER_IDX                     00000247
SD_BUFFER_IDXH                    00000248
SD_BUFFER_POS                     0000024E
SD_BUFFER_POSH                    0000024F
SD_BYTE0                          00000241
SD_BYTE1                          00000242
SD_BYTE2                          00000243
SD_BYTE3                          00000244
SD_BYTE4                          00000245
SD_BYTE5                          00000246
SD_BYTER                          00000032
SD_BYTES_PER_SEC                  0000025F
SD_BYTES_PER_SECH                 00000260
SD_BYTES_READ                     000002E1
SD_BYTES_READH                    000002E2
SD_BYTES_READHH                   000002E3
SD_BYTES_READHHH                  000002E4
SD_BYTE_RW                        00000249
SD_CHECK_FOR_FILE                 
SD_CHECK_FOR_FILE#REQ             1
SD_CHECK_FOR_FILE_RETURN          00000001
SD_CHECK_FOR_FILE_SUB             000012FC
SD_CLK                            PORTC,3
SD_CLOSE_FILE                     
SD_CLOSE_FILE#REQ                 1
SD_CLOSE_FILE_RETURN              00000000
SD_CLOSE_FILE_SUB                 00001494
SD_CLUSTER_NUM                    000002C5
SD_CLUSTER_NUMH                   000002C6
SD_CLUSTER_NUM_PREV               000002C7
SD_CLUSTER_NUM_PREVH              000002C8
SD_CLUSTER_SEQ_IDX                000002DA
SD_CLUSTER_SEQ_IDXH               000002DB
SD_CLUSTER_SEQ_IDX_PREV           000002DE
SD_CLUSTER_SEQ_IDX_PREVH          000002DF
SD_CLUSTER_SEQ_NUM                000002D8
SD_CLUSTER_SEQ_NUMH               000002D9
SD_CLUSTER_SEQ_NUM_PREV           000002DC
SD_CLUSTER_SEQ_NUM_PREVH          000002DD
SD_CS                             PORTC,2
SD_DATA_AREA                      00000273
SD_DATA_AREAH                     00000274
SD_DATA_AREAHH                    00000275
SD_DATA_AREAHHH                   00000276
SD_DATA_BUFFER_POS                0000028F
SD_DATA_BUFFER_POSH               00000290
SD_DATA_IO                        0000024D
SD_DATA_SEC                       0000028B
SD_DATA_SECH                      0000028C
SD_DATA_SECHH                     0000028D
SD_DATA_SECHHH                    0000028E
SD_DAY                            000002EF
SD_DELETE_FILE                    
SD_DELETE_FILE#REQ                1
SD_DELETE_FILE_RETURN             00000000
SD_DELETE_FILE_SUB                00001F10
SD_DETECT                         PORTA,1
SD_DI                             PORTC,5
SD_DIR_DIRECTION                  000002E8
SD_DISK_SIZE_KB                   SD_BYTES_READ
SD_DISK_SIZE_KBH                  SD_BYTES_READH
SD_DISK_SIZE_KBHH                 SD_BYTES_READHH
SD_DISK_SIZE_KBHHH                SD_BYTES_READHHH
SD_DO                             PORTC,4
SD_EOF                            _B#VR1,0
SD_EXTENDED_RETURN                0000024B
SD_EXTENDED_RETURN_INT            000002E9
SD_EXTENDED_RETURN_ROOT_DIR       0000024C
SD_FAT1                           00000267
SD_FAT1H                          00000268
SD_FAT1HH                         00000269
SD_FAT1HHH                        0000026A
SD_FAT2                           0000026B
SD_FAT2H                          0000026C
SD_FAT2HH                         0000026D
SD_FAT2HHH                        0000026E
SD_FAT_BUFFER_POS                 0000027D
SD_FAT_BUFFER_POSH                0000027E
SD_FAT_BUFFER_POS_PREV            00000283
SD_FAT_BUFFER_POS_PREVH           00000284
SD_FAT_ENTRY                      00000277
SD_FAT_ENTRYH                     00000278
SD_FAT_SEC                        00000279
SD_FAT_SECH                       0000027A
SD_FAT_SECHH                      0000027B
SD_FAT_SECHHH                     0000027C
SD_FAT_SEC_PREV                   0000027F
SD_FAT_SEC_PREVH                  00000280
SD_FAT_SEC_PREVHH                 00000281
SD_FAT_SEC_PREVHHH                00000282
SD_FILE_EXT                       0000029A
SD_FILE_EXT#0                     0000029A
SD_FILE_EXT#1                     0000029B
SD_FILE_EXT#2                     0000029C
SD_FILE_EXT#3                     0000029D
SD_FILE_NAME                      00000291
SD_FILE_NAME#0                    00000291
SD_FILE_NAME#1                    00000292
SD_FILE_NAME#2                    00000293
SD_FILE_NAME#3                    00000294
SD_FILE_NAME#4                    00000295
SD_FILE_NAME#5                    00000296
SD_FILE_NAME#6                    00000297
SD_FILE_NAME#7                    00000298
SD_FILE_NAME#8                    00000299
SD_FILE_NUM                       000002E6
SD_FILE_NUMH                      000002E7
SD_FILE_SIZE                      000002CC
SD_FILE_SIZEH                     000002CD
SD_FILE_SIZEHH                    000002CE
SD_FILE_SIZEHHH                   000002CF
SD_FILE_SIZE_LEFT                 000002EA
SD_FILE_SIZE_LEFTH                000002EB
SD_FILE_SIZE_LEFTHH               000002EC
SD_FILE_SIZE_LEFTHHH              000002ED
SD_FIND_FREE_CLUSTER              00000904
SD_FIND_ROOT_DIR_ENTRY            00000BC0
SD_FIND_ROOT_DIR_ENTRY_F          000002E0
SD_FIRST                          0
SD_FREE_CLUSTER_NUM               SD_CLUSTER_SEQ_NUM
SD_FREE_CLUSTER_NUMH              SD_CLUSTER_SEQ_NUMH
SD_FREE_SPACE_KB                  SD_BYTES_READ
SD_FREE_SPACE_KBH                 SD_BYTES_READH
SD_FREE_SPACE_KBHH                SD_BYTES_READHH
SD_FREE_SPACE_KBHHH               SD_BYTES_READHHH
SD_HOURS                          000002F5
SD_IDX                            00000033
SD_INIT_FS_MSSP                   
SD_INIT_FS_MSSP#REQ               1
SD_INIT_FS_MSSP_LST_PRM           00000000
SD_INIT_FS_MSSP_RETURN            00000001
SD_INIT_FS_MSSP_SUB               000020B6
SD_INIT_MSSP                      
SD_INIT_MSSP#REQ                  1
SD_INIT_MSSP_LST_PRM              00000001
SD_INIT_MSSP_RETURN               00000001
SD_INIT_MSSP_SUB                  000013CC
SD_INSERT_BYTE_INTO_BUFFER        00000F20
SD_IO                             000003EE
SD_IO_BYTE                        000002D0
SD_IO_STRING                      000002FB
SD_IO_STRING#0                    000002FB
SD_IO_STRING#1                    000002FC
SD_IO_STRING#10                   00000305
SD_IO_STRING#100                  0000035F
SD_IO_STRING#101                  00000360
SD_IO_STRING#102                  00000361
SD_IO_STRING#103                  00000362
SD_IO_STRING#104                  00000363
SD_IO_STRING#105                  00000364
SD_IO_STRING#106                  00000365
SD_IO_STRING#107                  00000366
SD_IO_STRING#108                  00000367
SD_IO_STRING#109                  00000368
SD_IO_STRING#11                   00000306
SD_IO_STRING#110                  00000369
SD_IO_STRING#111                  0000036A
SD_IO_STRING#112                  0000036B
SD_IO_STRING#113                  0000036C
SD_IO_STRING#114                  0000036D
SD_IO_STRING#115                  0000036E
SD_IO_STRING#116                  0000036F
SD_IO_STRING#117                  00000370
SD_IO_STRING#118                  00000371
SD_IO_STRING#119                  00000372
SD_IO_STRING#12                   00000307
SD_IO_STRING#120                  00000373
SD_IO_STRING#121                  00000374
SD_IO_STRING#122                  00000375
SD_IO_STRING#123                  00000376
SD_IO_STRING#124                  00000377
SD_IO_STRING#125                  00000378
SD_IO_STRING#126                  00000379
SD_IO_STRING#127                  0000037A
SD_IO_STRING#128                  0000037B
SD_IO_STRING#129                  0000037C
SD_IO_STRING#13                   00000308
SD_IO_STRING#130                  0000037D
SD_IO_STRING#131                  0000037E
SD_IO_STRING#132                  0000037F
SD_IO_STRING#133                  00000380
SD_IO_STRING#134                  00000381
SD_IO_STRING#135                  00000382
SD_IO_STRING#136                  00000383
SD_IO_STRING#137                  00000384
SD_IO_STRING#138                  00000385
SD_IO_STRING#139                  00000386
SD_IO_STRING#14                   00000309
SD_IO_STRING#140                  00000387
SD_IO_STRING#141                  00000388
SD_IO_STRING#142                  00000389
SD_IO_STRING#143                  0000038A
SD_IO_STRING#144                  0000038B
SD_IO_STRING#145                  0000038C
SD_IO_STRING#146                  0000038D
SD_IO_STRING#147                  0000038E
SD_IO_STRING#148                  0000038F
SD_IO_STRING#149                  00000390
SD_IO_STRING#15                   0000030A
SD_IO_STRING#150                  00000391
SD_IO_STRING#151                  00000392
SD_IO_STRING#152                  00000393
SD_IO_STRING#153                  00000394
SD_IO_STRING#154                  00000395
SD_IO_STRING#155                  00000396
SD_IO_STRING#156                  00000397
SD_IO_STRING#157                  00000398
SD_IO_STRING#158                  00000399
SD_IO_STRING#159                  0000039A
SD_IO_STRING#16                   0000030B
SD_IO_STRING#160                  0000039B
SD_IO_STRING#161                  0000039C
SD_IO_STRING#162                  0000039D
SD_IO_STRING#163                  0000039E
SD_IO_STRING#164                  0000039F
SD_IO_STRING#165                  000003A0
SD_IO_STRING#166                  000003A1
SD_IO_STRING#167                  000003A2
SD_IO_STRING#168                  000003A3
SD_IO_STRING#169                  000003A4
SD_IO_STRING#17                   0000030C
SD_IO_STRING#170                  000003A5
SD_IO_STRING#171                  000003A6
SD_IO_STRING#172                  000003A7
SD_IO_STRING#173                  000003A8
SD_IO_STRING#174                  000003A9
SD_IO_STRING#175                  000003AA
SD_IO_STRING#176                  000003AB
SD_IO_STRING#177                  000003AC
SD_IO_STRING#178                  000003AD
SD_IO_STRING#179                  000003AE
SD_IO_STRING#18                   0000030D
SD_IO_STRING#180                  000003AF
SD_IO_STRING#181                  000003B0
SD_IO_STRING#182                  000003B1
SD_IO_STRING#183                  000003B2
SD_IO_STRING#184                  000003B3
SD_IO_STRING#185                  000003B4
SD_IO_STRING#186                  000003B5
SD_IO_STRING#187                  000003B6
SD_IO_STRING#188                  000003B7
SD_IO_STRING#189                  000003B8
SD_IO_STRING#19                   0000030E
SD_IO_STRING#190                  000003B9
SD_IO_STRING#191                  000003BA
SD_IO_STRING#192                  000003BB
SD_IO_STRING#193                  000003BC
SD_IO_STRING#194                  000003BD
SD_IO_STRING#195                  000003BE
SD_IO_STRING#196                  000003BF
SD_IO_STRING#197                  000003C0
SD_IO_STRING#198                  000003C1
SD_IO_STRING#199                  000003C2
SD_IO_STRING#2                    000002FD
SD_IO_STRING#20                   0000030F
SD_IO_STRING#200                  000003C3
SD_IO_STRING#21                   00000310
SD_IO_STRING#22                   00000311
SD_IO_STRING#23                   00000312
SD_IO_STRING#24                   00000313
SD_IO_STRING#25                   00000314
SD_IO_STRING#26                   00000315
SD_IO_STRING#27                   00000316
SD_IO_STRING#28                   00000317
SD_IO_STRING#29                   00000318
SD_IO_STRING#3                    000002FE
SD_IO_STRING#30                   00000319
SD_IO_STRING#31                   0000031A
SD_IO_STRING#32                   0000031B
SD_IO_STRING#33                   0000031C
SD_IO_STRING#34                   0000031D
SD_IO_STRING#35                   0000031E
SD_IO_STRING#36                   0000031F
SD_IO_STRING#37                   00000320
SD_IO_STRING#38                   00000321
SD_IO_STRING#39                   00000322
SD_IO_STRING#4                    000002FF
SD_IO_STRING#40                   00000323
SD_IO_STRING#41                   00000324
SD_IO_STRING#42                   00000325
SD_IO_STRING#43                   00000326
SD_IO_STRING#44                   00000327
SD_IO_STRING#45                   00000328
SD_IO_STRING#46                   00000329
SD_IO_STRING#47                   0000032A
SD_IO_STRING#48                   0000032B
SD_IO_STRING#49                   0000032C
SD_IO_STRING#5                    00000300
SD_IO_STRING#50                   0000032D
SD_IO_STRING#51                   0000032E
SD_IO_STRING#52                   0000032F
SD_IO_STRING#53                   00000330
SD_IO_STRING#54                   00000331
SD_IO_STRING#55                   00000332
SD_IO_STRING#56                   00000333
SD_IO_STRING#57                   00000334
SD_IO_STRING#58                   00000335
SD_IO_STRING#59                   00000336
SD_IO_STRING#6                    00000301
SD_IO_STRING#60                   00000337
SD_IO_STRING#61                   00000338
SD_IO_STRING#62                   00000339
SD_IO_STRING#63                   0000033A
SD_IO_STRING#64                   0000033B
SD_IO_STRING#65                   0000033C
SD_IO_STRING#66                   0000033D
SD_IO_STRING#67                   0000033E
SD_IO_STRING#68                   0000033F
SD_IO_STRING#69                   00000340
SD_IO_STRING#7                    00000302
SD_IO_STRING#70                   00000341
SD_IO_STRING#71                   00000342
SD_IO_STRING#72                   00000343
SD_IO_STRING#73                   00000344
SD_IO_STRING#74                   00000345
SD_IO_STRING#75                   00000346
SD_IO_STRING#76                   00000347
SD_IO_STRING#77                   00000348
SD_IO_STRING#78                   00000349
SD_IO_STRING#79                   0000034A
SD_IO_STRING#8                    00000303
SD_IO_STRING#80                   0000034B
SD_IO_STRING#81                   0000034C
SD_IO_STRING#82                   0000034D
SD_IO_STRING#83                   0000034E
SD_IO_STRING#84                   0000034F
SD_IO_STRING#85                   00000350
SD_IO_STRING#86                   00000351
SD_IO_STRING#87                   00000352
SD_IO_STRING#88                   00000353
SD_IO_STRING#89                   00000354
SD_IO_STRING#9                    00000304
SD_IO_STRING#90                   00000355
SD_IO_STRING#91                   00000356
SD_IO_STRING#92                   00000357
SD_IO_STRING#93                   00000358
SD_IO_STRING#94                   00000359
SD_IO_STRING#95                   0000035A
SD_IO_STRING#96                   0000035B
SD_IO_STRING#97                   0000035C
SD_IO_STRING#98                   0000035D
SD_IO_STRING#99                   0000035E
SD_IO_STRING_LENGTH               000002F9
SD_IO_STRING_POS                  000002FA
SD_IS_DIRTY                       000002F6
SD_LAST_CLUSTER                   000002C9
SD_LAST_CLUSTERH                  000002CA
SD_MINUTES                        000002F4
SD_MODIFY_FILE_NAME               00000AF6
SD_MONTH                          000002F0
SD_MSECONDS                       000002F2
SD_NEW_FILE                       
SD_NEW_FILE#REQ                   1
SD_NEW_FILE_RETURN                00000000
SD_NEW_FILE_SUB                   0000198A
SD_NEXT                           1
SD_NULL_F                         000002C4
SD_NUM_OF_FATS                    0000025A
SD_NUM_OF_ROOT_ENTRIES            00000261
SD_NUM_OF_ROOT_ENTRIESH           00000262
SD_NUM_OF_SECS                    0000025B
SD_NUM_OF_SECSH                   0000025C
SD_NUM_OF_SECSHH                  0000025D
SD_NUM_OF_SECSHHH                 0000025E
SD_OPEN_FILE                      
SD_OPEN_FILE#REQ                  1
SD_OPEN_FILE_RETURN               00000001
SD_OPEN_FILE_SUB                  000016D8
SD_PREVIOUS                       2
SD_READ_BYTE_FROM_FILE            
SD_READ_BYTE_FROM_FILE#REQ        1
SD_READ_BYTE_FROM_FILE_RETURN     00000001
SD_READ_BYTE_FROM_FILE_SUB        00001804
SD_READ_FAT_ENTRY                 0000089C
SD_READ_SECTOR                    000007C6
SD_READ_SECTOR_END                0000089A
SD_READ_SECTOR_ERROR              00000884
SD_READ_SECTOR_START              000007CE
SD_READ_SUB                       0000130A
SD_RECEIVE_BYTE                   000013C0
SD_RESERVED_SECS                  00000256
SD_RESERVED_SECSH                 00000257
SD_RETURN                         00000040
SD_RETURN_F                       000002F8
SD_ROOT_DIR                       0000026F
SD_ROOT_DIRH                      00000270
SD_ROOT_DIRHH                     00000271
SD_ROOT_DIRHHH                    00000272
SD_ROOT_DIR_FILE                  0000029E
SD_ROOT_DIR_FILE#0                0000029E
SD_ROOT_DIR_FILE#1                0000029F
SD_ROOT_DIR_FILE#10               000002A8
SD_ROOT_DIR_FILE#11               000002A9
SD_ROOT_DIR_FILE#12               000002AA
SD_ROOT_DIR_FILE#13               000002AB
SD_ROOT_DIR_FILE#14               000002AC
SD_ROOT_DIR_FILE#15               000002AD
SD_ROOT_DIR_FILE#16               000002AE
SD_ROOT_DIR_FILE#17               000002AF
SD_ROOT_DIR_FILE#18               000002B0
SD_ROOT_DIR_FILE#19               000002B1
SD_ROOT_DIR_FILE#2                000002A0
SD_ROOT_DIR_FILE#20               000002B2
SD_ROOT_DIR_FILE#21               000002B3
SD_ROOT_DIR_FILE#22               000002B4
SD_ROOT_DIR_FILE#23               000002B5
SD_ROOT_DIR_FILE#24               000002B6
SD_ROOT_DIR_FILE#25               000002B7
SD_ROOT_DIR_FILE#26               000002B8
SD_ROOT_DIR_FILE#27               000002B9
SD_ROOT_DIR_FILE#28               000002BA
SD_ROOT_DIR_FILE#29               000002BB
SD_ROOT_DIR_FILE#3                000002A1
SD_ROOT_DIR_FILE#30               000002BC
SD_ROOT_DIR_FILE#31               000002BD
SD_ROOT_DIR_FILE#4                000002A2
SD_ROOT_DIR_FILE#5                000002A3
SD_ROOT_DIR_FILE#6                000002A4
SD_ROOT_DIR_FILE#7                000002A5
SD_ROOT_DIR_FILE#8                000002A6
SD_ROOT_DIR_FILE#9                000002A7
SD_ROOT_DIR_FILE_POS              00000250
SD_ROOT_DIR_POS                   00000289
SD_ROOT_DIR_POSH                  0000028A
SD_ROOT_DIR_SEC                   00000285
SD_ROOT_DIR_SECH                  00000286
SD_ROOT_DIR_SECHH                 00000287
SD_ROOT_DIR_SECHHH                00000288
SD_RW_OPTION                      0000024A
SD_RW_PTR                         SD_BYTES_READ
SD_RW_PTRH                        SD_BYTES_READH
SD_RW_PTRHH                       SD_BYTES_READHH
SD_RW_PTRHHH                      SD_BYTES_READHHH
SD_SECONDS                        000002F3
SD_SECS_IN_ROOT                   00000263
SD_SECS_IN_ROOTH                  00000264
SD_SECS_PER_CLUSTER               00000255
SD_SECS_PER_FAT                   00000258
SD_SECS_PER_FATH                  00000259
SD_SECTOR_NUM                     00000034
SD_SECTOR_NUMH                    00000035
SD_SECTOR_NUMHH                   00000036
SD_SECTOR_NUMHHH                  00000037
SD_SECTOR_SUB                     00000644
SD_SEC_IN_CLUSTER                 000002CB
SD_SEC_NUM                        00000251
SD_SEC_NUMH                       00000252
SD_SEC_NUMHH                      00000253
SD_SEC_NUMHHH                     00000254
SD_SEEK_RESPONSE                  00000682
SD_SEEK_RESPONSE_IDX              0000003C
SD_SEEK_RESPONSE_IDXH             0000003D
SD_SEEK_RESPONSE_REQD             0000003E
SD_SEEK_RESPONSE_RETURN           0000003F
SD_SEND_BYTE                      000013B2
SD_SEND_CMD                       00001376
SD_SET_FILE_TIME_CREATE           000015D2
SD_SET_FILE_TIME_MODIFIED         0000160C
SD_SPI_BF                         SSPSTAT,0
SD_SPI_FOSC_04                    0
SD_SPI_FOSC_16                    1
SD_SPI_FOSC_64                    2
SD_SPI_IF                         PIR1,3
SD_SSPSTAT                        000002F7
SD_STORE_CLUSTER_SEQ              00000AE8
SD_STORE_FAT_POSITION             00000A5C
SD_STORE_ROOT_DIRECT_POSITION     00000EF8
SD_TEMP                           000002D2
SD_TEMPH                          000002D3
SD_TEMP_BYTE                      000002D1
SD_TEMP_DWORD                     000002D4
SD_TEMP_DWORDH                    000002D5
SD_TEMP_DWORDHH                   000002D6
SD_TEMP_DWORDHHH                  000002D7
SD_TIMEOUT                        000002EE
SD_WRITE_BUFFER_POS               000002C2
SD_WRITE_BUFFER_POSH              000002C3
SD_WRITE_BYTE_TO_FILE             
SD_WRITE_BYTE_TO_FILE#REQ         1
SD_WRITE_BYTE_TO_FILE_LST_PRM     00000000
SD_WRITE_BYTE_TO_FILE_RETURN      00000000
SD_WRITE_BYTE_TO_FILE_SUB         0000100E
SD_WRITE_SECTOR                   000006C4
SD_WRITE_SECTOR_END               000007C4
SD_WRITE_SECTOR_ERROR             000007AE
SD_WRITE_SECTOR_START             000006CC
SD_WRITE_SEC_NUM                  000002BE
SD_WRITE_SEC_NUMH                 000002BF
SD_WRITE_SEC_NUMHH                000002C0
SD_WRITE_SEC_NUMHHH               000002C1
SD_WRITE_STRING_TO_FILE           
SD_WRITE_STRING_TO_FILE#REQ       1
SD_WRITE_STRING_TO_FILE_RETURN    00000000
SD_WRITE_STRING_TO_FILE_SUB       00002342
SD_WRITE_SUB                      000005C8
SD_YEAR                           000002F1
SEN                               00000000
SEND@IT                           000000A4
SETC                              BSF STATUS,C
SETZ                              BSF STATUS,Z
SKPC                              BTFSS STATUS,C
SKPNC                             BTFSC STATUS,C
SKPNZ                             BTFSC STATUS,Z
SKPZ                              BTFSS STATUS,Z
SL@LB32                           00001622
SL@LB33                           0000165E
SMP                               00000007
SP#P9                             0000002D
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
START                             00002414
START2                            00002414
START@                            000005B0
STATUS                            00000FD8
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
STR@LB1                           00000468
STR@LB10                          000004DA
STR@LB11                          000004EA
STR@LB12                          000004F4
STR@LB13                          000004FE
STR@LB14                          0000050A
STR@LB15                          00000516
STR@LB16                          00000520
STR@LB17                          00000530
STR@LB18                          0000053A
STR@LB19                          00000544
STR@LB2                           00000472
STR@LB20                          00000552
STR@LB21                          00000566
STR@LB22                          00000570
STR@LB23                          00000580
STR@LB24                          0000058C
STR@LB25                          0000059E
STR@LB3                           00000480
STR@LB4                           0000048C
STR@LB5                           0000049A
STR@LB6                           000004A4
STR@LB7                           000004B2
STR@LB8                           000004C0
STR@LB9                           000004CA
STVR_OFF_4                        000000FE
STVR_ON_4                         000000FF
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
T@E                               0000000C
T@EB                              00000008
T@EW                              0000000A
T@GE                              00000012
T@ST                              00000018
TABLAT                            00000FF5
TAGIN                             000003C6
TAGIN#0                           000003C6
TAGIN#1                           000003C7
TAGIN#2                           000003C8
TAGIN#3                           000003C9
TAGIN#4                           000003CA
TAGIN#5                           000003CB
TAGIN#6                           000003CC
TAGIN#7                           000003CD
TAGIN#8                           000003CE
TAGIN#9                           000003CF
TAGOFFSET                         4
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRLH                          00000FF7
TBLPTRU                           00000FF8
TIMEOUT                           000025E2
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0LH                            00000FD7
TMR0ON                            00000007
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1LH                            00000FCF
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3LH                            00000FB3
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSLH                             00000FFE
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE4                            00000004
TRISE5                            00000005
TRISE6                            00000006
TRISE7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TV1                               000003F2
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
UHA                               16
UPA_H                             1
UPA_L                             0
USERIN                            000003D0
USERIN#0                          000003D0
USERIN#1                          000003D1
USERIN#2                          000003D2
USERIN#3                          000003D3
USER_POINTER                      000003C4
USER_POINTERH                     000003C5
UTAG                              000003D4
UTAG#0                            000003D4
UTAG#1                            000003D5
UTAG#10                           000003DE
UTAG#11                           000003DF
UTAG#12                           000003E0
UTAG#13                           000003E1
UTAG#14                           000003E2
UTAG#15                           000003E3
UTAG#2                            000003D6
UTAG#3                            000003D7
UTAG#4                            000003D8
UTAG#5                            000003D9
UTAG#6                            000003DA
UTAG#7                            000003DB
UTAG#8                            000003DC
UTAG#9                            000003DD
VCFG0                             00000004
VCFG1                             00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WDTPS_1024_2                      000000F5
WDTPS_128_2                       000000EF
WDTPS_16384_2                     000000FD
WDTPS_16_2                        000000E9
WDTPS_1_2                         000000E1
WDTPS_2048_2                      000000F7
WDTPS_256_2                       000000F1
WDTPS_2_2                         000000E3
WDTPS_32768_2                     000000FF
WDTPS_32_2                        000000EB
WDTPS_4096_2                      000000F9
WDTPS_4_2                         000000E5
WDTPS_512_2                       000000F3
WDTPS_64_2                        000000ED
WDTPS_8192_2                      000000FB
WDTPS_8_2                         000000E7
WDT_OFF_2                         000000FE
WDT_ON_2                          000000FF
WORD_BIT                          
WORD_BYTE                         
WORD_DWORD                        
WORD_FLOAT                        
WORD_VAR                          000003F3
WORD_VARH                         000003F4
WORD_WORD                         
WORD_WREG                         
WR                                00000001
WREG                              00000FE8
WREG_BIT                          
WREG_BYTE                         
WREG_DWORD                        
WREG_FLOAT                        
WREG_WORD                         
WREN                              00000002
WRERR                             00000003
WRITEH                            00002ABE
WRITE_MANAGER                     00002BE4
WRITE_M_SD                        00002CFC
WRITE_SD                          00002898
WRITE_USERS_SD                    00002EA4
WRT0_OFF_6                        000000FF
WRT0_ON_6                         000000FE
WRT1_OFF_6                        000000FF
WRT1_ON_6                         000000FD
WRT2_OFF_6                        000000FF
WRT2_ON_6                         000000FB
WRTB_OFF_6                        000000FF
WRTB_ON_6                         000000BF
WRTC_OFF_6                        000000FF
WRTC_ON_6                         000000DF
WRTD_OFF_6                        000000FF
WRTD_ON_6                         0000007F
WUE                               00000001
XTAL                              4
XT_OSC_1                          000000F1
Z                                 00000002
_ADC                              13
_ADC_RES                          10
_AEXP                             0000002E
_B#VR1                            000002E5
_CORE                             16
_CWRITE_BLOCK                     8
_EEPROM                           1024
_FLASH                            1
_FP_FLAGS                         0000002F
_FP_TEMP                          00000030
_I2C_SCL_PIN                      00000003
_I2C_SCL_PORT                     00000F94
_I2C_SDA_PIN                      00000004
_I2C_SDA_PORT                     00000F94
_MAXMEM                           49152
_MAXRAM                           3968
_NOT_ADDRESS                      00000005
_NOT_WRITE                        00000002
_RAM_END                          3839
_SIGN                             00000031
_SYSTEM_VARIABLE_COUNT            50
_USART                            1
_USB                              0
_USELFSR                          1
__18F4525                         1
__HSERIAL_BAUD                    00002580
__HSERIAL_RCSTA                   00000090
__HSERIAL_TXSTA                   00000020
__KEYPAD_PORT                     PORTB
__LCD_DTPIN                       00000000
__LCD_DTPORT                      PORTD
__LCD_ENPIN                       00000006
__LCD_ENPORT                      PORTD
__LCD_INTERFACE                   00000004
__LCD_LINES                       00000002
__LCD_RSPIN                       00000007
__LCD_RSPORT                      PORTD
__LCD_TYPE                        00000000
__XTAL                            00000004


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXX----XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
20C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
21C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
22C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
23C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
24C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
25C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
26C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
27C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
28C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
29C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
3000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
3040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XX-------------- ----------------
9C40 : XXXXXXXX-------- ---------------- ---------------- ----------------
0000 : -XXX-XX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used: 12401
Program Memory Bytes Free: 36751


Errors   :     0
Warnings :     0 reported,   202 suppressed
Messages :     1 reported,     1 suppressed


