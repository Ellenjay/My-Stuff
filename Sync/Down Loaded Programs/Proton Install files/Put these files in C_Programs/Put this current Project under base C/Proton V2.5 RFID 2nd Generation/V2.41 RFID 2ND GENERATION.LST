MPASM  5.06                      V241RF~1.ASM   4-3-2010  12:14:57         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;----------------------------------------------------------
                      00002 ; Code Produced by the PROTON+ Compiler. Version 3.2.5.5
                      00003 ; Copyright Rosetta Technologies/Crownhill Associates
                      00004 ; Written by Les Johnson. February 2007
                      00005 ;----------------------------------------------------------
                      00007  LIST
                      00008         LIST
                      00009 ;{
                      00010 ;FILE F1 = C:\PROTON V2.5 RFID 2ND GENERATION\V2.41 RFID 2ND GENERATION.BAS
                      00011 ;FILE F2 = C:\PROTON V2.5 RFID 2ND GENERATION\V2.41 RFID 2ND GENERATION.PRP
                      00012 ;FILE F3 = C:\PROTON V2.5 RFID 2ND GENERATION\V2.41 RFID 2ND GENERATION_FWD.PBP
                      00013 ;FILE F4 = C:\PROTON V2.5 RFID 2ND GENERATION\V2.41 RFID 2ND GENERATION_LIB.PBP
                      00014 ;FILE F5 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\INITIALIZE.INC
                      00015 ;FILE F6 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\READ TAG.INC
                      00016 ;FILE F7 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\READ SD.INC
                      00017 ;FILE F8 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE SD.INC
                      00018 ;FILE F9 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\INIT SD.INC
                      00019 ;FILE F10 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\CHECK TAG.INC
                      00020 ;FILE F11 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE_U_H.INC
                      00021 ;FILE F12 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE_M_H.INC
                      00022 ;FILE F13 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE_M_SD.INC
                      00023 ;FILE F14 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\WRITE_USERS_SD.INC
                      00024 ;FILE F15 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\READ_MOD.INC
                      00025 ;FILE F16 = C:\PROTON V2.5 RFID 2ND GENERATION\INC\GOSLEEP.INC
                      00026 ;}
                      00027 ;[Variable Listing]
                      00028 ;SD_BYTER,0032,DT_BYTE,1
                      00029 ;SD_IDX,0033,DT_BYTE,1
                      00030 ;SD_SECTOR_NUM,0034,DT_DWORD,4
                      00031 ;SD_ADDRESS,0038,DT_DWORD,4
                      00032 ;SD_SEEK_RESPONSE_IDX,003C,DT_WORD,2
                      00033 ;SD_SEEK_RESPONSE_REQD,003E,DT_BYTE,1
                      00034 ;SD_SEEK_RESPONSE_RETURN,003F,DT_BYTE,1
                      00035 ;SD_RETURN,0040,DT_BYTE,1
                      00036 ;SD_BUFFER0,0041,DT_BYTE,256
                      00037 ;SD_BUFFER1,0141,DT_BYTE,256
                      00038 ;SD_BYTE0,0241,DT_BYTE,1
                      00039 ;SD_BYTE1,0242,DT_BYTE,1
                      00040 ;SD_BYTE2,0243,DT_BYTE,1
                      00041 ;SD_BYTE3,0244,DT_BYTE,1
                      00042 ;SD_BYTE4,0245,DT_BYTE,1
                      00043 ;SD_BYTE5,0246,DT_BYTE,1
                      00044 ;SD_BUFFER_IDX,0247,DT_WORD,2
                      00045 ;SD_BYTE_RW,0249,DT_BYTE,1
                      00046 ;SD_RW_OPTION,024A,DT_BYTE,1
                      00047 ;SD_EXTENDED_RETURN,024B,DT_BYTE,1
                      00048 ;SD_EXTENDED_RETURN_ROOT_DIR,024C,DT_BYTE,1
                      00049 ;SD_DATA_IO,024D,DT_BYTE,1
                      00050 ;SD_BUFFER_POS,024E,DT_WORD,2
                      00051 ;SD_ROOT_DIR_FILE_POS,0250,DT_BYTE,1
                      00052 ;SD_SEC_NUM,0251,DT_DWORD,4
                      00053 ;SD_SECS_PER_CLUSTER,0255,DT_BYTE,1
                      00054 ;SD_RESERVED_SECS,0256,DT_WORD,2
MPASM  5.06                      V241RF~1.ASM   4-3-2010  12:14:57         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00055 ;SD_SECS_PER_FAT,0258,DT_WORD,2
                      00056 ;SD_NUM_OF_FATS,025A,DT_BYTE,1
                      00057 ;SD_NUM_OF_SECS,025B,DT_DWORD,4
                      00058 ;SD_BYTES_PER_SEC,025F,DT_WORD,2
                      00059 ;SD_NUM_OF_ROOT_ENTRIES,0261,DT_WORD,2
                      00060 ;SD_SECS_IN_ROOT,0263,DT_WORD,2
                      00061 ;SD_BOOT_RECORD,0265,DT_WORD,2
                      00062 ;SD_FAT1,0267,DT_DWORD,4
                      00063 ;SD_FAT2,026B,DT_DWORD,4
                      00064 ;SD_ROOT_DIR,026F,DT_DWORD,4
                      00065 ;SD_DATA_AREA,0273,DT_DWORD,4
                      00066 ;SD_FAT_ENTRY,0277,DT_WORD,2
                      00067 ;SD_FAT_SEC,0279,DT_DWORD,4
                      00068 ;SD_FAT_BUFFER_POS,027D,DT_WORD,2
                      00069 ;SD_FAT_SEC_PREV,027F,DT_DWORD,4
                      00070 ;SD_FAT_BUFFER_POS_PREV,0283,DT_WORD,2
                      00071 ;SD_ROOT_DIR_SEC,0285,DT_DWORD,4
                      00072 ;SD_ROOT_DIR_POS,0289,DT_WORD,2
                      00073 ;SD_DATA_SEC,028B,DT_DWORD,4
                      00074 ;SD_DATA_BUFFER_POS,028F,DT_WORD,2
                      00075 ;SD_FILE_NAME,0291,DT_STRING,9
                      00076 ;SD_FILE_EXT,029A,DT_STRING,4
                      00077 ;SD_ROOT_DIR_FILE,029E,DT_BYTE,32
                      00078 ;SD_WRITE_SEC_NUM,02BE,DT_DWORD,4
                      00079 ;SD_WRITE_BUFFER_POS,02C2,DT_WORD,2
                      00080 ;SD_NULL_F,02C4,DT_BYTE,1
                      00081 ;SD_CLUSTER_NUM,02C5,DT_WORD,2
                      00082 ;SD_CLUSTER_NUM_PREV,02C7,DT_WORD,2
                      00083 ;SD_LAST_CLUSTER,02C9,DT_WORD,2
                      00084 ;SD_SEC_IN_CLUSTER,02CB,DT_BYTE,1
                      00085 ;SD_FILE_SIZE,02CC,DT_DWORD,4
                      00086 ;SD_IO_BYTE,02D0,DT_BYTE,1
                      00087 ;SD_TEMP_BYTE,02D1,DT_BYTE,1
                      00088 ;SD_TEMP,02D2,DT_WORD,2
                      00089 ;SD_TEMP_DWORD,02D4,DT_DWORD,4
                      00090 ;SD_CLUSTER_SEQ_NUM,02D8,DT_WORD,2
                      00091 ;SD_CLUSTER_SEQ_IDX,02DA,DT_WORD,2
                      00092 ;SD_CLUSTER_SEQ_NUM_PREV,02DC,DT_WORD,2
                      00093 ;SD_CLUSTER_SEQ_IDX_PREV,02DE,DT_WORD,2
                      00094 ;SD_FIND_ROOT_DIR_ENTRY_F,02E0,DT_BYTE,1
                      00095 ;SD_BYTES_READ,02E1,DT_DWORD,4
                      00096 ;_B#VR1,0000,DT_BYTE,1
                      00097 ;SD_FILE_NUM,02E6,DT_WORD,2
                      00098 ;SD_DIR_DIRECTION,02E8,DT_BYTE,1
                      00099 ;SD_EXTENDED_RETURN_INT,02E9,DT_BYTE,1
                      00100 ;SD_FILE_SIZE_LEFT,02EA,DT_DWORD,4
                      00101 ;SD_TIMEOUT,02EE,DT_BYTE,1
                      00102 ;SD_DAY,02EF,DT_BYTE,1
                      00103 ;SD_MONTH,02F0,DT_BYTE,1
                      00104 ;SD_YEAR,02F1,DT_BYTE,1
                      00105 ;SD_MSECONDS,02F2,DT_BYTE,1
                      00106 ;SD_SECONDS,02F3,DT_BYTE,1
                      00107 ;SD_MINUTES,02F4,DT_BYTE,1
MPASM  5.06                      V241RF~1.ASM   4-3-2010  12:14:57         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00108 ;SD_HOURS,02F5,DT_BYTE,1
                      00109 ;SD_IS_DIRTY,02F6,DT_BYTE,1
                      00110 ;SD_SSPSTAT,02F7,DT_BYTE,1
                      00111 ;SD_RETURN_F,02F8,DT_BYTE,1
                      00112 ;SD_IO_STRING_LENGTH,02F9,DT_BYTE,1
                      00113 ;SD_IO_STRING_POS,02FA,DT_BYTE,1
                      00114 ;SD_IO_STRING,02FB,DT_STRING,201
                      00115 ;USER_POINTER,03C4,DT_WORD,2
                      00116 ;TAGIN,03C6,DT_BYTE,10
                      00117 ;USERIN,03D0,DT_BYTE,4
                      00118 ;UTAG,03D4,DT_BYTE,16
                      00119 ;MODNUM,03E4,DT_BYTE,7
                      00120 ;RESPONSE,03EB,DT_BYTE,1
                      00121 ;MYCOUNT,03EC,DT_BYTE,1
                      00122 ;INDEX,03ED,DT_BYTE,1
                      00123 ;INDEX2,03EE,DT_BYTE,1
                      00124 ;TV1,03EF,DT_BYTE,1
                      00125 ;WORD_VAR,03F0,DT_WORD,2
                      00126 ;MYNUM,03F2,DT_STRING,4
                      00127 ;SD_CS,0F82.2,DT_BIT
                      00128 ;SD_DI,0F82.5,DT_BIT
                      00129 ;SD_CLK,0F82.3,DT_BIT
                      00130 ;SD_DO,0F82.4,DT_BIT
                      00131 ;SD_EOF,02E5.0,DT_BIT
                      00132 ;SD_RW_PTR,02E1,DT_DWORD,4
                      00133 ;SD_FREE_CLUSTER_NUM,02D8,DT_WORD,2
                      00134 ;SD_FREE_SPACE_KB,02E1,DT_DWORD,4
                      00135 ;SD_DISK_SIZE_KB,02E1,DT_DWORD,4
                      00136 ;SD_SPI_BF,0FC7.0,DT_BIT
                      00137 ;SD_SPI_IF,0F9E.3,DT_BIT
                      00138 ;SD_DETECT,0F80.1,DT_BIT
                      00139 ;RFIDENABLE,0F83.4,DT_BIT
                      00140 ;[End Listing]
                      00141  #DEFINE CONFIG_REQ 1
                      00142  #DEFINE _USELFSR 1
Message[308]: Warning level superseded by command line value. (2)
                      00143  LIST  P = 18F4525,F = INHX32 ,W = 2, X = ON, R = DEC, MM = ON, N = 0, C = 255
                      00144  #INCLUDE "C:\PROGRA~1\CROWNH~1\pds\INC\P18F4525.lpb"
                      00001 
                      00962  LIST
                      00145  #DEFINE __18F4525 1
                      00146  #DEFINE XTAL 4
                      00147  #DEFINE _CORE 16
                      00148  #DEFINE _MAXRAM 3968
                      00149  #DEFINE _RAM_END 3839
                      00150  #DEFINE _MAXMEM 49152
                      00151  #DEFINE _ADC 13
                      00152  #DEFINE _ADC_RES 10
                      00153  #DEFINE _EEPROM 1024
                      00154  #DEFINE RAM_BANKS 15
                      00155  #DEFINE _USART 1
                      00156  #DEFINE _USB 0
                      00157  #DEFINE _FLASH 1
                      00158  #DEFINE _CWRITE_BLOCK 8
                      00159  #DEFINE BANK0_START 128
                      00160  #DEFINE BANK0_END 255
                      00161  #DEFINE BANK1_START 256
                      00162  #DEFINE BANK1_END 511
                      00163  #DEFINE BANK2_START 512
                      00164  #DEFINE BANK2_END 767
                      00165  #DEFINE BANK3_START 768
                      00166  #DEFINE BANK3_END 1023
                      00167  #DEFINE BANK4_START 1024
                      00168  #DEFINE BANK4_END 1279
                      00169  #DEFINE BANK5_START 1280
                      00170  #DEFINE BANK5_END 1535
                      00171  #DEFINE BANK6_START 1536
                      00172  #DEFINE BANK6_END 1791
                      00173  #DEFINE BANK7_START 1792
                      00174  #DEFINE BANK7_END 2047
                      00175  #DEFINE BANK8_START 2048
                      00176  #DEFINE BANK8_END 2303
                      00177  #DEFINE BANK9_START 2304
                      00178  #DEFINE BANK9_END 2559
                      00179  #DEFINE BANK10_START 2560
                      00180  #DEFINE BANK10_END 2815
                      00181  #DEFINE BANK11_START 2816
                      00182  #DEFINE BANK11_END 3071
                      00183  #DEFINE BANK12_START 3072
                      00184  #DEFINE BANK12_END 3200
                      00185  #DEFINE BANK13_START 3328
                      00186  #DEFINE BANK13_END 3583
                      00187  #DEFINE BANK14_START 3584
                      00188  #DEFINE BANK14_END 3839
                      00189  #DEFINE BANKA_START 0
                      00190  #DEFINE BANKA_END 127
                      00191  #DEFINE _SYSTEM_VARIABLE_COUNT 50
  00000000            00192 RAM_BANK = 0
                      00193  #DEFINE LCD#DTPORT PORTD
                      00194  #DEFINE LCD#DTPIN 0
                      00195  #DEFINE LCD#RSPORT PORTD
                      00196  #DEFINE LCD#RSPIN 7
                      00197  #DEFINE LCD#ENPORT PORTD
                      00198  #DEFINE LCD#ENPIN 6
                      00199  #DEFINE LCD#INTERFACE 4
                      00200  #DEFINE LCD#LINES 2
                      00201  #DEFINE LCD#TYPE 0
                      00202  IFDEF HLVDCON
                      00203   IFNDEF LVDCON
                      00204    #DEFINE LVDCON HLVDCON
                      00205   ENDIF
                      00206  ENDIF
                      00207  #DEFINE SD_INIT_MSSP#REQ 1
                      00208  #DEFINE SD_CLOSE_FILE#REQ 1
                      00209  #DEFINE SD_OPEN_FILE#REQ 1
                      00210  #DEFINE SD_READ_BYTE_FROM_FILE#REQ 1
                      00211  #DEFINE SD_CHECK_FOR_FILE#REQ 1
                      00212  #DEFINE SD_NEW_FILE#REQ 1
                      00213  #DEFINE SD_APPEND_FILE#REQ 1
                      00214  #DEFINE SD_DELETE_FILE#REQ 1
                      00215  #DEFINE SD_INIT_FS_MSSP#REQ 1
                      00216  #DEFINE SD_WRITE_BYTE_TO_FILE#REQ 1
                      00217  #DEFINE SD_WRITE_STRING_TO_FILE#REQ 1
  00000001            00218 INT@3232_REQ = 1
                      00219  #INCLUDE "C:\PROGRA~1\CROWNH~1\pds\INC\REG_LD16.INC"
                      00001 
                      00002 ; 16Cxxx Substitutions
                      00003 
                      00004  #DEFINE CLRW CLRF WREG ; PIC16Cxxx code substitution (WREG is addressable)
                      00005  #DEFINE NEGW NEGF WREG ; PIC16Cxxx code substitution (WREG is addressable)
                      00006 
                      00007  #DEFINE SKPC BTFSS STATUS,C
                      00008  #DEFINE SKPNC BTFSC STATUS,C
                      00009  #DEFINE CLRC BCF STATUS,C
                      00010  #DEFINE SETC BSF STATUS,C 
                      00011  #DEFINE SKPZ BTFSS STATUS,Z
                      00012  #DEFINE SKPNZ BTFSC STATUS,Z
                      00013  #DEFINE CLRZ BCF STATUS,Z
                      00014  #DEFINE SETZ BSF STATUS,Z
                      00015  
                      00016 ;------------------------------------------------------------------------------------------------- 
                      00017 MOVFW MACRO M#VARIN
                      00018         MOVF M#VARIN,W  
                      00019         ENDM
                      00020 ;-------------------------------------------------------------------------------------------------
                      00021 RLF MACRO M#VARIN,M#DEST
                      00022     RLCF M#VARIN,M#DEST
                      00023     ENDM
                      00024 ;-------------------------------------------------------------------------------------------------
                      00025 RRF MACRO M#VARIN,M#DEST
                      00026     RRCF M#VARIN,M#DEST
                      00027     ENDM
                      00028 ;-------------------------------------------------------------------------------------------------
                      00029 JUMP MACRO LABEL
                      00030         GOTO LABEL
                      00031         ENDM
                      00032 ;-------------------------------------------------------------------------------------------------      
                      00033 F@CALL MACRO M#DEST
                      00034     IF (M#DEST < 1)
                      00035         CALL M#DEST
                      00036     ELSE
                      00037       IF (M#DEST > $)
                      00038         CALL M#DEST
                      00039       ELSE
                      00040         IF (M#DEST < ($ - 0X03FF))
                      00041             CALL M#DEST
                      00042         ELSE
                      00043             RCALL M#DEST
                      00044         ENDIF
                      00045       ENDIF
                      00046     ENDIF
                      00047     ENDM 
                      00048 ;-------------------------------------------------------------------------------------------------
                      00049 F@JUMP MACRO M#DEST
                      00050 
                      00051     IFDEF WATCHDOG_REQ
                      00052         IF ($ == M#DEST)
                      00053                 CLRWDT          ; Walk the dog
                      00054         ENDIF
                      00055         ENDIF
                      00056     IF (M#DEST < 1)
                      00057         GOTO M#DEST
                      00058     ELSE
                      00059       IF ((M#DEST) > $)
                      00060         GOTO M#DEST
                      00061       ELSE
                      00062         IF ((M#DEST) < ($ - 0X03FF))
                      00063             GOTO M#DEST
                      00064         ELSE
                      00065             BRA M#DEST
                      00066         ENDIF
                      00067       ENDIF
                      00068     ENDIF
                      00069     ENDM
                      00070 ;-------------------------------------------------------------------------------------------------
                      00071     IFDEF WATCHDOG_REQ
                      00072                 CHK@SLF MACRO M#DEST
                      00073                         IF ($ == M#DEST)
                      00074                         CLRWDT          ; Walk the dog
                      00075                 ENDIF
                      00076                 ENDM
                      00077         ENDIF
                      00078 
                      00079 G@OTO MACRO M#DEST
                      00080     IF (M#DEST < 1)
                      00081         BTFSC STATUS,OV
                      00082         GOTO M#DEST
                      00083     ELSE
                      00084         IF (M#DEST > $)
                      00085                 BTFSC STATUS,OV
                      00086             GOTO M#DEST
                      00087         ELSE
                      00088                 IF (M#DEST < ($ - 127))
                      00089                 BTFSC STATUS,OV
                      00090                 GOTO M#DEST
                      00091             ELSE
                      00092                 BOV M#DEST
                      00093             ENDIF
                      00094         ENDIF
                      00095     ENDIF
                      00096     ENDM
                      00097 
                      00098 GO@TO MACRO M#DEST
                      00099     IF (M#DEST < 1)
                      00100         GOTO M#DEST
                      00101     ELSE
                      00102         IF (M#DEST > $)
                      00103                 GOTO M#DEST
                      00104         ELSE
                      00105                 IF (M#DEST < ($ - 0X03FF))
                      00106                 GOTO M#DEST
                      00107             ELSE
                      00108                 BRA M#DEST
                      00109             ENDIF
                      00110         ENDIF
                      00111     ENDIF
                      00112     ENDM
                      00113 ;-------------------------------------------------------------------------------------------------
                      00114 S@B MACRO M#VARIN
                      00115     IF ((M#VARIN > BANKA_END) & (M#VARIN < 0X0F80))
                      00116       IF ((M#VARIN & 0X0F00) != (RAM_BANK << 8))
                      00117         MOVLB (M#VARIN >> 8)
                      00118                 RAM_BANK = (M#VARIN >> 8)
                      00119       ENDIF
                      00120     ENDIF
                      00121     ENDM
                      00122 ;-------------------------------------------------------------------------------------------------
                      00123 R@B MACRO
                      00124     IF(RAM_BANK != 0)
                      00125         MOVLB 0
                      00126                 RAM_BANK = 0
                      00127     ENDIF
                      00128     ENDM
                      00129 ;-------------------------------------------------------------------------------------------------
                      00130 WREG_BYTE MACRO M#BYTEOUT
                      00131     MOVFF WREG,M#BYTEOUT
                      00132     ENDM
                      00133 ;-------------------------------------------------------------------------------------------------
                      00134 WREG_BIT MACRO M#VAROUT,M#BITOUT
                      00135     S@B M#VAROUT
                      00136     BTFSC WREG,0
                      00137     BSF M#VAROUT,M#BITOUT
                      00138     BTFSS WREG,0
                      00139     BCF M#VAROUT,M#BITOUT
                      00140     R@B                                                 ; Reset the bank when the macro is finished
                      00141     ENDM
                      00142 ;-------------------------------------------------------------------------------------------------
                      00143 WREG_WORD MACRO M#WORDOUT
                      00144     MOVFF WREG,M#WORDOUT
                      00145     MOVLW 0
                      00146     MOVFF WREG,M#WORDOUT + 1
                      00147     ENDM
                      00148 ;-------------------------------------------------------------------------------------------------
                      00149 WREG_DWORD MACRO M#DWORDOUT
                      00150     MOVFF WREG,M#DWORDOUT
                      00151     MOVLW 0
                      00152     MOVFF WREG,M#DWORDOUT + 3
                      00153     MOVFF WREG,M#DWORDOUT + 2
                      00154     MOVFF WREG,M#DWORDOUT + 1
                      00155     ENDM
                      00156 ;-------------------------------------------------------------------------------------------------
                      00157 BYTE_WREG MACRO M#BYTEIN
                      00158     MOVFF M#BYTEIN,WREG
                      00159     ENDM
                      00160 ;-------------------------------------------------------------------------------------------------
                      00161 NUM_WREG MACRO M#NUMIN
                      00162     MOVLW (M#NUMIN & 255)
                      00163     ENDM
                      00164 ;-------------------------------------------------------------------------------------------------
                      00165 NUM_BYTE MACRO M#NUMIN,M#BYTEOUT
                      00166     MOVLW (M#NUMIN & 255)
                      00167     MOVFF WREG,M#BYTEOUT
                      00168     ENDM
                      00169 ;-------------------------------------------------------------------------------------------------
                      00170 NUM_BIT MACRO M#NUMIN,M#VAROUT,M#BITOUT
                      00171     S@B M#VAROUT
                      00172     IF((M#NUMIN & 1) == 1)
                      00173         BSF M#VAROUT,M#BITOUT
                      00174     ELSE
                      00175         BCF M#VAROUT,M#BITOUT
                      00176         ENDIF
                      00177     R@B                                                 ; Reset the bank when the macro is finished
                      00178     ENDM
                      00179 ;-------------------------------------------------------------------------------------------------
                      00180 NUM_WORD MACRO M#NUMIN,M#WORDOUT
                      00181 
                      00182     IFDEF _USELFSR
                      00183         IF(M#WORDOUT == FSR0L)
                      00184                 LFSR 0,M#NUMIN
                      00185                 EXITM
                      00186         ENDIF
                      00187         
                      00188         IF(M#WORDOUT == FSR1L)
                      00189                 LFSR 1,M#NUMIN
                      00190                 EXITM
                      00191         ENDIF
                      00192         
                      00193         IF(M#WORDOUT == FSR2L)
                      00194                 LFSR 2,M#NUMIN
                      00195                 EXITM
                      00196         ENDIF
                      00197     ENDIF
                      00198     
                      00199     S@B M#WORDOUT
                      00200         MOVLW (M#NUMIN & 255)
                      00201         MOVWF M#WORDOUT
                      00202 
                      00203     S@B M#WORDOUT + 1
                      00204         MOVLW ((M#NUMIN >> 8) & 255)
                      00205         MOVWF M#WORDOUT + 1
                      00206     R@B                                                 ; Reset the bank when the macro is finished
                      00207     ENDM
                      00208 ;-------------------------------------------------------------------------------------------------
                      00209 NUM_DWORD MACRO M#NUMIN,M#DWORDOUT
                      00210         S@B M#DWORDOUT
                      00211     MOVLW (M#NUMIN & 255)
                      00212     MOVWF M#DWORDOUT
                      00213     S@B M#DWORDOUT + 1
                      00214     MOVLW ((M#NUMIN >> 8) & 255)
                      00215     MOVWF M#DWORDOUT + 1
                      00216     S@B M#DWORDOUT + 2
                      00217     MOVLW ((M#NUMIN >> 16) & 255)
                      00218     MOVWF M#DWORDOUT + 2
                      00219     S@B M#DWORDOUT + 3
                      00220     MOVLW ((M#NUMIN >> 24) & 255)
                      00221     MOVWF M#DWORDOUT + 3
                      00222     R@B                                                 ; Reset the bank when the macro is finished
                      00223     ENDM
                      00224 ;-------------------------------------------------------------------------------------------------
                      00225 BIT_WREG MACRO M#VARIN,M#BITIN
                      00226     S@B M#VARIN
                      00227     CLRW
                      00228     BTFSC M#VARIN,M#BITIN
                      00229     MOVLW 1
                      00230     R@B                                                 ; Reset the bank when the macro is finished
                      00231     ENDM
                      00232 ;-------------------------------------------------------------------------------------------------
                      00233 BIT_BYTE MACRO M#VARIN,M#BITIN,M#BYTEOUT
                      00234     S@B M#VARIN
                      00235     CLRW
                      00236     BTFSC M#VARIN,M#BITIN
                      00237     MOVLW 1
                      00238     S@B M#BYTEOUT
                      00239     MOVWF M#BYTEOUT
                      00240     R@B                                                 ; Reset the bank when the macro is finished
                      00241     ENDM
                      00242 ;-------------------------------------------------------------------------------------------------
                      00243 BIT_BIT MACRO M#VARIN,M#BITIN,M#VAROUT,M#BITOUT
                      00244     IF ((M#VARIN & 0X0F00) == (M#VAROUT & 0X0F00))
                      00245         S@B M#VARIN
                      00246         BTFSC M#VARIN,M#BITIN
                      00247         BSF M#VAROUT,M#BITOUT
                      00248         BTFSS M#VARIN,M#BITIN
                      00249         BCF M#VAROUT,M#BITOUT
                      00250         ELSE
                      00251                 IF ((M#VARIN <= BANKA_END) | (M#VARIN >= 0X0F80))
                      00252                         S@B M#VAROUT
                      00253                         BTFSC M#VARIN,M#BITIN
                      00254                         BSF M#VAROUT,M#BITOUT
                      00255                         BTFSS M#VARIN,M#BITIN
                      00256                         BCF M#VAROUT,M#BITOUT
                      00257                         ELSE
                      00258                                 IF ((M#VAROUT <= BANKA_END) | (M#VAROUT >= 0X0F80))
                      00259                                         S@B M#VARIN
                      00260                                         BTFSC M#VARIN,M#BITIN
                      00261                                         BSF M#VAROUT,M#BITOUT
                      00262                                         BTFSS M#VARIN,M#BITIN
                      00263                                         BCF M#VAROUT,M#BITOUT
                      00264                                         ELSE
                      00265                                         S@B M#VARIN
                      00266                                         CLRDC
                      00267                                         BTFSC M#VARIN,M#BITIN
                      00268                                         SETDC
                      00269                                         S@B M#VAROUT
                      00270                                         SKPNDC
                      00271                                         BSF M#VAROUT,M#BITOUT
                      00272                                         SKPDC
                      00273                                         BCF M#VAROUT,M#BITOUT
                      00274                                 ENDIF
                      00275                         ENDIF
                      00276         ENDIF
                      00277         R@B                                                     ; Reset the bank when the macro is finished
                      00278     ENDM
                      00279 ;-------------------------------------------------------------------------------------------------
                      00280 BIT_WORD MACRO M#VARIN,M#BITIN,M#WORDOUT
                      00281     S@B M#WORDOUT + 1
                      00282     CLRF M#WORDOUT + 1
                      00283     BIT_BYTE M#VARIN,M#BITIN,M#WORDOUT
                      00284     ENDM
                      00285 ;-------------------------------------------------------------------------------------------------
                      00286 BIT_DWORD MACRO M#VARIN,M#BITIN,M#DWORDOUT
                      00287     S@B M#DWORDOUT + 3
                      00288     CLRF M#DWORDOUT + 3
                      00289     S@B M#DWORDOUT + 2
                      00290     CLRF M#DWORDOUT + 2
                      00291     S@B M#DWORDOUT + 1
                      00292     CLRF M#DWORDOUT + 1
                      00293         BIT_BYTE M#VARIN,M#BITIN,M#DWORDOUT
                      00294     ENDM
                      00295 ;-------------------------------------------------------------------------------------------------
                      00296 WORD_WREG MACRO M#WORDIN
                      00297     BYTE_WREG M#WORDIN
                      00298     ENDM
                      00299 ;-------------------------------------------------------------------------------------------------
                      00300 WORD_BYTE MACRO M#WORDIN,M#BYTEOUT
                      00301     BYTE_BYTE M#WORDIN,M#BYTEOUT
                      00302     ENDM
                      00303 ;-------------------------------------------------------------------------------------------------
                      00304 WORD_BIT MACRO M#WORDIN,M#VAROUT,M#BITOUT
                      00305     BYTE_BIT M#WORDIN, M#VAROUT, M#BITOUT
                      00306     ENDM
                      00307 ;-------------------------------------------------------------------------------------------------
                      00308 WORD_WORD MACRO M#WORDIN,M#WORDOUT
                      00309     MOVFF M#WORDIN + 1,M#WORDOUT + 1
                      00310     MOVFF M#WORDIN,M#WORDOUT
                      00311     ENDM
                      00312 ;-------------------------------------------------------------------------------------------------
                      00313 WORD_DWORD MACRO M#WORDIN,M#DWORDOUT
                      00314     MOVLW 0
                      00315     MOVFF WREG,M#DWORDOUT + 3
                      00316     MOVFF WREG,M#DWORDOUT + 2
                      00317     WORD_WORD M#WORDIN,M#DWORDOUT
                      00318     ENDM
                      00319 ;-------------------------------------------------------------------------------------------------
                      00320 BYTE_BYTE MACRO M#BYTEIN,M#BYTEOUT
                      00321     MOVFF M#BYTEIN,M#BYTEOUT
                      00322     ENDM
                      00323 ;-------------------------------------------------------------------------------------------------
                      00324 BYTE_WORD MACRO M#BYTEIN,M#WORDOUT
                      00325     MOVLW 0
                      00326     MOVFF WREG,M#WORDOUT + 1
                      00327     BYTE_BYTE M#BYTEIN,M#WORDOUT
                      00328     ENDM
                      00329 ;-------------------------------------------------------------------------------------------------
                      00330 BYTE_DWORD MACRO M#BYTEIN,M#DWORDOUT
                      00331     MOVLW 0
                      00332     MOVFF WREG,M#DWORDOUT + 3
                      00333     MOVFF WREG,M#DWORDOUT + 2
                      00334     MOVFF WREG,M#DWORDOUT + 1
                      00335     BYTE_BYTE M#BYTEIN,M#DWORDOUT
                      00336     ENDM
                      00337 ;-------------------------------------------------------------------------------------------------
                      00338 BYTE_BIT MACRO M#BYTEIN,M#VAROUT,M#BITOUT
                      00339     IF ((M#BYTEIN & 0X0F00) == (M#VAROUT & 0X0F00))
                      00340         S@B M#BYTEIN
                      00341         BTFSC M#BYTEIN,0
                      00342         BSF M#VAROUT,M#BITOUT
                      00343         BTFSS M#BYTEIN,0
                      00344         BCF M#VAROUT,M#BITOUT
                      00345     ELSE
                      00346       IF ((M#BYTEIN <= BANKA_END) | (M#BYTEIN >= 0X0F80))
                      00347         S@B M#VAROUT
                      00348         BTFSC M#BYTEIN,0
                      00349         BSF M#VAROUT,M#BITOUT
                      00350         BTFSS M#BYTEIN,0
                      00351         BCF M#VAROUT,M#BITOUT
                      00352       ELSE
                      00353           IF ((M#VAROUT <= BANKA_END) | (M#VAROUT >= 0X0F80))
                      00354         S@B M#BYTEIN
                      00355         BTFSC M#BYTEIN,0
                      00356         BSF M#VAROUT,M#BITOUT
                      00357         BTFSS M#BYTEIN,0
                      00358         BCF M#VAROUT,M#BITOUT
                      00359           ELSE
                      00360         S@B M#BYTEIN
                      00361         RRF M#BYTEIN,W
                      00362         S@B M#VAROUT
                      00363         SKPNC
                      00364         BSF M#VAROUT,M#BITOUT
                      00365         SKPC
                      00366         BCF M#VAROUT,M#BITOUT
                      00367         ENDIF
                      00368       ENDIF
                      00369     ENDIF
                      00370     R@B                                                 ; Reset the bank when the macro is finished
                      00371     ENDM
                      00372 ;-------------------------------------------------------------------------------------------------
                      00373 DWORD_WREG MACRO M#DWORDIN
                      00374     BYTE_WREG M#DWORDIN
                      00375         ENDM
                      00376 ;-------------------------------------------------------------------------------------------------
                      00377 DWORD_BYTE MACRO M#DWORDIN,M#BYTEOUT
                      00378     BYTE_BYTE M#DWORDIN,M#BYTEOUT
                      00379         ENDM
                      00380 ;-------------------------------------------------------------------------------------------------
                      00381 DWORD_WORD MACRO M#DWORDIN,M#WORDOUT
                      00382     MOVFF M#DWORDIN + 1,M#WORDOUT + 1
                      00383     MOVFF M#DWORDIN,M#WORDOUT
                      00384         ENDM
                      00385 ;-------------------------------------------------------------------------------------------------
                      00386 DWORD_DWORD MACRO M#DWORDIN,M#DWORDOUT
                      00387     MOVFF M#DWORDIN + 3,M#DWORDOUT + 3
                      00388     MOVFF M#DWORDIN + 2,M#DWORDOUT + 2
                      00389     MOVFF M#DWORDIN + 1,M#DWORDOUT + 1
                      00390     MOVFF M#DWORDIN,M#DWORDOUT
                      00391         ENDM
                      00392 ;-------------------------------------------------------------------------------------------------
                      00393 DWORD_BIT MACRO M#DWORDIN,M#VAROUT,M#BITOUT
                      00394     BYTE_BIT M#DWORDIN,M#VAROUT,M#BITOUT
                      00395         ENDM
                      00396 ;-------------------------------------------------------------------------------------------------
                      00397 NUM_FLOAT MACRO M#NUMIN,FLOATOUT
                      00398         NUM_BYTE M#NUMIN,FLOATOUT + 3
                      00399         NUM_BYTE ((M#NUMIN >> 8) & 255),FLOATOUT + 2
                      00400         NUM_BYTE ((M#NUMIN >> 16) & 255),FLOATOUT + 1
                      00401         NUM_BYTE ((M#NUMIN >> 24) & 255),FLOATOUT
                      00402         ENDM
                      00403 ;-------------------------------------------------------------------------------------------------
                      00404 WREG_FLOAT MACRO FLOATOUT
                      00405     CALL FLO@0832U
                      00406         MOVFF PBP_AARG,FLOATOUT
                      00407         MOVFF PBP_AARGH,FLOATOUT + 1
                      00408         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00409         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00410     ENDM
                      00411 ;-------------------------------------------------------------------------------------------------
                      00412 BIT_FLOAT MACRO M#VARIN,M#BITIN,FLOATOUT
                      00413     BIT_WREG M#VARIN,M#BITIN
                      00414     CALL FLO@0832U
                      00415         MOVFF PBP_AARG,FLOATOUT
                      00416         MOVFF PBP_AARGH,FLOATOUT + 1
                      00417         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00418         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00419     ENDM
                      00420 ;-------------------------------------------------------------------------------------------------
                      00421 BYTE_FLOAT MACRO M#BYTEIN,FLOATOUT
                      00422     BYTE_WREG M#BYTEIN
                      00423     CALL FLO@0832U
                      00424         MOVFF PBP_AARG,FLOATOUT
                      00425         MOVFF PBP_AARGH,FLOATOUT + 1
                      00426         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00427         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00428     ENDM
                      00429 ;-------------------------------------------------------------------------------------------------
                      00430 WORD_FLOAT MACRO M#WORDIN,FLOATOUT
                      00431     BYTE_BYTE M#WORDIN PBP_AARG
                      00432     BYTE_BYTE M#WORDIN + 1 PBP_AARGH
                      00433     CALL FLO@1632U
                      00434         MOVFF PBP_AARG,FLOATOUT
                      00435         MOVFF PBP_AARGH,FLOATOUT + 1
                      00436         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00437         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00438     ENDM
                      00439 ;-------------------------------------------------------------------------------------------------
                      00440 DWORD_FLOAT MACRO M#DWORDIN,FLOATOUT                    
                      00441         MOVFF M#DWORDIN,PBP_AARG
                      00442         MOVFF M#DWORDIN + 1,PBP_AARGH
                      00443         MOVFF M#DWORDIN + 2,PBP_AARGHH
                      00444         MOVFF M#DWORDIN + 3,PBP_AARGHHH
                      00445         CALL FLO@3232S
                      00446         MOVFF PBP_AARG,FLOATOUT
                      00447         MOVFF PBP_AARGH,FLOATOUT + 1
                      00448         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00449         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00450         ENDM
                      00451 ;-------------------------------------------------------------------------------------------------
                      00452 FLOAT_FLOAT MACRO FLOATIN,FLOATOUT      
                      00453         MOVFF FLOATIN,FLOATOUT
                      00454         MOVFF FLOATIN + 1,FLOATOUT + 1
                      00455         MOVFF FLOATIN + 2,FLOATOUT + 2
                      00456         MOVFF FLOATIN + 3,FLOATOUT + 3
                      00457         ENDM
                      00458 ;-------------------------------------------------------------------------------------------------
                      00459 FLOAT_WREG MACRO FLOATIN
                      00460 
                      00461         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00462         CALL INT@3232
                      00463         ENDM
                      00464 ;-------------------------------------------------------------------------------------------------
                      00465 FLOAT_BIT MACRO FLOATIN,M#VAROUT,M#BITOUT
                      00466         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00467         CALL INT@3232
                      00468         WREG_BIT M#VAROUT,M#BITOUT
                      00469         ENDM
                      00470 ;-------------------------------------------------------------------------------------------------
                      00471 FLOAT_BYTE MACRO FLOATIN,M#BYTEOUT
                      00472         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00473         CALL INT@3232
                      00474         WREG_BYTE M#BYTEOUT
                      00475         ENDM
                      00476 ;-------------------------------------------------------------------------------------------------
                      00477 FLOAT_WORD MACRO FLOATIN,M#WORDOUT
                      00478         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00479         CALL INT@3232
                      00480         MOVFF PBP_AARGHHH,M#WORDOUT
                      00481         MOVFF PBP_AARGHH,M#WORDOUT + 1
                      00482         ENDM
                      00483 ;-------------------------------------------------------------------------------------------------
                      00484 FLOAT_DWORD MACRO FLOATIN,M#DWORDOUT
                      00485         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00486         CALL INT@3232
                      00487         MOVFF PBP_AARGHHH,M#DWORDOUT
                      00488         MOVFF PBP_AARGHH,M#DWORDOUT + 1
                      00489         MOVFF PBP_AARGH,M#DWORDOUT + 2
                      00490         MOVFF PBP_AARG,M#DWORDOUT + 3
                      00491         ENDM
                      00492 ;-------------------------------------------------------------------------------------------------
                      00493 ; Macros for Library Manager
                      00494 NUM_FSR0 MACRO M#NUMIN
                      00495     LFSR 0, M#NUMIN
                      00496     ENDM
                      00497 ;-------------------------------------------------------------------------------------------------
                      00498 NUM_FSR1 MACRO M#NUMIN
                      00499     LFSR 1, M#NUMIN
                      00500     ENDM
                      00501 ;-------------------------------------------------------------------------------------------------
                      00502 NUM_FSR2 MACRO M#NUMIN
                      00503     LFSR 2, M#NUMIN
                      00504     ENDM 
                      00505 ;-------------------------------------------------------------------------------------------------
                      00506 LABEL_WORD MACRO LABELIN,M#WORDOUT  
                      00507     MOVLW (LABELIN & 255)
                      00508     MOVFF WREG, M#WORDOUT
                      00509     MOVLW ((LABELIN >> 8) & 255)
                      00510     MOVFF WREG, M#WORDOUT + 1
                      00511     ENDM
  00000000            00220 BPF = 0
  00000001            00221 BPFH = 1
  00000002            00222 GEN = 2
  00000003            00223 GEN3H = 3
  00000004            00224 GEN4 = 4
  00000005            00225 GEN4H = 5
  00000006            00226 GENH = 6
  00000007            00227 GPR = 7
  00000008            00228 PBP#VAR0 = 8
  00000009            00229 PBP#VAR0H = 9
  0000000A            00230 PBP#VAR0HH = 10
  0000000B            00231 PBP#VAR0HHH = 11
  0000000C            00232 PBP#VAR1 = 12
  0000000D            00233 PBP_AARG = 13
  0000000E            00234 PBP_AARGH = 14
  0000000F            00235 PBP_AARGHH = 15
  00000010            00236 PBP_AARGHHH = 16
  00000011            00237 PP0 = 17
  00000012            00238 PP0H = 18
  00000013            00239 PP0HH = 19
  00000014            00240 PP0HHH = 20
  00000015            00241 PP1 = 21
  00000016            00242 PP1H = 22
  00000017            00243 PP1HH = 23
  00000018            00244 PP1HHH = 24
  00000019            00245 PP2 = 25
  0000001A            00246 PP2H = 26
  0000001B            00247 PP2HH = 27
  0000001C            00248 PP2HHH = 28
  0000001D            00249 PP3 = 29
  0000001E            00250 PP3H = 30
  0000001F            00251 PP4 = 31
  00000020            00252 PP5 = 32
  00000021            00253 PP6 = 33
  00000022            00254 PP6H = 34
  00000023            00255 PP7 = 35
  00000024            00256 PP7H = 36
  00000025            00257 PP7HH = 37
  00000026            00258 PP7HHH = 38
  00000027            00259 PP8 = 39
  00000028            00260 PP8H = 40
  00000029            00261 PPZ = 41
  0000002A            00262 PPZH = 42
  0000002B            00263 PPZHH = 43
  0000002C            00264 PPZHHH = 44
  0000002D            00265 SP#P9 = 45
  0000002E            00266 _AEXP = 46
  0000002F            00267 _FP_FLAGS = 47
  00000030            00268 _FP_TEMP = 48
  00000031            00269 _SIGN = 49
  000002E5            00270 _B#VR1 = 741
  00000006            00271 HSERIAL_SPBRG = 6
  00000020            00272 HSERIAL_TXSTA = 32
  00000090            00273 HSERIAL_RCSTA = 144
  00002580            00274 HSERIAL_BAUD = 9600
000000                00275         ORG 0X00
000000 EFD7 F002      00276         GOTO START@
000008                00277         ORG 0X08
000008                00278 T@EB
000008 6A12           00279         CLRF 18
00000A                00280 T@EW
00000A 6A16           00281         CLRF 22
00000C                00282 T@E
00000C 6E15           00283         MOVWF 21
00000E 0E02           00284         MOVLW 2
000010 D003           00285         BRA T@ST
000012                00286 T@GE
000012 6E15           00287         MOVWF 21
000014 0E03           00288         MOVLW 3
000016 D000           00289         BRA T@ST
000018                00290 T@ST
000018 6E07           00291         MOVWF 7
00001A 5016           00292         MOVF 22,W
00001C 5C12           00293         SUBWF 18,W
00001E E102           00294         BNZ CN@EQ
000020 5015           00295         MOVF 21,W
000022 5C11           00296         SUBWF 17,W
000024                00297 CN@EQ
000024 0E04           00298         MOVLW 4
000026 B0D8           00299         BTFSC 4056,0
000028 0E01           00300         MOVLW 1
00002A B4D8           00301         BTFSC 4056,2
00002C 0E02           00302         MOVLW 2
00002E 1407           00303         ANDWF 7,W
000030 A4D8           00304         BTFSS 4056,2
000032 0E01           00305         MOVLW 1
000034 0012           00306         RETURN
000036                00307 LCD@CLS
000036 0E80           00308         MOVLW 128
000038 6E01           00309         MOVWF 1
00003A                00310 CLS
00003A 0EFE           00311         MOVLW 254
00003C ECF2 F000      00312         CALL CH@SND
000040 0E01           00313         MOVLW 1
000042 ECF2 F000      00314         CALL CH@SND
000046 0E75           00315         MOVLW 117
000048 6E12           00316         MOVWF 18
00004A 0E30           00317         MOVLW 48
00004C EF32 F001      00318         GOTO DLUS@W
000050                00319 LCD@CRS
000050 6A01           00320         CLRF 1
000052 8E01           00321         BSF 1,7
000054                00322 CURS@
000054 6E20           00323         MOVWF 32
000056 0EFE           00324         MOVLW 254
000058 ECF2 F000      00325         CALL CH@SND
00005C 5020           00326         MOVF 32,W
00005E EFF2 F000      00327         GOTO CH@SND
000062                00328 OUT@DECB
000062 6A05           00329         CLRF 5
000064                00330 OUT@DECC
000064 6E19           00331         MOVWF 25
000066 6A1A           00332         CLRF 26
000068                00333 OUT@DEC
000068 9600           00334         BCF 0,3
00006A 5005           00335         MOVF 5,W
00006C B4D8           00336         BTFSC 4056,2
00006E 8600           00337         BSF 0,3
000070 0E05           00338         MOVLW 5
000072 6E04           00339         MOVWF 4
000074 0E27           00340         MOVLW 39
000076 6E16           00341         MOVWF 22
000078 0E10           00342         MOVLW 16
00007A D80C           00343         RCALL D@DIG
00007C 0E03           00344         MOVLW 3
00007E 6E16           00345         MOVWF 22
000080 0EE8           00346         MOVLW 232
000082 D808           00347         RCALL D@DIG
000084 6A16           00348         CLRF 22
000086 0E64           00349         MOVLW 100
000088 D805           00350         RCALL D@DIG
00008A 6A16           00351         CLRF 22
00008C 0E0A           00352         MOVLW 10
00008E D802           00353         RCALL D@DIG
000090 5019           00354         MOVF 25,W
000092 D008           00355         BRA SEND@IT
000094                00356 D@DIG
000094 6E15           00357         MOVWF 21
000096 501A           00358         MOVF 26,W
000098 6E12           00359         MOVWF 18
00009A 5019           00360         MOVF 25,W
00009C 6E11           00361         MOVWF 17
00009E ECA3 F001      00362         CALL D@VD
0000A2 5011           00363         MOVF 17,W
0000A4                00364 SEND@IT
0000A4 6E11           00365         MOVWF 17
0000A6 4E04           00366         DCFSNZ 4,F
0000A8 9600           00367         BCF 0,3
0000AA 5005           00368         MOVF 5,W
0000AC E003           00369         BZ $ + 8
0000AE 5C04           00370         SUBWF 4,W
0000B0 B0D8           00371         BTFSC 4056,0
0000B2 D008           00372         BRA EX@SEND@IT
0000B4 5011           00373         MOVF 17,W
0000B6 A4D8           00374         BTFSS 4056,2
0000B8 9600           00375         BCF 0,3
0000BA B600           00376         BTFSC 0,3
0000BC D003           00377         BRA EX@SEND@IT
0000BE 0F30           00378         ADDLW 48
0000C0 EFF2 F000      00379         GOTO CH@SND
0000C4                00380 EX@SEND@IT
0000C4 0012           00381         RETURN
0000C6                00382 SB@STROUT
0000C6 6E19           00383         MOVWF 25
0000C8                00384 SB@STROUTLP
0000C8 5004           00385         MOVF 4,W
0000CA B4D8           00386         BTFSC 4056,2
0000CC 0012           00387         RETURN
0000CE C019 FFE9      00388         MOVFF 25,4073
0000D2 C01A FFEA      00389         MOVFF 26,4074
0000D6 50EF           00390         MOVF 4079,W
0000D8 B4D8           00391         BTFSC 4056,2
0000DA 0012           00392         RETURN
0000DC ECF2 F000      00393         CALL CH@SND
0000E0 4A19           00394         INFSNZ 25,F
0000E2 2A1A           00395         INCF 26,F
0000E4 0604           00396         DECF 4,F
0000E6 D7F0           00397         BRA SB@STROUTLP
0000E8                00398 PRINT@MSTR
0000E8                00399 PRINT@MSTRL
0000E8 6AA6           00400         CLRF 4006
0000EA 8EA6           00401         BSF 4006,EEPGD
0000EC                00402 PRT@MTL1
0000EC 0009           00403         TBLRD*+
0000EE 50F5           00404         MOVF 4085,W
0000F0 E002           00405         BZ PRT@MTEXT
0000F2 D802           00406         RCALL PRINT
0000F4 D7FB           00407         BRA PRT@MTL1
0000F6                00408 PRT@MTEXT
0000F6 0012           00409         RETURN
0000F8                00410 PRINT
0000F8 6E1E           00411         MOVWF 30
0000FA 9C83           00412         BCF 3971,6
0000FC 9E83           00413         BCF 3971,7
0000FE 9C95           00414         BCF 3989,6
000100 9E95           00415         BCF 3989,7
000102 0EF0           00416         MOVLW 240
000104 1695           00417         ANDWF 3989,F
000106 501E           00418         MOVF 30,W
000108 B200           00419         BTFSC 0,1
00010A EFA9 F000      00420         GOTO PRT@1
00010E 0E3A           00421         MOVLW 58
000110 6E12           00422         MOVWF 18
000112 0E98           00423         MOVLW 152
000114 EC32 F001      00424         CALL DLUS@W
000118 0E33           00425         MOVLW 51
00011A 6E1D           00426         MOVWF 29
00011C D82E           00427         RCALL PR@LP
00011E 0E13           00428         MOVLW 19
000120 6E12           00429         MOVWF 18
000122 0E88           00430         MOVLW 136
000124 EC32 F001      00431         CALL DLUS@W
000128 D828           00432         RCALL PR@LP
00012A 0E64           00433         MOVLW 100
00012C EC31 F001      00434         CALL DL@US
000130 D824           00435         RCALL PR@LP
000132 0E64           00436         MOVLW 100
000134 EC31 F001      00437         CALL DL@US
000138 0E22           00438         MOVLW 34
00013A 6E1D           00439         MOVWF 29
00013C D81E           00440         RCALL PR@LP
00013E 0E28           00441         MOVLW 40
000140 D807           00442         RCALL PR@CM
000142 0E0C           00443         MOVLW 12
000144 D805           00444         RCALL PR@CM
000146 0E06           00445         MOVLW 6
000148 D803           00446         RCALL PR@CM
00014A 8200           00447         BSF 0,1
00014C 501E           00448         MOVF 30,W
00014E D001           00449         BRA PRT@1
000150                00450 PR@CM
000150 8000           00451         BSF 0,0
000152                00452 PRT@1
000152 6E1D           00453         MOVWF 29
000154 A000           00454         BTFSS 0,0
000156 D00B           00455         BRA PR@CC
000158 9E83           00456         BCF 3971,7
00015A 0803           00457         SUBLW 3
00015C E30C           00458         BNC PR@SD
00015E D80B           00459         RCALL PR@SD
000160 0E07           00460         MOVLW 7
000162 6E12           00461         MOVWF 18
000164 0ED0           00462         MOVLW 208
000166 EC32 F001      00463         CALL DLUS@W
00016A 80D8           00464         BSF 4056,0
00016C 0012           00465         RETURN
00016E                00466 PR@CC
00016E 8000           00467         BSF 0,0
000170 08FE           00468         SUBLW 254
000172 E012           00469         BZ PR@EX
000174 8E83           00470         BSF 3971,7
000176                00471 PR@SD
000176 3A1D           00472         SWAPF 29,F
000178 A000           00473         BTFSS 0,0
00017A                00474 PR@LP
00017A 9000           00475         BCF 0,0
00017C 8C83           00476         BSF 3971,6
00017E 0EF0           00477         MOVLW 240
000180 1683           00478         ANDWF 3971,F
000182 501D           00479         MOVF 29,W
000184 0B0F           00480         ANDLW 15
000186 1283           00481         IORWF 3971,F
000188 9C83           00482         BCF 3971,6
00018A 3A1D           00483         SWAPF 29,F
00018C B000           00484         BTFSC 0,0
00018E D7F5           00485         BRA PR@LP
000190 0E32           00486         MOVLW 50
000192 EC31 F001      00487         CALL DL@US
000196 80D8           00488         BSF 4056,0
000198                00489 PR@EX
000198 501E           00490         MOVF 30,W
00019A 0012           00491         RETURN
00019C                00492 HRSIN2
00019C B2AB           00493         BTFSC 4011,OERR
00019E 98AB           00494         BCF 4011,CREN
0001A0 88AB           00495         BSF 4011,CREN
0001A2 C002 F011      00496         MOVFF 2,17
0001A6 C006 F012      00497         MOVFF 6,18
0001AA 6A15           00498         CLRF 21
0001AC 6A16           00499         CLRF 22
0001AE                00500 HRI@L0
0001AE 0000           00501         NOP
0001B0 D000           00502         BRA $ + 2
0001B2                00503 HRI@L
0001B2 0000           00504         NOP
0001B4 BA9E           00505         BTFSC 3998,RCIF
0001B6 D013           00506         BRA H@RSIN
0001B8 68E8           00507         SETF 4072
0001BA 2615           00508         ADDWF 21,F
0001BC 2216           00509         ADDWFC 22,F
0001BE 2211           00510         ADDWFC 17,F
0001C0 2212           00511         ADDWFC 18,F
0001C2 A0D8           00512         BTFSS 4056,0
0001C4 0012           00513         RETURN
0001C6 4815           00514         INFSNZ 21,W
0001C8 3C16           00515         INCFSZ 22,W
0001CA D7F1           00516         BRA HRI@L0
0001CC 0E3D           00517         MOVLW 61
0001CE 6E15           00518         MOVWF 21
0001D0 6A16           00519         CLRF 22
0001D2 D7EF           00520         BRA HRI@L
0001D4                00521 HRSIN
0001D4 B2AB           00522         BTFSC 4011,OERR
0001D6 98AB           00523         BCF 4011,CREN
0001D8 88AB           00524         BSF 4011,CREN
0001DA AA9E           00525         BTFSS 3998,RCIF
0001DC D7FE           00526         BRA $ - 2
0001DE                00527 H@RSIN
0001DE 50AE           00528         MOVF 4014,W
0001E0 80D8           00529         BSF 4056,0
0001E2 0012           00530         RETURN
0001E4                00531 CH@SND
0001E4 BE01           00532         BTFSC 1,7
0001E6 EF7C F000      00533         GOTO PRINT
0001EA A201           00534         BTFSS 1,1
0001EC D005           00535         BRA $ + 12
0001EE B001           00536         BTFSC 1,0
0001F0 D003           00537         BRA $ + 8
0001F2 B201           00538         BTFSC 1,1
0001F4 6EEE           00539         MOVWF 4078
0001F6 0012           00540         RETURN
0001F8                00541 EE@RD
0001F8 6AAA           00542         CLRF 4010
0001FA 6EA9           00543         MOVWF 4009
0001FC                00544 EE@RD@W
0001FC 6AA6           00545         CLRF 4006
0001FE 80A6           00546         BSF     4006,RD
000200 50A8           00547         MOVF 4008,W
000202 4AA9           00548         INFSNZ 4009,F
000204 2AAA           00549         INCF 4010,F
000206 0012           00550         RETURN
000208                00551 EE@WR
000208 6AAA           00552         CLRF 4010
00020A                00553 EE@WR@W
00020A 6EA8           00554         MOVWF 4008
00020C 6AA6           00555         CLRF 4006
00020E 84A6           00556         BSF     4006,WREN
000210 0E55           00557         MOVLW 85
000212 6EA7           00558         MOVWF 4007
000214 0EAA           00559         MOVLW 170
000216 6EA7           00560         MOVWF 4007
000218 82A6           00561         BSF     4006,WR
00021A B2A6           00562         BTFSC 4006,WR
00021C D7FE           00563         BRA $ - 2
00021E 94A6           00564         BCF     4006,WREN
000220 4AA9           00565         INFSNZ 4009,F
000222 2AAA           00566         INCF 4010,F
000224 0012           00567         RETURN
000226                00568 C@WRITE
000226 6EF5           00569         MOVWF 4085
000228 000C           00570         TBLWT*
00022A 28F6           00571         INCF 4086,W
00022C 0B07           00572         ANDLW 7
00022E E109           00573         BNZ CR@EXIT
000230 0E84           00574         MOVLW 132
000232 6EA6           00575         MOVWF 4006
000234 0E55           00576         MOVLW 85
000236 6EA7           00577         MOVWF 4007
000238 0EAA           00578         MOVLW 170
00023A 6EA7           00579         MOVWF 4007
00023C 82A6           00580         BSF 4006,WR
00023E D000           00581         BRA $ + 2
000240 94A6           00582         BCF 4006,WREN
000242                00583 CR@EXIT
000242 4AF6           00584         INFSNZ 4086,F
000244 2AF7           00585         INCF 4087,F
000246 0012           00586         RETURN
000248                00587 DL@MS
000248 6A16           00588         CLRF 22
00024A                00589 DLY@W
00024A 6E15           00590         MOVWF 21
00024C                00591 DLY@P
00024C 0EFF           00592         MOVLW 255
00024E 2615           00593         ADDWF 21,F
000250 2216           00594         ADDWFC 22,F
000252 D000           00595         BRA $ + 2
000254 A0D8           00596         BTFSS 4056,0
000256 0012           00597         RETURN
000258 0E03           00598         MOVLW 3
00025A 6E12           00599         MOVWF 18
00025C 0EDF           00600         MOVLW 223
00025E D802           00601         RCALL DLUS@W
000260 D7F5           00602         BRA DLY@P
000262                00603 DL@US
000262 6A12           00604         CLRF 18
000264                00605 DLUS@W
000264 0FE8           00606         ADDLW 232
000266 6E11           00607         MOVWF 17
000268 1E12           00608         COMF 18,F
00026A 0EFC           00609         MOVLW 252
00026C A0D8           00610         BTFSS 4056,0
00026E D003           00611         BRA DL@H
000270                00612 DLUS@LP
000270 2611           00613         ADDWF 17,F
000272 B0D8           00614         BTFSC 4056,0
000274 D7FD           00615         BRA DLUS@LP
000276                00616 DL@H
000276 2611           00617         ADDWF 17,F
000278 0000           00618         NOP
00027A 3E12           00619         INCFSZ 18,F
00027C D7F9           00620         BRA DLUS@LP
00027E B011           00621         BTFSC 17,0
000280 D000           00622         BRA $ + 2
000282 A211           00623         BTFSS 17,1
000284 D002           00624         BRA DLUS@D
000286 0000           00625         NOP
000288 D000           00626         BRA $ + 2
00028A                00627 DLUS@D
00028A 0012           00628         RETURN
00028C                00629 L@DIV
00028C                00630 L@MOD
00028C 5014           00631         MOVF 20,W
00028E 181C           00632         XORWF 28,W
000290 0B80           00633         ANDLW 128
000292 6EF4           00634         MOVWF 4084
000294 AE14           00635         BTFSS 20,7
000296 D006           00636         BRA DIVS@32X32SKIP1
000298 80D8           00637         BSF 4056,C
00029A 0E00           00638         MOVLW 0
00029C 5611           00639         SUBFWB 17,F
00029E 5612           00640         SUBFWB 18,F
0002A0 5613           00641         SUBFWB 19,F
0002A2 5614           00642         SUBFWB 20,F
0002A4                00643 DIVS@32X32SKIP1
0002A4 AE1C           00644         BTFSS 28,7
0002A6 D006           00645         BRA DIVS@32X32SKIP2
0002A8 80D8           00646         BSF 4056,C
0002AA 0E00           00647         MOVLW 0
0002AC 5619           00648         SUBFWB 25,F
0002AE 561A           00649         SUBFWB 26,F
0002B0 561B           00650         SUBFWB 27,F
0002B2 561C           00651         SUBFWB 28,F
0002B4                00652 DIVS@32X32SKIP2
0002B4 6A15           00653         CLRF 21
0002B6 6A16           00654         CLRF 22
0002B8 6A17           00655         CLRF 23
0002BA 6A18           00656         CLRF 24
0002BC 6A29           00657         CLRF 41
0002BE 6A2A           00658         CLRF 42
0002C0 6A2B           00659         CLRF 43
0002C2 6A2C           00660         CLRF 44
0002C4 501C           00661         MOVF 28,W
0002C6 101B           00662         IORWF 27,W
0002C8 101A           00663         IORWF 26,W
0002CA 1019           00664         IORWF 25,W
0002CC E023           00665         BZ DIVS@32X32SKIP5
0002CE 0E20           00666         MOVLW 32
0002D0 6EF3           00667         MOVWF 4083
0002D2                00668 DIVS@32X32LOOP
0002D2 90D8           00669         BCF 4056,C
0002D4 3611           00670         RLCF 17,F
0002D6 3612           00671         RLCF 18,F
0002D8 3613           00672         RLCF 19,F
0002DA 3614           00673         RLCF 20,F
0002DC 3629           00674         RLCF 41,F
0002DE 362A           00675         RLCF 42,F
0002E0 362B           00676         RLCF 43,F
0002E2 362C           00677         RLCF 44,F
0002E4 5019           00678         MOVF 25,W
0002E6 5C29           00679         SUBWF 41,W
0002E8 501A           00680         MOVF 26,W
0002EA 582A           00681         SUBWFB 42,W
0002EC 501B           00682         MOVF 27,W
0002EE 582B           00683         SUBWFB 43,W
0002F0 501C           00684         MOVF 28,W
0002F2 582C           00685         SUBWFB 44,W
0002F4 E309           00686         BNC DIVS@32X32SKIP4
0002F6 5019           00687         MOVF 25,W
0002F8 5E29           00688         SUBWF 41,F
0002FA 501A           00689         MOVF 26,W
0002FC 5A2A           00690         SUBWFB 42,F
0002FE 501B           00691         MOVF 27,W
000300 5A2B           00692         SUBWFB 43,F
000302 501C           00693         MOVF 28,W
000304 5A2C           00694         SUBWFB 44,F
000306 80D8           00695         BSF 4056,C
000308                00696 DIVS@32X32SKIP4
000308 3615           00697         RLCF 21,F
00030A 3616           00698         RLCF 22,F
00030C 3617           00699         RLCF 23,F
00030E 3618           00700         RLCF 24,F
000310 2EF3           00701         DECFSZ 4083,F
000312 D7DF           00702         BRA DIVS@32X32LOOP
000314                00703 DIVS@32X32SKIP5
000314 AEF4           00704         BTFSS 4084,7
000316 D006           00705         BRA DIVS@32X32EXIT
000318 80D8           00706         BSF 4056,C
00031A 0E00           00707         MOVLW 0
00031C 5615           00708         SUBFWB 21,F
00031E 5616           00709         SUBFWB 22,F
000320 5617           00710         SUBFWB 23,F
000322 5618           00711         SUBFWB 24,F
000324                00712 DIVS@32X32EXIT
000324 C015 F011      00713         MOVFF 21,17
000328 C016 F012      00714         MOVFF 22,18
00032C C017 F013      00715         MOVFF 23,19
000330 C018 F014      00716         MOVFF 24,20
000334 C029 F019      00717         MOVFF 41,25
000338 C02A F01A      00718         MOVFF 42,26
00033C C02B F01B      00719         MOVFF 43,27
000340 C02C F01C      00720         MOVFF 44,28
000344 0012           00721         RETURN
000346                00722 D@VD
000346 6A1A           00723         CLRF 26
000348 6A19           00724         CLRF 25
00034A                00725 D@VD2
00034A 0E10           00726         MOVLW 16
00034C 6EF3           00727         MOVWF 4083
00034E                00728 DV@LP
00034E 3412           00729         RLCF 18,W
000350 3619           00730         RLCF 25,F
000352 361A           00731         RLCF 26,F
000354 5015           00732         MOVF 21,W
000356 5C19           00733         SUBWF 25,W
000358 5016           00734         MOVF 22,W
00035A 581A           00735         SUBWFB 26,W
00035C E305           00736         BNC D@K
00035E 5015           00737         MOVF 21,W
000360 5E19           00738         SUBWF 25,F
000362 5016           00739         MOVF 22,W
000364 5A1A           00740         SUBWFB 26,F
000366 80D8           00741         BSF 4056,0
000368                00742 D@K
000368 3611           00743         RLCF 17,F
00036A 3612           00744         RLCF 18,F
00036C 2EF3           00745         DECFSZ 4083,F
00036E D7EF           00746         BRA DV@LP
000370 5011           00747         MOVF 17,W
000372 0012           00748         RETURN
000374                00749 AL@MUL
000374 0E20           00750         MOVLW 32
000376 6E1D           00751         MOVWF 29
000378 6A29           00752         CLRF 41
00037A 6A2A           00753         CLRF 42
00037C 6A2B           00754         CLRF 43
00037E 6A2C           00755         CLRF 44
000380                00756 MLT32@LP
000380 90D8           00757         BCF 4056,0
000382 A011           00758         BTFSS 17,0
000384 D00E           00759         BRA MLT32@BR
000386 5019           00760         MOVF 25,W
000388 2629           00761         ADDWF 41,F
00038A 501A           00762         MOVF 26,W
00038C B0D8           00763         BTFSC 4056,0
00038E 3C1A           00764         INCFSZ 26,W
000390 262A           00765         ADDWF 42,F
000392 501B           00766         MOVF 27,W
000394 B0D8           00767         BTFSC 4056,0
000396 3C1B           00768         INCFSZ 27,W
000398 262B           00769         ADDWF 43,F
00039A 501C           00770         MOVF 28,W
00039C B0D8           00771         BTFSC 4056,0
00039E 3C1C           00772         INCFSZ 28,W
0003A0 262C           00773         ADDWF 44,F
0003A2                00774 MLT32@BR
0003A2 322C           00775         RRCF 44,F
0003A4 322B           00776         RRCF 43,F
0003A6 322A           00777         RRCF 42,F
0003A8 3229           00778         RRCF 41,F
0003AA 3214           00779         RRCF 20,F
0003AC 3213           00780         RRCF 19,F
0003AE 3212           00781         RRCF 18,F
0003B0 3211           00782         RRCF 17,F
0003B2 2E1D           00783         DECFSZ 29,F
0003B4 D7E5           00784         BRA MLT32@LP
0003B6 0012           00785         RETURN
0003B8                00786 LOAD@MSTR
0003B8                00787 LOAD@MSTRL
0003B8 6AA6           00788         CLRF 4006
0003BA 8EA6           00789         BSF 4006,EEPGD
0003BC 0009           00790         TBLRD*+
0003BE 50F5           00791         MOVF 4085,W
0003C0 E002           00792         BZ $ + 6
0003C2 6EEE           00793         MOVWF 4078
0003C4 D7FB           00794         BRA $ - 8
0003C6 0012           00795         RETURN
                      00796  #INCLUDE "C:\PROGRA~1\CROWNH~1\pds\INC\FL_SRC.INC"
                      00958 LIST
0003C8                00959 INT@3232
0003C8 C00E F031      00960         MOVFF PBP_AARGH,_SIGN                                   
0003CC 0E7F           00961         MOVLW 127                                       
0003CE 5C0D           00962         SUBWF PBP_AARG,W
0003D0 6E30           00963         MOVWF _FP_TEMP  
0003D2 E33F           00964         BNC FTO@I_RES0                                                  
0003D4 8E0E           00965         BSF PBP_AARGH,7                                         
0003D6 6A0D           00966         CLRF PBP_AARG                                   
0003D8 6A29           00967         CLRF PPZ,0                                              
0003DA 0817           00968         SUBLW 23
0003DC 6E30           00969         MOVWF _FP_TEMP                                                  
0003DE E20B           00970         BC FTO@I_1                                                      
0003E0 0E08           00971         MOVLW 8
0003E2 2630           00972         ADDWF _FP_TEMP,F                                                
0003E4 E338           00973         BNC FTO@I_OVERFLOW                                      
0003E6 C00E F00D      00974         MOVFF PBP_AARGH,PBP_AARG                        
0003EA C00F F00E      00975         MOVFF PBP_AARGHH,PBP_AARGH                      
0003EE C010 F00F      00976         MOVFF PBP_AARGHHH,PBP_AARGHH                                    
0003F2 6A10           00977         CLRF PBP_AARGHHH                                
0003F4 D00C           00978         BRA FTO@I_3                     
0003F6                00979 FTO@I_1 
0003F6 0E08           00980         MOVLW 8                                                                 
0003F8 5E30           00981         SUBWF _FP_TEMP,F                        
0003FA E308           00982         BNC FTO@I_2                                                     
0003FC C010 F029      00983         MOVFF PBP_AARGHHH,PPZ                                   
000400 C00F F010      00984         MOVFF PBP_AARGHH,PBP_AARGHHH                                    
000404 C00E F00F      00985         MOVFF PBP_AARGH,PBP_AARGHH                      
000408 6A0E           00986         CLRF PBP_AARGH                  
00040A D7F5           00987         BRA FTO@I_1                     
00040C                00988 FTO@I_2 
00040C 2630           00989         ADDWF _FP_TEMP,F                                        
00040E                00990 FTO@I_3 
00040E 5230           00991         MOVF _FP_TEMP,F
000410 E008           00992         BZ FTO@I_5                                                                                      
000412                00993 FTO@I_4                                         
000412 90D8           00994         BCF STATUS,C                                            
000414 320D           00995         RRCF PBP_AARG,F                                         
000416 320E           00996         RRCF PBP_AARGH,F                        
000418 320F           00997         RRCF PBP_AARGHH,F
00041A 3210           00998         RRCF PBP_AARGHHH,F                      
00041C 3229           00999         RRCF PPZ,F,0                            
00041E 2E30           01000         DECFSZ _FP_TEMP,F
000420 D7F8           01001         BRA FTO@I_4                                                     
000422                01002 FTO@I_5 
000422 BE0D           01003         BTFSC PBP_AARG,7                
000424 D018           01004         BRA FTO@I_OVERFLOW
000426 AC2F           01005         BTFSS _FP_FLAGS,6       
000428 D00B           01006         BRA FTO@I_6
00042A AE29           01007         BTFSS PPZ,7
00042C D009           01008         BRA FTO@I_6
00042E 3E10           01009         INCFSZ PBP_AARGHHH,F
000430 D007           01010         BRA FTO@I_6
000432 3E0F           01011         INCFSZ PBP_AARGHH,F
000434 D005           01012         BRA FTO@I_6
000436 3E0E           01013         INCFSZ PBP_AARGH,F
000438 D003           01014         BRA FTO@I_6                     
00043A 2A0E           01015         INCF PBP_AARGH,F                                                
00043C BE0D           01016         BTFSC PBP_AARG,7                
00043E D00B           01017         BRA FTO@I_OVERFLOW                      
000440                01018 FTO@I_6 
000440 AE31           01019         BTFSS _SIGN,7                   
000442 D010           01020         BRA FTO@I_RETURN                        
000444 80D8           01021         BSF STATUS,C                            
000446 0E00           01022         MOVLW 0
000448 5610           01023         SUBFWB PBP_AARGHHH,F
00044A 560F           01024         SUBFWB PBP_AARGHH,F
00044C 560E           01025         SUBFWB PBP_AARGH,F
00044E 560D           01026         SUBFWB PBP_AARG,F
000450 D009           01027         BRA FTO@I_RETURN        
000452                01028 FTO@I_RES0      
000452 0E00           01029         MOVLW 0
000454 D002           01030         BRA FTO@I_ASSIGNW                       
000456                01031 FTO@I_OVERFLOW  
000456 822F           01032         BSF _FP_FLAGS,1                         
000458 0EFF           01033         MOVLW 255                                                               
00045A                01034 FTO@I_ASSIGNW   
00045A 6E0D           01035         MOVWF PBP_AARG                                          
00045C 6E0E           01036         MOVWF PBP_AARGH                                         
00045E 6E0F           01037         MOVWF PBP_AARGHH                                        
000460 6E10           01038         MOVWF PBP_AARGHHH                                               
000462 9E0D           01039         BCF PBP_AARG,7                                          
000464                01040 FTO@I_RETURN    
000464 5010           01041         MOVF PBP_AARGHHH,W                      
000466 0012           01042         RETURN
                      01208  LIST
                      00797 ;---------------------------------------------
                      00798 ; Null Terminated Strings
                      00799 
                      00800 ; String         
000468                00801 STR@LB1
000468 2020 2020 2020 00802         DB 32,32,32,32,32,32,32,32,0
       2020 0000 
                      00803 ;---------------------------------------------
                      00804 ; String Detected!
000472                00805 STR@LB2
000472 6544 6574 7463 00806         DB 68,101,116,101,99,116,101,100,33,0
       6465 0021 
                      00807 ;---------------------------------------------
                      00808 ; String Checking TAG
00047C                00809 STR@LB3
00047C 6843 6365 696B 00810         DB 67,104,101,99,107,105,110,103,32,84,65,71,0
       676E 5420 4741 
       0000 
                      00811 ;---------------------------------------------
                      00812 ; String Got a match
00048A                00813 STR@LB4
00048A 6F47 2074 2061 00814         DB 71,111,116,32,97,32,109,97,116,99,104,0
       616D 6374 0068 
                      00815 ;---------------------------------------------
                      00816 ; String History DONE!
000496                00817 STR@LB5
000496 6948 7473 726F 00818         DB 72,105,115,116,111,114,121,32,68,79,78,69,33,0
       2079 4F44 454E 
       0021 
                      00819 ;---------------------------------------------
                      00820 ; String No Match
0004A4                00821 STR@LB6
0004A4 6F4E 4D20 7461 00822         DB 78,111,32,77,97,116,99,104,0
       6863 0000 
                      00823 ;---------------------------------------------
                      00824 ; String ATTEMPTING TO
0004AE                00825 STR@LB7
0004AE 5441 4554 504D 00826         DB 65,84,84,69,77,80,84,73,78,71,32,84,79,0
       4954 474E 5420 
       004F 
                      00827 ;---------------------------------------------
                      00828 ; String READ TAG....
0004BC                00829 STR@LB8
0004BC 4552 4441 5420 00830         DB 82,69,65,68,32,84,65,71,46,46,46,46,0
       4741 2E2E 2E2E 
       0000 
                      00831 ;---------------------------------------------
                      00832 ; String Thank You
0004CA                00833 STR@LB9
0004CA 6854 6E61 206B 00834         DB 84,104,97,110,107,32,89,111,117,0
       6F59 0075 
                      00835 ;---------------------------------------------
                      00836 ; String No Tag Detected
0004D4                00837 STR@LB10
0004D4 6F4E 5420 6761 00838         DB 78,111,32,84,97,103,32,68,101,116,101,99,116,101,100,0
       4420 7465 6365 
       6574 0064 
                      00839 ;---------------------------------------------
                      00840 ; String File not found
0004E4                00841 STR@LB11
0004E4 6946 656C 6E20 00842         DB 70,105,108,101,32,110,111,116,32,102,111,117,110,100,0
       746F 6620 756F 
       646E 0000 
                      00843 ;---------------------------------------------
                      00844 ; String No 5E (^)
0004F4                00845 STR@LB12
0004F4 6F4E 3520 2045 00846         DB 78,111,32,53,69,32,40,94,41,0
       5E28 0029 
                      00847 ;---------------------------------------------
                      00848 ; String Stopped!
0004FE                00849 STR@LB13
0004FE 7453 706F 6570 00850         DB 83,116,111,112,112,101,100,33,0
       2164 0000 
                      00851 ;---------------------------------------------
                      00852 ; String No 3A (:)..
000508                00853 STR@LB14
000508 6F4E 3320 2041 00854         DB 78,111,32,51,65,32,40,58,41,46,46,0
       3A28 2E29 002E 
                      00855 ;---------------------------------------------
                      00856 ; String Stopped!
000514                00857 STR@LB15
000514 7453 706F 6570 00858         DB 83,116,111,112,112,101,100,33,0
       2164 0000 
                      00859 ;---------------------------------------------
                      00860 ; String File not found
00051E                00861 STR@LB16
00051E 6946 656C 6E20 00862         DB 70,105,108,101,32,110,111,116,32,102,111,117,110,100,0
       746F 6620 756F 
       646E 0000 
                      00863 ;---------------------------------------------
                      00864 ; String No Init!
00052E                00865 STR@LB17
00052E 6F4E 4920 696E 00866         DB 78,111,32,73,110,105,116,33,0
       2174 0000 
                      00867 ;---------------------------------------------
                      00868 ; String No Users
000538                00869 STR@LB18
000538 6F4E 5520 6573 00870         DB 78,111,32,85,115,101,114,115,0
       7372 0000 
                      00871 ;---------------------------------------------
                      00872 ; String Manager Done
000542                00873 STR@LB19
000542 614D 616E 6567 00874         DB 77,97,110,97,103,101,114,32,68,111,110,101,0
       2072 6F44 656E 
       0000 
                      00875 ;---------------------------------------------
                      00876 ; String No Manager History
000550                00877 STR@LB20
000550 6F4E 4D20 6E61 00878         DB 78,111,32,77,97,110,97,103,101,114,32,72,105,115,116,111,114,121,0
       6761 7265 4820 
       7369 6F74 7972 
       0000 
                      00879 ;---------------------------------------------
                      00880 ; String No Users
000564                00881 STR@LB21
000564 6F4E 5520 6573 00882         DB 78,111,32,85,115,101,114,115,0
       7372 0000 
                      00883 ;---------------------------------------------
                      00884 ; String No Users Exist
00056E                00885 STR@LB22
00056E 6F4E 5520 6573 00886         DB 78,111,32,85,115,101,114,115,32,69,120,105,115,116,0
       7372 4520 6978 
       7473 0000 
                      00887 ;---------------------------------------------
                      00888 ; String Done Users
00057E                00889 STR@LB23
00057E 6F44 656E 5520 00890         DB 68,111,110,101,32,85,115,101,114,115,0
       6573 7372 0000 
                      00891 ;---------------------------------------------
                      00892 ; String Going to sleep..
00058A                00893 STR@LB24
00058A 6F47 6E69 2067 00894         DB 71,111,105,110,103,32,116,111,32,115,108,101,101,112,46,46,0
       6F74 7320 656C 
       7065 2E2E 0000 
                      00895 ;---------------------------------------------
                      00896 ; String I just woke up!!
00059C                00897 STR@LB25
00059C 2049 756A 7473 00898         DB 73,32,106,117,115,116,32,119,111,107,101,32,117,112,33,33,0
       7720 6B6F 2065 
       7075 2121 0000 
                      00899 ;---------------------------------------------
                      00900 ; User Constants
  00000004            00901 __XTAL = 4
  00000000            00902 __LCD_TYPE = 0
  00000000            00903 __LCD_DTPIN = 0
  00000006            00904 __LCD_ENPIN = 6
  00000007            00905 __LCD_RSPIN = 7
  00000004            00906 __LCD_INTERFACE = 4
  00000002            00907 __LCD_LINES = 2
  00002580            00908 __HSERIAL_BAUD = 9600
  00000090            00909 __HSERIAL_RCSTA = 144
  00000020            00910 __HSERIAL_TXSTA = 32
0005AE                00911 START@
0005AE 6AF8           00912         CLRF 4088
0005B0 0E40           00913         MOVLW B'01000000'
0005B2 6E2F           00914         MOVWF 47
0005B4 6A00           00915         CLRF 0
0005B6 0E06           00916         MOVLW 6
0005B8 6EAF           00917         MOVWF 4015
0005BA 0E20           00918         MOVLW 32
0005BC 6EAC           00919         MOVWF 4012
0005BE 0E90           00920         MOVLW 144
0005C0 6EAB           00921         MOVWF 4011
                      00922  LIST
0005C2                00923 MAIN@PROG@START
                      00008  LIST
                      00009 
  00000032            00010  SD_BYTER = 50
  00000033            00011  SD_IDX = 51
  00000034            00012  SD_SECTOR_NUM = 52
  00000035            00013  SD_SECTOR_NUMH = 53
  00000036            00014  SD_SECTOR_NUMHH = 54
  00000037            00015  SD_SECTOR_NUMHHH = 55
  00000038            00016  SD_ADDRESS = 56
  00000039            00017  SD_ADDRESSH = 57
  0000003A            00018  SD_ADDRESSHH = 58
  0000003B            00019  SD_ADDRESSHHH = 59
  0000003C            00020  SD_SEEK_RESPONSE_IDX = 60
  0000003D            00021  SD_SEEK_RESPONSE_IDXH = 61
  0000003E            00022  SD_SEEK_RESPONSE_REQD = 62
  0000003F            00023  SD_SEEK_RESPONSE_RETURN = 63
  00000040            00024  SD_RETURN = 64
  00000041            00025  SD_BUFFER0 = 65
  0041                00026  VARIABLE SD_BUFFER0#0=65,SD_BUFFER0#1=66,SD_BUFFER0#2=67,SD_BUFFER0#3=68
  0045                00027  VARIABLE SD_BUFFER0#4=69,SD_BUFFER0#5=70,SD_BUFFER0#6=71,SD_BUFFER0#7=72
  0049                00028  VARIABLE SD_BUFFER0#8=73,SD_BUFFER0#9=74,SD_BUFFER0#10=75,SD_BUFFER0#11=76
  004D                00029  VARIABLE SD_BUFFER0#12=77,SD_BUFFER0#13=78,SD_BUFFER0#14=79,SD_BUFFER0#15=80
  0051                00030  VARIABLE SD_BUFFER0#16=81,SD_BUFFER0#17=82,SD_BUFFER0#18=83,SD_BUFFER0#19=84
  0055                00031  VARIABLE SD_BUFFER0#20=85,SD_BUFFER0#21=86,SD_BUFFER0#22=87,SD_BUFFER0#23=88
  0059                00032  VARIABLE SD_BUFFER0#24=89,SD_BUFFER0#25=90,SD_BUFFER0#26=91,SD_BUFFER0#27=92
  005D                00033  VARIABLE SD_BUFFER0#28=93,SD_BUFFER0#29=94,SD_BUFFER0#30=95,SD_BUFFER0#31=96
  0061                00034  VARIABLE SD_BUFFER0#32=97,SD_BUFFER0#33=98,SD_BUFFER0#34=99,SD_BUFFER0#35=100
  0065                00035  VARIABLE SD_BUFFER0#36=101,SD_BUFFER0#37=102,SD_BUFFER0#38=103,SD_BUFFER0#39=104
  0069                00036  VARIABLE SD_BUFFER0#40=105,SD_BUFFER0#41=106,SD_BUFFER0#42=107,SD_BUFFER0#43=108
  006D                00037  VARIABLE SD_BUFFER0#44=109,SD_BUFFER0#45=110,SD_BUFFER0#46=111,SD_BUFFER0#47=112
  0071                00038  VARIABLE SD_BUFFER0#48=113,SD_BUFFER0#49=114,SD_BUFFER0#50=115,SD_BUFFER0#51=116
  0075                00039  VARIABLE SD_BUFFER0#52=117,SD_BUFFER0#53=118,SD_BUFFER0#54=119,SD_BUFFER0#55=120
  0079                00040  VARIABLE SD_BUFFER0#56=121,SD_BUFFER0#57=122,SD_BUFFER0#58=123,SD_BUFFER0#59=124
  007D                00041  VARIABLE SD_BUFFER0#60=125,SD_BUFFER0#61=126,SD_BUFFER0#62=127,SD_BUFFER0#63=128
  0081                00042  VARIABLE SD_BUFFER0#64=129,SD_BUFFER0#65=130,SD_BUFFER0#66=131,SD_BUFFER0#67=132
  0085                00043  VARIABLE SD_BUFFER0#68=133,SD_BUFFER0#69=134,SD_BUFFER0#70=135,SD_BUFFER0#71=136
  0089                00044  VARIABLE SD_BUFFER0#72=137,SD_BUFFER0#73=138,SD_BUFFER0#74=139,SD_BUFFER0#75=140
  008D                00045  VARIABLE SD_BUFFER0#76=141,SD_BUFFER0#77=142,SD_BUFFER0#78=143,SD_BUFFER0#79=144
  0091                00046  VARIABLE SD_BUFFER0#80=145,SD_BUFFER0#81=146,SD_BUFFER0#82=147,SD_BUFFER0#83=148
  0095                00047  VARIABLE SD_BUFFER0#84=149,SD_BUFFER0#85=150,SD_BUFFER0#86=151,SD_BUFFER0#87=152
  0099                00048  VARIABLE SD_BUFFER0#88=153,SD_BUFFER0#89=154,SD_BUFFER0#90=155,SD_BUFFER0#91=156
  009D                00049  VARIABLE SD_BUFFER0#92=157,SD_BUFFER0#93=158,SD_BUFFER0#94=159,SD_BUFFER0#95=160
  00A1                00050  VARIABLE SD_BUFFER0#96=161,SD_BUFFER0#97=162,SD_BUFFER0#98=163,SD_BUFFER0#99=164
  00A5                00051  VARIABLE SD_BUFFER0#100=165,SD_BUFFER0#101=166,SD_BUFFER0#102=167,SD_BUFFER0#103=168
  00A9                00052  VARIABLE SD_BUFFER0#104=169,SD_BUFFER0#105=170,SD_BUFFER0#106=171,SD_BUFFER0#107=172
  00AD                00053  VARIABLE SD_BUFFER0#108=173,SD_BUFFER0#109=174,SD_BUFFER0#110=175,SD_BUFFER0#111=176
  00B1                00054  VARIABLE SD_BUFFER0#112=177,SD_BUFFER0#113=178,SD_BUFFER0#114=179,SD_BUFFER0#115=180
  00B5                00055  VARIABLE SD_BUFFER0#116=181,SD_BUFFER0#117=182,SD_BUFFER0#118=183,SD_BUFFER0#119=184
  00B9                00056  VARIABLE SD_BUFFER0#120=185,SD_BUFFER0#121=186,SD_BUFFER0#122=187,SD_BUFFER0#123=188
  00BD                00057  VARIABLE SD_BUFFER0#124=189,SD_BUFFER0#125=190,SD_BUFFER0#126=191,SD_BUFFER0#127=192
  00C1                00058  VARIABLE SD_BUFFER0#128=193,SD_BUFFER0#129=194,SD_BUFFER0#130=195,SD_BUFFER0#131=196
  00C5                00059  VARIABLE SD_BUFFER0#132=197,SD_BUFFER0#133=198,SD_BUFFER0#134=199,SD_BUFFER0#135=200
  00C9                00060  VARIABLE SD_BUFFER0#136=201,SD_BUFFER0#137=202,SD_BUFFER0#138=203,SD_BUFFER0#139=204
  00CD                00061  VARIABLE SD_BUFFER0#140=205,SD_BUFFER0#141=206,SD_BUFFER0#142=207,SD_BUFFER0#143=208
  00D1                00062  VARIABLE SD_BUFFER0#144=209,SD_BUFFER0#145=210,SD_BUFFER0#146=211,SD_BUFFER0#147=212
  00D5                00063  VARIABLE SD_BUFFER0#148=213,SD_BUFFER0#149=214,SD_BUFFER0#150=215,SD_BUFFER0#151=216
  00D9                00064  VARIABLE SD_BUFFER0#152=217,SD_BUFFER0#153=218,SD_BUFFER0#154=219,SD_BUFFER0#155=220
  00DD                00065  VARIABLE SD_BUFFER0#156=221,SD_BUFFER0#157=222,SD_BUFFER0#158=223,SD_BUFFER0#159=224
  00E1                00066  VARIABLE SD_BUFFER0#160=225,SD_BUFFER0#161=226,SD_BUFFER0#162=227,SD_BUFFER0#163=228
  00E5                00067  VARIABLE SD_BUFFER0#164=229,SD_BUFFER0#165=230,SD_BUFFER0#166=231,SD_BUFFER0#167=232
  00E9                00068  VARIABLE SD_BUFFER0#168=233,SD_BUFFER0#169=234,SD_BUFFER0#170=235,SD_BUFFER0#171=236
  00ED                00069  VARIABLE SD_BUFFER0#172=237,SD_BUFFER0#173=238,SD_BUFFER0#174=239,SD_BUFFER0#175=240
  00F1                00070  VARIABLE SD_BUFFER0#176=241,SD_BUFFER0#177=242,SD_BUFFER0#178=243,SD_BUFFER0#179=244
  00F5                00071  VARIABLE SD_BUFFER0#180=245,SD_BUFFER0#181=246,SD_BUFFER0#182=247,SD_BUFFER0#183=248
  00F9                00072  VARIABLE SD_BUFFER0#184=249,SD_BUFFER0#185=250,SD_BUFFER0#186=251,SD_BUFFER0#187=252
  00FD                00073  VARIABLE SD_BUFFER0#188=253,SD_BUFFER0#189=254,SD_BUFFER0#190=255,SD_BUFFER0#191=256
  0101                00074  VARIABLE SD_BUFFER0#192=257,SD_BUFFER0#193=258,SD_BUFFER0#194=259,SD_BUFFER0#195=260
  0105                00075  VARIABLE SD_BUFFER0#196=261,SD_BUFFER0#197=262,SD_BUFFER0#198=263,SD_BUFFER0#199=264
  0109                00076  VARIABLE SD_BUFFER0#200=265,SD_BUFFER0#201=266,SD_BUFFER0#202=267,SD_BUFFER0#203=268
  010D                00077  VARIABLE SD_BUFFER0#204=269,SD_BUFFER0#205=270,SD_BUFFER0#206=271,SD_BUFFER0#207=272
  0111                00078  VARIABLE SD_BUFFER0#208=273,SD_BUFFER0#209=274,SD_BUFFER0#210=275,SD_BUFFER0#211=276
  0115                00079  VARIABLE SD_BUFFER0#212=277,SD_BUFFER0#213=278,SD_BUFFER0#214=279,SD_BUFFER0#215=280
  0119                00080  VARIABLE SD_BUFFER0#216=281,SD_BUFFER0#217=282,SD_BUFFER0#218=283,SD_BUFFER0#219=284
  011D                00081  VARIABLE SD_BUFFER0#220=285,SD_BUFFER0#221=286,SD_BUFFER0#222=287,SD_BUFFER0#223=288
  0121                00082  VARIABLE SD_BUFFER0#224=289,SD_BUFFER0#225=290,SD_BUFFER0#226=291,SD_BUFFER0#227=292
  0125                00083  VARIABLE SD_BUFFER0#228=293,SD_BUFFER0#229=294,SD_BUFFER0#230=295,SD_BUFFER0#231=296
  0129                00084  VARIABLE SD_BUFFER0#232=297,SD_BUFFER0#233=298,SD_BUFFER0#234=299,SD_BUFFER0#235=300
  012D                00085  VARIABLE SD_BUFFER0#236=301,SD_BUFFER0#237=302,SD_BUFFER0#238=303,SD_BUFFER0#239=304
  0131                00086  VARIABLE SD_BUFFER0#240=305,SD_BUFFER0#241=306,SD_BUFFER0#242=307,SD_BUFFER0#243=308
  0135                00087  VARIABLE SD_BUFFER0#244=309,SD_BUFFER0#245=310,SD_BUFFER0#246=311,SD_BUFFER0#247=312
  0139                00088  VARIABLE SD_BUFFER0#248=313,SD_BUFFER0#249=314,SD_BUFFER0#250=315,SD_BUFFER0#251=316
  013D                00089  VARIABLE SD_BUFFER0#252=317,SD_BUFFER0#253=318,SD_BUFFER0#254=319,SD_BUFFER0#255=320
  00000141            00090  SD_BUFFER1 = 321
  0141                00091  VARIABLE SD_BUFFER1#0=321,SD_BUFFER1#1=322,SD_BUFFER1#2=323,SD_BUFFER1#3=324
  0145                00092  VARIABLE SD_BUFFER1#4=325,SD_BUFFER1#5=326,SD_BUFFER1#6=327,SD_BUFFER1#7=328
  0149                00093  VARIABLE SD_BUFFER1#8=329,SD_BUFFER1#9=330,SD_BUFFER1#10=331,SD_BUFFER1#11=332
  014D                00094  VARIABLE SD_BUFFER1#12=333,SD_BUFFER1#13=334,SD_BUFFER1#14=335,SD_BUFFER1#15=336
  0151                00095  VARIABLE SD_BUFFER1#16=337,SD_BUFFER1#17=338,SD_BUFFER1#18=339,SD_BUFFER1#19=340
  0155                00096  VARIABLE SD_BUFFER1#20=341,SD_BUFFER1#21=342,SD_BUFFER1#22=343,SD_BUFFER1#23=344
  0159                00097  VARIABLE SD_BUFFER1#24=345,SD_BUFFER1#25=346,SD_BUFFER1#26=347,SD_BUFFER1#27=348
  015D                00098  VARIABLE SD_BUFFER1#28=349,SD_BUFFER1#29=350,SD_BUFFER1#30=351,SD_BUFFER1#31=352
  0161                00099  VARIABLE SD_BUFFER1#32=353,SD_BUFFER1#33=354,SD_BUFFER1#34=355,SD_BUFFER1#35=356
  0165                00100  VARIABLE SD_BUFFER1#36=357,SD_BUFFER1#37=358,SD_BUFFER1#38=359,SD_BUFFER1#39=360
  0169                00101  VARIABLE SD_BUFFER1#40=361,SD_BUFFER1#41=362,SD_BUFFER1#42=363,SD_BUFFER1#43=364
  016D                00102  VARIABLE SD_BUFFER1#44=365,SD_BUFFER1#45=366,SD_BUFFER1#46=367,SD_BUFFER1#47=368
  0171                00103  VARIABLE SD_BUFFER1#48=369,SD_BUFFER1#49=370,SD_BUFFER1#50=371,SD_BUFFER1#51=372
  0175                00104  VARIABLE SD_BUFFER1#52=373,SD_BUFFER1#53=374,SD_BUFFER1#54=375,SD_BUFFER1#55=376
  0179                00105  VARIABLE SD_BUFFER1#56=377,SD_BUFFER1#57=378,SD_BUFFER1#58=379,SD_BUFFER1#59=380
  017D                00106  VARIABLE SD_BUFFER1#60=381,SD_BUFFER1#61=382,SD_BUFFER1#62=383,SD_BUFFER1#63=384
  0181                00107  VARIABLE SD_BUFFER1#64=385,SD_BUFFER1#65=386,SD_BUFFER1#66=387,SD_BUFFER1#67=388
  0185                00108  VARIABLE SD_BUFFER1#68=389,SD_BUFFER1#69=390,SD_BUFFER1#70=391,SD_BUFFER1#71=392
  0189                00109  VARIABLE SD_BUFFER1#72=393,SD_BUFFER1#73=394,SD_BUFFER1#74=395,SD_BUFFER1#75=396
  018D                00110  VARIABLE SD_BUFFER1#76=397,SD_BUFFER1#77=398,SD_BUFFER1#78=399,SD_BUFFER1#79=400
  0191                00111  VARIABLE SD_BUFFER1#80=401,SD_BUFFER1#81=402,SD_BUFFER1#82=403,SD_BUFFER1#83=404
  0195                00112  VARIABLE SD_BUFFER1#84=405,SD_BUFFER1#85=406,SD_BUFFER1#86=407,SD_BUFFER1#87=408
  0199                00113  VARIABLE SD_BUFFER1#88=409,SD_BUFFER1#89=410,SD_BUFFER1#90=411,SD_BUFFER1#91=412
  019D                00114  VARIABLE SD_BUFFER1#92=413,SD_BUFFER1#93=414,SD_BUFFER1#94=415,SD_BUFFER1#95=416
  01A1                00115  VARIABLE SD_BUFFER1#96=417,SD_BUFFER1#97=418,SD_BUFFER1#98=419,SD_BUFFER1#99=420
  01A5                00116  VARIABLE SD_BUFFER1#100=421,SD_BUFFER1#101=422,SD_BUFFER1#102=423,SD_BUFFER1#103=424
  01A9                00117  VARIABLE SD_BUFFER1#104=425,SD_BUFFER1#105=426,SD_BUFFER1#106=427,SD_BUFFER1#107=428
  01AD                00118  VARIABLE SD_BUFFER1#108=429,SD_BUFFER1#109=430,SD_BUFFER1#110=431,SD_BUFFER1#111=432
  01B1                00119  VARIABLE SD_BUFFER1#112=433,SD_BUFFER1#113=434,SD_BUFFER1#114=435,SD_BUFFER1#115=436
  01B5                00120  VARIABLE SD_BUFFER1#116=437,SD_BUFFER1#117=438,SD_BUFFER1#118=439,SD_BUFFER1#119=440
  01B9                00121  VARIABLE SD_BUFFER1#120=441,SD_BUFFER1#121=442,SD_BUFFER1#122=443,SD_BUFFER1#123=444
  01BD                00122  VARIABLE SD_BUFFER1#124=445,SD_BUFFER1#125=446,SD_BUFFER1#126=447,SD_BUFFER1#127=448
  01C1                00123  VARIABLE SD_BUFFER1#128=449,SD_BUFFER1#129=450,SD_BUFFER1#130=451,SD_BUFFER1#131=452
  01C5                00124  VARIABLE SD_BUFFER1#132=453,SD_BUFFER1#133=454,SD_BUFFER1#134=455,SD_BUFFER1#135=456
  01C9                00125  VARIABLE SD_BUFFER1#136=457,SD_BUFFER1#137=458,SD_BUFFER1#138=459,SD_BUFFER1#139=460
  01CD                00126  VARIABLE SD_BUFFER1#140=461,SD_BUFFER1#141=462,SD_BUFFER1#142=463,SD_BUFFER1#143=464
  01D1                00127  VARIABLE SD_BUFFER1#144=465,SD_BUFFER1#145=466,SD_BUFFER1#146=467,SD_BUFFER1#147=468
  01D5                00128  VARIABLE SD_BUFFER1#148=469,SD_BUFFER1#149=470,SD_BUFFER1#150=471,SD_BUFFER1#151=472
  01D9                00129  VARIABLE SD_BUFFER1#152=473,SD_BUFFER1#153=474,SD_BUFFER1#154=475,SD_BUFFER1#155=476
  01DD                00130  VARIABLE SD_BUFFER1#156=477,SD_BUFFER1#157=478,SD_BUFFER1#158=479,SD_BUFFER1#159=480
  01E1                00131  VARIABLE SD_BUFFER1#160=481,SD_BUFFER1#161=482,SD_BUFFER1#162=483,SD_BUFFER1#163=484
  01E5                00132  VARIABLE SD_BUFFER1#164=485,SD_BUFFER1#165=486,SD_BUFFER1#166=487,SD_BUFFER1#167=488
  01E9                00133  VARIABLE SD_BUFFER1#168=489,SD_BUFFER1#169=490,SD_BUFFER1#170=491,SD_BUFFER1#171=492
  01ED                00134  VARIABLE SD_BUFFER1#172=493,SD_BUFFER1#173=494,SD_BUFFER1#174=495,SD_BUFFER1#175=496
  01F1                00135  VARIABLE SD_BUFFER1#176=497,SD_BUFFER1#177=498,SD_BUFFER1#178=499,SD_BUFFER1#179=500
  01F5                00136  VARIABLE SD_BUFFER1#180=501,SD_BUFFER1#181=502,SD_BUFFER1#182=503,SD_BUFFER1#183=504
  01F9                00137  VARIABLE SD_BUFFER1#184=505,SD_BUFFER1#185=506,SD_BUFFER1#186=507,SD_BUFFER1#187=508
  01FD                00138  VARIABLE SD_BUFFER1#188=509,SD_BUFFER1#189=510,SD_BUFFER1#190=511,SD_BUFFER1#191=512
  0201                00139  VARIABLE SD_BUFFER1#192=513,SD_BUFFER1#193=514,SD_BUFFER1#194=515,SD_BUFFER1#195=516
  0205                00140  VARIABLE SD_BUFFER1#196=517,SD_BUFFER1#197=518,SD_BUFFER1#198=519,SD_BUFFER1#199=520
  0209                00141  VARIABLE SD_BUFFER1#200=521,SD_BUFFER1#201=522,SD_BUFFER1#202=523,SD_BUFFER1#203=524
  020D                00142  VARIABLE SD_BUFFER1#204=525,SD_BUFFER1#205=526,SD_BUFFER1#206=527,SD_BUFFER1#207=528
  0211                00143  VARIABLE SD_BUFFER1#208=529,SD_BUFFER1#209=530,SD_BUFFER1#210=531,SD_BUFFER1#211=532
  0215                00144  VARIABLE SD_BUFFER1#212=533,SD_BUFFER1#213=534,SD_BUFFER1#214=535,SD_BUFFER1#215=536
  0219                00145  VARIABLE SD_BUFFER1#216=537,SD_BUFFER1#217=538,SD_BUFFER1#218=539,SD_BUFFER1#219=540
  021D                00146  VARIABLE SD_BUFFER1#220=541,SD_BUFFER1#221=542,SD_BUFFER1#222=543,SD_BUFFER1#223=544
  0221                00147  VARIABLE SD_BUFFER1#224=545,SD_BUFFER1#225=546,SD_BUFFER1#226=547,SD_BUFFER1#227=548
  0225                00148  VARIABLE SD_BUFFER1#228=549,SD_BUFFER1#229=550,SD_BUFFER1#230=551,SD_BUFFER1#231=552
  0229                00149  VARIABLE SD_BUFFER1#232=553,SD_BUFFER1#233=554,SD_BUFFER1#234=555,SD_BUFFER1#235=556
  022D                00150  VARIABLE SD_BUFFER1#236=557,SD_BUFFER1#237=558,SD_BUFFER1#238=559,SD_BUFFER1#239=560
  0231                00151  VARIABLE SD_BUFFER1#240=561,SD_BUFFER1#241=562,SD_BUFFER1#242=563,SD_BUFFER1#243=564
  0235                00152  VARIABLE SD_BUFFER1#244=565,SD_BUFFER1#245=566,SD_BUFFER1#246=567,SD_BUFFER1#247=568
  0239                00153  VARIABLE SD_BUFFER1#248=569,SD_BUFFER1#249=570,SD_BUFFER1#250=571,SD_BUFFER1#251=572
  023D                00154  VARIABLE SD_BUFFER1#252=573,SD_BUFFER1#253=574,SD_BUFFER1#254=575,SD_BUFFER1#255=576
  00000241            00155  SD_BYTE0 = 577
  00000242            00156  SD_BYTE1 = 578
  00000243            00157  SD_BYTE2 = 579
  00000244            00158  SD_BYTE3 = 580
  00000245            00159  SD_BYTE4 = 581
  00000246            00160  SD_BYTE5 = 582
  00000247            00161  SD_BUFFER_IDX = 583
  00000248            00162  SD_BUFFER_IDXH = 584
  00000249            00163  SD_BYTE_RW = 585
  0000024A            00164  SD_RW_OPTION = 586
  0000024B            00165  SD_EXTENDED_RETURN = 587
  0000024C            00166  SD_EXTENDED_RETURN_ROOT_DIR = 588
  0000024D            00167  SD_DATA_IO = 589
  0000024E            00168  SD_BUFFER_POS = 590
  0000024F            00169  SD_BUFFER_POSH = 591
  00000250            00170  SD_ROOT_DIR_FILE_POS = 592
  00000251            00171  SD_SEC_NUM = 593
  00000252            00172  SD_SEC_NUMH = 594
  00000253            00173  SD_SEC_NUMHH = 595
  00000254            00174  SD_SEC_NUMHHH = 596
  00000255            00175  SD_SECS_PER_CLUSTER = 597
  00000256            00176  SD_RESERVED_SECS = 598
  00000257            00177  SD_RESERVED_SECSH = 599
  00000258            00178  SD_SECS_PER_FAT = 600
  00000259            00179  SD_SECS_PER_FATH = 601
  0000025A            00180  SD_NUM_OF_FATS = 602
  0000025B            00181  SD_NUM_OF_SECS = 603
  0000025C            00182  SD_NUM_OF_SECSH = 604
  0000025D            00183  SD_NUM_OF_SECSHH = 605
  0000025E            00184  SD_NUM_OF_SECSHHH = 606
  0000025F            00185  SD_BYTES_PER_SEC = 607
  00000260            00186  SD_BYTES_PER_SECH = 608
  00000261            00187  SD_NUM_OF_ROOT_ENTRIES = 609
  00000262            00188  SD_NUM_OF_ROOT_ENTRIESH = 610
  00000263            00189  SD_SECS_IN_ROOT = 611
  00000264            00190  SD_SECS_IN_ROOTH = 612
  00000265            00191  SD_BOOT_RECORD = 613
  00000266            00192  SD_BOOT_RECORDH = 614
  00000267            00193  SD_FAT1 = 615
  00000268            00194  SD_FAT1H = 616
  00000269            00195  SD_FAT1HH = 617
  0000026A            00196  SD_FAT1HHH = 618
  0000026B            00197  SD_FAT2 = 619
  0000026C            00198  SD_FAT2H = 620
  0000026D            00199  SD_FAT2HH = 621
  0000026E            00200  SD_FAT2HHH = 622
  0000026F            00201  SD_ROOT_DIR = 623
  00000270            00202  SD_ROOT_DIRH = 624
  00000271            00203  SD_ROOT_DIRHH = 625
  00000272            00204  SD_ROOT_DIRHHH = 626
  00000273            00205  SD_DATA_AREA = 627
  00000274            00206  SD_DATA_AREAH = 628
  00000275            00207  SD_DATA_AREAHH = 629
  00000276            00208  SD_DATA_AREAHHH = 630
  00000277            00209  SD_FAT_ENTRY = 631
  00000278            00210  SD_FAT_ENTRYH = 632
  00000279            00211  SD_FAT_SEC = 633
  0000027A            00212  SD_FAT_SECH = 634
  0000027B            00213  SD_FAT_SECHH = 635
  0000027C            00214  SD_FAT_SECHHH = 636
  0000027D            00215  SD_FAT_BUFFER_POS = 637
  0000027E            00216  SD_FAT_BUFFER_POSH = 638
  0000027F            00217  SD_FAT_SEC_PREV = 639
  00000280            00218  SD_FAT_SEC_PREVH = 640
  00000281            00219  SD_FAT_SEC_PREVHH = 641
  00000282            00220  SD_FAT_SEC_PREVHHH = 642
  00000283            00221  SD_FAT_BUFFER_POS_PREV = 643
  00000284            00222  SD_FAT_BUFFER_POS_PREVH = 644
  00000285            00223  SD_ROOT_DIR_SEC = 645
  00000286            00224  SD_ROOT_DIR_SECH = 646
  00000287            00225  SD_ROOT_DIR_SECHH = 647
  00000288            00226  SD_ROOT_DIR_SECHHH = 648
  00000289            00227  SD_ROOT_DIR_POS = 649
  0000028A            00228  SD_ROOT_DIR_POSH = 650
  0000028B            00229  SD_DATA_SEC = 651
  0000028C            00230  SD_DATA_SECH = 652
  0000028D            00231  SD_DATA_SECHH = 653
  0000028E            00232  SD_DATA_SECHHH = 654
  0000028F            00233  SD_DATA_BUFFER_POS = 655
  00000290            00234  SD_DATA_BUFFER_POSH = 656
  00000291            00235  SD_FILE_NAME = 657
  0291                00236  VARIABLE SD_FILE_NAME#0=657,SD_FILE_NAME#1=658,SD_FILE_NAME#2=659,SD_FILE_NAME#3=660
  0295                00237  VARIABLE SD_FILE_NAME#4=661,SD_FILE_NAME#5=662,SD_FILE_NAME#6=663,SD_FILE_NAME#7=664
  0299                00238  VARIABLE SD_FILE_NAME#8=665
  0000029A            00239  SD_FILE_EXT = 666
  029A                00240  VARIABLE SD_FILE_EXT#0=666,SD_FILE_EXT#1=667,SD_FILE_EXT#2=668,SD_FILE_EXT#3=669
  0000029E            00241  SD_ROOT_DIR_FILE = 670
  029E                00242  VARIABLE SD_ROOT_DIR_FILE#0=670,SD_ROOT_DIR_FILE#1=671,SD_ROOT_DIR_FILE#2=672,SD_ROOT_DIR_FILE#3=673
  02A2                00243  VARIABLE SD_ROOT_DIR_FILE#4=674,SD_ROOT_DIR_FILE#5=675,SD_ROOT_DIR_FILE#6=676,SD_ROOT_DIR_FILE#7=677
  02A6                00244  VARIABLE SD_ROOT_DIR_FILE#8=678,SD_ROOT_DIR_FILE#9=679,SD_ROOT_DIR_FILE#10=680,SD_ROOT_DIR_FILE#11=681
  02AA                00245  VARIABLE SD_ROOT_DIR_FILE#12=682,SD_ROOT_DIR_FILE#13=683,SD_ROOT_DIR_FILE#14=684,SD_ROOT_DIR_FILE#15=685
  02AE                00246  VARIABLE SD_ROOT_DIR_FILE#16=686,SD_ROOT_DIR_FILE#17=687,SD_ROOT_DIR_FILE#18=688,SD_ROOT_DIR_FILE#19=689
  02B2                00247  VARIABLE SD_ROOT_DIR_FILE#20=690,SD_ROOT_DIR_FILE#21=691,SD_ROOT_DIR_FILE#22=692,SD_ROOT_DIR_FILE#23=693
  02B6                00248  VARIABLE SD_ROOT_DIR_FILE#24=694,SD_ROOT_DIR_FILE#25=695,SD_ROOT_DIR_FILE#26=696,SD_ROOT_DIR_FILE#27=697
  02BA                00249  VARIABLE SD_ROOT_DIR_FILE#28=698,SD_ROOT_DIR_FILE#29=699,SD_ROOT_DIR_FILE#30=700,SD_ROOT_DIR_FILE#31=701
  000002BE            00250  SD_WRITE_SEC_NUM = 702
  000002BF            00251  SD_WRITE_SEC_NUMH = 703
  000002C0            00252  SD_WRITE_SEC_NUMHH = 704
  000002C1            00253  SD_WRITE_SEC_NUMHHH = 705
  000002C2            00254  SD_WRITE_BUFFER_POS = 706
  000002C3            00255  SD_WRITE_BUFFER_POSH = 707
  000002C4            00256  SD_NULL_F = 708
  000002C5            00257  SD_CLUSTER_NUM = 709
  000002C6            00258  SD_CLUSTER_NUMH = 710
  000002C7            00259  SD_CLUSTER_NUM_PREV = 711
  000002C8            00260  SD_CLUSTER_NUM_PREVH = 712
  000002C9            00261  SD_LAST_CLUSTER = 713
  000002CA            00262  SD_LAST_CLUSTERH = 714
  000002CB            00263  SD_SEC_IN_CLUSTER = 715
  000002CC            00264  SD_FILE_SIZE = 716
  000002CD            00265  SD_FILE_SIZEH = 717
  000002CE            00266  SD_FILE_SIZEHH = 718
  000002CF            00267  SD_FILE_SIZEHHH = 719
  000002D0            00268  SD_IO_BYTE = 720
  000002D1            00269  SD_TEMP_BYTE = 721
  000002D2            00270  SD_TEMP = 722
  000002D3            00271  SD_TEMPH = 723
  000002D4            00272  SD_TEMP_DWORD = 724
  000002D5            00273  SD_TEMP_DWORDH = 725
  000002D6            00274  SD_TEMP_DWORDHH = 726
  000002D7            00275  SD_TEMP_DWORDHHH = 727
  000002D8            00276  SD_CLUSTER_SEQ_NUM = 728
  000002D9            00277  SD_CLUSTER_SEQ_NUMH = 729
  000002DA            00278  SD_CLUSTER_SEQ_IDX = 730
  000002DB            00279  SD_CLUSTER_SEQ_IDXH = 731
  000002DC            00280  SD_CLUSTER_SEQ_NUM_PREV = 732
  000002DD            00281  SD_CLUSTER_SEQ_NUM_PREVH = 733
  000002DE            00282  SD_CLUSTER_SEQ_IDX_PREV = 734
  000002DF            00283  SD_CLUSTER_SEQ_IDX_PREVH = 735
  000002E0            00284  SD_FIND_ROOT_DIR_ENTRY_F = 736
  000002E1            00285  SD_BYTES_READ = 737
  000002E2            00286  SD_BYTES_READH = 738
  000002E3            00287  SD_BYTES_READHH = 739
  000002E4            00288  SD_BYTES_READHHH = 740
  000002E6            00289  SD_FILE_NUM = 742
  000002E7            00290  SD_FILE_NUMH = 743
  000002E8            00291  SD_DIR_DIRECTION = 744
  000002E9            00292  SD_EXTENDED_RETURN_INT = 745
  000002EA            00293  SD_FILE_SIZE_LEFT = 746
  000002EB            00294  SD_FILE_SIZE_LEFTH = 747
  000002EC            00295  SD_FILE_SIZE_LEFTHH = 748
  000002ED            00296  SD_FILE_SIZE_LEFTHHH = 749
  000002EE            00297  SD_TIMEOUT = 750
  000002EF            00298  SD_DAY = 751
  000002F0            00299  SD_MONTH = 752
  000002F1            00300  SD_YEAR = 753
  000002F2            00301  SD_MSECONDS = 754
  000002F3            00302  SD_SECONDS = 755
  000002F4            00303  SD_MINUTES = 756
  000002F5            00304  SD_HOURS = 757
  000002F6            00305  SD_IS_DIRTY = 758
  000002F7            00306  SD_SSPSTAT = 759
  000002F8            00307  SD_RETURN_F = 760
  000002F9            00308  SD_IO_STRING_LENGTH = 761
  000002FA            00309  SD_IO_STRING_POS = 762
  000002FB            00310  SD_IO_STRING = 763
  02FB                00311  VARIABLE SD_IO_STRING#0=763,SD_IO_STRING#1=764,SD_IO_STRING#2=765,SD_IO_STRING#3=766
  02FF                00312  VARIABLE SD_IO_STRING#4=767,SD_IO_STRING#5=768,SD_IO_STRING#6=769,SD_IO_STRING#7=770
  0303                00313  VARIABLE SD_IO_STRING#8=771,SD_IO_STRING#9=772,SD_IO_STRING#10=773,SD_IO_STRING#11=774
  0307                00314  VARIABLE SD_IO_STRING#12=775,SD_IO_STRING#13=776,SD_IO_STRING#14=777,SD_IO_STRING#15=778
  030B                00315  VARIABLE SD_IO_STRING#16=779,SD_IO_STRING#17=780,SD_IO_STRING#18=781,SD_IO_STRING#19=782
  030F                00316  VARIABLE SD_IO_STRING#20=783,SD_IO_STRING#21=784,SD_IO_STRING#22=785,SD_IO_STRING#23=786
  0313                00317  VARIABLE SD_IO_STRING#24=787,SD_IO_STRING#25=788,SD_IO_STRING#26=789,SD_IO_STRING#27=790
  0317                00318  VARIABLE SD_IO_STRING#28=791,SD_IO_STRING#29=792,SD_IO_STRING#30=793,SD_IO_STRING#31=794
  031B                00319  VARIABLE SD_IO_STRING#32=795,SD_IO_STRING#33=796,SD_IO_STRING#34=797,SD_IO_STRING#35=798
  031F                00320  VARIABLE SD_IO_STRING#36=799,SD_IO_STRING#37=800,SD_IO_STRING#38=801,SD_IO_STRING#39=802
  0323                00321  VARIABLE SD_IO_STRING#40=803,SD_IO_STRING#41=804,SD_IO_STRING#42=805,SD_IO_STRING#43=806
  0327                00322  VARIABLE SD_IO_STRING#44=807,SD_IO_STRING#45=808,SD_IO_STRING#46=809,SD_IO_STRING#47=810
  032B                00323  VARIABLE SD_IO_STRING#48=811,SD_IO_STRING#49=812,SD_IO_STRING#50=813,SD_IO_STRING#51=814
  032F                00324  VARIABLE SD_IO_STRING#52=815,SD_IO_STRING#53=816,SD_IO_STRING#54=817,SD_IO_STRING#55=818
  0333                00325  VARIABLE SD_IO_STRING#56=819,SD_IO_STRING#57=820,SD_IO_STRING#58=821,SD_IO_STRING#59=822
  0337                00326  VARIABLE SD_IO_STRING#60=823,SD_IO_STRING#61=824,SD_IO_STRING#62=825,SD_IO_STRING#63=826
  033B                00327  VARIABLE SD_IO_STRING#64=827,SD_IO_STRING#65=828,SD_IO_STRING#66=829,SD_IO_STRING#67=830
  033F                00328  VARIABLE SD_IO_STRING#68=831,SD_IO_STRING#69=832,SD_IO_STRING#70=833,SD_IO_STRING#71=834
  0343                00329  VARIABLE SD_IO_STRING#72=835,SD_IO_STRING#73=836,SD_IO_STRING#74=837,SD_IO_STRING#75=838
  0347                00330  VARIABLE SD_IO_STRING#76=839,SD_IO_STRING#77=840,SD_IO_STRING#78=841,SD_IO_STRING#79=842
  034B                00331  VARIABLE SD_IO_STRING#80=843,SD_IO_STRING#81=844,SD_IO_STRING#82=845,SD_IO_STRING#83=846
  034F                00332  VARIABLE SD_IO_STRING#84=847,SD_IO_STRING#85=848,SD_IO_STRING#86=849,SD_IO_STRING#87=850
  0353                00333  VARIABLE SD_IO_STRING#88=851,SD_IO_STRING#89=852,SD_IO_STRING#90=853,SD_IO_STRING#91=854
  0357                00334  VARIABLE SD_IO_STRING#92=855,SD_IO_STRING#93=856,SD_IO_STRING#94=857,SD_IO_STRING#95=858
  035B                00335  VARIABLE SD_IO_STRING#96=859,SD_IO_STRING#97=860,SD_IO_STRING#98=861,SD_IO_STRING#99=862
  035F                00336  VARIABLE SD_IO_STRING#100=863,SD_IO_STRING#101=864,SD_IO_STRING#102=865,SD_IO_STRING#103=866
  0363                00337  VARIABLE SD_IO_STRING#104=867,SD_IO_STRING#105=868,SD_IO_STRING#106=869,SD_IO_STRING#107=870
  0367                00338  VARIABLE SD_IO_STRING#108=871,SD_IO_STRING#109=872,SD_IO_STRING#110=873,SD_IO_STRING#111=874
  036B                00339  VARIABLE SD_IO_STRING#112=875,SD_IO_STRING#113=876,SD_IO_STRING#114=877,SD_IO_STRING#115=878
  036F                00340  VARIABLE SD_IO_STRING#116=879,SD_IO_STRING#117=880,SD_IO_STRING#118=881,SD_IO_STRING#119=882
  0373                00341  VARIABLE SD_IO_STRING#120=883,SD_IO_STRING#121=884,SD_IO_STRING#122=885,SD_IO_STRING#123=886
  0377                00342  VARIABLE SD_IO_STRING#124=887,SD_IO_STRING#125=888,SD_IO_STRING#126=889,SD_IO_STRING#127=890
  037B                00343  VARIABLE SD_IO_STRING#128=891,SD_IO_STRING#129=892,SD_IO_STRING#130=893,SD_IO_STRING#131=894
  037F                00344  VARIABLE SD_IO_STRING#132=895,SD_IO_STRING#133=896,SD_IO_STRING#134=897,SD_IO_STRING#135=898
  0383                00345  VARIABLE SD_IO_STRING#136=899,SD_IO_STRING#137=900,SD_IO_STRING#138=901,SD_IO_STRING#139=902
  0387                00346  VARIABLE SD_IO_STRING#140=903,SD_IO_STRING#141=904,SD_IO_STRING#142=905,SD_IO_STRING#143=906
  038B                00347  VARIABLE SD_IO_STRING#144=907,SD_IO_STRING#145=908,SD_IO_STRING#146=909,SD_IO_STRING#147=910
  038F                00348  VARIABLE SD_IO_STRING#148=911,SD_IO_STRING#149=912,SD_IO_STRING#150=913,SD_IO_STRING#151=914
  0393                00349  VARIABLE SD_IO_STRING#152=915,SD_IO_STRING#153=916,SD_IO_STRING#154=917,SD_IO_STRING#155=918
  0397                00350  VARIABLE SD_IO_STRING#156=919,SD_IO_STRING#157=920,SD_IO_STRING#158=921,SD_IO_STRING#159=922
  039B                00351  VARIABLE SD_IO_STRING#160=923,SD_IO_STRING#161=924,SD_IO_STRING#162=925,SD_IO_STRING#163=926
  039F                00352  VARIABLE SD_IO_STRING#164=927,SD_IO_STRING#165=928,SD_IO_STRING#166=929,SD_IO_STRING#167=930
  03A3                00353  VARIABLE SD_IO_STRING#168=931,SD_IO_STRING#169=932,SD_IO_STRING#170=933,SD_IO_STRING#171=934
  03A7                00354  VARIABLE SD_IO_STRING#172=935,SD_IO_STRING#173=936,SD_IO_STRING#174=937,SD_IO_STRING#175=938
  03AB                00355  VARIABLE SD_IO_STRING#176=939,SD_IO_STRING#177=940,SD_IO_STRING#178=941,SD_IO_STRING#179=942
  03AF                00356  VARIABLE SD_IO_STRING#180=943,SD_IO_STRING#181=944,SD_IO_STRING#182=945,SD_IO_STRING#183=946
  03B3                00357  VARIABLE SD_IO_STRING#184=947,SD_IO_STRING#185=948,SD_IO_STRING#186=949,SD_IO_STRING#187=950
  03B7                00358  VARIABLE SD_IO_STRING#188=951,SD_IO_STRING#189=952,SD_IO_STRING#190=953,SD_IO_STRING#191=954
  03BB                00359  VARIABLE SD_IO_STRING#192=955,SD_IO_STRING#193=956,SD_IO_STRING#194=957,SD_IO_STRING#195=958
  03BF                00360  VARIABLE SD_IO_STRING#196=959,SD_IO_STRING#197=960,SD_IO_STRING#198=961,SD_IO_STRING#199=962
  03C3                00361  VARIABLE SD_IO_STRING#200=963
  000003C4            00362  USER_POINTER = 964
  000003C5            00363  USER_POINTERH = 965
  000003C6            00364  TAGIN = 966
  03C6                00365  VARIABLE TAGIN#0=966,TAGIN#1=967,TAGIN#2=968,TAGIN#3=969
  03CA                00366  VARIABLE TAGIN#4=970,TAGIN#5=971,TAGIN#6=972,TAGIN#7=973
  03CE                00367  VARIABLE TAGIN#8=974,TAGIN#9=975
  000003D0            00368  USERIN = 976
  03D0                00369  VARIABLE USERIN#0=976,USERIN#1=977,USERIN#2=978,USERIN#3=979
  000003D4            00370  UTAG = 980
  03D4                00371  VARIABLE UTAG#0=980,UTAG#1=981,UTAG#2=982,UTAG#3=983
  03D8                00372  VARIABLE UTAG#4=984,UTAG#5=985,UTAG#6=986,UTAG#7=987
  03DC                00373  VARIABLE UTAG#8=988,UTAG#9=989,UTAG#10=990,UTAG#11=991
  03E0                00374  VARIABLE UTAG#12=992,UTAG#13=993,UTAG#14=994,UTAG#15=995
  000003E4            00375  MODNUM = 996
  03E4                00376  VARIABLE MODNUM#0=996,MODNUM#1=997,MODNUM#2=998,MODNUM#3=999
  03E8                00377  VARIABLE MODNUM#4=1000,MODNUM#5=1001,MODNUM#6=1002
  000003EB            00378  RESPONSE = 1003
  000003EC            00379  MYCOUNT = 1004
  000003ED            00380  INDEX = 1005
  000003EE            00381  INDEX2 = 1006
  000003EF            00382  TV1 = 1007
  000003F0            00383  WORD_VAR = 1008
  000003F1            00384  WORD_VARH = 1009
  000003F2            00385  MYNUM = 1010
  03F2                00386  VARIABLE MYNUM#0=1010,MYNUM#1=1011,MYNUM#2=1012,MYNUM#3=1013
                      00387         #DEFINE SD_CS PORTC,2
                      00388         #DEFINE SD_DI PORTC,5
                      00389         #DEFINE SD_CLK PORTC,3
                      00390         #DEFINE SD_DO PORTC,4
                      00391         #DEFINE SD_EOF _B#VR1,0
                      00392         #DEFINE SD_RW_PTR SD_BYTES_READ
                      00393         #DEFINE SD_RW_PTRH SD_BYTES_READH
                      00394         #DEFINE SD_RW_PTRHH SD_BYTES_READHH
                      00395         #DEFINE SD_RW_PTRHHH SD_BYTES_READHHH
                      00396         #DEFINE SD_FREE_CLUSTER_NUM SD_CLUSTER_SEQ_NUM
                      00397         #DEFINE SD_FREE_CLUSTER_NUMH SD_CLUSTER_SEQ_NUMH
                      00398         #DEFINE SD_FREE_SPACE_KB SD_BYTES_READ
                      00399         #DEFINE SD_FREE_SPACE_KBH SD_BYTES_READH
                      00400         #DEFINE SD_FREE_SPACE_KBHH SD_BYTES_READHH
                      00401         #DEFINE SD_FREE_SPACE_KBHHH SD_BYTES_READHHH
                      00402         #DEFINE SD_DISK_SIZE_KB SD_BYTES_READ
                      00403         #DEFINE SD_DISK_SIZE_KBH SD_BYTES_READH
                      00404         #DEFINE SD_DISK_SIZE_KBHH SD_BYTES_READHH
                      00405         #DEFINE SD_DISK_SIZE_KBHHH SD_BYTES_READHHH
                      00406         #DEFINE SD_FIRST 0
                      00407         #DEFINE SD_NEXT 1
                      00408         #DEFINE SD_PREVIOUS 2
                      00409         #DEFINE SD_SPI_BF SSPSTAT,0
                      00410         #DEFINE SD_SPI_IF PIR1,3
                      00411         #DEFINE SD_SPI_FOSC_64 2
                      00412         #DEFINE SD_SPI_FOSC_16 1
                      00413         #DEFINE SD_SPI_FOSC_04 0
                      00414         #DEFINE __KEYPAD_PORT PORTB
                      00415         #DEFINE __LCD_DTPORT PORTD
                      00416         #DEFINE __LCD_ENPORT PORTD
                      00417         #DEFINE __LCD_RSPORT PORTD
                      00418         #DEFINE SD_DETECT PORTA,1
                      00419         #DEFINE RFIDENABLE PORTD,4
                      00420         #DEFINE BUA 40016
                      00421         #DEFINE BUAH 156
                      00422         #DEFINE UPA_L 0
                      00423         #DEFINE UPA_H 1
                      00424         #DEFINE NOU 2
                      00425         #DEFINE NUM_UHE 3
                      00426         #DEFINE NUM_MHE 4
                      00427         #DEFINE TAGOFFSET 4
                      00428         #DEFINE UHA 16
                      00429         #DEFINE MHA 912
                      00430         #DEFINE MHAH 3
                      00431         #DEFINE NUM_UH 200
                      00432         #DEFINE NUM_MH 10
  000005C2            00433 F2_SOF EQU $ ; V2.41 RFID 2ND GENERATION.PRP
  000005C2            00434 F3_SOF EQU $ ; V2.41 RFID 2ND GENERATION_FWD.PBP
  000005C2            00435 F3_EOF EQU $ ; V2.41 RFID 2ND GENERATION_FWD.PBP
  000005C2            00436 F4_SOF EQU $ ; V2.41 RFID 2ND GENERATION_LIB.PBP
  000005C2            00437 F4_000001 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoTo OverLibCode
                      00438         F@JUMP OVERLIBCODE
0005C6                00439 SD_WRITE_SUB
  000005C6            00440 F4_000109 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx > $FF Then
0005C6 0E01           00441         MOVLW 1
0005C8 0102           00442         MOVLB 2
  00000002            00443 RAM_BANK = 2
0005CA 5D48           00444         SUBWF SD_BUFFER_IDXH,W
0005CC 0100           00445         MOVLB 0
  00000000            00446 RAM_BANK = 0
0005CE A0D8           00447         BTFSS STATUS,0,0
                      00448         GO@TO BC@LL2
  000005D4            00449 F4_000110 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Buffer_Idx - $100] = SD_Byte_RW
0005D4 0102           00450         MOVLB 2
  00000002            00451 RAM_BANK = 2
0005D6 5147           00452         MOVF SD_BUFFER_IDX,W
0005D8 EE01 F041      00453         LFSR 0,SD_BUFFER1
0005DC 26E9           00454         ADDWF FSR0L,F,0
0005DE 0E00           00455         MOVLW 0
0005E0 22EA           00456         ADDWFC FSR0H,F,0
0005E2 C249 FFEF      00457         MOVFF SD_BYTE_RW,INDF0
0005E6 0100           00458         MOVLB 0
  00000000            00459 RAM_BANK = 0
                      00460         F@JUMP BC@LL3
0005EC                00461 BC@LL2
  000005EC            00462 F4_000111 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  000005EC            00463 F4_000112 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Buffer_Idx] = SD_Byte_RW
0005EC EE00 F041      00464         LFSR 0,SD_BUFFER0
0005F0 0102           00465         MOVLB 2
  00000002            00466 RAM_BANK = 2
0005F2 5147           00467         MOVF SD_BUFFER_IDX,W
0005F4 26E9           00468         ADDWF FSR0L,F,0
0005F6 0E00           00469         MOVLW 0
0005F8 22EA           00470         ADDWFC FSR0H,F,0
0005FA C249 FFEF      00471         MOVFF SD_BYTE_RW,INDF0
  000005FE            00472 F4_000113 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0005FE                00473 BC@LL3
0005FE 0100           00474         MOVLB 0
  00000000            00475 RAM_BANK = 0
  00000600            00476 F4_000114 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 1
000600 0E01           00477         MOVLW 1
000602 0102           00478         MOVLB 2
  00000002            00479 RAM_BANK = 2
000604 6FF6           00480         MOVWF SD_IS_DIRTY
  00000606            00481 F4_000115 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx = $1FF Then
000606 2947           00482         INCF SD_BUFFER_IDX,W
000608 0E01           00483         MOVLW 1
00060A B4D8           00484         BTFSC STATUS,2,0
00060C 1948           00485         XORWF SD_BUFFER_IDXH,W
00060E 0100           00486         MOVLB 0
  00000000            00487 RAM_BANK = 0
000610 A4D8           00488         BTFSS STATUS,2,0
                      00489         GO@TO BC@LL5
  00000616            00490 F4_000116 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Repeat
000616                00491 BC@LL6
  00000616            00492 F4_000117 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      00493         F@CALL SD_WRITE_SECTOR
  0000061A            00494 F4_000118 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Until SD_Return = 0
00061A 5240           00495         MOVF SD_RETURN,F,0
00061C A4D8           00496         BTFSS STATUS,2,0
                      00497         GO@TO BC@LL6
000620                00498 BC@LL7
  00000620            00499 F4_000119 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 0
000620 0102           00500         MOVLB 2
  00000002            00501 RAM_BANK = 2
000622 6BF6           00502         CLRF SD_IS_DIRTY
  00000624            00503 F4_000120 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
000624 6B48           00504         CLRF SD_BUFFER_IDXH
000626 6B47           00505         CLRF SD_BUFFER_IDX
  00000628            00506 F4_000121 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sector_Num
000628 2A34           00507         INCF SD_SECTOR_NUM,F,0
00062A 0E00           00508         MOVLW 0
00062C 2235           00509         ADDWFC SD_SECTOR_NUMH,F,0
00062E 2236           00510         ADDWFC SD_SECTOR_NUMHH,F,0
000630 2237           00511         ADDWFC SD_SECTOR_NUMHHH,F,0
000632 0100           00512         MOVLB 0
  00000000            00513 RAM_BANK = 0
                      00514         F@JUMP BC@LL8
000638                00515 BC@LL5
  00000638            00516 F4_000122 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  00000638            00517 F4_000123 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = SD_Buffer_Idx + 1
000638 0102           00518         MOVLB 2
  00000002            00519 RAM_BANK = 2
00063A 4B47           00520         INFSNZ SD_BUFFER_IDX,F
00063C 2B48           00521         INCF SD_BUFFER_IDXH,F
  0000063E            00522 F4_000124 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
00063E                00523 BC@LL8
00063E 0100           00524         MOVLB 0
  00000000            00525 RAM_BANK = 0
  00000640            00526 F4_000125 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000640 0012           00527         RETURN 0
000642                00528 SD_SECTOR_SUB
  00000642            00529 F4_000128 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
000642 0102           00530         MOVLB 2
  00000002            00531 RAM_BANK = 2
000644 6B48           00532         CLRF SD_BUFFER_IDXH
000646 6B47           00533         CLRF SD_BUFFER_IDX
  00000648            00534 F4_000129 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_RW_Option = 0 Then
000648 534A           00535         MOVF SD_RW_OPTION,F
00064A 0100           00536         MOVLB 0
  00000000            00537 RAM_BANK = 0
00064C A4D8           00538         BTFSS STATUS,2,0
                      00539         GO@TO BC@LL10
  00000652            00540 F4_000130 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000652 6A33           00541         CLRF SD_IDX,0
000654                00542 FR@LB12
  00000654            00543 F4_000131 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Idx] = 0
000654 EE00 F041      00544         LFSR 0,SD_BUFFER0
000658 5033           00545         MOVF SD_IDX,W,0
00065A 26E9           00546         ADDWF FSR0L,F,0
00065C 0E00           00547         MOVLW 0
00065E 22EA           00548         ADDWFC FSR0H,F,0
000660 6AEF           00549         CLRF INDF0,0
  00000662            00550 F4_000132 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Idx] = 0
000662 EE01 F041      00551         LFSR 0,SD_BUFFER1
000666 5033           00552         MOVF SD_IDX,W,0
000668 26E9           00553         ADDWF FSR0L,F,0
00066A 0E00           00554         MOVLW 0
00066C 22EA           00555         ADDWFC FSR0H,F,0
00066E 6AEF           00556         CLRF INDF0,0
  00000670            00557 F4_000133 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
000670 2A33           00558         INCF SD_IDX,F,0
000672 A4D8           00559         BTFSS STATUS,2,0
                      00560         GO@TO FR@LB12
000676                00561 NX@LB13
                      00562         F@JUMP BC@LL13
00067A                00563 BC@LL10
  0000067A            00564 F4_000134 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  0000067A            00565 F4_000135 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_Sector
                      00566         F@CALL SD_READ_SECTOR
  0000067E            00567 F4_000136 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
00067E                00568 BC@LL13
  0000067E            00569 F4_000137 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
00067E 0012           00570         RETURN 0
000680                00571 SD_SEEK_RESPONSE
  00000680            00572 F4_000151 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Repeat
000680                00573 BC@LL14
  00000680            00574 F4_000152 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00575         F@CALL SD_RECEIVE_BYTE
  00000684            00576 F4_000153 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Dec SD_Seek_Response_Idx
000684 063C           00577         DECF SD_SEEK_RESPONSE_IDX,F,0
000686 0E00           00578         MOVLW 0
000688 5A3D           00579         SUBWFB SD_SEEK_RESPONSE_IDXH,F,0
  0000068A            00580 F4_000154 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Until SD_ByteR = SD_Seek_Response_Reqd Or SD_Seek_Response_Idx = 0
00068A C032 F011      00581         MOVFF SD_BYTER,PP0
00068E 503E           00582         MOVF SD_SEEK_RESPONSE_REQD,W,0
                      00583         F@CALL T@EB
000694 6E2D           00584         MOVWF SP#P9,0
000696 503D           00585         MOVF SD_SEEK_RESPONSE_IDXH,W,0
000698 103C           00586         IORWF SD_SEEK_RESPONSE_IDX,W,0
00069A B4D8           00587         BTFSC STATUS,2,0
                      00588         GO@TO CP@LB4
0006A0 0E00           00589         MOVLW 0
0006A2 D001           00590         BRA $ + 4
0006A4                00591 CP@LB4
0006A4 0E01           00592         MOVLW 1
0006A6 102D           00593         IORWF SP#P9,W,0
0006A8 B4D8           00594         BTFSC STATUS,2,0
                      00595         GO@TO BC@LL14
0006AC                00596 BC@LL15
  000006AC            00597 F4_000155 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Idx = 0 Then
0006AC 503D           00598         MOVF SD_SEEK_RESPONSE_IDXH,W,0
0006AE 103C           00599         IORWF SD_SEEK_RESPONSE_IDX,W,0
0006B0 A4D8           00600         BTFSS STATUS,2,0
                      00601         GO@TO BC@LL17
  000006B6            00602 F4_000156 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Return = 1
0006B6 0E01           00603         MOVLW 1
0006B8 6E3F           00604         MOVWF SD_SEEK_RESPONSE_RETURN,0
                      00605         F@JUMP BC@LL18
0006BE                00606 BC@LL17
  000006BE            00607 F4_000157 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  000006BE            00608 F4_000158 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Return = 0
0006BE 6A3F           00609         CLRF SD_SEEK_RESPONSE_RETURN,0
  000006C0            00610 F4_000159 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0006C0                00611 BC@LL18
  000006C0            00612 F4_000160 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0006C0 0012           00613         RETURN 0
0006C2                00614 SD_WRITE_SECTOR
  000006C2            00615 F4_000163 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = 0
0006C2 0102           00616         MOVLB 2
  00000002            00617 RAM_BANK = 2
0006C4 6BEE           00618         CLRF SD_TIMEOUT
  000006C6            00619 F4_000164 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
0006C6 0E01           00620         MOVLW 1
0006C8 6E40           00621         MOVWF SD_RETURN,0
0006CA                00622 SD_WRITE_SECTOR_START
0006CA 0100           00623         MOVLB 0
  00000000            00624 RAM_BANK = 0
  000006CC            00625 F4_000166 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Address = SD_Sector_Num << 9
0006CC 90D8           00626         BCF STATUS,0,0
0006CE 6A38           00627         CLRF SD_ADDRESS,0
0006D0 3434           00628         RLCF SD_SECTOR_NUM,W,0
0006D2 6E39           00629         MOVWF SD_ADDRESSH,0
0006D4 3435           00630         RLCF SD_SECTOR_NUMH,W,0
0006D6 6E3A           00631         MOVWF SD_ADDRESSHH,0
0006D8 3436           00632         RLCF SD_SECTOR_NUMHH,W,0
0006DA 6E3B           00633         MOVWF SD_ADDRESSHHH,0
  000006DC            00634 F4_000168 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Low SD_CS
0006DC 9494           00635         BCF TRISC,2,0
0006DE 9482           00636         BCF PORTC,2,0
  000006E0            00637 F4_000169 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $58
0006E0 0E58           00638         MOVLW 88
0006E2 0102           00639         MOVLB 2
  00000002            00640 RAM_BANK = 2
0006E4 6F41           00641         MOVWF SD_BYTE0
  000006E6            00642 F4_000170 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = SD_Address.BYTE3
0006E6 C03B F242      00643         MOVFF SD_ADDRESSHHH,SD_BYTE1
  000006EA            00644 F4_000171 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = SD_Address.BYTE2
0006EA C03A F243      00645         MOVFF SD_ADDRESSHH,SD_BYTE2
  000006EE            00646 F4_000172 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = SD_Address.BYTE1
0006EE C039 F244      00647         MOVFF SD_ADDRESSH,SD_BYTE3
  000006F2            00648 F4_000173 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = SD_Address.BYTE0
0006F2 C038 F245      00649         MOVFF SD_ADDRESS,SD_BYTE4
  000006F6            00650 F4_000174 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
0006F6 6946           00651         SETF SD_BYTE5
  000006F8            00652 F4_000175 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $00
0006F8 6A3E           00653         CLRF SD_SEEK_RESPONSE_REQD,0
  000006FA            00654 F4_000176 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
0006FA 683D           00655         SETF SD_SEEK_RESPONSE_IDXH,0
0006FC 683C           00656         SETF SD_SEEK_RESPONSE_IDX,0
  000006FE            00657 F4_000177 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
0006FE 0100           00658         MOVLB 0
  00000000            00659 RAM_BANK = 0
                      00660         F@CALL SD_SEND_CMD
  00000704            00661 F4_000178 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00662         F@CALL SD_SEEK_RESPONSE
  00000706            00663 F4_000179 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Write_Sector_Error
000706 0E01           00664         MOVLW 1
000708 5C3F           00665         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
00070A A4D8           00666         BTFSS STATUS,2,0
                      00667         GO@TO BC@LL20
                      00668         F@JUMP SD_WRITE_SECTOR_ERROR
000714                00669 BC@LL20
  00000714            00670 F4_000181 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FE
000714 0EFE           00671         MOVLW 254
000716 0102           00672         MOVLB 2
  00000002            00673 RAM_BANK = 2
000718 6F46           00674         MOVWF SD_BYTE5
  0000071A            00675 F4_000182 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
00071A 0100           00676         MOVLB 0
  00000000            00677 RAM_BANK = 0
                      00678         F@CALL SD_SEND_BYTE
  00000720            00679 F4_000184 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000720 6A33           00680         CLRF SD_IDX,0
000722                00681 FR@LB22
  00000722            00682 F4_000185 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = SD_Buffer0[SD_Idx]
000722 EE00 F041      00683         LFSR 0,SD_BUFFER0
000726 5033           00684         MOVF SD_IDX,W,0
000728 26E9           00685         ADDWF FSR0L,F,0
00072A 0E00           00686         MOVLW 0
00072C 22EA           00687         ADDWFC FSR0H,F,0
00072E 50EF           00688         MOVF INDF0,W,0
000730 0102           00689         MOVLB 2
  00000002            00690 RAM_BANK = 2
000732 6F46           00691         MOVWF SD_BYTE5
  00000734            00692 F4_000186 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000734 0100           00693         MOVLB 0
  00000000            00694 RAM_BANK = 0
                      00695         F@CALL SD_SEND_BYTE
  0000073A            00696 F4_000187 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
00073A 2A33           00697         INCF SD_IDX,F,0
00073C A4D8           00698         BTFSS STATUS,2,0
                      00699         GO@TO FR@LB22
000740                00700 NX@LB23
  00000740            00701 F4_000188 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
000740 6A33           00702         CLRF SD_IDX,0
000742                00703 FR@LB24
  00000742            00704 F4_000189 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = SD_Buffer1[SD_Idx]
000742 EE01 F041      00705         LFSR 0,SD_BUFFER1
000746 5033           00706         MOVF SD_IDX,W,0
000748 26E9           00707         ADDWF FSR0L,F,0
00074A 0E00           00708         MOVLW 0
00074C 22EA           00709         ADDWFC FSR0H,F,0
00074E 50EF           00710         MOVF INDF0,W,0
000750 0102           00711         MOVLB 2
  00000002            00712 RAM_BANK = 2
000752 6F46           00713         MOVWF SD_BYTE5
  00000754            00714 F4_000190 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000754 0100           00715         MOVLB 0
  00000000            00716 RAM_BANK = 0
                      00717         F@CALL SD_SEND_BYTE
  0000075A            00718 F4_000191 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
00075A 2A33           00719         INCF SD_IDX,F,0
00075C A4D8           00720         BTFSS STATUS,2,0
                      00721         GO@TO FR@LB24
000760                00722 NX@LB25
  00000760            00723 F4_000193 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
000760 0102           00724         MOVLB 2
  00000002            00725 RAM_BANK = 2
000762 6946           00726         SETF SD_BYTE5
  00000764            00727 F4_000194 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000764 0100           00728         MOVLB 0
  00000000            00729 RAM_BANK = 0
                      00730         F@CALL SD_SEND_BYTE
  0000076A            00731 F4_000195 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
                      00732         F@CALL SD_SEND_BYTE
  0000076E            00733 F4_000197 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $FF
00076E 683E           00734         SETF SD_SEEK_RESPONSE_REQD,0
  00000770            00735 F4_000198 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
000770 683D           00736         SETF SD_SEEK_RESPONSE_IDXH,0
000772 683C           00737         SETF SD_SEEK_RESPONSE_IDX,0
  00000774            00738 F4_000199 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00739         F@CALL SD_RECEIVE_BYTE
  00000778            00740 F4_000200 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Byte = SD_ByteR
000778 C032 F2D1      00741         MOVFF SD_BYTER,SD_TEMP_BYTE
  0000077C            00742 F4_000201 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00743         F@CALL SD_SEEK_RESPONSE
  0000077E            00744 F4_000202 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Byte = SD_Temp_Byte & $0F
00077E 0E0F           00745         MOVLW 15
000780 0102           00746         MOVLB 2
  00000002            00747 RAM_BANK = 2
000782 17D1           00748         ANDWF SD_TEMP_BYTE,F
  00000784            00749 F4_000203 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Temp_Byte <> $05 Then GoTo SD_Write_Sector_Error
000784 0E05           00750         MOVLW 5
000786 5DD1           00751         SUBWF SD_TEMP_BYTE,W
000788 0100           00752         MOVLB 0
  00000000            00753 RAM_BANK = 0
00078A B4D8           00754         BTFSC STATUS,2,0
                      00755         GO@TO BC@LL26
                      00756         F@JUMP SD_WRITE_SECTOR_ERROR
000794                00757 BC@LL26
  00000794            00758 F4_000204 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Write_Sector_Error
000794 0E01           00759         MOVLW 1
000796 5C3F           00760         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
000798 A4D8           00761         BTFSS STATUS,2,0
                      00762         GO@TO BC@LL28
                      00763         F@JUMP SD_WRITE_SECTOR_ERROR
0007A2                00764 BC@LL28
  000007A2            00765 F4_000205 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Return = 0
0007A2 6A40           00766         CLRF SD_RETURN,0
  000007A4            00767 F4_000206 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0007A4 9494           00768         BCF TRISC,2,0
0007A6 8482           00769         BSF PORTC,2,0
  000007A8            00770 F4_000207 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Write_Sector_End
                      00771         F@JUMP SD_WRITE_SECTOR_END
0007AC                00772 SD_WRITE_SECTOR_ERROR
  000007AC            00773 F4_000209 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0007AC 9494           00774         BCF TRISC,2,0
0007AE 8482           00775         BSF PORTC,2,0
  000007B0            00776 F4_000210 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = SD_Timeout + 1
0007B0 0102           00777         MOVLB 2
  00000002            00778 RAM_BANK = 2
0007B2 2BEE           00779         INCF SD_TIMEOUT,F
  000007B4            00780 F4_000211 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Timeout < $03 Then
0007B4 0E03           00781         MOVLW 3
0007B6 5DEE           00782         SUBWF SD_TIMEOUT,W
0007B8 0100           00783         MOVLB 0
  00000000            00784 RAM_BANK = 0
0007BA B0D8           00785         BTFSC STATUS,0,0
                      00786         GO@TO BC@LL30
  000007C0            00787 F4_000212 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Write_Sector_Start
                      00788         F@JUMP SD_WRITE_SECTOR_START
  000007C2            00789 F4_000213 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0007C2                00790 BC@LL30
0007C2                00791 SD_WRITE_SECTOR_END
  000007C2            00792 F4_000215 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0007C2 0012           00793         RETURN 0
0007C4                00794 SD_READ_SECTOR
  000007C4            00795 F4_000218 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = 0
0007C4 0102           00796         MOVLB 2
  00000002            00797 RAM_BANK = 2
0007C6 6BEE           00798         CLRF SD_TIMEOUT
  000007C8            00799 F4_000219 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
0007C8 0E01           00800         MOVLW 1
0007CA 6E40           00801         MOVWF SD_RETURN,0
0007CC                00802 SD_READ_SECTOR_START
0007CC 0100           00803         MOVLB 0
  00000000            00804 RAM_BANK = 0
  000007CE            00805 F4_000221 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Address = SD_Sector_Num << 9
0007CE 90D8           00806         BCF STATUS,0,0
0007D0 6A38           00807         CLRF SD_ADDRESS,0
0007D2 3434           00808         RLCF SD_SECTOR_NUM,W,0
0007D4 6E39           00809         MOVWF SD_ADDRESSH,0
0007D6 3435           00810         RLCF SD_SECTOR_NUMH,W,0
0007D8 6E3A           00811         MOVWF SD_ADDRESSHH,0
0007DA 3436           00812         RLCF SD_SECTOR_NUMHH,W,0
0007DC 6E3B           00813         MOVWF SD_ADDRESSHHH,0
  000007DE            00814 F4_000223 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Low SD_CS
0007DE 9494           00815         BCF TRISC,2,0
0007E0 9482           00816         BCF PORTC,2,0
  000007E2            00817 F4_000224 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $51
0007E2 0E51           00818         MOVLW 81
0007E4 0102           00819         MOVLB 2
  00000002            00820 RAM_BANK = 2
0007E6 6F41           00821         MOVWF SD_BYTE0
  000007E8            00822 F4_000225 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = SD_Address.BYTE3
0007E8 C03B F242      00823         MOVFF SD_ADDRESSHHH,SD_BYTE1
  000007EC            00824 F4_000226 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = SD_Address.BYTE2
0007EC C03A F243      00825         MOVFF SD_ADDRESSHH,SD_BYTE2
  000007F0            00826 F4_000227 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = SD_Address.BYTE1
0007F0 C039 F244      00827         MOVFF SD_ADDRESSH,SD_BYTE3
  000007F4            00828 F4_000228 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = SD_Address.BYTE0
0007F4 C038 F245      00829         MOVFF SD_ADDRESS,SD_BYTE4
  000007F8            00830 F4_000229 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
0007F8 6946           00831         SETF SD_BYTE5
  000007FA            00832 F4_000230 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
0007FA 0100           00833         MOVLB 0
  00000000            00834 RAM_BANK = 0
                      00835         F@CALL SD_SEND_CMD
  00000800            00836 F4_000231 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $00
000800 6A3E           00837         CLRF SD_SEEK_RESPONSE_REQD,0
  00000802            00838 F4_000232 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
000802 683D           00839         SETF SD_SEEK_RESPONSE_IDXH,0
000804 683C           00840         SETF SD_SEEK_RESPONSE_IDX,0
  00000806            00841 F4_000233 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00842         F@CALL SD_SEEK_RESPONSE
  00000808            00843 F4_000234 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Read_Sector_Error
000808 0E01           00844         MOVLW 1
00080A 5C3F           00845         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
00080C A4D8           00846         BTFSS STATUS,2,0
                      00847         GO@TO BC@LL32
                      00848         F@JUMP SD_READ_SECTOR_ERROR
000816                00849 BC@LL32
  00000816            00850 F4_000236 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $FE
000816 0EFE           00851         MOVLW 254
000818 6E3E           00852         MOVWF SD_SEEK_RESPONSE_REQD,0
  0000081A            00853 F4_000237 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FFFF
00081A 683D           00854         SETF SD_SEEK_RESPONSE_IDXH,0
00081C 683C           00855         SETF SD_SEEK_RESPONSE_IDX,0
  0000081E            00856 F4_000238 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      00857         F@CALL SD_SEEK_RESPONSE
  00000820            00858 F4_000239 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then GoTo SD_Read_Sector_Error
000820 0E01           00859         MOVLW 1
000822 5C3F           00860         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
000824 A4D8           00861         BTFSS STATUS,2,0
                      00862         GO@TO BC@LL34
                      00863         F@JUMP SD_READ_SECTOR_ERROR
00082E                00864 BC@LL34
  0000082E            00865 F4_000241 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
00082E 6A33           00866         CLRF SD_IDX,0
000830                00867 FR@LB36
  00000830            00868 F4_000242 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00869         F@CALL SD_RECEIVE_BYTE
  00000834            00870 F4_000243 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Idx] = SD_ByteR
000834 EE00 F041      00871         LFSR 0,SD_BUFFER0
000838 5033           00872         MOVF SD_IDX,W,0
00083A 26E9           00873         ADDWF FSR0L,F,0
00083C 0E00           00874         MOVLW 0
00083E 22EA           00875         ADDWFC FSR0H,F,0
000840 C032 FFEF      00876         MOVFF SD_BYTER,INDF0
  00000844            00877 F4_000244 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
000844 2A33           00878         INCF SD_IDX,F,0
000846 A4D8           00879         BTFSS STATUS,2,0
                      00880         GO@TO FR@LB36
00084A                00881 NX@LB37
  0000084A            00882 F4_000245 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Idx = 0 To $FF
00084A 6A33           00883         CLRF SD_IDX,0
00084C                00884 FR@LB38
  0000084C            00885 F4_000246 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00886         F@CALL SD_RECEIVE_BYTE
  00000850            00887 F4_000247 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Idx] = SD_ByteR
000850 EE01 F041      00888         LFSR 0,SD_BUFFER1
000854 5033           00889         MOVF SD_IDX,W,0
000856 26E9           00890         ADDWF FSR0L,F,0
000858 0E00           00891         MOVLW 0
00085A 22EA           00892         ADDWFC FSR0H,F,0
00085C C032 FFEF      00893         MOVFF SD_BYTER,INDF0
  00000860            00894 F4_000248 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Idx
000860 2A33           00895         INCF SD_IDX,F,0
000862 A4D8           00896         BTFSS STATUS,2,0
                      00897         GO@TO FR@LB38
000866                00898 NX@LB39
  00000866            00899 F4_000250 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00900         F@CALL SD_RECEIVE_BYTE
  0000086A            00901 F4_000251 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Receive_Byte
                      00902         F@CALL SD_RECEIVE_BYTE
  0000086E            00903 F4_000252 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] High SD_CS
00086E 9494           00904         BCF TRISC,2,0
000870 8482           00905         BSF PORTC,2,0
  00000872            00906 F4_000253 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
000872 0102           00907         MOVLB 2
  00000002            00908 RAM_BANK = 2
000874 6946           00909         SETF SD_BYTE5
  00000876            00910 F4_000254 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
000876 0100           00911         MOVLB 0
  00000000            00912 RAM_BANK = 0
                      00913         F@CALL SD_SEND_BYTE
  0000087C            00914 F4_000255 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Return = 0
00087C 6A40           00915         CLRF SD_RETURN,0
  0000087E            00916 F4_000256 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Read_Sector_End
                      00917         F@JUMP SD_READ_SECTOR_END
000882                00918 SD_READ_SECTOR_ERROR
  00000882            00919 F4_000258 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] High SD_CS
000882 9494           00920         BCF TRISC,2,0
000884 8482           00921         BSF PORTC,2,0
  00000886            00922 F4_000259 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Timeout = SD_Timeout + 1
000886 0102           00923         MOVLB 2
  00000002            00924 RAM_BANK = 2
000888 2BEE           00925         INCF SD_TIMEOUT,F
  0000088A            00926 F4_000260 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Timeout < $03 Then
00088A 0E03           00927         MOVLW 3
00088C 5DEE           00928         SUBWF SD_TIMEOUT,W
00088E 0100           00929         MOVLB 0
  00000000            00930 RAM_BANK = 0
000890 B0D8           00931         BTFSC STATUS,0,0
                      00932         GO@TO BC@LL40
  00000896            00933 F4_000261 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Read_Sector_Start
                      00934         F@JUMP SD_READ_SECTOR_START
  00000898            00935 F4_000262 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000898                00936 BC@LL40
000898                00937 SD_READ_SECTOR_END
  00000898            00938 F4_000264 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000898 0012           00939         RETURN 0
00089A                00940 SD_READ_FAT_ENTRY
  0000089A            00941 F4_000267 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Pos > $0FF Then
00089A 0E01           00942         MOVLW 1
00089C 0102           00943         MOVLB 2
  00000002            00944 RAM_BANK = 2
00089E 5D4F           00945         SUBWF SD_BUFFER_POSH,W
0008A0 0100           00946         MOVLB 0
  00000000            00947 RAM_BANK = 0
0008A2 A0D8           00948         BTFSS STATUS,0,0
                      00949         GO@TO BC@LL42
  000008A8            00950 F4_000268 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE0 = SD_Buffer1[SD_Buffer_Pos - $100]
0008A8 0102           00951         MOVLB 2
  00000002            00952 RAM_BANK = 2
0008AA 514E           00953         MOVF SD_BUFFER_POS,W
0008AC EE01 F041      00954         LFSR 0,SD_BUFFER1
0008B0 26E9           00955         ADDWF FSR0L,F,0
0008B2 0E00           00956         MOVLW 0
0008B4 22EA           00957         ADDWFC FSR0H,F,0
0008B6 50EF           00958         MOVF INDF0,W,0
0008B8 6F77           00959         MOVWF SD_FAT_ENTRY
  000008BA            00960 F4_000269 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE1 = SD_Buffer1[SD_Buffer_Pos + 1 - $100]
0008BA 0E01           00961         MOVLW 1
0008BC 254E           00962         ADDWF SD_BUFFER_POS,W
0008BE 6E23           00963         MOVWF PP7,0
0008C0 0E00           00964         MOVLW 0
0008C2 214F           00965         ADDWFC SD_BUFFER_POSH,W
0008C4 6E24           00966         MOVWF PP7H,0
0008C6 5023           00967         MOVF PP7,W,0
0008C8 EE01 F041      00968         LFSR 0,SD_BUFFER1
0008CC 26E9           00969         ADDWF FSR0L,F,0
0008CE 0E00           00970         MOVLW 0
0008D0 22EA           00971         ADDWFC FSR0H,F,0
0008D2 50EF           00972         MOVF INDF0,W,0
0008D4 6F78           00973         MOVWF SD_FAT_ENTRYH
0008D6 0100           00974         MOVLB 0
  00000000            00975 RAM_BANK = 0
                      00976         F@JUMP BC@LL43
0008DC                00977 BC@LL42
  000008DC            00978 F4_000270 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  000008DC            00979 F4_000271 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE0 = SD_Buffer0[SD_Buffer_Pos]
0008DC EE00 F041      00980         LFSR 0,SD_BUFFER0
0008E0 0102           00981         MOVLB 2
  00000002            00982 RAM_BANK = 2
0008E2 514E           00983         MOVF SD_BUFFER_POS,W
0008E4 26E9           00984         ADDWF FSR0L,F,0
0008E6 0E00           00985         MOVLW 0
0008E8 22EA           00986         ADDWFC FSR0H,F,0
0008EA 50EF           00987         MOVF INDF0,W,0
0008EC 6F77           00988         MOVWF SD_FAT_ENTRY
  000008EE            00989 F4_000272 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Entry.BYTE1 = SD_Buffer0[SD_Buffer_Pos + 1]
0008EE 294E           00990         INCF SD_BUFFER_POS,W
0008F0 EE00 F041      00991         LFSR 0,SD_BUFFER0
0008F4 26E9           00992         ADDWF FSR0L,F,0
0008F6 0E00           00993         MOVLW 0
0008F8 22EA           00994         ADDWFC FSR0H,F,0
0008FA 50EF           00995         MOVF INDF0,W,0
0008FC 6F78           00996         MOVWF SD_FAT_ENTRYH
  000008FE            00997 F4_000273 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0008FE                00998 BC@LL43
0008FE 0100           00999         MOVLB 0
  00000000            01000 RAM_BANK = 0
  00000900            01001 F4_000274 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000900 0012           01002         RETURN 0
000902                01003 SD_FIND_FREE_CLUSTER
  00000902            01004 F4_000277 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Dword = SD_FAT1 + SD_Secs_Per_FAT - 1
000902 0102           01005         MOVLB 2
  00000002            01006 RAM_BANK = 2
000904 5158           01007         MOVF SD_SECS_PER_FAT,W
000906 2567           01008         ADDWF SD_FAT1,W
000908 6E23           01009         MOVWF PP7,0
00090A 5159           01010         MOVF SD_SECS_PER_FATH,W
00090C 2168           01011         ADDWFC SD_FAT1H,W
00090E 6E24           01012         MOVWF PP7H,0
000910 0E00           01013         MOVLW 0
000912 2169           01014         ADDWFC SD_FAT1HH,W
000914 6E25           01015         MOVWF PP7HH,0
000916 0E00           01016         MOVLW 0
000918 216A           01017         ADDWFC SD_FAT1HHH,W
00091A 6E26           01018         MOVWF PP7HHH,0
00091C 0423           01019         DECF PP7,W,0
00091E 6FD4           01020         MOVWF SD_TEMP_DWORD
000920 0E00           01021         MOVLW 0
000922 5824           01022         SUBWFB PP7H,W,0
000924 6FD5           01023         MOVWF SD_TEMP_DWORDH
000926 0E00           01024         MOVLW 0
000928 5825           01025         SUBWFB PP7HH,W,0
00092A 6FD6           01026         MOVWF SD_TEMP_DWORDHH
00092C 0E00           01027         MOVLW 0
00092E 5826           01028         SUBWFB PP7HHH,W,0
000930 6FD7           01029         MOVWF SD_TEMP_DWORDHHH
  00000932            01030 F4_000278 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Sec_Num = (SD_FAT_Sec + SD_FAT1) To SD_Temp_Dword
000932 5167           01031         MOVF SD_FAT1,W
000934 2579           01032         ADDWF SD_FAT_SEC,W
000936 6F51           01033         MOVWF SD_SEC_NUM
000938 5168           01034         MOVF SD_FAT1H,W
00093A 217A           01035         ADDWFC SD_FAT_SECH,W
00093C 6F52           01036         MOVWF SD_SEC_NUMH
00093E 5169           01037         MOVF SD_FAT1HH,W
000940 217B           01038         ADDWFC SD_FAT_SECHH,W
000942 6F53           01039         MOVWF SD_SEC_NUMHH
000944 516A           01040         MOVF SD_FAT1HHH,W
000946 217C           01041         ADDWFC SD_FAT_SECHHH,W
000948 6F54           01042         MOVWF SD_SEC_NUMHHH
00094A                01043 FR@LB45
00094A 0100           01044         MOVLB 0
  00000000            01045 RAM_BANK = 0
00094C 0102           01046         MOVLB 2
  00000002            01047 RAM_BANK = 2
00094E 5151           01048         MOVF SD_SEC_NUM,W
000950 5DD4           01049         SUBWF SD_TEMP_DWORD,W
000952 5152           01050         MOVF SD_SEC_NUMH,W
000954 59D5           01051         SUBWFB SD_TEMP_DWORDH,W
000956 5153           01052         MOVF SD_SEC_NUMHH,W
000958 59D6           01053         SUBWFB SD_TEMP_DWORDHH,W
00095A 5154           01054         MOVF SD_SEC_NUMHHH,W
00095C 59D7           01055         SUBWFB SD_TEMP_DWORDHHH,W
00095E 5154           01056         MOVF SD_SEC_NUMHHH,W
000960 19D7           01057         XORWF SD_TEMP_DWORDHHH,W
000962 B0D8           01058         BTFSC STATUS,0,0
000964 0A80           01059         XORLW 128
000966 0100           01060         MOVLB 0
  00000000            01061 RAM_BANK = 0
000968 A8D8           01062         BTFSS STATUS,4,0
                      01063         GO@TO NX@LB46
  0000096E            01064 F4_000279 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sec_Num
00096E C254 F037      01065         MOVFF SD_SEC_NUMHHH,SD_SECTOR_NUMHHH
000972 C253 F036      01066         MOVFF SD_SEC_NUMHH,SD_SECTOR_NUMHH
000976 C252 F035      01067         MOVFF SD_SEC_NUMH,SD_SECTOR_NUMH
00097A C251 F034      01068         MOVFF SD_SEC_NUM,SD_SECTOR_NUM
  0000097E            01069 F4_000280 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
00097E 0E01           01070         MOVLW 1
000980 0102           01071         MOVLB 2
  00000002            01072 RAM_BANK = 2
000982 6F4A           01073         MOVWF SD_RW_OPTION
  00000984            01074 F4_000281 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
000984 0100           01075         MOVLB 0
  00000000            01076 RAM_BANK = 0
                      01077         F@CALL SD_SECTOR_SUB
  00000988            01078 F4_000283 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Buffer_Pos = $0000 To $1FF Step 2
000988 0102           01079         MOVLB 2
  00000002            01080 RAM_BANK = 2
00098A 6B4F           01081         CLRF SD_BUFFER_POSH
00098C 6B4E           01082         CLRF SD_BUFFER_POS
00098E                01083 FR@LB47
00098E 0100           01084         MOVLB 0
  00000000            01085 RAM_BANK = 0
000990 0E02           01086         MOVLW 2
000992 0102           01087         MOVLB 2
  00000002            01088 RAM_BANK = 2
000994 5D4F           01089         SUBWF SD_BUFFER_POSH,W
000996 0100           01090         MOVLB 0
  00000000            01091 RAM_BANK = 0
000998 B0D8           01092         BTFSC STATUS,0,0
                      01093         GO@TO NX@LB48
  0000099E            01094 F4_000284 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Sec_Num > (SD_FAT_Sec + SD_FAT1) Or SD_Buffer_Pos >= (SD_FAT_Buffer_Pos + (2 * SD_Cluster_Seq_Num)) Then
00099E 0102           01095         MOVLB 2
  00000002            01096 RAM_BANK = 2
0009A0 5167           01097         MOVF SD_FAT1,W
0009A2 2579           01098         ADDWF SD_FAT_SEC,W
0009A4 6E08           01099         MOVWF PBP#VAR0,0
0009A6 5168           01100         MOVF SD_FAT1H,W
0009A8 217A           01101         ADDWFC SD_FAT_SECH,W
0009AA 6E09           01102         MOVWF PBP#VAR0H,0
0009AC 5169           01103         MOVF SD_FAT1HH,W
0009AE 217B           01104         ADDWFC SD_FAT_SECHH,W
0009B0 6E0A           01105         MOVWF PBP#VAR0HH,0
0009B2 516A           01106         MOVF SD_FAT1HHH,W
0009B4 217C           01107         ADDWFC SD_FAT_SECHHH,W
0009B6 6E0B           01108         MOVWF PBP#VAR0HHH,0
0009B8 5151           01109         MOVF SD_SEC_NUM,W
0009BA 5C08           01110         SUBWF PBP#VAR0,W,0
0009BC 5152           01111         MOVF SD_SEC_NUMH,W
0009BE 5809           01112         SUBWFB PBP#VAR0H,W,0
0009C0 5153           01113         MOVF SD_SEC_NUMHH,W
0009C2 580A           01114         SUBWFB PBP#VAR0HH,W,0
0009C4 5154           01115         MOVF SD_SEC_NUMHHH,W
0009C6 580B           01116         SUBWFB PBP#VAR0HHH,W,0
0009C8 5154           01117         MOVF SD_SEC_NUMHHH,W
0009CA 180B           01118         XORWF PBP#VAR0HHH,W,0
0009CC B0D8           01119         BTFSC STATUS,0,0
0009CE 0A80           01120         XORLW 128
0009D0 0100           01121         MOVLB 0
  00000000            01122 RAM_BANK = 0
0009D2 A8D8           01123         BTFSS STATUS,4,0
                      01124         GO@TO CP@LB9
0009D8 0E00           01125         MOVLW 0
0009DA D001           01126         BRA $ + 4
0009DC                01127 CP@LB9
0009DC 0E01           01128         MOVLW 1
0009DE 6E2D           01129         MOVWF SP#P9,0
0009E0 90D8           01130         BCF STATUS,0,0
0009E2 0102           01131         MOVLB 2
  00000002            01132 RAM_BANK = 2
0009E4 35D8           01133         RLCF SD_CLUSTER_SEQ_NUM,W
0009E6 6E23           01134         MOVWF PP7,0
0009E8 35D9           01135         RLCF SD_CLUSTER_SEQ_NUMH,W
0009EA 6E24           01136         MOVWF PP7H,0
0009EC 5023           01137         MOVF PP7,W,0
0009EE 257D           01138         ADDWF SD_FAT_BUFFER_POS,W
0009F0 6E08           01139         MOVWF PBP#VAR0,0
0009F2 5024           01140         MOVF PP7H,W,0
0009F4 217E           01141         ADDWFC SD_FAT_BUFFER_POSH,W
0009F6 6E09           01142         MOVWF PBP#VAR0H,0
0009F8 C24F F012      01143         MOVFF SD_BUFFER_POSH,PP0H
0009FC C24E F011      01144         MOVFF SD_BUFFER_POS,PP0
000A00 C009 F016      01145         MOVFF PBP#VAR0H,PP1H
000A04 5008           01146         MOVF PBP#VAR0,W,0
                      01147         F@CALL T@GE
000A0A 102D           01148         IORWF SP#P9,W,0
000A0C 0100           01149         MOVLB 0
  00000000            01150 RAM_BANK = 0
000A0E B4D8           01151         BTFSC STATUS,2,0
                      01152         GO@TO BC@LL49
  00000A14            01153 F4_000285 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      01154         F@CALL SD_READ_FAT_ENTRY
  00000A16            01155 F4_000286 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_FAT_Entry = $0000 Then GoTo SD_Store_FAT_Position
000A16 0102           01156         MOVLB 2
  00000002            01157 RAM_BANK = 2
000A18 5178           01158         MOVF SD_FAT_ENTRYH,W
000A1A 1177           01159         IORWF SD_FAT_ENTRY,W
000A1C 0100           01160         MOVLB 0
  00000000            01161 RAM_BANK = 0
000A1E A4D8           01162         BTFSS STATUS,2,0
                      01163         GO@TO BC@LL51
                      01164         F@JUMP SD_STORE_FAT_POSITION
000A28                01165 BC@LL51
  00000A28            01166 F4_000287 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000A28                01167 BC@LL49
  00000A28            01168 F4_000288 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Buffer_Pos
000A28 0E02           01169         MOVLW 2
000A2A 0102           01170         MOVLB 2
  00000002            01171 RAM_BANK = 2
000A2C 274E           01172         ADDWF SD_BUFFER_POS,F
000A2E 0100           01173         MOVLB 0
  00000000            01174 RAM_BANK = 0
000A30 A0D8           01175         BTFSS STATUS,0,0
                      01176         GO@TO FR@LB47
000A34 0102           01177         MOVLB 2
  00000002            01178 RAM_BANK = 2
000A36 2B4F           01179         INCF SD_BUFFER_POSH,F
000A38 0100           01180         MOVLB 0
  00000000            01181 RAM_BANK = 0
000A3A A4D8           01182         BTFSS STATUS,2,0
                      01183         GO@TO FR@LB47
000A3E                01184 NX@LB48
  00000A3E            01185 F4_000289 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Sec_Num
000A3E 0102           01186         MOVLB 2
  00000002            01187 RAM_BANK = 2
000A40 2B51           01188         INCF SD_SEC_NUM,F
000A42 0E00           01189         MOVLW 0
000A44 2352           01190         ADDWFC SD_SEC_NUMH,F
000A46 2353           01191         ADDWFC SD_SEC_NUMHH,F
000A48 2354           01192         ADDWFC SD_SEC_NUMHHH,F
000A4A 0100           01193         MOVLB 0
  00000000            01194 RAM_BANK = 0
000A4C A0D8           01195         BTFSS STATUS,0,0
                      01196         GO@TO FR@LB45
000A50                01197 NX@LB46
  00000A50            01198 F4_000290 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
000A50 0E01           01199         MOVLW 1
000A52 0102           01200         MOVLB 2
  00000002            01201 RAM_BANK = 2
000A54 6F4B           01202         MOVWF SD_EXTENDED_RETURN
  00000A56            01203 F4_000291 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000A56 0100           01204         MOVLB 0
  00000000            01205 RAM_BANK = 0
000A58 0012           01206         RETURN 0
000A5A                01207 SD_STORE_FAT_POSITION
  00000A5A            01208 F4_000293 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Sec_Num - SD_FAT1
000A5A 0102           01209         MOVLB 2
  00000002            01210 RAM_BANK = 2
000A5C 5167           01211         MOVF SD_FAT1,W
000A5E 5D51           01212         SUBWF SD_SEC_NUM,W
000A60 6F79           01213         MOVWF SD_FAT_SEC
000A62 5168           01214         MOVF SD_FAT1H,W
000A64 5952           01215         SUBWFB SD_SEC_NUMH,W
000A66 6F7A           01216         MOVWF SD_FAT_SECH
000A68 5169           01217         MOVF SD_FAT1HH,W
000A6A 5953           01218         SUBWFB SD_SEC_NUMHH,W
000A6C 6F7B           01219         MOVWF SD_FAT_SECHH
000A6E 516A           01220         MOVF SD_FAT1HHH,W
000A70 5954           01221         SUBWFB SD_SEC_NUMHHH,W
000A72 6F7C           01222         MOVWF SD_FAT_SECHHH
  00000A74            01223 F4_000294 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Buffer_Pos
000A74 C24F F27E      01224         MOVFF SD_BUFFER_POSH,SD_FAT_BUFFER_POSH
000A78 C24E F27D      01225         MOVFF SD_BUFFER_POS,SD_FAT_BUFFER_POS
  00000A7C            01226 F4_000295 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Sec * $100)
000A7C C279 F2C6      01227         MOVFF SD_FAT_SEC,SD_CLUSTER_NUMH
000A80 6BC5           01228         CLRF SD_CLUSTER_NUM
  00000A82            01229 F4_000296 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Buffer_Pos / 2) + SD_Cluster_Num
000A82 90D8           01230         BCF STATUS,0,0
000A84 317E           01231         RRCF SD_FAT_BUFFER_POSH,W
000A86 6E24           01232         MOVWF PP7H,0
000A88 317D           01233         RRCF SD_FAT_BUFFER_POS,W
000A8A 6E23           01234         MOVWF PP7,0
000A8C 5023           01235         MOVF PP7,W,0
000A8E 27C5           01236         ADDWF SD_CLUSTER_NUM,F
000A90 5024           01237         MOVF PP7H,W,0
000A92 23C6           01238         ADDWFC SD_CLUSTER_NUMH,F
  00000A94            01239 F4_000297 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 0
000A94 6BD9           01240         CLRF SD_CLUSTER_SEQ_NUMH
000A96 6BD8           01241         CLRF SD_CLUSTER_SEQ_NUM
  00000A98            01242 F4_000298 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Buffer_Pos = SD_FAT_Buffer_Pos To $1FF Step 2
000A98 C27E F24F      01243         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
000A9C C27D F24E      01244         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
000AA0                01245 FR@LB53
000AA0 0100           01246         MOVLB 0
  00000000            01247 RAM_BANK = 0
000AA2 0E02           01248         MOVLW 2
000AA4 0102           01249         MOVLB 2
  00000002            01250 RAM_BANK = 2
000AA6 5D4F           01251         SUBWF SD_BUFFER_POSH,W
000AA8 0100           01252         MOVLB 0
  00000000            01253 RAM_BANK = 0
000AAA B0D8           01254         BTFSC STATUS,0,0
                      01255         GO@TO NX@LB54
  00000AB0            01256 F4_000299 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      01257         F@CALL SD_READ_FAT_ENTRY
  00000AB2            01258 F4_000300 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_FAT_Entry = $0000 Then
000AB2 0102           01259         MOVLB 2
  00000002            01260 RAM_BANK = 2
000AB4 5178           01261         MOVF SD_FAT_ENTRYH,W
000AB6 1177           01262         IORWF SD_FAT_ENTRY,W
000AB8 0100           01263         MOVLB 0
  00000000            01264 RAM_BANK = 0
000ABA A4D8           01265         BTFSS STATUS,2,0
                      01266         GO@TO BC@LL55
  00000AC0            01267 F4_000301 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Seq_Num
000AC0 0102           01268         MOVLB 2
  00000002            01269 RAM_BANK = 2
000AC2 4BD8           01270         INFSNZ SD_CLUSTER_SEQ_NUM,F
000AC4 2BD9           01271         INCF SD_CLUSTER_SEQ_NUMH,F
000AC6 0100           01272         MOVLB 0
  00000000            01273 RAM_BANK = 0
                      01274         F@JUMP BC@LL56
000ACC                01275 BC@LL55
  00000ACC            01276 F4_000302 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  00000ACC            01277 F4_000303 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Store_Cluster_Seq
                      01278         F@JUMP SD_STORE_CLUSTER_SEQ
  00000AD0            01279 F4_000304 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000AD0                01280 BC@LL56
  00000AD0            01281 F4_000305 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Buffer_Pos
000AD0 0E02           01282         MOVLW 2
000AD2 0102           01283         MOVLB 2
  00000002            01284 RAM_BANK = 2
000AD4 274E           01285         ADDWF SD_BUFFER_POS,F
000AD6 0100           01286         MOVLB 0
  00000000            01287 RAM_BANK = 0
000AD8 A0D8           01288         BTFSS STATUS,0,0
                      01289         GO@TO FR@LB53
000ADC 0102           01290         MOVLB 2
  00000002            01291 RAM_BANK = 2
000ADE 2B4F           01292         INCF SD_BUFFER_POSH,F
000AE0 0100           01293         MOVLB 0
  00000000            01294 RAM_BANK = 0
000AE2 A4D8           01295         BTFSS STATUS,2,0
                      01296         GO@TO FR@LB53
000AE6                01297 NX@LB54
000AE6                01298 SD_STORE_CLUSTER_SEQ
  00000AE6            01299 F4_000307 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Idx = 1
000AE6 0102           01300         MOVLB 2
  00000002            01301 RAM_BANK = 2
000AE8 6BDB           01302         CLRF SD_CLUSTER_SEQ_IDXH
000AEA 0E01           01303         MOVLW 1
000AEC 6FDA           01304         MOVWF SD_CLUSTER_SEQ_IDX
  00000AEE            01305 F4_000308 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
000AEE 6B4B           01306         CLRF SD_EXTENDED_RETURN
  00000AF0            01307 F4_000309 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000AF0 0100           01308         MOVLB 0
  00000000            01309 RAM_BANK = 0
000AF2 0012           01310         RETURN 0
000AF4                01311 SD_MODIFY_FILE_NAME
  00000AF4            01312 F4_000312 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 0
000AF4 0102           01313         MOVLB 2
  00000002            01314 RAM_BANK = 2
000AF6 6BC4           01315         CLRF SD_NULL_F
  00000AF8            01316 F4_000313 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
000AF8 6B50           01317         CLRF SD_ROOT_DIR_FILE_POS
000AFA                01318 FR@LB58
000AFA 0100           01319         MOVLB 0
  00000000            01320 RAM_BANK = 0
000AFC 0E08           01321         MOVLW 8
000AFE 0102           01322         MOVLB 2
  00000002            01323 RAM_BANK = 2
000B00 5D50           01324         SUBWF SD_ROOT_DIR_FILE_POS,W
000B02 0100           01325         MOVLB 0
  00000000            01326 RAM_BANK = 0
000B04 B0D8           01327         BTFSC STATUS,0,0
                      01328         GO@TO NX@LB59
  00000B0A            01329 F4_000314 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Null_F = 1 Or SD_File_Name[SD_Root_Dir_File_Pos] = 0 Then
000B0A 0E01           01330         MOVLW 1
000B0C 0102           01331         MOVLB 2
  00000002            01332 RAM_BANK = 2
000B0E 5DC4           01333         SUBWF SD_NULL_F,W
000B10 0E01           01334         MOVLW 1
000B12 A4D8           01335         BTFSS STATUS,2,0
000B14 0E00           01336         MOVLW 0
000B16 6E2D           01337         MOVWF SP#P9,0
000B18 EE02 F091      01338         LFSR 0,SD_FILE_NAME
000B1C 5150           01339         MOVF SD_ROOT_DIR_FILE_POS,W
000B1E 50EB           01340         MOVF PLUSW0,W,0
000B20 6E08           01341         MOVWF PBP#VAR0,0
000B22 0E01           01342         MOVLW 1
000B24 5208           01343         MOVF PBP#VAR0,F,0
000B26 A4D8           01344         BTFSS STATUS,2,0
000B28 0E00           01345         MOVLW 0
000B2A 102D           01346         IORWF SP#P9,W,0
000B2C 0100           01347         MOVLB 0
  00000000            01348 RAM_BANK = 0
000B2E B4D8           01349         BTFSC STATUS,2,0
                      01350         GO@TO BC@LL60
  00000B34            01351 F4_000315 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Name[SD_Root_Dir_File_Pos] = $20
000B34 0E20           01352         MOVLW 32
000B36 6EF3           01353         MOVWF PRODL,0
000B38 EE02 F091      01354         LFSR 0,SD_FILE_NAME
000B3C 0102           01355         MOVLB 2
  00000002            01356 RAM_BANK = 2
000B3E 5150           01357         MOVF SD_ROOT_DIR_FILE_POS,W
000B40 CFF3 FFEB      01358         MOVFF PRODL,PLUSW0
  00000B44            01359 F4_000316 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000B44 0E01           01360         MOVLW 1
000B46 6FC4           01361         MOVWF SD_NULL_F
  00000B48            01362 F4_000317 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000B48                01363 BC@LL60
000B48 0100           01364         MOVLB 0
  00000000            01365 RAM_BANK = 0
  00000B4A            01366 F4_000318 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000B4A 0102           01367         MOVLB 2
  00000002            01368 RAM_BANK = 2
000B4C 2B50           01369         INCF SD_ROOT_DIR_FILE_POS,F
000B4E 0100           01370         MOVLB 0
  00000000            01371 RAM_BANK = 0
000B50 A4D8           01372         BTFSS STATUS,2,0
                      01373         GO@TO FR@LB58
000B54                01374 NX@LB59
  00000B54            01375 F4_000319 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 0
000B54 0102           01376         MOVLB 2
  00000002            01377 RAM_BANK = 2
000B56 6BC4           01378         CLRF SD_NULL_F
  00000B58            01379 F4_000320 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
000B58 0E08           01380         MOVLW 8
000B5A 6F50           01381         MOVWF SD_ROOT_DIR_FILE_POS
000B5C                01382 FR@LB62
000B5C 0100           01383         MOVLB 0
  00000000            01384 RAM_BANK = 0
000B5E 0E0B           01385         MOVLW 11
000B60 0102           01386         MOVLB 2
  00000002            01387 RAM_BANK = 2
000B62 5D50           01388         SUBWF SD_ROOT_DIR_FILE_POS,W
000B64 0100           01389         MOVLB 0
  00000000            01390 RAM_BANK = 0
000B66 B0D8           01391         BTFSC STATUS,0,0
                      01392         GO@TO NX@LB63
  00000B6C            01393 F4_000321 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Null_F = 1 Or SD_File_Ext[SD_Root_Dir_File_Pos - $08] = 0 Then
000B6C 0E01           01394         MOVLW 1
000B6E 0102           01395         MOVLB 2
  00000002            01396 RAM_BANK = 2
000B70 5DC4           01397         SUBWF SD_NULL_F,W
000B72 0E01           01398         MOVLW 1
000B74 A4D8           01399         BTFSS STATUS,2,0
000B76 0E00           01400         MOVLW 0
000B78 6E2D           01401         MOVWF SP#P9,0
000B7A 0E08           01402         MOVLW 8
000B7C 5D50           01403         SUBWF SD_ROOT_DIR_FILE_POS,W
000B7E EE02 F09A      01404         LFSR 0,SD_FILE_EXT
000B82 50EB           01405         MOVF PLUSW0,W,0
000B84 6E08           01406         MOVWF PBP#VAR0,0
000B86 0E01           01407         MOVLW 1
000B88 5208           01408         MOVF PBP#VAR0,F,0
000B8A A4D8           01409         BTFSS STATUS,2,0
000B8C 0E00           01410         MOVLW 0
000B8E 102D           01411         IORWF SP#P9,W,0
000B90 0100           01412         MOVLB 0
  00000000            01413 RAM_BANK = 0
000B92 B4D8           01414         BTFSC STATUS,2,0
                      01415         GO@TO BC@LL64
  00000B98            01416 F4_000322 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Ext[SD_Root_Dir_File_Pos - $08] = $20
000B98 0E08           01417         MOVLW 8
000B9A 0102           01418         MOVLB 2
  00000002            01419 RAM_BANK = 2
000B9C 5D50           01420         SUBWF SD_ROOT_DIR_FILE_POS,W
000B9E 0F9A           01421         ADDLW SD_FILE_EXT
000BA0 6EE9           01422         MOVWF FSR0L,0
000BA2 0E02           01423         MOVLW SD_FILE_EXT >> 8
000BA4 6AEA           01424         CLRF FSR0H,0
000BA6 22EA           01425         ADDWFC FSR0H,F,0
000BA8 0E20           01426         MOVLW 32
000BAA 6EEF           01427         MOVWF INDF0,0
  00000BAC            01428 F4_000323 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000BAC 0E01           01429         MOVLW 1
000BAE 6FC4           01430         MOVWF SD_NULL_F
  00000BB0            01431 F4_000324 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000BB0                01432 BC@LL64
000BB0 0100           01433         MOVLB 0
  00000000            01434 RAM_BANK = 0
  00000BB2            01435 F4_000325 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000BB2 0102           01436         MOVLB 2
  00000002            01437 RAM_BANK = 2
000BB4 2B50           01438         INCF SD_ROOT_DIR_FILE_POS,F
000BB6 0100           01439         MOVLB 0
  00000000            01440 RAM_BANK = 0
000BB8 A4D8           01441         BTFSS STATUS,2,0
                      01442         GO@TO FR@LB62
000BBC                01443 NX@LB63
  00000BBC            01444 F4_000326 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000BBC 0012           01445         RETURN 0
000BBE                01446 SD_FIND_ROOT_DIR_ENTRY
  00000BBE            01447 F4_000329 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Modify_File_Name
                      01448         F@CALL SD_MODIFY_FILE_NAME
  00000BC0            01449 F4_000330 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Root_Entries = 0
000BC0 0102           01450         MOVLB 2
  00000002            01451 RAM_BANK = 2
000BC2 6B62           01452         CLRF SD_NUM_OF_ROOT_ENTRIESH
000BC4 6B61           01453         CLRF SD_NUM_OF_ROOT_ENTRIES
  00000BC6            01454 F4_000331 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Temp_Dword = SD_Root_Dir + SD_Secs_in_Root - 1
000BC6 5163           01455         MOVF SD_SECS_IN_ROOT,W
000BC8 256F           01456         ADDWF SD_ROOT_DIR,W
000BCA 6E23           01457         MOVWF PP7,0
000BCC 5164           01458         MOVF SD_SECS_IN_ROOTH,W
000BCE 2170           01459         ADDWFC SD_ROOT_DIRH,W
000BD0 6E24           01460         MOVWF PP7H,0
000BD2 0E00           01461         MOVLW 0
000BD4 2171           01462         ADDWFC SD_ROOT_DIRHH,W
000BD6 6E25           01463         MOVWF PP7HH,0
000BD8 0E00           01464         MOVLW 0
000BDA 2172           01465         ADDWFC SD_ROOT_DIRHHH,W
000BDC 6E26           01466         MOVWF PP7HHH,0
000BDE 0423           01467         DECF PP7,W,0
000BE0 6FD4           01468         MOVWF SD_TEMP_DWORD
000BE2 0E00           01469         MOVLW 0
000BE4 5824           01470         SUBWFB PP7H,W,0
000BE6 6FD5           01471         MOVWF SD_TEMP_DWORDH
000BE8 0E00           01472         MOVLW 0
000BEA 5825           01473         SUBWFB PP7HH,W,0
000BEC 6FD6           01474         MOVWF SD_TEMP_DWORDHH
000BEE 0E00           01475         MOVLW 0
000BF0 5826           01476         SUBWFB PP7HHH,W,0
000BF2 6FD7           01477         MOVWF SD_TEMP_DWORDHHH
  00000BF4            01478 F4_000332 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Sec_Num = SD_Root_Dir To SD_Temp_Dword
000BF4 C272 F254      01479         MOVFF SD_ROOT_DIRHHH,SD_SEC_NUMHHH
000BF8 C271 F253      01480         MOVFF SD_ROOT_DIRHH,SD_SEC_NUMHH
000BFC C270 F252      01481         MOVFF SD_ROOT_DIRH,SD_SEC_NUMH
000C00 C26F F251      01482         MOVFF SD_ROOT_DIR,SD_SEC_NUM
000C04                01483 FR@LB66
000C04 0100           01484         MOVLB 0
  00000000            01485 RAM_BANK = 0
000C06 0102           01486         MOVLB 2
  00000002            01487 RAM_BANK = 2
000C08 5151           01488         MOVF SD_SEC_NUM,W
000C0A 5DD4           01489         SUBWF SD_TEMP_DWORD,W
000C0C 5152           01490         MOVF SD_SEC_NUMH,W
000C0E 59D5           01491         SUBWFB SD_TEMP_DWORDH,W
000C10 5153           01492         MOVF SD_SEC_NUMHH,W
000C12 59D6           01493         SUBWFB SD_TEMP_DWORDHH,W
000C14 5154           01494         MOVF SD_SEC_NUMHHH,W
000C16 59D7           01495         SUBWFB SD_TEMP_DWORDHHH,W
000C18 5154           01496         MOVF SD_SEC_NUMHHH,W
000C1A 19D7           01497         XORWF SD_TEMP_DWORDHHH,W
000C1C B0D8           01498         BTFSC STATUS,0,0
000C1E 0A80           01499         XORLW 128
000C20 0100           01500         MOVLB 0
  00000000            01501 RAM_BANK = 0
000C22 A8D8           01502         BTFSS STATUS,4,0
                      01503         GO@TO NX@LB67
  00000C28            01504 F4_000333 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sec_Num
000C28 C254 F037      01505         MOVFF SD_SEC_NUMHHH,SD_SECTOR_NUMHHH
000C2C C253 F036      01506         MOVFF SD_SEC_NUMHH,SD_SECTOR_NUMHH
000C30 C252 F035      01507         MOVFF SD_SEC_NUMH,SD_SECTOR_NUMH
000C34 C251 F034      01508         MOVFF SD_SEC_NUM,SD_SECTOR_NUM
  00000C38            01509 F4_000334 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
000C38 0E01           01510         MOVLW 1
000C3A 0102           01511         MOVLB 2
  00000002            01512 RAM_BANK = 2
000C3C 6F4A           01513         MOVWF SD_RW_OPTION
  00000C3E            01514 F4_000335 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
000C3E 0100           01515         MOVLB 0
  00000000            01516 RAM_BANK = 0
                      01517         F@CALL SD_SECTOR_SUB
  00000C44            01518 F4_000337 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Buffer_Pos = $000 To $1FF Step 32
000C44 0102           01519         MOVLB 2
  00000002            01520 RAM_BANK = 2
000C46 6B4F           01521         CLRF SD_BUFFER_POSH
000C48 6B4E           01522         CLRF SD_BUFFER_POS
000C4A                01523 FR@LB68
000C4A 0100           01524         MOVLB 0
  00000000            01525 RAM_BANK = 0
000C4C 0E02           01526         MOVLW 2
000C4E 0102           01527         MOVLB 2
  00000002            01528 RAM_BANK = 2
000C50 5D4F           01529         SUBWF SD_BUFFER_POSH,W
000C52 0100           01530         MOVLB 0
  00000000            01531 RAM_BANK = 0
000C54 B0D8           01532         BTFSC STATUS,0,0
                      01533         GO@TO NX@LB69
  00000C5A            01534 F4_000338 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = 0 To 31
000C5A 0102           01535         MOVLB 2
  00000002            01536 RAM_BANK = 2
000C5C 6B50           01537         CLRF SD_ROOT_DIR_FILE_POS
000C5E                01538 FR@LB70
000C5E 0100           01539         MOVLB 0
  00000000            01540 RAM_BANK = 0
000C60 0E20           01541         MOVLW 32
000C62 0102           01542         MOVLB 2
  00000002            01543 RAM_BANK = 2
000C64 5D50           01544         SUBWF SD_ROOT_DIR_FILE_POS,W
000C66 0100           01545         MOVLB 0
  00000000            01546 RAM_BANK = 0
000C68 B0D8           01547         BTFSC STATUS,0,0
                      01548         GO@TO NX@LB71
  00000C6E            01549 F4_000339 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Temp = SD_Buffer_Pos + SD_Root_Dir_File_Pos
000C6E 0102           01550         MOVLB 2
  00000002            01551 RAM_BANK = 2
000C70 5150           01552         MOVF SD_ROOT_DIR_FILE_POS,W
000C72 254E           01553         ADDWF SD_BUFFER_POS,W
000C74 6FD2           01554         MOVWF SD_TEMP
000C76 0E00           01555         MOVLW 0
000C78 214F           01556         ADDWFC SD_BUFFER_POSH,W
000C7A 6FD3           01557         MOVWF SD_TEMPH
  00000C7C            01558 F4_000340 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Temp > $0FF Then
000C7C 0E01           01559         MOVLW 1
000C7E 5DD3           01560         SUBWF SD_TEMPH,W
000C80 0100           01561         MOVLB 0
  00000000            01562 RAM_BANK = 0
000C82 A0D8           01563         BTFSS STATUS,0,0
                      01564         GO@TO BC@LL72
  00000C88            01565 F4_000341 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_File[SD_Root_Dir_File_Pos] = SD_Buffer1[SD_Temp - $100]
000C88 0102           01566         MOVLB 2
  00000002            01567 RAM_BANK = 2
000C8A 51D2           01568         MOVF SD_TEMP,W
000C8C EE01 F041      01569         LFSR 0,SD_BUFFER1
000C90 26E9           01570         ADDWF FSR0L,F,0
000C92 0E00           01571         MOVLW 0
000C94 22EA           01572         ADDWFC FSR0H,F,0
000C96 CFEF F008      01573         MOVFF INDF0,PBP#VAR0
000C9A EE02 F09E      01574         LFSR 0,SD_ROOT_DIR_FILE
000C9E 5150           01575         MOVF SD_ROOT_DIR_FILE_POS,W
000CA0 C008 FFEB      01576         MOVFF PBP#VAR0,PLUSW0
000CA4 0100           01577         MOVLB 0
  00000000            01578 RAM_BANK = 0
                      01579         F@JUMP BC@LL73
000CAA                01580 BC@LL72
  00000CAA            01581 F4_000342 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  00000CAA            01582 F4_000343 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_File[SD_Root_Dir_File_Pos] = SD_Buffer0[SD_Temp]
000CAA EE00 F041      01583         LFSR 0,SD_BUFFER0
000CAE 0102           01584         MOVLB 2
  00000002            01585 RAM_BANK = 2
000CB0 51D2           01586         MOVF SD_TEMP,W
000CB2 26E9           01587         ADDWF FSR0L,F,0
000CB4 0E00           01588         MOVLW 0
000CB6 22EA           01589         ADDWFC FSR0H,F,0
000CB8 CFEF F008      01590         MOVFF INDF0,PBP#VAR0
000CBC EE02 F09E      01591         LFSR 0,SD_ROOT_DIR_FILE
000CC0 5150           01592         MOVF SD_ROOT_DIR_FILE_POS,W
000CC2 C008 FFEB      01593         MOVFF PBP#VAR0,PLUSW0
  00000CC6            01594 F4_000344 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000CC6                01595 BC@LL73
000CC6 0100           01596         MOVLB 0
  00000000            01597 RAM_BANK = 0
  00000CC8            01598 F4_000345 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000CC8 0102           01599         MOVLB 2
  00000002            01600 RAM_BANK = 2
000CCA 2B50           01601         INCF SD_ROOT_DIR_FILE_POS,F
000CCC 0100           01602         MOVLB 0
  00000000            01603 RAM_BANK = 0
000CCE A4D8           01604         BTFSS STATUS,2,0
                      01605         GO@TO FR@LB70
000CD2                01606 NX@LB71
  00000CD2            01607 F4_000346 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Select SD_Find_Root_Dir_Entry_F
  00000CD2            01608 F4_000347 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Case 0
000CD2 0102           01609         MOVLB 2
  00000002            01610 RAM_BANK = 2
000CD4 53E0           01611         MOVF SD_FIND_ROOT_DIR_ENTRY_F,F
000CD6 0100           01612         MOVLB 0
  00000000            01613 RAM_BANK = 0
000CD8 A4D8           01614         BTFSS STATUS,2,0
                      01615         GO@TO BC@LL75
  00000CDE            01616 F4_000348 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[0] = $00 Or SD_Root_Dir_File[0] = $E5 Then
000CDE 0102           01617         MOVLB 2
  00000002            01618 RAM_BANK = 2
000CE0 519E           01619         MOVF SD_ROOT_DIR_FILE#0,W
000CE2 6E08           01620         MOVWF PBP#VAR0,0
000CE4 0E01           01621         MOVLW 1
000CE6 5208           01622         MOVF PBP#VAR0,F,0
000CE8 A4D8           01623         BTFSS STATUS,2,0
000CEA 0E00           01624         MOVLW 0
000CEC 6E2D           01625         MOVWF SP#P9,0
000CEE 519E           01626         MOVF SD_ROOT_DIR_FILE#0,W
000CF0 6E08           01627         MOVWF PBP#VAR0,0
000CF2 0EE5           01628         MOVLW 229
000CF4 5C08           01629         SUBWF PBP#VAR0,W,0
000CF6 0E01           01630         MOVLW 1
000CF8 A4D8           01631         BTFSS STATUS,2,0
000CFA 0E00           01632         MOVLW 0
000CFC 102D           01633         IORWF SP#P9,W,0
000CFE 0100           01634         MOVLB 0
  00000000            01635 RAM_BANK = 0
000D00 B4D8           01636         BTFSC STATUS,2,0
                      01637         GO@TO BC@LL78
  00000D06            01638 F4_000349 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Store_Root_Direct_Position
                      01639         F@JUMP SD_STORE_ROOT_DIRECT_POSITION
  00000D0A            01640 F4_000350 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000D0A                01641 BC@LL78
                      01642         F@JUMP BC@LL74
000D0E                01643 BC@LL75
  00000D0E            01644 F4_000351 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Case 1
000D0E 0E01           01645         MOVLW 1
000D10 0102           01646         MOVLB 2
  00000002            01647 RAM_BANK = 2
000D12 5DE0           01648         SUBWF SD_FIND_ROOT_DIR_ENTRY_F,W
000D14 0100           01649         MOVLB 0
  00000000            01650 RAM_BANK = 0
000D16 A4D8           01651         BTFSS STATUS,2,0
                      01652         GO@TO BC@LL80
  00000D1C            01653 F4_000352 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 0
000D1C 0102           01654         MOVLB 2
  00000002            01655 RAM_BANK = 2
000D1E 6BC4           01656         CLRF SD_NULL_F
  00000D20            01657 F4_000353 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
000D20 6B50           01658         CLRF SD_ROOT_DIR_FILE_POS
000D22                01659 FR@LB82
000D22 0100           01660         MOVLB 0
  00000000            01661 RAM_BANK = 0
000D24 0E08           01662         MOVLW 8
000D26 0102           01663         MOVLB 2
  00000002            01664 RAM_BANK = 2
000D28 5D50           01665         SUBWF SD_ROOT_DIR_FILE_POS,W
000D2A 0100           01666         MOVLB 0
  00000000            01667 RAM_BANK = 0
000D2C B0D8           01668         BTFSC STATUS,0,0
                      01669         GO@TO NX@LB83
  00000D32            01670 F4_000354 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[SD_Root_Dir_File_Pos] <> SD_File_Name[SD_Root_Dir_File_Pos] Then
000D32 EE02 F09E      01671         LFSR 0,SD_ROOT_DIR_FILE
000D36 0102           01672         MOVLB 2
  00000002            01673 RAM_BANK = 2
000D38 5150           01674         MOVF SD_ROOT_DIR_FILE_POS,W
000D3A 50EB           01675         MOVF PLUSW0,W,0
000D3C 6E08           01676         MOVWF PBP#VAR0,0
000D3E EE02 F091      01677         LFSR 0,SD_FILE_NAME
000D42 5150           01678         MOVF SD_ROOT_DIR_FILE_POS,W
000D44 50EB           01679         MOVF PLUSW0,W,0
000D46 6E0C           01680         MOVWF PBP#VAR1,0
000D48 5008           01681         MOVF PBP#VAR0,W,0
000D4A 5C0C           01682         SUBWF PBP#VAR1,W,0
000D4C 0100           01683         MOVLB 0
  00000000            01684 RAM_BANK = 0
000D4E B4D8           01685         BTFSC STATUS,2,0
                      01686         GO@TO BC@LL84
  00000D54            01687 F4_000355 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000D54 0E01           01688         MOVLW 1
000D56 0102           01689         MOVLB 2
  00000002            01690 RAM_BANK = 2
000D58 6FC4           01691         MOVWF SD_NULL_F
  00000D5A            01692 F4_000356 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Break
000D5A 0100           01693         MOVLB 0
  00000000            01694 RAM_BANK = 0
                      01695         F@JUMP NX@LB83
  00000D60            01696 F4_000357 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000D60                01697 BC@LL84
  00000D60            01698 F4_000358 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000D60 0102           01699         MOVLB 2
  00000002            01700 RAM_BANK = 2
000D62 2B50           01701         INCF SD_ROOT_DIR_FILE_POS,F
000D64 0100           01702         MOVLB 0
  00000000            01703 RAM_BANK = 0
000D66 A4D8           01704         BTFSS STATUS,2,0
                      01705         GO@TO FR@LB82
000D6A                01706 NX@LB83
  00000D6A            01707 F4_000359 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
000D6A 0E08           01708         MOVLW 8
000D6C 0102           01709         MOVLB 2
  00000002            01710 RAM_BANK = 2
000D6E 6F50           01711         MOVWF SD_ROOT_DIR_FILE_POS
000D70                01712 FR@LB86
000D70 0100           01713         MOVLB 0
  00000000            01714 RAM_BANK = 0
000D72 0E0B           01715         MOVLW 11
000D74 0102           01716         MOVLB 2
  00000002            01717 RAM_BANK = 2
000D76 5D50           01718         SUBWF SD_ROOT_DIR_FILE_POS,W
000D78 0100           01719         MOVLB 0
  00000000            01720 RAM_BANK = 0
000D7A B0D8           01721         BTFSC STATUS,0,0
                      01722         GO@TO NX@LB87
  00000D80            01723 F4_000360 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[SD_Root_Dir_File_Pos] <> SD_File_Ext[SD_Root_Dir_File_Pos - $08] Then
000D80 EE02 F09E      01724         LFSR 0,SD_ROOT_DIR_FILE
000D84 0102           01725         MOVLB 2
  00000002            01726 RAM_BANK = 2
000D86 5150           01727         MOVF SD_ROOT_DIR_FILE_POS,W
000D88 50EB           01728         MOVF PLUSW0,W,0
000D8A 6E08           01729         MOVWF PBP#VAR0,0
000D8C 0E08           01730         MOVLW 8
000D8E 5D50           01731         SUBWF SD_ROOT_DIR_FILE_POS,W
000D90 EE02 F09A      01732         LFSR 0,SD_FILE_EXT
000D94 50EB           01733         MOVF PLUSW0,W,0
000D96 6E0C           01734         MOVWF PBP#VAR1,0
000D98 5008           01735         MOVF PBP#VAR0,W,0
000D9A 5C0C           01736         SUBWF PBP#VAR1,W,0
000D9C 0100           01737         MOVLB 0
  00000000            01738 RAM_BANK = 0
000D9E B4D8           01739         BTFSC STATUS,2,0
                      01740         GO@TO BC@LL88
  00000DA4            01741 F4_000361 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Null_F = 1
000DA4 0E01           01742         MOVLW 1
000DA6 0102           01743         MOVLB 2
  00000002            01744 RAM_BANK = 2
000DA8 6FC4           01745         MOVWF SD_NULL_F
  00000DAA            01746 F4_000362 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Break
000DAA 0100           01747         MOVLB 0
  00000000            01748 RAM_BANK = 0
                      01749         F@JUMP NX@LB87
  00000DB0            01750 F4_000363 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000DB0                01751 BC@LL88
  00000DB0            01752 F4_000364 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000DB0 0102           01753         MOVLB 2
  00000002            01754 RAM_BANK = 2
000DB2 2B50           01755         INCF SD_ROOT_DIR_FILE_POS,F
000DB4 0100           01756         MOVLB 0
  00000000            01757 RAM_BANK = 0
000DB6 A4D8           01758         BTFSS STATUS,2,0
                      01759         GO@TO FR@LB86
000DBA                01760 NX@LB87
  00000DBA            01761 F4_000365 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Null_F = 0 Then GoTo SD_Store_Root_Direct_Position
000DBA 0102           01762         MOVLB 2
  00000002            01763 RAM_BANK = 2
000DBC 53C4           01764         MOVF SD_NULL_F,F
000DBE 0100           01765         MOVLB 0
  00000000            01766 RAM_BANK = 0
000DC0 A4D8           01767         BTFSS STATUS,2,0
                      01768         GO@TO BC@LL90
                      01769         F@JUMP SD_STORE_ROOT_DIRECT_POSITION
000DCA                01770 BC@LL90
                      01771         F@JUMP BC@LL74
000DCE                01772 BC@LL80
  00000DCE            01773 F4_000366 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Case 2
000DCE 0E02           01774         MOVLW 2
000DD0 0102           01775         MOVLB 2
  00000002            01776 RAM_BANK = 2
000DD2 5DE0           01777         SUBWF SD_FIND_ROOT_DIR_ENTRY_F,W
000DD4 0100           01778         MOVLB 0
  00000000            01779 RAM_BANK = 0
000DD6 A4D8           01780         BTFSS STATUS,2,0
                      01781         GO@TO BC@LL92
  00000DDC            01782 F4_000367 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$0B] | %11110000 <> $FF Then
000DDC 0102           01783         MOVLB 2
  00000002            01784 RAM_BANK = 2
000DDE 51A9           01785         MOVF SD_ROOT_DIR_FILE#11,W
000DE0 6E0C           01786         MOVWF PBP#VAR1,0
000DE2 0EF0           01787         MOVLW 240
000DE4 100C           01788         IORWF PBP#VAR1,W,0
000DE6 6E08           01789         MOVWF PBP#VAR0,0
000DE8 0E00           01790         MOVLW 0
000DEA 6E09           01791         MOVWF PBP#VAR0H,0
000DEC 2808           01792         INCF PBP#VAR0,W,0
000DEE 1009           01793         IORWF PBP#VAR0H,W,0
000DF0 0100           01794         MOVLB 0
  00000000            01795 RAM_BANK = 0
000DF2 B4D8           01796         BTFSC STATUS,2,0
                      01797         GO@TO BC@LL94
  00000DF8            01798 F4_000368 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$00] <> $00 Then
000DF8 0102           01799         MOVLB 2
  00000002            01800 RAM_BANK = 2
000DFA 519E           01801         MOVF SD_ROOT_DIR_FILE#0,W
000DFC 6E08           01802         MOVWF PBP#VAR0,0
000DFE 5208           01803         MOVF PBP#VAR0,F,0
000E00 0100           01804         MOVLB 0
  00000000            01805 RAM_BANK = 0
000E02 B4D8           01806         BTFSC STATUS,2,0
                      01807         GO@TO BC@LL96
  00000E08            01808 F4_000369 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$00] <> $E5 Then
000E08 0102           01809         MOVLB 2
  00000002            01810 RAM_BANK = 2
000E0A 519E           01811         MOVF SD_ROOT_DIR_FILE#0,W
000E0C 6E08           01812         MOVWF PBP#VAR0,0
000E0E 0EE5           01813         MOVLW 229
000E10 5C08           01814         SUBWF PBP#VAR0,W,0
000E12 0100           01815         MOVLB 0
  00000000            01816 RAM_BANK = 0
000E14 B4D8           01817         BTFSC STATUS,2,0
                      01818         GO@TO BC@LL98
  00000E1A            01819 F4_000370 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Root_Dir_File[$0B] & %00011110 = 0 Then
000E1A 0102           01820         MOVLB 2
  00000002            01821 RAM_BANK = 2
000E1C 51A9           01822         MOVF SD_ROOT_DIR_FILE#11,W
000E1E 6E0C           01823         MOVWF PBP#VAR1,0
000E20 0E1E           01824         MOVLW 30
000E22 140C           01825         ANDWF PBP#VAR1,W,0
000E24 6A09           01826         CLRF PBP#VAR0H,0
000E26 6E08           01827         MOVWF PBP#VAR0,0
000E28 5009           01828         MOVF PBP#VAR0H,W,0
000E2A 1008           01829         IORWF PBP#VAR0,W,0
000E2C 0100           01830         MOVLB 0
  00000000            01831 RAM_BANK = 0
000E2E A4D8           01832         BTFSS STATUS,2,0
                      01833         GO@TO BC@LL100
  00000E34            01834 F4_000371 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Num_of_Root_Entries
000E34 0102           01835         MOVLB 2
  00000002            01836 RAM_BANK = 2
000E36 4B61           01837         INFSNZ SD_NUM_OF_ROOT_ENTRIES,F
000E38 2B62           01838         INCF SD_NUM_OF_ROOT_ENTRIESH,F
  00000E3A            01839 F4_000372 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Num_of_Root_Entries = SD_File_Num Then
000E3A 51E7           01840         MOVF SD_FILE_NUMH,W
000E3C 5D62           01841         SUBWF SD_NUM_OF_ROOT_ENTRIESH,W
000E3E 0100           01842         MOVLB 0
  00000000            01843 RAM_BANK = 0
000E40 A4D8           01844         BTFSS STATUS,2,0
                      01845         GO@TO BC@LL102
000E46 0102           01846         MOVLB 2
  00000002            01847 RAM_BANK = 2
000E48 51E6           01848         MOVF SD_FILE_NUM,W
000E4A 5D61           01849         SUBWF SD_NUM_OF_ROOT_ENTRIES,W
000E4C 0100           01850         MOVLB 0
  00000000            01851 RAM_BANK = 0
000E4E A4D8           01852         BTFSS STATUS,2,0
                      01853         GO@TO BC@LL102
  00000E54            01854 F4_000373 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
000E54 0102           01855         MOVLB 2
  00000002            01856 RAM_BANK = 2
000E56 6B50           01857         CLRF SD_ROOT_DIR_FILE_POS
000E58                01858 FR@LB104
000E58 0100           01859         MOVLB 0
  00000000            01860 RAM_BANK = 0
000E5A 0E08           01861         MOVLW 8
000E5C 0102           01862         MOVLB 2
  00000002            01863 RAM_BANK = 2
000E5E 5D50           01864         SUBWF SD_ROOT_DIR_FILE_POS,W
000E60 0100           01865         MOVLB 0
  00000000            01866 RAM_BANK = 0
000E62 B0D8           01867         BTFSC STATUS,0,0
                      01868         GO@TO NX@LB105
  00000E68            01869 F4_000374 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Name[SD_Root_Dir_File_Pos] = SD_Root_Dir_File[SD_Root_Dir_File_Pos]
000E68 EE02 F09E      01870         LFSR 0,SD_ROOT_DIR_FILE
000E6C 0102           01871         MOVLB 2
  00000002            01872 RAM_BANK = 2
000E6E 5150           01873         MOVF SD_ROOT_DIR_FILE_POS,W
000E70 CFEB F008      01874         MOVFF PLUSW0,PBP#VAR0
000E74 EE02 F091      01875         LFSR 0,SD_FILE_NAME
000E78 5150           01876         MOVF SD_ROOT_DIR_FILE_POS,W
000E7A C008 FFEB      01877         MOVFF PBP#VAR0,PLUSW0
  00000E7E            01878 F4_000375 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000E7E 2B50           01879         INCF SD_ROOT_DIR_FILE_POS,F
000E80 0100           01880         MOVLB 0
  00000000            01881 RAM_BANK = 0
000E82 A4D8           01882         BTFSS STATUS,2,0
                      01883         GO@TO FR@LB104
000E86                01884 NX@LB105
  00000E86            01885 F4_000376 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
000E86 0E08           01886         MOVLW 8
000E88 0102           01887         MOVLB 2
  00000002            01888 RAM_BANK = 2
000E8A 6F50           01889         MOVWF SD_ROOT_DIR_FILE_POS
000E8C                01890 FR@LB106
000E8C 0100           01891         MOVLB 0
  00000000            01892 RAM_BANK = 0
000E8E 0E0B           01893         MOVLW 11
000E90 0102           01894         MOVLB 2
  00000002            01895 RAM_BANK = 2
000E92 5D50           01896         SUBWF SD_ROOT_DIR_FILE_POS,W
000E94 0100           01897         MOVLB 0
  00000000            01898 RAM_BANK = 0
000E96 B0D8           01899         BTFSC STATUS,0,0
                      01900         GO@TO NX@LB107
  00000E9C            01901 F4_000377 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Ext[SD_Root_Dir_File_Pos - $08] = SD_Root_Dir_File[SD_Root_Dir_File_Pos]
000E9C 0E08           01902         MOVLW 8
000E9E 0102           01903         MOVLB 2
  00000002            01904 RAM_BANK = 2
000EA0 5D50           01905         SUBWF SD_ROOT_DIR_FILE_POS,W
000EA2 6E08           01906         MOVWF PBP#VAR0,0
000EA4 EE02 F09E      01907         LFSR 0,SD_ROOT_DIR_FILE
000EA8 5150           01908         MOVF SD_ROOT_DIR_FILE_POS,W
000EAA CFEB F00C      01909         MOVFF PLUSW0,PBP#VAR1
000EAE EE02 F09A      01910         LFSR 0,SD_FILE_EXT
000EB2 5008           01911         MOVF PBP#VAR0,W,0
000EB4 C00C FFEB      01912         MOVFF PBP#VAR1,PLUSW0
  00000EB8            01913 F4_000378 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
000EB8 2B50           01914         INCF SD_ROOT_DIR_FILE_POS,F
000EBA 0100           01915         MOVLB 0
  00000000            01916 RAM_BANK = 0
000EBC A4D8           01917         BTFSS STATUS,2,0
                      01918         GO@TO FR@LB106
000EC0                01919 NX@LB107
  00000EC0            01920 F4_000379 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoTo SD_Store_Root_Direct_Position
                      01921         F@JUMP SD_STORE_ROOT_DIRECT_POSITION
  00000EC4            01922 F4_000380 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC4                01923 BC@LL102
  00000EC4            01924 F4_000381 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC4                01925 BC@LL100
  00000EC4            01926 F4_000382 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC4                01927 BC@LL98
  00000EC4            01928 F4_000383 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC4                01929 BC@LL96
  00000EC4            01930 F4_000384 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000EC4                01931 BC@LL94
  00000EC4            01932 F4_000385 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndSelect
000EC4                01933 BC@LL92
000EC4                01934 BC@LL74
  00000EC4            01935 F4_000386 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Buffer_Pos
000EC4 0E20           01936         MOVLW 32
000EC6 0102           01937         MOVLB 2
  00000002            01938 RAM_BANK = 2
000EC8 274E           01939         ADDWF SD_BUFFER_POS,F
000ECA 0100           01940         MOVLB 0
  00000000            01941 RAM_BANK = 0
000ECC A0D8           01942         BTFSS STATUS,0,0
                      01943         GO@TO FR@LB68
000ED0 0102           01944         MOVLB 2
  00000002            01945 RAM_BANK = 2
000ED2 2B4F           01946         INCF SD_BUFFER_POSH,F
000ED4 0100           01947         MOVLB 0
  00000000            01948 RAM_BANK = 0
000ED6 A4D8           01949         BTFSS STATUS,2,0
                      01950         GO@TO FR@LB68
000EDA                01951 NX@LB69
  00000EDA            01952 F4_000387 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Sec_Num
000EDA 0102           01953         MOVLB 2
  00000002            01954 RAM_BANK = 2
000EDC 2B51           01955         INCF SD_SEC_NUM,F
000EDE 0E00           01956         MOVLW 0
000EE0 2352           01957         ADDWFC SD_SEC_NUMH,F
000EE2 2353           01958         ADDWFC SD_SEC_NUMHH,F
000EE4 2354           01959         ADDWFC SD_SEC_NUMHHH,F
000EE6 0100           01960         MOVLB 0
  00000000            01961 RAM_BANK = 0
000EE8 A0D8           01962         BTFSS STATUS,0,0
                      01963         GO@TO FR@LB66
000EEC                01964 NX@LB67
  00000EEC            01965 F4_000388 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return_Root_Dir = 1
000EEC 0E01           01966         MOVLW 1
000EEE 0102           01967         MOVLB 2
  00000002            01968 RAM_BANK = 2
000EF0 6F4C           01969         MOVWF SD_EXTENDED_RETURN_ROOT_DIR
  00000EF2            01970 F4_000389 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000EF2 0100           01971         MOVLB 0
  00000000            01972 RAM_BANK = 0
000EF4 0012           01973         RETURN 0
000EF6                01974 SD_STORE_ROOT_DIRECT_POSITION
  00000EF6            01975 F4_000391 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_Sec = SD_Sec_Num - SD_Root_Dir
000EF6 0102           01976         MOVLB 2
  00000002            01977 RAM_BANK = 2
000EF8 516F           01978         MOVF SD_ROOT_DIR,W
000EFA 5D51           01979         SUBWF SD_SEC_NUM,W
000EFC 6F85           01980         MOVWF SD_ROOT_DIR_SEC
000EFE 5170           01981         MOVF SD_ROOT_DIRH,W
000F00 5952           01982         SUBWFB SD_SEC_NUMH,W
000F02 6F86           01983         MOVWF SD_ROOT_DIR_SECH
000F04 5171           01984         MOVF SD_ROOT_DIRHH,W
000F06 5953           01985         SUBWFB SD_SEC_NUMHH,W
000F08 6F87           01986         MOVWF SD_ROOT_DIR_SECHH
000F0A 5172           01987         MOVF SD_ROOT_DIRHHH,W
000F0C 5954           01988         SUBWFB SD_SEC_NUMHHH,W
000F0E 6F88           01989         MOVWF SD_ROOT_DIR_SECHHH
  00000F10            01990 F4_000392 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir_Pos = SD_Buffer_Pos
000F10 C24F F28A      01991         MOVFF SD_BUFFER_POSH,SD_ROOT_DIR_POSH
000F14 C24E F289      01992         MOVFF SD_BUFFER_POS,SD_ROOT_DIR_POS
  00000F18            01993 F4_000393 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return_Root_Dir = 0
000F18 6B4C           01994         CLRF SD_EXTENDED_RETURN_ROOT_DIR
  00000F1A            01995 F4_000394 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000F1A 0100           01996         MOVLB 0
  00000000            01997 RAM_BANK = 0
000F1C 0012           01998         RETURN 0
000F1E                01999 SD_INSERT_BYTE_INTO_BUFFER
  00000F1E            02000 F4_000397 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Write_Buffer_Pos > $0FF Then
000F1E 0E01           02001         MOVLW 1
000F20 0102           02002         MOVLB 2
  00000002            02003 RAM_BANK = 2
000F22 5DC3           02004         SUBWF SD_WRITE_BUFFER_POSH,W
000F24 0100           02005         MOVLB 0
  00000000            02006 RAM_BANK = 0
000F26 A0D8           02007         BTFSS STATUS,0,0
                      02008         GO@TO BC@LL108
  00000F2C            02009 F4_000398 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer1[SD_Write_Buffer_Pos - $100] = SD_Data_IO
000F2C 0102           02010         MOVLB 2
  00000002            02011 RAM_BANK = 2
000F2E 51C2           02012         MOVF SD_WRITE_BUFFER_POS,W
000F30 EE01 F041      02013         LFSR 0,SD_BUFFER1
000F34 26E9           02014         ADDWF FSR0L,F,0
000F36 0E00           02015         MOVLW 0
000F38 22EA           02016         ADDWFC FSR0H,F,0
000F3A C24D FFEF      02017         MOVFF SD_DATA_IO,INDF0
000F3E 0100           02018         MOVLB 0
  00000000            02019 RAM_BANK = 0
                      02020         F@JUMP BC@LL109
000F44                02021 BC@LL108
  00000F44            02022 F4_000399 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  00000F44            02023 F4_000400 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer0[SD_Write_Buffer_Pos] = SD_Data_IO
000F44 EE00 F041      02024         LFSR 0,SD_BUFFER0
000F48 0102           02025         MOVLB 2
  00000002            02026 RAM_BANK = 2
000F4A 51C2           02027         MOVF SD_WRITE_BUFFER_POS,W
000F4C 26E9           02028         ADDWF FSR0L,F,0
000F4E 0E00           02029         MOVLW 0
000F50 22EA           02030         ADDWFC FSR0H,F,0
000F52 C24D FFEF      02031         MOVFF SD_DATA_IO,INDF0
  00000F56            02032 F4_000401 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
000F56                02033 BC@LL109
000F56 0100           02034         MOVLB 0
  00000000            02035 RAM_BANK = 0
  00000F58            02036 F4_000402 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000F58 0012           02037         RETURN 0
000F5A                02038 SD_ASSEMBLE_FAT_SECTOR
  00000F5A            02039 F4_000405 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_FAT_Buffer_Pos_Prev
000F5A C284 F2C3      02040         MOVFF SD_FAT_BUFFER_POS_PREVH,SD_WRITE_BUFFER_POSH
000F5E C283 F2C2      02041         MOVFF SD_FAT_BUFFER_POS_PREV,SD_WRITE_BUFFER_POS
  00000F62            02042 F4_000406 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Sec_Prev * $100)
000F62 C27F F2C6      02043         MOVFF SD_FAT_SEC_PREV,SD_CLUSTER_NUMH
000F66 0102           02044         MOVLB 2
  00000002            02045 RAM_BANK = 2
000F68 6BC5           02046         CLRF SD_CLUSTER_NUM
  00000F6A            02047 F4_000407 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Buffer_Pos_Prev / 2) + SD_Cluster_Num
000F6A 90D8           02048         BCF STATUS,0,0
000F6C 3184           02049         RRCF SD_FAT_BUFFER_POS_PREVH,W
000F6E 6E24           02050         MOVWF PP7H,0
000F70 3183           02051         RRCF SD_FAT_BUFFER_POS_PREV,W
000F72 6E23           02052         MOVWF PP7,0
000F74 5023           02053         MOVF PP7,W,0
000F76 27C5           02054         ADDWF SD_CLUSTER_NUM,F
000F78 5024           02055         MOVF PP7H,W,0
000F7A 23C6           02056         ADDWFC SD_CLUSTER_NUMH,F
  00000F7C            02057 F4_000408 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Num
000F7C 4BC5           02058         INFSNZ SD_CLUSTER_NUM,F
000F7E 2BC6           02059         INCF SD_CLUSTER_NUMH,F
  00000F80            02060 F4_000409 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] While SD_Cluster_Seq_Num_Prev > 1
000F80                02061 BC@LL110
000F80 0100           02062         MOVLB 0
  00000000            02063 RAM_BANK = 0
000F82 0102           02064         MOVLB 2
  00000002            02065 RAM_BANK = 2
000F84 53DD           02066         MOVF SD_CLUSTER_SEQ_NUM_PREVH,F
000F86 0100           02067         MOVLB 0
  00000000            02068 RAM_BANK = 0
000F88 A4D8           02069         BTFSS STATUS,2,0
                      02070         GO@TO CP@LB18
000F8E 0E02           02071         MOVLW 2
000F90 0102           02072         MOVLB 2
  00000002            02073 RAM_BANK = 2
000F92 5DDC           02074         SUBWF SD_CLUSTER_SEQ_NUM_PREV,W
000F94 0100           02075         MOVLB 0
  00000000            02076 RAM_BANK = 0
000F96 A0D8           02077         BTFSS STATUS,0,0
                      02078         GO@TO BC@LL111
000F9C                02079 CP@LB18
  00000F9C            02080 F4_000410 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE0
000F9C C2C5 F24D      02081         MOVFF SD_CLUSTER_NUM,SD_DATA_IO
  00000FA0            02082 F4_000411 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
                      02083         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FA2            02084 F4_000412 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
000FA2 0102           02085         MOVLB 2
  00000002            02086 RAM_BANK = 2
000FA4 4BC2           02087         INFSNZ SD_WRITE_BUFFER_POS,F
000FA6 2BC3           02088         INCF SD_WRITE_BUFFER_POSH,F
  00000FA8            02089 F4_000413 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE1
000FA8 C2C6 F24D      02090         MOVFF SD_CLUSTER_NUMH,SD_DATA_IO
  00000FAC            02091 F4_000414 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
000FAC 0100           02092         MOVLB 0
  00000000            02093 RAM_BANK = 0
                      02094         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FB0            02095 F4_000415 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
000FB0 0102           02096         MOVLB 2
  00000002            02097 RAM_BANK = 2
000FB2 4BC2           02098         INFSNZ SD_WRITE_BUFFER_POS,F
000FB4 2BC3           02099         INCF SD_WRITE_BUFFER_POSH,F
  00000FB6            02100 F4_000416 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Num
000FB6 4BC5           02101         INFSNZ SD_CLUSTER_NUM,F
000FB8 2BC6           02102         INCF SD_CLUSTER_NUMH,F
  00000FBA            02103 F4_000417 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Dec SD_Cluster_Seq_Num_Prev
000FBA 07DC           02104         DECF SD_CLUSTER_SEQ_NUM_PREV,F
000FBC 0E00           02105         MOVLW 0
000FBE 5BDD           02106         SUBWFB SD_CLUSTER_SEQ_NUM_PREVH,F
  00000FC0            02107 F4_000418 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Wend
000FC0 0100           02108         MOVLB 0
  00000000            02109 RAM_BANK = 0
                      02110         F@JUMP BC@LL110
000FC4                02111 BC@LL111
  00000FC4            02112 F4_000419 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000FC4 0012           02113         RETURN 0
000FC6                02114 SD_ASSEMBLE_FAT_SECTOR_END_CONT
  00000FC6            02115 F4_000422 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Sec * $100)
000FC6 C279 F2C6      02116         MOVFF SD_FAT_SEC,SD_CLUSTER_NUMH
000FCA 0102           02117         MOVLB 2
  00000002            02118 RAM_BANK = 2
000FCC 6BC5           02119         CLRF SD_CLUSTER_NUM
  00000FCE            02120 F4_000423 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = (SD_FAT_Buffer_Pos / 2) + SD_Cluster_Num
000FCE 90D8           02121         BCF STATUS,0,0
000FD0 317E           02122         RRCF SD_FAT_BUFFER_POSH,W
000FD2 6E24           02123         MOVWF PP7H,0
000FD4 317D           02124         RRCF SD_FAT_BUFFER_POS,W
000FD6 6E23           02125         MOVWF PP7,0
000FD8 5023           02126         MOVF PP7,W,0
000FDA 27C5           02127         ADDWF SD_CLUSTER_NUM,F
000FDC 5024           02128         MOVF PP7H,W,0
000FDE 23C6           02129         ADDWFC SD_CLUSTER_NUMH,F
  00000FE0            02130 F4_000424 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE0
000FE0 C2C5 F24D      02131         MOVFF SD_CLUSTER_NUM,SD_DATA_IO
  00000FE4            02132 F4_000425 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
000FE4 0100           02133         MOVLB 0
  00000000            02134 RAM_BANK = 0
                      02135         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FE8            02136 F4_000426 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
000FE8 0102           02137         MOVLB 2
  00000002            02138 RAM_BANK = 2
000FEA 4BC2           02139         INFSNZ SD_WRITE_BUFFER_POS,F
000FEC 2BC3           02140         INCF SD_WRITE_BUFFER_POSH,F
  00000FEE            02141 F4_000427 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE1
000FEE C2C6 F24D      02142         MOVFF SD_CLUSTER_NUMH,SD_DATA_IO
  00000FF2            02143 F4_000428 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
000FF2 0100           02144         MOVLB 0
  00000000            02145 RAM_BANK = 0
                      02146         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00000FF6            02147 F4_000429 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
000FF6 0012           02148         RETURN 0
000FF8                02149 SD_ASSEMBLE_FAT_SECTOR_END_CLOSE
  00000FF8            02150 F4_000432 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = $FF
000FF8 0102           02151         MOVLB 2
  00000002            02152 RAM_BANK = 2
000FFA 694D           02153         SETF SD_DATA_IO
  00000FFC            02154 F4_000433 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
000FFC 0100           02155         MOVLB 0
  00000000            02156 RAM_BANK = 0
                      02157         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001000            02158 F4_000434 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001000 0102           02159         MOVLB 2
  00000002            02160 RAM_BANK = 2
001002 4BC2           02161         INFSNZ SD_WRITE_BUFFER_POS,F
001004 2BC3           02162         INCF SD_WRITE_BUFFER_POSH,F
  00001006            02163 F4_000435 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001006 0100           02164         MOVLB 0
  00000000            02165 RAM_BANK = 0
                      02166         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  0000100A            02167 F4_000436 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
00100A 0012           02168         RETURN 0
00100C                02169 SD_WRITE_BYTE_TO_FILE_SUB
  0000100C            02170 F4_000439 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_RW_Ptr
00100C 0102           02171         MOVLB 2
  00000002            02172 RAM_BANK = 2
00100E 2BE1           02173         INCF SD_BYTES_READ,F
001010 0E00           02174         MOVLW 0
001012 23E2           02175         ADDWFC SD_BYTES_READH,F
001014 23E3           02176         ADDWFC SD_BYTES_READHH,F
001016 23E4           02177         ADDWFC SD_BYTES_READHHH,F
  00001018            02178 F4_000440 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_RW_Ptr > SD_File_Size Then
001018 51E1           02179         MOVF SD_BYTES_READ,W
00101A 5DCC           02180         SUBWF SD_FILE_SIZE,W
00101C 51E2           02181         MOVF SD_BYTES_READH,W
00101E 59CD           02182         SUBWFB SD_FILE_SIZEH,W
001020 51E3           02183         MOVF SD_BYTES_READHH,W
001022 59CE           02184         SUBWFB SD_FILE_SIZEHH,W
001024 51E4           02185         MOVF SD_BYTES_READHHH,W
001026 59CF           02186         SUBWFB SD_FILE_SIZEHHH,W
001028 51E4           02187         MOVF SD_BYTES_READHHH,W
00102A 19CF           02188         XORWF SD_FILE_SIZEHHH,W
00102C B0D8           02189         BTFSC STATUS,0,0
00102E 0A80           02190         XORLW 128
001030 0100           02191         MOVLB 0
  00000000            02192 RAM_BANK = 0
001032 B8D8           02193         BTFSC STATUS,4,0
                      02194         GO@TO BC@LL113
  00001038            02195 F4_000441 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_File_Size
001038 0102           02196         MOVLB 2
  00000002            02197 RAM_BANK = 2
00103A 2BCC           02198         INCF SD_FILE_SIZE,F
00103C 0E00           02199         MOVLW 0
00103E 23CD           02200         ADDWFC SD_FILE_SIZEH,F
001040 23CE           02201         ADDWFC SD_FILE_SIZEHH,F
001042 23CF           02202         ADDWFC SD_FILE_SIZEHHH,F
  00001044            02203 F4_000442 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
001044 81E5           02204         BSF _B#VR1,0
  00001046            02205 F4_000443 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001046                02206 BC@LL113
001046 0100           02207         MOVLB 0
  00000000            02208 RAM_BANK = 0
  00001048            02209 F4_000444 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Buffer_Pos
001048 0102           02210         MOVLB 2
  00000002            02211 RAM_BANK = 2
00104A 4B8F           02212         INFSNZ SD_DATA_BUFFER_POS,F
00104C 2B90           02213         INCF SD_DATA_BUFFER_POSH,F
  0000104E            02214 F4_000445 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Data_Buffer_Pos > SD_Bytes_Per_Sec Then
00104E 518F           02215         MOVF SD_DATA_BUFFER_POS,W
001050 5D5F           02216         SUBWF SD_BYTES_PER_SEC,W
001052 5190           02217         MOVF SD_DATA_BUFFER_POSH,W
001054 5960           02218         SUBWFB SD_BYTES_PER_SECH,W
001056 0100           02219         MOVLB 0
  00000000            02220 RAM_BANK = 0
001058 B0D8           02221         BTFSC STATUS,0,0
                      02222         GO@TO BC@LL115
  0000105E            02223 F4_000446 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Sec
00105E 0102           02224         MOVLB 2
  00000002            02225 RAM_BANK = 2
001060 2B8B           02226         INCF SD_DATA_SEC,F
001062 0E00           02227         MOVLW 0
001064 238C           02228         ADDWFC SD_DATA_SECH,F
001066 238D           02229         ADDWFC SD_DATA_SECHH,F
001068 238E           02230         ADDWFC SD_DATA_SECHHH,F
  0000106A            02231 F4_000447 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sec_in_Cluster
00106A 2BCB           02232         INCF SD_SEC_IN_CLUSTER,F
  0000106C            02233 F4_000448 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Sec_in_Cluster > SD_Secs_Per_Cluster Then
00106C 51CB           02234         MOVF SD_SEC_IN_CLUSTER,W
00106E 5D55           02235         SUBWF SD_SECS_PER_CLUSTER,W
001070 0100           02236         MOVLB 0
  00000000            02237 RAM_BANK = 0
001072 B0D8           02238         BTFSC STATUS,0,0
                      02239         GO@TO BC@LL117
  00001078            02240 F4_000449 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_EOF = 0 Then
001078 96D8           02241         BCF STATUS,3,0
00107A 0102           02242         MOVLB 2
  00000002            02243 RAM_BANK = 2
00107C B1E5           02244         BTFSC _B#VR1,0
00107E 86D8           02245         BSF STATUS,3,0
001080 0100           02246         MOVLB 0
  00000000            02247 RAM_BANK = 0
                      02248         G@OTO BC@LL119
  00001088            02249 F4_000450 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001088 6A14           02250         CLRF PP0HHH,0
00108A 6A13           02251         CLRF PP0HH,0
00108C C2C6 F012      02252         MOVFF SD_CLUSTER_NUMH,PP0H
001090 C2C5 F011      02253         MOVFF SD_CLUSTER_NUM,PP0
001094 6A1C           02254         CLRF PP2HHH,0
001096 6A1B           02255         CLRF PP2HH,0
001098 0E01           02256         MOVLW 1
00109A 6E1A           02257         MOVWF PP2H,0
00109C 6A19           02258         CLRF PP2,0
                      02259         F@CALL L@DIV
0010A2 C014 F27C      02260         MOVFF PP0HHH,SD_FAT_SECHHH
0010A6 C013 F27B      02261         MOVFF PP0HH,SD_FAT_SECHH
0010AA C012 F27A      02262         MOVFF PP0H,SD_FAT_SECH
0010AE C011 F279      02263         MOVFF PP0,SD_FAT_SEC
  000010B2            02264 F4_000451 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
0010B2 C2C5 F27D      02265         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
0010B6 0102           02266         MOVLB 2
  00000002            02267 RAM_BANK = 2
0010B8 6B7E           02268         CLRF SD_FAT_BUFFER_POSH
  000010BA            02269 F4_000452 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
0010BA 90D8           02270         BCF STATUS,0,0
0010BC 377D           02271         RLCF SD_FAT_BUFFER_POS,F
0010BE 377E           02272         RLCF SD_FAT_BUFFER_POSH,F
  000010C0            02273 F4_000453 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
0010C0 5179           02274         MOVF SD_FAT_SEC,W
0010C2 2567           02275         ADDWF SD_FAT1,W
0010C4 6E34           02276         MOVWF SD_SECTOR_NUM,0
0010C6 517A           02277         MOVF SD_FAT_SECH,W
0010C8 2168           02278         ADDWFC SD_FAT1H,W
0010CA 6E35           02279         MOVWF SD_SECTOR_NUMH,0
0010CC 517B           02280         MOVF SD_FAT_SECHH,W
0010CE 2169           02281         ADDWFC SD_FAT1HH,W
0010D0 6E36           02282         MOVWF SD_SECTOR_NUMHH,0
0010D2 517C           02283         MOVF SD_FAT_SECHHH,W
0010D4 216A           02284         ADDWFC SD_FAT1HHH,W
0010D6 6E37           02285         MOVWF SD_SECTOR_NUMHHH,0
  000010D8            02286 F4_000454 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0010D8 0E01           02287         MOVLW 1
0010DA 6F4A           02288         MOVWF SD_RW_OPTION
  000010DC            02289 F4_000455 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0010DC 0100           02290         MOVLB 0
  00000000            02291 RAM_BANK = 0
                      02292         F@CALL SD_SECTOR_SUB
  000010E2            02293 F4_000456 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
0010E2 C27E F24F      02294         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
0010E6 C27D F24E      02295         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  000010EA            02296 F4_000457 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      02297         F@CALL SD_READ_FAT_ENTRY
  000010EE            02298 F4_000458 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
0010EE C278 F2C6      02299         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
0010F2 C277 F2C5      02300         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  000010F6            02301 F4_000459 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
0010F6 0EFE           02302         MOVLW 254
0010F8 0102           02303         MOVLB 2
  00000002            02304 RAM_BANK = 2
0010FA 25C5           02305         ADDWF SD_CLUSTER_NUM,W
0010FC 6E23           02306         MOVWF PP7,0
0010FE 0EFF           02307         MOVLW 255
001100 21C6           02308         ADDWFC SD_CLUSTER_NUMH,W
001102 6E24           02309         MOVWF PP7H,0
001104 0EFF           02310         MOVLW 255
001106 6A25           02311         CLRF PP7HH,0
001108 2225           02312         ADDWFC PP7HH,F,0
00110A 6A26           02313         CLRF PP7HHH,0
00110C 2226           02314         ADDWFC PP7HHH,F,0
00110E C026 F014      02315         MOVFF PP7HHH,PP0HHH
001112 C025 F013      02316         MOVFF PP7HH,PP0HH
001116 C024 F012      02317         MOVFF PP7H,PP0H
00111A C023 F011      02318         MOVFF PP7,PP0
00111E 6A1C           02319         CLRF PP2HHH,0
001120 6A1B           02320         CLRF PP2HH,0
001122 6A1A           02321         CLRF PP2H,0
001124 C255 F019      02322         MOVFF SD_SECS_PER_CLUSTER,PP2
                      02323         F@CALL AL@MUL
00112C C014 F28E      02324         MOVFF PP0HHH,SD_DATA_SECHHH
001130 C013 F28D      02325         MOVFF PP0HH,SD_DATA_SECHH
001134 C012 F28C      02326         MOVFF PP0H,SD_DATA_SECH
001138 C011 F28B      02327         MOVFF PP0,SD_DATA_SEC
  0000113C            02328 F4_000460 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
00113C 5173           02329         MOVF SD_DATA_AREA,W
00113E 278B           02330         ADDWF SD_DATA_SEC,F
001140 5174           02331         MOVF SD_DATA_AREAH,W
001142 238C           02332         ADDWFC SD_DATA_SECH,F
001144 5175           02333         MOVF SD_DATA_AREAHH,W
001146 238D           02334         ADDWFC SD_DATA_SECHH,F
001148 5176           02335         MOVF SD_DATA_AREAHHH,W
00114A 238E           02336         ADDWFC SD_DATA_SECHHH,F
  0000114C            02337 F4_000461 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
00114C C28E F037      02338         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001150 C28D F036      02339         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001154 C28C F035      02340         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001158 C28B F034      02341         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  0000115C            02342 F4_000462 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
00115C 0E01           02343         MOVLW 1
00115E 6F4A           02344         MOVWF SD_RW_OPTION
  00001160            02345 F4_000463 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001160 0100           02346         MOVLB 0
  00000000            02347 RAM_BANK = 0
                      02348         F@CALL SD_SECTOR_SUB
  00001166            02349 F4_000464 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
001166 0E01           02350         MOVLW 1
001168 0102           02351         MOVLB 2
  00000002            02352 RAM_BANK = 2
00116A 6FCB           02353         MOVWF SD_SEC_IN_CLUSTER
  0000116C            02354 F4_000466 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
00116C 6A14           02355         CLRF PP0HHH,0
00116E 6A13           02356         CLRF PP0HH,0
001170 C2C6 F012      02357         MOVFF SD_CLUSTER_NUMH,PP0H
001174 C2C5 F011      02358         MOVFF SD_CLUSTER_NUM,PP0
001178 6A1C           02359         CLRF PP2HHH,0
00117A 6A1B           02360         CLRF PP2HH,0
00117C 0E01           02361         MOVLW 1
00117E 6E1A           02362         MOVWF PP2H,0
001180 6A19           02363         CLRF PP2,0
                      02364         F@CALL L@DIV
001186 C014 F27C      02365         MOVFF PP0HHH,SD_FAT_SECHHH
00118A C013 F27B      02366         MOVFF PP0HH,SD_FAT_SECHH
00118E C012 F27A      02367         MOVFF PP0H,SD_FAT_SECH
001192 C011 F279      02368         MOVFF PP0,SD_FAT_SEC
  00001196            02369 F4_000467 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001196 C2C5 F27D      02370         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
00119A 6B7E           02371         CLRF SD_FAT_BUFFER_POSH
  0000119C            02372 F4_000468 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
00119C 90D8           02373         BCF STATUS,0,0
00119E 377D           02374         RLCF SD_FAT_BUFFER_POS,F
0011A0 377E           02375         RLCF SD_FAT_BUFFER_POSH,F
0011A2 0100           02376         MOVLB 0
  00000000            02377 RAM_BANK = 0
                      02378         F@JUMP BC@LL120
0011A8                02379 BC@LL119
  000011A8            02380 F4_000470 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  000011A8            02381 F4_000471 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Seq_Idx
0011A8 0102           02382         MOVLB 2
  00000002            02383 RAM_BANK = 2
0011AA 4BDA           02384         INFSNZ SD_CLUSTER_SEQ_IDX,F
0011AC 2BDB           02385         INCF SD_CLUSTER_SEQ_IDXH,F
  000011AE            02386 F4_000472 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Cluster_Seq_Idx > SD_Cluster_Seq_Num Then
0011AE 51DA           02387         MOVF SD_CLUSTER_SEQ_IDX,W
0011B0 5DD8           02388         SUBWF SD_CLUSTER_SEQ_NUM,W
0011B2 51DB           02389         MOVF SD_CLUSTER_SEQ_IDXH,W
0011B4 59D9           02390         SUBWFB SD_CLUSTER_SEQ_NUMH,W
0011B6 0100           02391         MOVLB 0
  00000000            02392 RAM_BANK = 0
0011B8 B0D8           02393         BTFSC STATUS,0,0
                      02394         GO@TO BC@LL122
  000011BE            02395 F4_000473 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos_Prev = SD_FAT_Buffer_Pos
0011BE C27E F284      02396         MOVFF SD_FAT_BUFFER_POSH,SD_FAT_BUFFER_POS_PREVH
0011C2 C27D F283      02397         MOVFF SD_FAT_BUFFER_POS,SD_FAT_BUFFER_POS_PREV
  000011C6            02398 F4_000474 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec_Prev = SD_FAT_Sec
0011C6 C27C F282      02399         MOVFF SD_FAT_SECHHH,SD_FAT_SEC_PREVHHH
0011CA C27B F281      02400         MOVFF SD_FAT_SECHH,SD_FAT_SEC_PREVHH
0011CE C27A F280      02401         MOVFF SD_FAT_SECH,SD_FAT_SEC_PREVH
0011D2 C279 F27F      02402         MOVFF SD_FAT_SEC,SD_FAT_SEC_PREV
  000011D6            02403 F4_000475 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Idx_Prev = SD_Cluster_Seq_Idx
0011D6 C2DB F2DF      02404         MOVFF SD_CLUSTER_SEQ_IDXH,SD_CLUSTER_SEQ_IDX_PREVH
0011DA C2DA F2DE      02405         MOVFF SD_CLUSTER_SEQ_IDX,SD_CLUSTER_SEQ_IDX_PREV
  000011DE            02406 F4_000476 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num_Prev = SD_Cluster_Seq_Num
0011DE C2D9 F2DD      02407         MOVFF SD_CLUSTER_SEQ_NUMH,SD_CLUSTER_SEQ_NUM_PREVH
0011E2 C2D8 F2DC      02408         MOVFF SD_CLUSTER_SEQ_NUM,SD_CLUSTER_SEQ_NUM_PREV
  000011E6            02409 F4_000478 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Free_Cluster
                      02410         F@CALL SD_FIND_FREE_CLUSTER
  000011EA            02411 F4_000479 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return = 1 Then Return
0011EA 0E01           02412         MOVLW 1
0011EC 0102           02413         MOVLB 2
  00000002            02414 RAM_BANK = 2
0011EE 5D4B           02415         SUBWF SD_EXTENDED_RETURN,W
0011F0 0100           02416         MOVLB 0
  00000000            02417 RAM_BANK = 0
0011F2 A4D8           02418         BTFSS STATUS,2,0
                      02419         GO@TO BC@LL124
0011F8 0012           02420         RETURN 0
0011FA                02421 BC@LL124
  000011FA            02422 F4_000480 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_FAT1 + SD_FAT_Sec_Prev
0011FA 0102           02423         MOVLB 2
  00000002            02424 RAM_BANK = 2
0011FC 517F           02425         MOVF SD_FAT_SEC_PREV,W
0011FE 2567           02426         ADDWF SD_FAT1,W
001200 6FBE           02427         MOVWF SD_WRITE_SEC_NUM
001202 5180           02428         MOVF SD_FAT_SEC_PREVH,W
001204 2168           02429         ADDWFC SD_FAT1H,W
001206 6FBF           02430         MOVWF SD_WRITE_SEC_NUMH
001208 5181           02431         MOVF SD_FAT_SEC_PREVHH,W
00120A 2169           02432         ADDWFC SD_FAT1HH,W
00120C 6FC0           02433         MOVWF SD_WRITE_SEC_NUMHH
00120E 5182           02434         MOVF SD_FAT_SEC_PREVHHH,W
001210 216A           02435         ADDWFC SD_FAT1HHH,W
001212 6FC1           02436         MOVWF SD_WRITE_SEC_NUMHHH
  00001214            02437 F4_000481 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
001214 C2C1 F037      02438         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
001218 C2C0 F036      02439         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
00121C C2BF F035      02440         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
001220 C2BE F034      02441         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  00001224            02442 F4_000482 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001224 0E01           02443         MOVLW 1
001226 6F4A           02444         MOVWF SD_RW_OPTION
  00001228            02445 F4_000483 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001228 0100           02446         MOVLB 0
  00000000            02447 RAM_BANK = 0
                      02448         F@CALL SD_SECTOR_SUB
  0000122E            02449 F4_000485 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector
                      02450         F@CALL SD_ASSEMBLE_FAT_SECTOR
  00001230            02451 F4_000486 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector_End_Cont
                      02452         F@CALL SD_ASSEMBLE_FAT_SECTOR_END_CONT
  00001232            02453 F4_000487 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      02454         F@CALL SD_WRITE_SECTOR
  00001236            02455 F4_000488 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT2 + SD_FAT_Sec_Prev
001236 0102           02456         MOVLB 2
  00000002            02457 RAM_BANK = 2
001238 517F           02458         MOVF SD_FAT_SEC_PREV,W
00123A 256B           02459         ADDWF SD_FAT2,W
00123C 6E34           02460         MOVWF SD_SECTOR_NUM,0
00123E 5180           02461         MOVF SD_FAT_SEC_PREVH,W
001240 216C           02462         ADDWFC SD_FAT2H,W
001242 6E35           02463         MOVWF SD_SECTOR_NUMH,0
001244 5181           02464         MOVF SD_FAT_SEC_PREVHH,W
001246 216D           02465         ADDWFC SD_FAT2HH,W
001248 6E36           02466         MOVWF SD_SECTOR_NUMHH,0
00124A 5182           02467         MOVF SD_FAT_SEC_PREVHHH,W
00124C 216E           02468         ADDWFC SD_FAT2HHH,W
00124E 6E37           02469         MOVWF SD_SECTOR_NUMHHH,0
  00001250            02470 F4_000489 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
001250 0100           02471         MOVLB 0
  00000000            02472 RAM_BANK = 0
                      02473         F@CALL SD_WRITE_SECTOR
  00001256            02474 F4_000490 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001256 0EFE           02475         MOVLW 254
001258 0102           02476         MOVLB 2
  00000002            02477 RAM_BANK = 2
00125A 25C5           02478         ADDWF SD_CLUSTER_NUM,W
00125C 6E23           02479         MOVWF PP7,0
00125E 0EFF           02480         MOVLW 255
001260 21C6           02481         ADDWFC SD_CLUSTER_NUMH,W
001262 6E24           02482         MOVWF PP7H,0
001264 0EFF           02483         MOVLW 255
001266 6A25           02484         CLRF PP7HH,0
001268 2225           02485         ADDWFC PP7HH,F,0
00126A 6A26           02486         CLRF PP7HHH,0
00126C 2226           02487         ADDWFC PP7HHH,F,0
00126E C026 F014      02488         MOVFF PP7HHH,PP0HHH
001272 C025 F013      02489         MOVFF PP7HH,PP0HH
001276 C024 F012      02490         MOVFF PP7H,PP0H
00127A C023 F011      02491         MOVFF PP7,PP0
00127E 6A1C           02492         CLRF PP2HHH,0
001280 6A1B           02493         CLRF PP2HH,0
001282 6A1A           02494         CLRF PP2H,0
001284 C255 F019      02495         MOVFF SD_SECS_PER_CLUSTER,PP2
                      02496         F@CALL AL@MUL
00128C C014 F28E      02497         MOVFF PP0HHH,SD_DATA_SECHHH
001290 C013 F28D      02498         MOVFF PP0HH,SD_DATA_SECHH
001294 C012 F28C      02499         MOVFF PP0H,SD_DATA_SECH
001298 C011 F28B      02500         MOVFF PP0,SD_DATA_SEC
  0000129C            02501 F4_000491 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
00129C 5173           02502         MOVF SD_DATA_AREA,W
00129E 278B           02503         ADDWF SD_DATA_SEC,F
0012A0 5174           02504         MOVF SD_DATA_AREAH,W
0012A2 238C           02505         ADDWFC SD_DATA_SECH,F
0012A4 5175           02506         MOVF SD_DATA_AREAHH,W
0012A6 238D           02507         ADDWFC SD_DATA_SECHH,F
0012A8 5176           02508         MOVF SD_DATA_AREAHHH,W
0012AA 238E           02509         ADDWFC SD_DATA_SECHHH,F
  000012AC            02510 F4_000492 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
0012AC C28E F037      02511         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
0012B0 C28D F036      02512         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
0012B4 C28C F035      02513         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
0012B8 C28B F034      02514         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  000012BC            02515 F4_000493 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 0
0012BC 6B4A           02516         CLRF SD_RW_OPTION
  000012BE            02517 F4_000494 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0012BE 0100           02518         MOVLB 0
  00000000            02519 RAM_BANK = 0
                      02520         F@CALL SD_SECTOR_SUB
                      02521         F@JUMP BC@LL125
0012C8                02522 BC@LL122
  000012C8            02523 F4_000496 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  000012C8            02524 F4_000497 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Cluster_Num
0012C8 0102           02525         MOVLB 2
  00000002            02526 RAM_BANK = 2
0012CA 4BC5           02527         INFSNZ SD_CLUSTER_NUM,F
0012CC 2BC6           02528         INCF SD_CLUSTER_NUMH,F
  000012CE            02529 F4_000498 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0012CE                02530 BC@LL125
0012CE 0100           02531         MOVLB 0
  00000000            02532 RAM_BANK = 0
  000012D0            02533 F4_000499 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
0012D0 0E01           02534         MOVLW 1
0012D2 0102           02535         MOVLB 2
  00000002            02536 RAM_BANK = 2
0012D4 6FCB           02537         MOVWF SD_SEC_IN_CLUSTER
  000012D6            02538 F4_000500 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0012D6                02539 BC@LL120
0012D6 0100           02540         MOVLB 0
  00000000            02541 RAM_BANK = 0
                      02542         F@JUMP BC@LL126
0012DC                02543 BC@LL117
  000012DC            02544 F4_000501 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  000012DC            02545 F4_000502 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_Sector
                      02546         F@CALL SD_READ_SECTOR
  000012E0            02547 F4_000503 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0012E0                02548 BC@LL126
  000012E0            02549 F4_000504 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 1
0012E0 0102           02550         MOVLB 2
  00000002            02551 RAM_BANK = 2
0012E2 6B90           02552         CLRF SD_DATA_BUFFER_POSH
0012E4 0E01           02553         MOVLW 1
0012E6 6F8F           02554         MOVWF SD_DATA_BUFFER_POS
  000012E8            02555 F4_000505 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0012E8                02556 BC@LL115
0012E8 0100           02557         MOVLB 0
  00000000            02558 RAM_BANK = 0
  000012EA            02559 F4_000506 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte_RW = SD_IO_Byte
0012EA C2D0 F249      02560         MOVFF SD_IO_BYTE,SD_BYTE_RW
  000012EE            02561 F4_000507 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sub
                      02562         F@CALL SD_WRITE_SUB
  000012F2            02563 F4_000508 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
0012F2 0102           02564         MOVLB 2
  00000002            02565 RAM_BANK = 2
0012F4 6B4B           02566         CLRF SD_EXTENDED_RETURN
  000012F6            02567 F4_000509 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0012F6 0100           02568         MOVLB 0
  00000000            02569 RAM_BANK = 0
0012F8 0012           02570         RETURN 0
0012FA                02571 SD_CHECK_FOR_FILE_SUB
  000012FA            02572 F4_000512 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Find_Root_Dir_Entry_F = 1
0012FA 0E01           02573         MOVLW 1
0012FC 0102           02574         MOVLB 2
  00000002            02575 RAM_BANK = 2
0012FE 6FE0           02576         MOVWF SD_FIND_ROOT_DIR_ENTRY_F
  00001300            02577 F4_000513 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Root_Dir_Entry
001300 0100           02578         MOVLB 0
  00000000            02579 RAM_BANK = 0
                      02580         F@CALL SD_FIND_ROOT_DIR_ENTRY
  00001306            02581 F4_000514 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
001306 0012           02582         RETURN 0
001308                02583 SD_READ_SUB
  00001308            02584 F4_000517 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx > $1FF Then
001308 0E02           02585         MOVLW 2
00130A 0102           02586         MOVLB 2
  00000002            02587 RAM_BANK = 2
00130C 5D48           02588         SUBWF SD_BUFFER_IDXH,W
00130E 0100           02589         MOVLB 0
  00000000            02590 RAM_BANK = 0
001310 A0D8           02591         BTFSS STATUS,0,0
                      02592         GO@TO BC@LL128
  00001316            02593 F4_000524 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
001316 0102           02594         MOVLB 2
  00000002            02595 RAM_BANK = 2
001318 6B48           02596         CLRF SD_BUFFER_IDXH
00131A 6B47           02597         CLRF SD_BUFFER_IDX
  0000131C            02598 F4_000525 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sector_Num
00131C 2A34           02599         INCF SD_SECTOR_NUM,F,0
00131E 0E00           02600         MOVLW 0
001320 2235           02601         ADDWFC SD_SECTOR_NUMH,F,0
001322 2236           02602         ADDWFC SD_SECTOR_NUMHH,F,0
001324 2237           02603         ADDWFC SD_SECTOR_NUMHHH,F,0
  00001326            02604 F4_000526 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001326 0E01           02605         MOVLW 1
001328 6F4A           02606         MOVWF SD_RW_OPTION
  0000132A            02607 F4_000527 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00132A 0100           02608         MOVLB 0
  00000000            02609 RAM_BANK = 0
                      02610         F@CALL SD_SECTOR_SUB
  00001330            02611 F4_000528 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001330                02612 BC@LL128
  00001330            02613 F4_000529 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer_Idx > $0FF Then
001330 0E01           02614         MOVLW 1
001332 0102           02615         MOVLB 2
  00000002            02616 RAM_BANK = 2
001334 5D48           02617         SUBWF SD_BUFFER_IDXH,W
001336 0100           02618         MOVLB 0
  00000000            02619 RAM_BANK = 0
001338 A0D8           02620         BTFSS STATUS,0,0
                      02621         GO@TO BC@LL130
  0000133E            02622 F4_000530 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte_RW = SD_Buffer1[SD_Buffer_Idx - $100]
00133E 0102           02623         MOVLB 2
  00000002            02624 RAM_BANK = 2
001340 5147           02625         MOVF SD_BUFFER_IDX,W
001342 EE01 F041      02626         LFSR 0,SD_BUFFER1
001346 26E9           02627         ADDWF FSR0L,F,0
001348 0E00           02628         MOVLW 0
00134A 22EA           02629         ADDWFC FSR0H,F,0
00134C 50EF           02630         MOVF INDF0,W,0
00134E 6F49           02631         MOVWF SD_BYTE_RW
001350 0100           02632         MOVLB 0
  00000000            02633 RAM_BANK = 0
                      02634         F@JUMP BC@LL131
001356                02635 BC@LL130
  00001356            02636 F4_000531 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  00001356            02637 F4_000532 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte_RW = SD_Buffer0[SD_Buffer_Idx]
001356 EE00 F041      02638         LFSR 0,SD_BUFFER0
00135A 0102           02639         MOVLB 2
  00000002            02640 RAM_BANK = 2
00135C 5147           02641         MOVF SD_BUFFER_IDX,W
00135E 26E9           02642         ADDWF FSR0L,F,0
001360 0E00           02643         MOVLW 0
001362 22EA           02644         ADDWFC FSR0H,F,0
001364 50EF           02645         MOVF INDF0,W,0
001366 6F49           02646         MOVWF SD_BYTE_RW
  00001368            02647 F4_000533 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001368                02648 BC@LL131
001368 0100           02649         MOVLB 0
  00000000            02650 RAM_BANK = 0
  0000136A            02651 F4_000534 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Buffer_Idx
00136A 0102           02652         MOVLB 2
  00000002            02653 RAM_BANK = 2
00136C 4B47           02654         INFSNZ SD_BUFFER_IDX,F
00136E 2B48           02655         INCF SD_BUFFER_IDXH,F
  00001370            02656 F4_000535 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
001370 0100           02657         MOVLB 0
  00000000            02658 RAM_BANK = 0
001372 0012           02659         RETURN 0
  00001374            02660 F4_000541 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Init_MSSP MACRO P1
                      02661 SD_INIT_MSSP    MACRO P1,.,.,.,.,.,.,.,.,.
                      02662  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      02663  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      02664         IF (PRM_COUNT > 1)
                      02665         ERROR "(In Asm) SD_Init_MSSP - Too many parameters"
                      02666         ELSE
                      02667         IF (PRM_COUNT == 0)
                      02668         MOVLW 32
                      02669         MOVWF SSPCON1,0
                      02670         ELSE
                      02671         IF (PRM_1 != BYTE) && (PRM_1 != NUM8)
                      02672         ERROR "(In Asm) SD_Init_MSSP - Speed(Param1) should be a Byte variable or number"
                      02673         ENDIF
                      02674         IF (PRM_1 == BYTE)
                      02675         BYTE_BYTE P1, SSPCON1
                      02676         BSF SSPCON1,5,0
                      02677         ENDIF
                      02678         IF (PRM_1 == NUM8)
                      02679         NUM_DWORD P1, SSPCON1
                      02680 RAM_BANK = 0
                      02681         BSF SSPCON1,5,0
                      02682         ENDIF
                      02683         ENDIF
                      02684         ENDIF
                      02685         F@CALL SD_INIT_MSSP_SUB
                      02686         IF (SD_INIT_MSSP_RETURN != 1)
                      02687         ELSE
                      02688         IF (RETURN_TYPE != BYTE)
                      02689         ERROR "(In Asm) SD_Init_MSSP - Return variable should be a Byte variable"
                      02690         ENDIF
                      02691         IF (RETURN_TYPE == BYTE)
                      02692         BYTE_BYTE SD_RETURN, RETURN_VAR
                      02693         ENDIF
                      02694         ENDIF
                      02695         ENDM
001374                02696 SD_SEND_CMD
  00001374            02697 F4_000580 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte0
001374 C241 FFC9      02698         MOVFF SD_BYTE0,SSPBUF
  00001378            02699 F4_000581 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
001378 A0C7           02700         BTFSS SSPSTAT,0
  0000137A            02701 F4_000582 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
00137A D7FE           02702         BRA $ - 2
  0000137C            02703 F4_000583 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
00137C CFC9 F032      02704         MOVFF SSPBUF,SD_BYTER
  00001380            02705 F4_000584 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte1
001380 C242 FFC9      02706         MOVFF SD_BYTE1,SSPBUF
  00001384            02707 F4_000585 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
001384 A0C7           02708         BTFSS SSPSTAT,0
  00001386            02709 F4_000586 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
001386 D7FE           02710         BRA $ - 2
  00001388            02711 F4_000587 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
001388 CFC9 F032      02712         MOVFF SSPBUF,SD_BYTER
  0000138C            02713 F4_000588 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte2
00138C C243 FFC9      02714         MOVFF SD_BYTE2,SSPBUF
  00001390            02715 F4_000589 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
001390 A0C7           02716         BTFSS SSPSTAT,0
  00001392            02717 F4_000590 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
001392 D7FE           02718         BRA $ - 2
  00001394            02719 F4_000591 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
001394 CFC9 F032      02720         MOVFF SSPBUF,SD_BYTER
  00001398            02721 F4_000592 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte3
001398 C244 FFC9      02722         MOVFF SD_BYTE3,SSPBUF
  0000139C            02723 F4_000593 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
00139C A0C7           02724         BTFSS SSPSTAT,0
  0000139E            02725 F4_000594 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
00139E D7FE           02726         BRA $ - 2
  000013A0            02727 F4_000595 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013A0 CFC9 F032      02728         MOVFF SSPBUF,SD_BYTER
  000013A4            02729 F4_000596 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte4
0013A4 C245 FFC9      02730         MOVFF SD_BYTE4,SSPBUF
  000013A8            02731 F4_000597 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013A8 A0C7           02732         BTFSS SSPSTAT,0
  000013AA            02733 F4_000598 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013AA D7FE           02734         BRA $ - 2
  000013AC            02735 F4_000599 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013AC CFC9 F032      02736         MOVFF SSPBUF,SD_BYTER
0013B0                02737 SD_SEND_BYTE
  000013B0            02738 F4_000601 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SSPBUF = SD_Byte5
0013B0 C246 FFC9      02739         MOVFF SD_BYTE5,SSPBUF
  000013B4            02740 F4_000602 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013B4 A0C7           02741         BTFSS SSPSTAT,0
  000013B6            02742 F4_000603 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013B6 D7FE           02743         BRA $ - 2
  000013B8            02744 F4_000604 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013B8 CFC9 F032      02745         MOVFF SSPBUF,SD_BYTER
  000013BC            02746 F4_000605 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0013BC 0012           02747         RETURN 0
0013BE                02748 SD_RECEIVE_BYTE
  000013BE            02749 F4_000608 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SSPBUF = $FF
0013BE 68C9           02750         SETF SSPBUF,0
  000013C0            02751 F4_000609 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] btfss SSPSTAT.0
0013C0 A0C7           02752         BTFSS SSPSTAT,0
  000013C2            02753 F4_000610 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] bra $ - 2
0013C2 D7FE           02754         BRA $ - 2
  000013C4            02755 F4_000611 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] movff SSPBUF,SD_ByteR
0013C4 CFC9 F032      02756         MOVFF SSPBUF,SD_BYTER
  000013C8            02757 F4_000612 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0013C8 0012           02758         RETURN 0
0013CA                02759 SD_INIT_MSSP_SUB
  000013CA            02760 F4_000616 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SSPSTAT = %01000000
0013CA 0E40           02761         MOVLW 64
0013CC 6EC7           02762         MOVWF SSPSTAT,0
  000013CE            02763 F4_000617 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Output SD_CS : Output SD_DI : Output SD_CLK : Input SD_DO
0013CE 9494           02764         BCF TRISC,2,0
0013D0 9A94           02765         BCF TRISC,5,0
0013D2 9694           02766         BCF TRISC,3,0
0013D4 8894           02767         BSF TRISC,4,0
  000013D6            02768 F4_000618 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] High SD_CS
0013D6 9494           02769         BCF TRISC,2,0
0013D8 8482           02770         BSF PORTC,2,0
  000013DA            02771 F4_000619 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $FF
0013DA 0102           02772         MOVLB 2
  00000002            02773 RAM_BANK = 2
0013DC 6941           02774         SETF SD_BYTE0
  000013DE            02775 F4_000620 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = $FF
0013DE 6942           02776         SETF SD_BYTE1
  000013E0            02777 F4_000621 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = $FF
0013E0 6943           02778         SETF SD_BYTE2
  000013E2            02779 F4_000622 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = $FF
0013E2 6944           02780         SETF SD_BYTE3
  000013E4            02781 F4_000623 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = $FF
0013E4 6945           02782         SETF SD_BYTE4
  000013E6            02783 F4_000624 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
0013E6 6946           02784         SETF SD_BYTE5
  000013E8            02785 F4_000625 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
0013E8 0100           02786         MOVLB 0
  00000000            02787 RAM_BANK = 0
                      02788         F@CALL SD_SEND_CMD
  000013EC            02789 F4_000626 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
                      02790         F@CALL SD_SEND_CMD
  000013EE            02791 F4_000628 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] DelayMS 100
0013EE 0E64           02792         MOVLW 100
                      02793         F@CALL DL@MS
  000013F4            02794 F4_000629 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Low SD_CS
0013F4 9494           02795         BCF TRISC,2,0
0013F6 9482           02796         BCF PORTC,2,0
  000013F8            02797 F4_000630 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $40
0013F8 0E40           02798         MOVLW 64
0013FA 0102           02799         MOVLB 2
  00000002            02800 RAM_BANK = 2
0013FC 6F41           02801         MOVWF SD_BYTE0
  000013FE            02802 F4_000631 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = $00
0013FE 6B42           02803         CLRF SD_BYTE1
  00001400            02804 F4_000632 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = $00
001400 6B43           02805         CLRF SD_BYTE2
  00001402            02806 F4_000633 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = $00
001402 6B44           02807         CLRF SD_BYTE3
  00001404            02808 F4_000634 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = $00
001404 6B45           02809         CLRF SD_BYTE4
  00001406            02810 F4_000635 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $95
001406 0E95           02811         MOVLW 149
001408 6F46           02812         MOVWF SD_BYTE5
  0000140A            02813 F4_000636 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
00140A 0100           02814         MOVLB 0
  00000000            02815 RAM_BANK = 0
                      02816         F@CALL SD_SEND_CMD
  0000140E            02817 F4_000637 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $01
00140E 0E01           02818         MOVLW 1
001410 6E3E           02819         MOVWF SD_SEEK_RESPONSE_REQD,0
  00001412            02820 F4_000638 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FF
001412 6A3D           02821         CLRF SD_SEEK_RESPONSE_IDXH,0
001414 683C           02822         SETF SD_SEEK_RESPONSE_IDX,0
  00001416            02823 F4_000639 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      02824         F@CALL SD_SEEK_RESPONSE
  0000141A            02825 F4_000640 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Seek_Response_Return = 1 Then
00141A 0E01           02826         MOVLW 1
00141C 5C3F           02827         SUBWF SD_SEEK_RESPONSE_RETURN,W,0
00141E A4D8           02828         BTFSS STATUS,2,0
                      02829         GO@TO BC@LL133
  00001424            02830 F4_000641 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] High SD_CS
001424 9494           02831         BCF TRISC,2,0
001426 8482           02832         BSF PORTC,2,0
  00001428            02833 F4_000642 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
001428 0E01           02834         MOVLW 1
00142A 6E40           02835         MOVWF SD_RETURN,0
  0000142C            02836 F4_000643 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
00142C 0012           02837         RETURN 0
  0000142E            02838 F4_000644 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
00142E                02839 BC@LL133
  0000142E            02840 F4_000646 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Idx = $FF
00142E 6833           02841         SETF SD_IDX,0
  00001430            02842 F4_000647 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Repeat
001430                02843 BC@LL134
  00001430            02844 F4_000648 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte0 = $41
001430 0E41           02845         MOVLW 65
001432 0102           02846         MOVLB 2
  00000002            02847 RAM_BANK = 2
001434 6F41           02848         MOVWF SD_BYTE0
  00001436            02849 F4_000649 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte1 = $00
001436 6B42           02850         CLRF SD_BYTE1
  00001438            02851 F4_000650 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte2 = $00
001438 6B43           02852         CLRF SD_BYTE2
  0000143A            02853 F4_000651 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte3 = $00
00143A 6B44           02854         CLRF SD_BYTE3
  0000143C            02855 F4_000652 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte4 = $00
00143C 6B45           02856         CLRF SD_BYTE4
  0000143E            02857 F4_000653 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
00143E 6946           02858         SETF SD_BYTE5
  00001440            02859 F4_000654 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Cmd
001440 0100           02860         MOVLB 0
  00000000            02861 RAM_BANK = 0
                      02862         F@CALL SD_SEND_CMD
  00001444            02863 F4_000655 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Reqd = $00
001444 6A3E           02864         CLRF SD_SEEK_RESPONSE_REQD,0
  00001446            02865 F4_000656 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seek_Response_Idx = $FF
001446 6A3D           02866         CLRF SD_SEEK_RESPONSE_IDXH,0
001448 683C           02867         SETF SD_SEEK_RESPONSE_IDX,0
  0000144A            02868 F4_000657 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Seek_Response
                      02869         F@CALL SD_SEEK_RESPONSE
  0000144E            02870 F4_000658 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Dec SD_Idx
00144E 0633           02871         DECF SD_IDX,F,0
  00001450            02872 F4_000659 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Until SD_Seek_Response_Return = 0 Or SD_Idx = 0
001450 0E01           02873         MOVLW 1
001452 523F           02874         MOVF SD_SEEK_RESPONSE_RETURN,F,0
001454 A4D8           02875         BTFSS STATUS,2,0
001456 0E00           02876         MOVLW 0
001458 6E2D           02877         MOVWF SP#P9,0
00145A 0E01           02878         MOVLW 1
00145C 5233           02879         MOVF SD_IDX,F,0
00145E A4D8           02880         BTFSS STATUS,2,0
001460 0E00           02881         MOVLW 0
001462 102D           02882         IORWF SP#P9,W,0
001464 B4D8           02883         BTFSC STATUS,2,0
                      02884         GO@TO BC@LL134
001468                02885 BC@LL135
  00001468            02886 F4_000660 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Idx = 0 Then
001468 5233           02887         MOVF SD_IDX,F,0
00146A A4D8           02888         BTFSS STATUS,2,0
                      02889         GO@TO BC@LL137
  00001470            02890 F4_000661 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] High SD_CS
001470 9494           02891         BCF TRISC,2,0
001472 8482           02892         BSF PORTC,2,0
  00001474            02893 F4_000662 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Return = 1
001474 0E01           02894         MOVLW 1
001476 6E40           02895         MOVWF SD_RETURN,0
  00001478            02896 F4_000663 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
001478 0012           02897         RETURN 0
  0000147A            02898 F4_000664 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
00147A                02899 BC@LL137
  0000147A            02900 F4_000665 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] High SD_CS
00147A 9494           02901         BCF TRISC,2,0
00147C 8482           02902         BSF PORTC,2,0
  0000147E            02903 F4_000666 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Byte5 = $FF
00147E 0102           02904         MOVLB 2
  00000002            02905 RAM_BANK = 2
001480 6946           02906         SETF SD_BYTE5
  00001482            02907 F4_000667 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Send_Byte
001482 0100           02908         MOVLB 0
  00000000            02909 RAM_BANK = 0
                      02910         F@CALL SD_SEND_BYTE
  00001486            02911 F4_000668 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = 0
001486 0102           02912         MOVLB 2
  00000002            02913 RAM_BANK = 2
001488 6B48           02914         CLRF SD_BUFFER_IDXH
00148A 6B47           02915         CLRF SD_BUFFER_IDX
  0000148C            02916 F4_000669 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Return = 0
00148C 6A40           02917         CLRF SD_RETURN,0
  0000148E            02918 F4_000670 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
00148E 0100           02919         MOVLB 0
  00000000            02920 RAM_BANK = 0
001490 0012           02921         RETURN 0
  00001492            02922 F4_000676 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Close_File MACRO
                      02923 SD_CLOSE_FILE   MACRO .,.,.,.,.,.,.,.,.,.
                      02924  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      02925  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      02926         IF (PRM_COUNT != 0)
                      02927         ERROR "(In Asm) No parameters required for SD_Close_File"
                      02928         EXITM
                      02929         ENDIF
                      02930         F@CALL SD_CLOSE_FILE_SUB
                      02931         ENDM
001492                02932 SD_CLOSE_FILE_SUB
  00001492            02933 F4_000698 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Is_Dirty = 1 Then
001492 0E01           02934         MOVLW 1
001494 0102           02935         MOVLB 2
  00000002            02936 RAM_BANK = 2
001496 5DF6           02937         SUBWF SD_IS_DIRTY,W
001498 0100           02938         MOVLB 0
  00000000            02939 RAM_BANK = 0
00149A A4D8           02940         BTFSS STATUS,2,0
                      02941         GO@TO BC@LL139
  000014A0            02942 F4_000699 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Repeat
0014A0                02943 BC@LL140
  000014A0            02944 F4_000700 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      02945         F@CALL SD_WRITE_SECTOR
  000014A4            02946 F4_000701 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Until SD_Return = 0
0014A4 5240           02947         MOVF SD_RETURN,F,0
0014A6 A4D8           02948         BTFSS STATUS,2,0
                      02949         GO@TO BC@LL140
0014AA                02950 BC@LL141
  000014AA            02951 F4_000702 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0014AA                02952 BC@LL139
  000014AA            02953 F4_000703 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_Root_Dir + SD_Root_Dir_Sec
0014AA 0102           02954         MOVLB 2
  00000002            02955 RAM_BANK = 2
0014AC 5185           02956         MOVF SD_ROOT_DIR_SEC,W
0014AE 256F           02957         ADDWF SD_ROOT_DIR,W
0014B0 6FBE           02958         MOVWF SD_WRITE_SEC_NUM
0014B2 5186           02959         MOVF SD_ROOT_DIR_SECH,W
0014B4 2170           02960         ADDWFC SD_ROOT_DIRH,W
0014B6 6FBF           02961         MOVWF SD_WRITE_SEC_NUMH
0014B8 5187           02962         MOVF SD_ROOT_DIR_SECHH,W
0014BA 2171           02963         ADDWFC SD_ROOT_DIRHH,W
0014BC 6FC0           02964         MOVWF SD_WRITE_SEC_NUMHH
0014BE 5188           02965         MOVF SD_ROOT_DIR_SECHHH,W
0014C0 2172           02966         ADDWFC SD_ROOT_DIRHHH,W
0014C2 6FC1           02967         MOVWF SD_WRITE_SEC_NUMHHH
  000014C4            02968 F4_000704 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
0014C4 C2C1 F037      02969         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
0014C8 C2C0 F036      02970         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
0014CC C2BF F035      02971         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
0014D0 C2BE F034      02972         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  000014D4            02973 F4_000705 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0014D4 0E01           02974         MOVLW 1
0014D6 6F4A           02975         MOVWF SD_RW_OPTION
  000014D8            02976 F4_000706 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0014D8 0100           02977         MOVLB 0
  00000000            02978 RAM_BANK = 0
                      02979         F@CALL SD_SECTOR_SUB
  000014DE            02980 F4_000708 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $1C
0014DE 0E1C           02981         MOVLW 28
0014E0 0102           02982         MOVLB 2
  00000002            02983 RAM_BANK = 2
0014E2 2589           02984         ADDWF SD_ROOT_DIR_POS,W
0014E4 6FC2           02985         MOVWF SD_WRITE_BUFFER_POS
0014E6 0E00           02986         MOVLW 0
0014E8 218A           02987         ADDWFC SD_ROOT_DIR_POSH,W
0014EA 6FC3           02988         MOVWF SD_WRITE_BUFFER_POSH
  000014EC            02989 F4_000709 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE0
0014EC C2CC F24D      02990         MOVFF SD_FILE_SIZE,SD_DATA_IO
  000014F0            02991 F4_000710 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
0014F0 0100           02992         MOVLB 0
  00000000            02993 RAM_BANK = 0
                      02994         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  000014F6            02995 F4_000711 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
0014F6 0102           02996         MOVLB 2
  00000002            02997 RAM_BANK = 2
0014F8 4BC2           02998         INFSNZ SD_WRITE_BUFFER_POS,F
0014FA 2BC3           02999         INCF SD_WRITE_BUFFER_POSH,F
  000014FC            03000 F4_000712 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE1
0014FC C2CD F24D      03001         MOVFF SD_FILE_SIZEH,SD_DATA_IO
  00001500            03002 F4_000713 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001500 0100           03003         MOVLB 0
  00000000            03004 RAM_BANK = 0
                      03005         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001506            03006 F4_000714 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001506 0102           03007         MOVLB 2
  00000002            03008 RAM_BANK = 2
001508 4BC2           03009         INFSNZ SD_WRITE_BUFFER_POS,F
00150A 2BC3           03010         INCF SD_WRITE_BUFFER_POSH,F
  0000150C            03011 F4_000715 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE2
00150C C2CE F24D      03012         MOVFF SD_FILE_SIZEHH,SD_DATA_IO
  00001510            03013 F4_000716 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001510 0100           03014         MOVLB 0
  00000000            03015 RAM_BANK = 0
                      03016         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001516            03017 F4_000717 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001516 0102           03018         MOVLB 2
  00000002            03019 RAM_BANK = 2
001518 4BC2           03020         INFSNZ SD_WRITE_BUFFER_POS,F
00151A 2BC3           03021         INCF SD_WRITE_BUFFER_POSH,F
  0000151C            03022 F4_000718 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Size.BYTE3
00151C C2CF F24D      03023         MOVFF SD_FILE_SIZEHHH,SD_DATA_IO
  00001520            03024 F4_000719 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001520 0100           03025         MOVLB 0
  00000000            03026 RAM_BANK = 0
                      03027         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001526            03028 F4_000720 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $16
001526 0E16           03029         MOVLW 22
001528 0102           03030         MOVLB 2
  00000002            03031 RAM_BANK = 2
00152A 2589           03032         ADDWF SD_ROOT_DIR_POS,W
00152C 6FC2           03033         MOVWF SD_WRITE_BUFFER_POS
00152E 0E00           03034         MOVLW 0
001530 218A           03035         ADDWFC SD_ROOT_DIR_POSH,W
001532 6FC3           03036         MOVWF SD_WRITE_BUFFER_POSH
  00001534            03037 F4_000721 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Set_File_Time_Modified
001534 0100           03038         MOVLB 0
  00000000            03039 RAM_BANK = 0
                      03040         F@CALL SD_SET_FILE_TIME_MODIFIED
  0000153A            03041 F4_000722 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      03042         F@CALL SD_WRITE_SECTOR
  0000153E            03043 F4_000723 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_EOF = 1 Then
00153E 96D8           03044         BCF STATUS,3,0
001540 0102           03045         MOVLB 2
  00000002            03046 RAM_BANK = 2
001542 A1E5           03047         BTFSS _B#VR1,0
001544 86D8           03048         BSF STATUS,3,0
001546 0100           03049         MOVLB 0
  00000000            03050 RAM_BANK = 0
                      03051         G@OTO BC@LL143
  0000154E            03052 F4_000724 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos_Prev = SD_FAT_Buffer_Pos
00154E C27E F284      03053         MOVFF SD_FAT_BUFFER_POSH,SD_FAT_BUFFER_POS_PREVH
001552 C27D F283      03054         MOVFF SD_FAT_BUFFER_POS,SD_FAT_BUFFER_POS_PREV
  00001556            03055 F4_000725 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec_Prev = SD_FAT_Sec
001556 C27C F282      03056         MOVFF SD_FAT_SECHHH,SD_FAT_SEC_PREVHHH
00155A C27B F281      03057         MOVFF SD_FAT_SECHH,SD_FAT_SEC_PREVHH
00155E C27A F280      03058         MOVFF SD_FAT_SECH,SD_FAT_SEC_PREVH
001562 C279 F27F      03059         MOVFF SD_FAT_SEC,SD_FAT_SEC_PREV
  00001566            03060 F4_000726 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_FAT1 + SD_FAT_Sec_Prev
001566 0102           03061         MOVLB 2
  00000002            03062 RAM_BANK = 2
001568 517F           03063         MOVF SD_FAT_SEC_PREV,W
00156A 2567           03064         ADDWF SD_FAT1,W
00156C 6FBE           03065         MOVWF SD_WRITE_SEC_NUM
00156E 5180           03066         MOVF SD_FAT_SEC_PREVH,W
001570 2168           03067         ADDWFC SD_FAT1H,W
001572 6FBF           03068         MOVWF SD_WRITE_SEC_NUMH
001574 5181           03069         MOVF SD_FAT_SEC_PREVHH,W
001576 2169           03070         ADDWFC SD_FAT1HH,W
001578 6FC0           03071         MOVWF SD_WRITE_SEC_NUMHH
00157A 5182           03072         MOVF SD_FAT_SEC_PREVHHH,W
00157C 216A           03073         ADDWFC SD_FAT1HHH,W
00157E 6FC1           03074         MOVWF SD_WRITE_SEC_NUMHHH
  00001580            03075 F4_000727 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
001580 C2C1 F037      03076         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
001584 C2C0 F036      03077         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
001588 C2BF F035      03078         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
00158C C2BE F034      03079         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  00001590            03080 F4_000728 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001590 0E01           03081         MOVLW 1
001592 6F4A           03082         MOVWF SD_RW_OPTION
  00001594            03083 F4_000729 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001594 0100           03084         MOVLB 0
  00000000            03085 RAM_BANK = 0
                      03086         F@CALL SD_SECTOR_SUB
  0000159A            03087 F4_000731 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num_Prev = SD_Cluster_Seq_Idx
00159A C2DB F2DD      03088         MOVFF SD_CLUSTER_SEQ_IDXH,SD_CLUSTER_SEQ_NUM_PREVH
00159E C2DA F2DC      03089         MOVFF SD_CLUSTER_SEQ_IDX,SD_CLUSTER_SEQ_NUM_PREV
  000015A2            03090 F4_000732 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector
                      03091         F@CALL SD_ASSEMBLE_FAT_SECTOR
  000015A6            03092 F4_000733 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Assemble_FAT_Sector_End_Close
                      03093         F@CALL SD_ASSEMBLE_FAT_SECTOR_END_CLOSE
  000015AA            03094 F4_000734 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      03095         F@CALL SD_WRITE_SECTOR
  000015AE            03096 F4_000735 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT2 + SD_FAT_Sec_Prev
0015AE 0102           03097         MOVLB 2
  00000002            03098 RAM_BANK = 2
0015B0 517F           03099         MOVF SD_FAT_SEC_PREV,W
0015B2 256B           03100         ADDWF SD_FAT2,W
0015B4 6E34           03101         MOVWF SD_SECTOR_NUM,0
0015B6 5180           03102         MOVF SD_FAT_SEC_PREVH,W
0015B8 216C           03103         ADDWFC SD_FAT2H,W
0015BA 6E35           03104         MOVWF SD_SECTOR_NUMH,0
0015BC 5181           03105         MOVF SD_FAT_SEC_PREVHH,W
0015BE 216D           03106         ADDWFC SD_FAT2HH,W
0015C0 6E36           03107         MOVWF SD_SECTOR_NUMHH,0
0015C2 5182           03108         MOVF SD_FAT_SEC_PREVHHH,W
0015C4 216E           03109         ADDWFC SD_FAT2HHH,W
0015C6 6E37           03110         MOVWF SD_SECTOR_NUMHHH,0
  000015C8            03111 F4_000736 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
0015C8 0100           03112         MOVLB 0
  00000000            03113 RAM_BANK = 0
                      03114         F@CALL SD_WRITE_SECTOR
  000015CE            03115 F4_000737 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0015CE                03116 BC@LL143
  000015CE            03117 F4_000738 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0015CE 0012           03118         RETURN 0
0015D0                03119 SD_SET_FILE_TIME_CREATE
  000015D0            03120 F4_000742 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_MSeconds + ((SD_Seconds // 2) * 100)
0015D0 6A24           03121         CLRF PP7H,0
0015D2 C2F2 F023      03122         MOVFF SD_MSECONDS,PP7
0015D6 6A28           03123         CLRF PP8H,0
0015D8 C2F3 F027      03124         MOVFF SD_SECONDS,PP8
0015DC 0E01           03125         MOVLW 1
0015DE 1627           03126         ANDWF PP8,F,0
0015E0 6A28           03127         CLRF PP8H,0
0015E2 5028           03128         MOVF PP8H,W,0
0015E4 0D64           03129         MULLW 100
0015E6 CFF3 F028      03130         MOVFF PRODL,PP8H
0015EA 5027           03131         MOVF PP8,W,0
0015EC 0D64           03132         MULLW 100
0015EE CFF3 F027      03133         MOVFF PRODL,PP8
0015F2 50F4           03134         MOVF PRODH,W,0
0015F4 2628           03135         ADDWF PP8H,F,0
0015F6 5023           03136         MOVF PP7,W,0
0015F8 2427           03137         ADDWF PP8,W,0
0015FA 0102           03138         MOVLB 2
  00000002            03139 RAM_BANK = 2
0015FC 6F4D           03140         MOVWF SD_DATA_IO
  000015FE            03141 F4_000743 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
0015FE 0100           03142         MOVLB 0
  00000000            03143 RAM_BANK = 0
                      03144         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001604            03145 F4_000744 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001604 0102           03146         MOVLB 2
  00000002            03147 RAM_BANK = 2
001606 4BC2           03148         INFSNZ SD_WRITE_BUFFER_POS,F
001608 2BC3           03149         INCF SD_WRITE_BUFFER_POSH,F
00160A                03150 SD_SET_FILE_TIME_MODIFIED
00160A 0100           03151         MOVLB 0
  00000000            03152 RAM_BANK = 0
  0000160C            03153 F4_000746 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = (SD_Seconds / 2) | (SD_Minutes << 5)
00160C 6A24           03154         CLRF PP7H,0
00160E C2F3 F023      03155         MOVFF SD_SECONDS,PP7
001612 90D8           03156         BCF STATUS,0,0
001614 3224           03157         RRCF PP7H,F,0
001616 3223           03158         RRCF PP7,F,0
001618 6A28           03159         CLRF PP8H,0
00161A C2F4 F027      03160         MOVFF SD_MINUTES,PP8
00161E 0E05           03161         MOVLW 5
001620                03162 SL@LB32
001620 90D8           03163         BCF STATUS,0,0
001622 3627           03164         RLCF PP8,F,0
001624 3628           03165         RLCF PP8H,F,0
001626 2EE8           03166         DECFSZ WREG,F,0
001628 D7FB           03167         BRA SL@LB32
00162A 5023           03168         MOVF PP7,W,0
00162C 1027           03169         IORWF PP8,W,0
00162E 0102           03170         MOVLB 2
  00000002            03171 RAM_BANK = 2
001630 6F4D           03172         MOVWF SD_DATA_IO
  00001632            03173 F4_000747 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001632 0100           03174         MOVLB 0
  00000000            03175 RAM_BANK = 0
                      03176         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001638            03177 F4_000748 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001638 0102           03178         MOVLB 2
  00000002            03179 RAM_BANK = 2
00163A 4BC2           03180         INFSNZ SD_WRITE_BUFFER_POS,F
00163C 2BC3           03181         INCF SD_WRITE_BUFFER_POSH,F
  0000163E            03182 F4_000749 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = (SD_Minutes >> 3) | (SD_Hours << 3)
00163E 6A24           03183         CLRF PP7H,0
001640 C2F4 F023      03184         MOVFF SD_MINUTES,PP7
001644 3224           03185         RRCF PP7H,F,0
001646 3223           03186         RRCF PP7,F,0
001648 3224           03187         RRCF PP7H,F,0
00164A 3223           03188         RRCF PP7,F,0
00164C 3224           03189         RRCF PP7H,F,0
00164E 3223           03190         RRCF PP7,F,0
001650 0E1F           03191         MOVLW 31
001652 1624           03192         ANDWF PP7H,F,0
001654 6A28           03193         CLRF PP8H,0
001656 C2F5 F027      03194         MOVFF SD_HOURS,PP8
00165A 0E03           03195         MOVLW 3
00165C                03196 SL@LB33
00165C 90D8           03197         BCF STATUS,0,0
00165E 3627           03198         RLCF PP8,F,0
001660 3628           03199         RLCF PP8H,F,0
001662 2EE8           03200         DECFSZ WREG,F,0
001664 D7FB           03201         BRA SL@LB33
001666 5023           03202         MOVF PP7,W,0
001668 1027           03203         IORWF PP8,W,0
00166A 6F4D           03204         MOVWF SD_DATA_IO
  0000166C            03205 F4_000750 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
00166C 0100           03206         MOVLB 0
  00000000            03207 RAM_BANK = 0
                      03208         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001672            03209 F4_000751 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001672 0102           03210         MOVLB 2
  00000002            03211 RAM_BANK = 2
001674 4BC2           03212         INFSNZ SD_WRITE_BUFFER_POS,F
001676 2BC3           03213         INCF SD_WRITE_BUFFER_POSH,F
  00001678            03214 F4_000752 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Day | (SD_Month << 5)
001678 C2F0 F024      03215         MOVFF SD_MONTH,PP7H
00167C 6A23           03216         CLRF PP7,0
00167E 90D8           03217         BCF STATUS,0,0
001680 3224           03218         RRCF PP7H,F,0
001682 3223           03219         RRCF PP7,F,0
001684 3224           03220         RRCF PP7H,F,0
001686 3223           03221         RRCF PP7,F,0
001688 3224           03222         RRCF PP7H,F,0
00168A 3223           03223         RRCF PP7,F,0
00168C 51EF           03224         MOVF SD_DAY,W
00168E 1023           03225         IORWF PP7,W,0
001690 6F4D           03226         MOVWF SD_DATA_IO
  00001692            03227 F4_000753 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001692 0100           03228         MOVLB 0
  00000000            03229 RAM_BANK = 0
                      03230         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001698            03231 F4_000754 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001698 0102           03232         MOVLB 2
  00000002            03233 RAM_BANK = 2
00169A 4BC2           03234         INFSNZ SD_WRITE_BUFFER_POS,F
00169C 2BC3           03235         INCF SD_WRITE_BUFFER_POSH,F
  0000169E            03236 F4_000755 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = (SD_Month >> 3) | ((SD_Year + 20) << 1)
00169E 6A24           03237         CLRF PP7H,0
0016A0 C2F0 F023      03238         MOVFF SD_MONTH,PP7
0016A4 3224           03239         RRCF PP7H,F,0
0016A6 3223           03240         RRCF PP7,F,0
0016A8 3224           03241         RRCF PP7H,F,0
0016AA 3223           03242         RRCF PP7,F,0
0016AC 3224           03243         RRCF PP7H,F,0
0016AE 3223           03244         RRCF PP7,F,0
0016B0 0E1F           03245         MOVLW 31
0016B2 1624           03246         ANDWF PP7H,F,0
0016B4 6A28           03247         CLRF PP8H,0
0016B6 C2F1 F027      03248         MOVFF SD_YEAR,PP8
0016BA 0E14           03249         MOVLW 20
0016BC 2627           03250         ADDWF PP8,F,0
0016BE 0E00           03251         MOVLW 0
0016C0 2228           03252         ADDWFC PP8H,F,0
0016C2 90D8           03253         BCF STATUS,0,0
0016C4 3627           03254         RLCF PP8,F,0
0016C6 3628           03255         RLCF PP8H,F,0
0016C8 5023           03256         MOVF PP7,W,0
0016CA 1027           03257         IORWF PP8,W,0
0016CC 6F4D           03258         MOVWF SD_DATA_IO
  000016CE            03259 F4_000756 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
0016CE 0100           03260         MOVLB 0
  00000000            03261 RAM_BANK = 0
                      03262         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  000016D4            03263 F4_000757 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0016D4 0012           03264         RETURN 0
  000016D6            03265 F4_000763 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Open_File MACRO
                      03266 SD_OPEN_FILE    MACRO .,.,.,.,.,.,.,.,.,.
                      03267  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03268  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03269         F@CALL SD_OPEN_FILE_SUB
                      03270         IF (RETURN_TYPE !=BYTE) && (RETURN_TYPE !=WORD) && (RETURN_TYPE !=DWORD)
                      03271         ERROR "(In Asm) SD_Open_File - Return variable should be a Byte, Word, or DWord variable"
                      03272         ELSE
                      03273         IF (RETURN_TYPE == BYTE)
                      03274         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      03275         ENDIF
                      03276         IF (RETURN_TYPE == WORD)
                      03277         BYTE_WORD SD_EXTENDED_RETURN, RETURN_VAR
                      03278 RAM_BANK = 0
                      03279         ENDIF
                      03280         IF (RETURN_TYPE == DWORD)
                      03281         BYTE_DWORD SD_EXTENDED_RETURN, RETURN_VAR
                      03282 RAM_BANK = 0
                      03283         ENDIF
                      03284         ENDIF
                      03285         ENDM
0016D6                03286 SD_OPEN_FILE_SUB
  000016D6            03287 F4_000787 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Check_For_File_Sub
                      03288         F@CALL SD_CHECK_FOR_FILE_SUB
  000016D8            03289 F4_000788 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir <> 0 Then
0016D8 0102           03290         MOVLB 2
  00000002            03291 RAM_BANK = 2
0016DA 534C           03292         MOVF SD_EXTENDED_RETURN_ROOT_DIR,F
0016DC 0100           03293         MOVLB 0
  00000000            03294 RAM_BANK = 0
0016DE B4D8           03295         BTFSC STATUS,2,0
                      03296         GO@TO BC@LL145
  000016E4            03297 F4_000789 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
0016E4 0E01           03298         MOVLW 1
0016E6 0102           03299         MOVLB 2
  00000002            03300 RAM_BANK = 2
0016E8 6F4B           03301         MOVWF SD_EXTENDED_RETURN
  000016EA            03302 F4_000790 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0016EA 0100           03303         MOVLB 0
  00000000            03304 RAM_BANK = 0
0016EC 0012           03305         RETURN 0
  000016EE            03306 F4_000791 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0016EE                03307 BC@LL145
  000016EE            03308 F4_000792 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE0 = SD_Root_Dir_File[$1A]
0016EE 0102           03309         MOVLB 2
  00000002            03310 RAM_BANK = 2
0016F0 51B8           03311         MOVF SD_ROOT_DIR_FILE#26,W
0016F2 6FC5           03312         MOVWF SD_CLUSTER_NUM
  000016F4            03313 F4_000793 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE1 = SD_Root_Dir_File[$1B]
0016F4 51B9           03314         MOVF SD_ROOT_DIR_FILE#27,W
0016F6 6FC6           03315         MOVWF SD_CLUSTER_NUMH
  000016F8            03316 F4_000794 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE0 = SD_Root_Dir_File[$1C]
0016F8 51BA           03317         MOVF SD_ROOT_DIR_FILE#28,W
0016FA 6FCC           03318         MOVWF SD_FILE_SIZE
  000016FC            03319 F4_000795 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE1 = SD_Root_Dir_File[$1D]
0016FC 51BB           03320         MOVF SD_ROOT_DIR_FILE#29,W
0016FE 6FCD           03321         MOVWF SD_FILE_SIZEH
  00001700            03322 F4_000796 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE2 = SD_Root_Dir_File[$1E]
001700 51BC           03323         MOVF SD_ROOT_DIR_FILE#30,W
001702 6FCE           03324         MOVWF SD_FILE_SIZEHH
  00001704            03325 F4_000797 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE3 = SD_Root_Dir_File[$1F]
001704 51BD           03326         MOVF SD_ROOT_DIR_FILE#31,W
001706 6FCF           03327         MOVWF SD_FILE_SIZEHHH
  00001708            03328 F4_000798 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001708 0EFE           03329         MOVLW 254
00170A 25C5           03330         ADDWF SD_CLUSTER_NUM,W
00170C 6E23           03331         MOVWF PP7,0
00170E 0EFF           03332         MOVLW 255
001710 21C6           03333         ADDWFC SD_CLUSTER_NUMH,W
001712 6E24           03334         MOVWF PP7H,0
001714 0EFF           03335         MOVLW 255
001716 6A25           03336         CLRF PP7HH,0
001718 2225           03337         ADDWFC PP7HH,F,0
00171A 6A26           03338         CLRF PP7HHH,0
00171C 2226           03339         ADDWFC PP7HHH,F,0
00171E C026 F014      03340         MOVFF PP7HHH,PP0HHH
001722 C025 F013      03341         MOVFF PP7HH,PP0HH
001726 C024 F012      03342         MOVFF PP7H,PP0H
00172A C023 F011      03343         MOVFF PP7,PP0
00172E 6A1C           03344         CLRF PP2HHH,0
001730 6A1B           03345         CLRF PP2HH,0
001732 6A1A           03346         CLRF PP2H,0
001734 C255 F019      03347         MOVFF SD_SECS_PER_CLUSTER,PP2
                      03348         F@CALL AL@MUL
00173C C014 F28E      03349         MOVFF PP0HHH,SD_DATA_SECHHH
001740 C013 F28D      03350         MOVFF PP0HH,SD_DATA_SECHH
001744 C012 F28C      03351         MOVFF PP0H,SD_DATA_SECH
001748 C011 F28B      03352         MOVFF PP0,SD_DATA_SEC
  0000174C            03353 F4_000799 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
00174C 5173           03354         MOVF SD_DATA_AREA,W
00174E 278B           03355         ADDWF SD_DATA_SEC,F
001750 5174           03356         MOVF SD_DATA_AREAH,W
001752 238C           03357         ADDWFC SD_DATA_SECH,F
001754 5175           03358         MOVF SD_DATA_AREAHH,W
001756 238D           03359         ADDWFC SD_DATA_SECHH,F
001758 5176           03360         MOVF SD_DATA_AREAHHH,W
00175A 238E           03361         ADDWFC SD_DATA_SECHHH,F
  0000175C            03362 F4_000800 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
00175C 0E01           03363         MOVLW 1
00175E 6FCB           03364         MOVWF SD_SEC_IN_CLUSTER
  00001760            03365 F4_000801 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001760 C28E F037      03366         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001764 C28D F036      03367         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001768 C28C F035      03368         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
00176C C28B F034      03369         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001770            03370 F4_000802 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001770 0E01           03371         MOVLW 1
001772 6F4A           03372         MOVWF SD_RW_OPTION
  00001774            03373 F4_000803 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001774 0100           03374         MOVLB 0
  00000000            03375 RAM_BANK = 0
                      03376         F@CALL SD_SECTOR_SUB
  0000177A            03377 F4_000805 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Return = 1 Then
00177A 0E01           03378         MOVLW 1
00177C 5C40           03379         SUBWF SD_RETURN,W,0
00177E A4D8           03380         BTFSS STATUS,2,0
                      03381         GO@TO BC@LL147
  00001784            03382 F4_000806 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001784 0E01           03383         MOVLW 1
001786 0102           03384         MOVLB 2
  00000002            03385 RAM_BANK = 2
001788 6F4B           03386         MOVWF SD_EXTENDED_RETURN
  0000178A            03387 F4_000807 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
00178A 0100           03388         MOVLB 0
  00000000            03389 RAM_BANK = 0
00178C 0012           03390         RETURN 0
  0000178E            03391 F4_000808 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
00178E                03392 BC@LL147
  0000178E            03393 F4_000809 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 0
00178E 0102           03394         MOVLB 2
  00000002            03395 RAM_BANK = 2
001790 6B90           03396         CLRF SD_DATA_BUFFER_POSH
001792 6B8F           03397         CLRF SD_DATA_BUFFER_POS
  00001794            03398 F4_000810 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Bytes_Read = 0
001794 6BE4           03399         CLRF SD_BYTES_READHHH
001796 6BE3           03400         CLRF SD_BYTES_READHH
001798 6BE2           03401         CLRF SD_BYTES_READH
00179A 6BE1           03402         CLRF SD_BYTES_READ
  0000179C            03403 F4_000811 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_File_Size > 0 Then
00179C 96D8           03404         BCF STATUS,3,0
00179E BFCF           03405         BTFSC SD_FILE_SIZEHHH,7
0017A0 86D8           03406         BSF STATUS,3,0
0017A2 0100           03407         MOVLB 0
  00000000            03408 RAM_BANK = 0
                      03409         G@OTO BC@LL149
0017AA 0102           03410         MOVLB 2
  00000002            03411 RAM_BANK = 2
0017AC 51CC           03412         MOVF SD_FILE_SIZE,W
0017AE 11CD           03413         IORWF SD_FILE_SIZEH,W
0017B0 11CE           03414         IORWF SD_FILE_SIZEHH,W
0017B2 11CF           03415         IORWF SD_FILE_SIZEHHH,W
0017B4 0100           03416         MOVLB 0
  00000000            03417 RAM_BANK = 0
0017B6 B4D8           03418         BTFSC STATUS,2,0
                      03419         GO@TO BC@LL149
0017BC 96D8           03420         BCF STATUS,3,0
0017BE 0102           03421         MOVLB 2
  00000002            03422 RAM_BANK = 2
0017C0 BFCF           03423         BTFSC SD_FILE_SIZEHHH,7
0017C2 86D8           03424         BSF STATUS,3,0
0017C4 0100           03425         MOVLB 0
  00000000            03426 RAM_BANK = 0
                      03427         G@OTO BC@LL149
0017CC 0102           03428         MOVLB 2
  00000002            03429 RAM_BANK = 2
0017CE 51CD           03430         MOVF SD_FILE_SIZEH,W
0017D0 11CE           03431         IORWF SD_FILE_SIZEHH,W
0017D2 11CF           03432         IORWF SD_FILE_SIZEHHH,W
0017D4 E106           03433         BNZ CP@LB23
0017D6 0E01           03434         MOVLW 1
0017D8 5DCC           03435         SUBWF SD_FILE_SIZE,W
0017DA 0100           03436         MOVLB 0
  00000000            03437 RAM_BANK = 0
0017DC A0D8           03438         BTFSS STATUS,0,0
                      03439         GO@TO BC@LL149
0017E2                03440 CP@LB23
  000017E2            03441 F4_000812 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 0
0017E2 0102           03442         MOVLB 2
  00000002            03443 RAM_BANK = 2
0017E4 91E5           03444         BCF _B#VR1,0
0017E6 0100           03445         MOVLB 0
  00000000            03446 RAM_BANK = 0
                      03447         F@JUMP BC@LL150
0017EC                03448 BC@LL149
  000017EC            03449 F4_000813 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  000017EC            03450 F4_000814 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
0017EC 0102           03451         MOVLB 2
  00000002            03452 RAM_BANK = 2
0017EE 81E5           03453         BSF _B#VR1,0
  000017F0            03454 F4_000815 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0017F0                03455 BC@LL150
0017F0 0100           03456         MOVLB 0
  00000000            03457 RAM_BANK = 0
  000017F2            03458 F4_000816 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 0
0017F2 0102           03459         MOVLB 2
  00000002            03460 RAM_BANK = 2
0017F4 6BF6           03461         CLRF SD_IS_DIRTY
  000017F6            03462 F4_000817 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 1
0017F6 6BD9           03463         CLRF SD_CLUSTER_SEQ_NUMH
0017F8 0E01           03464         MOVLW 1
0017FA 6FD8           03465         MOVWF SD_CLUSTER_SEQ_NUM
  000017FC            03466 F4_000818 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
0017FC 6B4B           03467         CLRF SD_EXTENDED_RETURN
  000017FE            03468 F4_000819 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0017FE 0100           03469         MOVLB 0
  00000000            03470 RAM_BANK = 0
001800 0012           03471         RETURN 0
  00001802            03472 F4_000825 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Read_Byte_From_File MACRO
                      03473 SD_READ_BYTE_FROM_FILE  MACRO .,.,.,.,.,.,.,.,.,.
                      03474  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03475  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03476         F@CALL SD_READ_BYTE_FROM_FILE_SUB
                      03477         IF (SD_READ_BYTE_FROM_FILE_RETURN != 1)
                      03478         ERROR "(In Asm) SD_Read_Byte_From_File -  Mandatory return parameter missing"
                      03479         ELSE
                      03480         IF (RETURN_TYPE !=BYTE) && (RETURN_TYPE !=WORD) && (RETURN_TYPE !=DWORD)
                      03481         ERROR "(In Asm) SD_Read_Byte_From_File - Return variable should be a Byte, Word or DWord variable"
                      03482         ELSE
                      03483         IF (RETURN_TYPE == BYTE)
                      03484         BYTE_BYTE SD_BYTE_RW, RETURN_VAR
                      03485         ENDIF
                      03486         IF (RETURN_TYPE == WORD)
                      03487         BYTE_WORD SD_BYTE_RW, RETURN_VAR
                      03488 RAM_BANK = 0
                      03489         ENDIF
                      03490         IF (RETURN_TYPE == DWORD)
                      03491         BYTE_DWORD SD_BYTE_RW, RETURN_VAR
                      03492 RAM_BANK = 0
                      03493         ENDIF
                      03494         ENDIF
                      03495         ENDIF
                      03496         ENDM
001802                03497 SD_READ_BYTE_FROM_FILE_SUB
  00001802            03498 F4_000853 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_EOF = 0 Then
001802 96D8           03499         BCF STATUS,3,0
001804 0102           03500         MOVLB 2
  00000002            03501 RAM_BANK = 2
001806 B1E5           03502         BTFSC _B#VR1,0
001808 86D8           03503         BSF STATUS,3,0
00180A 0100           03504         MOVLB 0
  00000000            03505 RAM_BANK = 0
                      03506         G@OTO BC@LL152
  00001812            03507 F4_000854 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Buffer_Pos
001812 0102           03508         MOVLB 2
  00000002            03509 RAM_BANK = 2
001814 4B8F           03510         INFSNZ SD_DATA_BUFFER_POS,F
001816 2B90           03511         INCF SD_DATA_BUFFER_POSH,F
  00001818            03512 F4_000855 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Data_Buffer_Pos > SD_Bytes_Per_Sec Then
001818 518F           03513         MOVF SD_DATA_BUFFER_POS,W
00181A 5D5F           03514         SUBWF SD_BYTES_PER_SEC,W
00181C 5190           03515         MOVF SD_DATA_BUFFER_POSH,W
00181E 5960           03516         SUBWFB SD_BYTES_PER_SECH,W
001820 0100           03517         MOVLB 0
  00000000            03518 RAM_BANK = 0
001822 B0D8           03519         BTFSC STATUS,0,0
                      03520         GO@TO BC@LL154
  00001828            03521 F4_000856 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Is_Dirty = 1 Then
001828 0E01           03522         MOVLW 1
00182A 0102           03523         MOVLB 2
  00000002            03524 RAM_BANK = 2
00182C 5DF6           03525         SUBWF SD_IS_DIRTY,W
00182E 0100           03526         MOVLB 0
  00000000            03527 RAM_BANK = 0
001830 A4D8           03528         BTFSS STATUS,2,0
                      03529         GO@TO BC@LL156
  00001836            03530 F4_000857 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Repeat
001836                03531 BC@LL157
  00001836            03532 F4_000858 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      03533         F@CALL SD_WRITE_SECTOR
  0000183A            03534 F4_000859 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Until SD_Return = 0
00183A 5240           03535         MOVF SD_RETURN,F,0
00183C A4D8           03536         BTFSS STATUS,2,0
                      03537         GO@TO BC@LL157
001840                03538 BC@LL158
  00001840            03539 F4_000860 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Is_Dirty = 0
001840 0102           03540         MOVLB 2
  00000002            03541 RAM_BANK = 2
001842 6BF6           03542         CLRF SD_IS_DIRTY
  00001844            03543 F4_000861 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001844                03544 BC@LL156
001844 0100           03545         MOVLB 0
  00000000            03546 RAM_BANK = 0
  00001846            03547 F4_000862 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Data_Sec
001846 0102           03548         MOVLB 2
  00000002            03549 RAM_BANK = 2
001848 2B8B           03550         INCF SD_DATA_SEC,F
00184A 0E00           03551         MOVLW 0
00184C 238C           03552         ADDWFC SD_DATA_SECH,F
00184E 238D           03553         ADDWFC SD_DATA_SECHH,F
001850 238E           03554         ADDWFC SD_DATA_SECHHH,F
  00001852            03555 F4_000863 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sec_in_Cluster
001852 2BCB           03556         INCF SD_SEC_IN_CLUSTER,F
  00001854            03557 F4_000864 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Sec_in_Cluster > SD_Secs_Per_Cluster Then
001854 51CB           03558         MOVF SD_SEC_IN_CLUSTER,W
001856 5D55           03559         SUBWF SD_SECS_PER_CLUSTER,W
001858 0100           03560         MOVLB 0
  00000000            03561 RAM_BANK = 0
00185A B0D8           03562         BTFSC STATUS,0,0
                      03563         GO@TO BC@LL160
  00001860            03564 F4_000865 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001860 6A14           03565         CLRF PP0HHH,0
001862 6A13           03566         CLRF PP0HH,0
001864 C2C6 F012      03567         MOVFF SD_CLUSTER_NUMH,PP0H
001868 C2C5 F011      03568         MOVFF SD_CLUSTER_NUM,PP0
00186C 6A1C           03569         CLRF PP2HHH,0
00186E 6A1B           03570         CLRF PP2HH,0
001870 0E01           03571         MOVLW 1
001872 6E1A           03572         MOVWF PP2H,0
001874 6A19           03573         CLRF PP2,0
                      03574         F@CALL L@DIV
00187A C014 F27C      03575         MOVFF PP0HHH,SD_FAT_SECHHH
00187E C013 F27B      03576         MOVFF PP0HH,SD_FAT_SECHH
001882 C012 F27A      03577         MOVFF PP0H,SD_FAT_SECH
001886 C011 F279      03578         MOVFF PP0,SD_FAT_SEC
  0000188A            03579 F4_000866 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
00188A C2C5 F27D      03580         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
00188E 0102           03581         MOVLB 2
  00000002            03582 RAM_BANK = 2
001890 6B7E           03583         CLRF SD_FAT_BUFFER_POSH
  00001892            03584 F4_000867 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001892 90D8           03585         BCF STATUS,0,0
001894 377D           03586         RLCF SD_FAT_BUFFER_POS,F
001896 377E           03587         RLCF SD_FAT_BUFFER_POSH,F
  00001898            03588 F4_000868 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
001898 5179           03589         MOVF SD_FAT_SEC,W
00189A 2567           03590         ADDWF SD_FAT1,W
00189C 6E34           03591         MOVWF SD_SECTOR_NUM,0
00189E 517A           03592         MOVF SD_FAT_SECH,W
0018A0 2168           03593         ADDWFC SD_FAT1H,W
0018A2 6E35           03594         MOVWF SD_SECTOR_NUMH,0
0018A4 517B           03595         MOVF SD_FAT_SECHH,W
0018A6 2169           03596         ADDWFC SD_FAT1HH,W
0018A8 6E36           03597         MOVWF SD_SECTOR_NUMHH,0
0018AA 517C           03598         MOVF SD_FAT_SECHHH,W
0018AC 216A           03599         ADDWFC SD_FAT1HHH,W
0018AE 6E37           03600         MOVWF SD_SECTOR_NUMHHH,0
  000018B0            03601 F4_000869 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0018B0 0E01           03602         MOVLW 1
0018B2 6F4A           03603         MOVWF SD_RW_OPTION
  000018B4            03604 F4_000870 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0018B4 0100           03605         MOVLB 0
  00000000            03606 RAM_BANK = 0
                      03607         F@CALL SD_SECTOR_SUB
  000018BA            03608 F4_000872 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
0018BA C27E F24F      03609         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
0018BE C27D F24E      03610         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  000018C2            03611 F4_000873 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      03612         F@CALL SD_READ_FAT_ENTRY
  000018C6            03613 F4_000874 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
0018C6 C278 F2C6      03614         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
0018CA C277 F2C5      03615         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  000018CE            03616 F4_000875 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
0018CE 0EFE           03617         MOVLW 254
0018D0 0102           03618         MOVLB 2
  00000002            03619 RAM_BANK = 2
0018D2 25C5           03620         ADDWF SD_CLUSTER_NUM,W
0018D4 6E23           03621         MOVWF PP7,0
0018D6 0EFF           03622         MOVLW 255
0018D8 21C6           03623         ADDWFC SD_CLUSTER_NUMH,W
0018DA 6E24           03624         MOVWF PP7H,0
0018DC 0EFF           03625         MOVLW 255
0018DE 6A25           03626         CLRF PP7HH,0
0018E0 2225           03627         ADDWFC PP7HH,F,0
0018E2 6A26           03628         CLRF PP7HHH,0
0018E4 2226           03629         ADDWFC PP7HHH,F,0
0018E6 C026 F014      03630         MOVFF PP7HHH,PP0HHH
0018EA C025 F013      03631         MOVFF PP7HH,PP0HH
0018EE C024 F012      03632         MOVFF PP7H,PP0H
0018F2 C023 F011      03633         MOVFF PP7,PP0
0018F6 6A1C           03634         CLRF PP2HHH,0
0018F8 6A1B           03635         CLRF PP2HH,0
0018FA 6A1A           03636         CLRF PP2H,0
0018FC C255 F019      03637         MOVFF SD_SECS_PER_CLUSTER,PP2
                      03638         F@CALL AL@MUL
001904 C014 F28E      03639         MOVFF PP0HHH,SD_DATA_SECHHH
001908 C013 F28D      03640         MOVFF PP0HH,SD_DATA_SECHH
00190C C012 F28C      03641         MOVFF PP0H,SD_DATA_SECH
001910 C011 F28B      03642         MOVFF PP0,SD_DATA_SEC
  00001914            03643 F4_000876 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
001914 5173           03644         MOVF SD_DATA_AREA,W
001916 278B           03645         ADDWF SD_DATA_SEC,F
001918 5174           03646         MOVF SD_DATA_AREAH,W
00191A 238C           03647         ADDWFC SD_DATA_SECH,F
00191C 5175           03648         MOVF SD_DATA_AREAHH,W
00191E 238D           03649         ADDWFC SD_DATA_SECHH,F
001920 5176           03650         MOVF SD_DATA_AREAHHH,W
001922 238E           03651         ADDWFC SD_DATA_SECHHH,F
  00001924            03652 F4_000877 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001924 C28E F037      03653         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001928 C28D F036      03654         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
00192C C28C F035      03655         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001930 C28B F034      03656         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001934            03657 F4_000878 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001934 0E01           03658         MOVLW 1
001936 6F4A           03659         MOVWF SD_RW_OPTION
  00001938            03660 F4_000879 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001938 0100           03661         MOVLB 0
  00000000            03662 RAM_BANK = 0
                      03663         F@CALL SD_SECTOR_SUB
  0000193E            03664 F4_000881 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
00193E 0E01           03665         MOVLW 1
001940 0102           03666         MOVLB 2
  00000002            03667 RAM_BANK = 2
001942 6FCB           03668         MOVWF SD_SEC_IN_CLUSTER
  00001944            03669 F4_000882 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001944                03670 BC@LL160
001944 0100           03671         MOVLB 0
  00000000            03672 RAM_BANK = 0
  00001946            03673 F4_000883 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 1
001946 0102           03674         MOVLB 2
  00000002            03675 RAM_BANK = 2
001948 6B90           03676         CLRF SD_DATA_BUFFER_POSH
00194A 0E01           03677         MOVLW 1
00194C 6F8F           03678         MOVWF SD_DATA_BUFFER_POS
  0000194E            03679 F4_000884 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
00194E                03680 BC@LL154
00194E 0100           03681         MOVLB 0
  00000000            03682 RAM_BANK = 0
  00001950            03683 F4_000885 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_Sub
                      03684         F@CALL SD_READ_SUB
  00001954            03685 F4_000886 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Bytes_Read
001954 0102           03686         MOVLB 2
  00000002            03687 RAM_BANK = 2
001956 2BE1           03688         INCF SD_BYTES_READ,F
001958 0E00           03689         MOVLW 0
00195A 23E2           03690         ADDWFC SD_BYTES_READH,F
00195C 23E3           03691         ADDWFC SD_BYTES_READHH,F
00195E 23E4           03692         ADDWFC SD_BYTES_READHHH,F
  00001960            03693 F4_000887 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Bytes_Read >= SD_File_Size Then SD_EOF = 1
001960 51CC           03694         MOVF SD_FILE_SIZE,W
001962 5DE1           03695         SUBWF SD_BYTES_READ,W
001964 51CD           03696         MOVF SD_FILE_SIZEH,W
001966 59E2           03697         SUBWFB SD_BYTES_READH,W
001968 51CE           03698         MOVF SD_FILE_SIZEHH,W
00196A 59E3           03699         SUBWFB SD_BYTES_READHH,W
00196C 51CF           03700         MOVF SD_FILE_SIZEHHH,W
00196E 59E4           03701         SUBWFB SD_BYTES_READHHH,W
001970 51E4           03702         MOVF SD_BYTES_READHHH,W
001972 19CF           03703         XORWF SD_FILE_SIZEHHH,W
001974 B0D8           03704         BTFSC STATUS,0,0
001976 0A80           03705         XORLW 128
001978 0100           03706         MOVLB 0
  00000000            03707 RAM_BANK = 0
00197A A8D8           03708         BTFSS STATUS,4,0
                      03709         GO@TO BC@LL162
001980 0102           03710         MOVLB 2
  00000002            03711 RAM_BANK = 2
001982 81E5           03712         BSF _B#VR1,0
001984                03713 BC@LL162
001984 0100           03714         MOVLB 0
  00000000            03715 RAM_BANK = 0
  00001986            03716 F4_000888 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001986                03717 BC@LL152
  00001986            03718 F4_000889 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
001986 0012           03719         RETURN 0
  00001988            03720 F4_000895 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Check_For_File MACRO
                      03721 SD_CHECK_FOR_FILE       MACRO .,.,.,.,.,.,.,.,.,.
                      03722  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03723  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03724         F@CALL SD_CHECK_FOR_FILE_SUB
                      03725         IF (SD_CHECK_FOR_FILE_RETURN != 1)
                      03726         ERROR "(In Asm) SD_Check_For_File -  Mandatory return parameter missing"
                      03727         ELSE
                      03728         IF (RETURN_TYPE != BYTE) && (RETURN_TYPE != WORD) && (RETURN_TYPE != DWORD)
                      03729         ERROR "(In Asm) SD_Check_For_File - Return variable should be a Byte, Word or DWord variable"
                      03730         ENDIF
                      03731         IF (RETURN_TYPE == BYTE)
                      03732         BYTE_BYTE SD_EXTENDED_RETURN_ROOT_DIR, RETURN_VAR
                      03733         ENDIF
                      03734         IF (RETURN_TYPE == WORD)
                      03735         BYTE_WORD SD_EXTENDED_RETURN_ROOT_DIR, RETURN_VAR
                      03736 RAM_BANK = 0
                      03737         ENDIF
                      03738         IF (RETURN_TYPE == DWORD)
                      03739         BYTE_DWORD SD_EXTENDED_RETURN_ROOT_DIR, RETURN_VAR
                      03740 RAM_BANK = 0
                      03741         ENDIF
                      03742         ENDIF
                      03743         ENDM
  00001988            03744 F4_000924 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_New_File MACRO
                      03745 SD_NEW_FILE     MACRO .,.,.,.,.,.,.,.,.,.
                      03746  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      03747  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      03748         IF (PRM_COUNT != 0)
                      03749         ERROR "(In Asm) No parameters required for SD_New_File"
                      03750         EXITM
                      03751         ENDIF
                      03752         F@CALL SD_NEW_FILE_SUB
                      03753         IF (SD_NEW_FILE_RETURN != 1)
                      03754         ELSE
                      03755         IF (RETURN_TYPE != BYTE)
                      03756         ERROR "(In Asm) SD_New_File - Return variable should be a Byte variable"
                      03757         ENDIF
                      03758         IF (RETURN_TYPE == BYTE)
                      03759         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      03760         ENDIF
                      03761         ENDIF
                      03762         ENDM
001988                03763 SD_NEW_FILE_SUB
  00001988            03764 F4_000949 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Return_F = 0
001988 0102           03765         MOVLB 2
  00000002            03766 RAM_BANK = 2
00198A 6BF8           03767         CLRF SD_RETURN_F
  0000198C            03768 F4_000950 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = 0
00198C 6B7C           03769         CLRF SD_FAT_SECHHH
00198E 6B7B           03770         CLRF SD_FAT_SECHH
001990 6B7A           03771         CLRF SD_FAT_SECH
001992 6B79           03772         CLRF SD_FAT_SEC
  00001994            03773 F4_000951 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = 0
001994 6B7E           03774         CLRF SD_FAT_BUFFER_POSH
001996 6B7D           03775         CLRF SD_FAT_BUFFER_POS
  00001998            03776 F4_000952 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 0
001998 6BD9           03777         CLRF SD_CLUSTER_SEQ_NUMH
00199A 6BD8           03778         CLRF SD_CLUSTER_SEQ_NUM
  0000199C            03779 F4_000953 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Free_Cluster
00199C 0100           03780         MOVLB 0
  00000000            03781 RAM_BANK = 0
                      03782         F@CALL SD_FIND_FREE_CLUSTER
  000019A2            03783 F4_000954 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return = 1 Then Return
0019A2 0E01           03784         MOVLW 1
0019A4 0102           03785         MOVLB 2
  00000002            03786 RAM_BANK = 2
0019A6 5D4B           03787         SUBWF SD_EXTENDED_RETURN,W
0019A8 0100           03788         MOVLB 0
  00000000            03789 RAM_BANK = 0
0019AA A4D8           03790         BTFSS STATUS,2,0
                      03791         GO@TO BC@LL164
0019B0 0012           03792         RETURN 0
0019B2                03793 BC@LL164
  000019B2            03794 F4_000955 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Find_Root_Dir_Entry_F = 0
0019B2 0102           03795         MOVLB 2
  00000002            03796 RAM_BANK = 2
0019B4 6BE0           03797         CLRF SD_FIND_ROOT_DIR_ENTRY_F
  000019B6            03798 F4_000956 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Find_Root_Dir_Entry
0019B6 0100           03799         MOVLB 0
  00000000            03800 RAM_BANK = 0
                      03801         F@CALL SD_FIND_ROOT_DIR_ENTRY
  000019BC            03802 F4_000957 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir = 1 Then
0019BC 0E01           03803         MOVLW 1
0019BE 0102           03804         MOVLB 2
  00000002            03805 RAM_BANK = 2
0019C0 5D4C           03806         SUBWF SD_EXTENDED_RETURN_ROOT_DIR,W
0019C2 0100           03807         MOVLB 0
  00000000            03808 RAM_BANK = 0
0019C4 A4D8           03809         BTFSS STATUS,2,0
                      03810         GO@TO BC@LL166
  000019CA            03811 F4_000958 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
0019CA 0E01           03812         MOVLW 1
0019CC 0102           03813         MOVLB 2
  00000002            03814 RAM_BANK = 2
0019CE 6F4B           03815         MOVWF SD_EXTENDED_RETURN
  000019D0            03816 F4_000959 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0019D0 0100           03817         MOVLB 0
  00000000            03818 RAM_BANK = 0
0019D2 0012           03819         RETURN 0
  000019D4            03820 F4_000960 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0019D4                03821 BC@LL166
  000019D4            03822 F4_000961 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Sec_Num = SD_Root_Dir + SD_Root_Dir_Sec
0019D4 0102           03823         MOVLB 2
  00000002            03824 RAM_BANK = 2
0019D6 5185           03825         MOVF SD_ROOT_DIR_SEC,W
0019D8 256F           03826         ADDWF SD_ROOT_DIR,W
0019DA 6FBE           03827         MOVWF SD_WRITE_SEC_NUM
0019DC 5186           03828         MOVF SD_ROOT_DIR_SECH,W
0019DE 2170           03829         ADDWFC SD_ROOT_DIRH,W
0019E0 6FBF           03830         MOVWF SD_WRITE_SEC_NUMH
0019E2 5187           03831         MOVF SD_ROOT_DIR_SECHH,W
0019E4 2171           03832         ADDWFC SD_ROOT_DIRHH,W
0019E6 6FC0           03833         MOVWF SD_WRITE_SEC_NUMHH
0019E8 5188           03834         MOVF SD_ROOT_DIR_SECHHH,W
0019EA 2172           03835         ADDWFC SD_ROOT_DIRHHH,W
0019EC 6FC1           03836         MOVWF SD_WRITE_SEC_NUMHHH
  000019EE            03837 F4_000962 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Write_Sec_Num
0019EE C2C1 F037      03838         MOVFF SD_WRITE_SEC_NUMHHH,SD_SECTOR_NUMHHH
0019F2 C2C0 F036      03839         MOVFF SD_WRITE_SEC_NUMHH,SD_SECTOR_NUMHH
0019F6 C2BF F035      03840         MOVFF SD_WRITE_SEC_NUMH,SD_SECTOR_NUMH
0019FA C2BE F034      03841         MOVFF SD_WRITE_SEC_NUM,SD_SECTOR_NUM
  000019FE            03842 F4_000963 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0019FE 0E01           03843         MOVLW 1
001A00 6F4A           03844         MOVWF SD_RW_OPTION
  00001A02            03845 F4_000964 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001A02 0100           03846         MOVLB 0
  00000000            03847 RAM_BANK = 0
                      03848         F@CALL SD_SECTOR_SUB
  00001A08            03849 F4_000966 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $1F
001A08 0102           03850         MOVLB 2
  00000002            03851 RAM_BANK = 2
001A0A 6B50           03852         CLRF SD_ROOT_DIR_FILE_POS
001A0C                03853 FR@LB168
001A0C 0100           03854         MOVLB 0
  00000000            03855 RAM_BANK = 0
001A0E 0E20           03856         MOVLW 32
001A10 0102           03857         MOVLB 2
  00000002            03858 RAM_BANK = 2
001A12 5D50           03859         SUBWF SD_ROOT_DIR_FILE_POS,W
001A14 0100           03860         MOVLB 0
  00000000            03861 RAM_BANK = 0
001A16 B0D8           03862         BTFSC STATUS,0,0
                      03863         GO@TO NX@LB169
  00001A1C            03864 F4_000967 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + SD_Root_Dir_File_Pos
001A1C 0102           03865         MOVLB 2
  00000002            03866 RAM_BANK = 2
001A1E 5150           03867         MOVF SD_ROOT_DIR_FILE_POS,W
001A20 2589           03868         ADDWF SD_ROOT_DIR_POS,W
001A22 6FC2           03869         MOVWF SD_WRITE_BUFFER_POS
001A24 0E00           03870         MOVLW 0
001A26 218A           03871         ADDWFC SD_ROOT_DIR_POSH,W
001A28 6FC3           03872         MOVWF SD_WRITE_BUFFER_POSH
  00001A2A            03873 F4_000968 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = 0
001A2A 6B4D           03874         CLRF SD_DATA_IO
  00001A2C            03875 F4_000969 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001A2C 0100           03876         MOVLB 0
  00000000            03877 RAM_BANK = 0
                      03878         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001A32            03879 F4_000970 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
001A32 0102           03880         MOVLB 2
  00000002            03881 RAM_BANK = 2
001A34 2B50           03882         INCF SD_ROOT_DIR_FILE_POS,F
001A36 0100           03883         MOVLB 0
  00000000            03884 RAM_BANK = 0
001A38 A4D8           03885         BTFSS STATUS,2,0
                      03886         GO@TO FR@LB168
001A3C                03887 NX@LB169
  00001A3C            03888 F4_000971 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Modify_File_Name
                      03889         F@CALL SD_MODIFY_FILE_NAME
  00001A40            03890 F4_000972 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $00 To $07
001A40 0102           03891         MOVLB 2
  00000002            03892 RAM_BANK = 2
001A42 6B50           03893         CLRF SD_ROOT_DIR_FILE_POS
001A44                03894 FR@LB170
001A44 0100           03895         MOVLB 0
  00000000            03896 RAM_BANK = 0
001A46 0E08           03897         MOVLW 8
001A48 0102           03898         MOVLB 2
  00000002            03899 RAM_BANK = 2
001A4A 5D50           03900         SUBWF SD_ROOT_DIR_FILE_POS,W
001A4C 0100           03901         MOVLB 0
  00000000            03902 RAM_BANK = 0
001A4E B0D8           03903         BTFSC STATUS,0,0
                      03904         GO@TO NX@LB171
  00001A54            03905 F4_000973 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + SD_Root_Dir_File_Pos
001A54 0102           03906         MOVLB 2
  00000002            03907 RAM_BANK = 2
001A56 5150           03908         MOVF SD_ROOT_DIR_FILE_POS,W
001A58 2589           03909         ADDWF SD_ROOT_DIR_POS,W
001A5A 6FC2           03910         MOVWF SD_WRITE_BUFFER_POS
001A5C 0E00           03911         MOVLW 0
001A5E 218A           03912         ADDWFC SD_ROOT_DIR_POSH,W
001A60 6FC3           03913         MOVWF SD_WRITE_BUFFER_POSH
  00001A62            03914 F4_000974 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Name[SD_Root_Dir_File_Pos]
001A62 EE02 F091      03915         LFSR 0,SD_FILE_NAME
001A66 5150           03916         MOVF SD_ROOT_DIR_FILE_POS,W
001A68 50EB           03917         MOVF PLUSW0,W,0
001A6A 6F4D           03918         MOVWF SD_DATA_IO
  00001A6C            03919 F4_000975 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001A6C 0100           03920         MOVLB 0
  00000000            03921 RAM_BANK = 0
                      03922         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001A72            03923 F4_000976 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
001A72 0102           03924         MOVLB 2
  00000002            03925 RAM_BANK = 2
001A74 2B50           03926         INCF SD_ROOT_DIR_FILE_POS,F
001A76 0100           03927         MOVLB 0
  00000000            03928 RAM_BANK = 0
001A78 A4D8           03929         BTFSS STATUS,2,0
                      03930         GO@TO FR@LB170
001A7C                03931 NX@LB171
  00001A7C            03932 F4_000977 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_Root_Dir_File_Pos = $08 To $0A
001A7C 0E08           03933         MOVLW 8
001A7E 0102           03934         MOVLB 2
  00000002            03935 RAM_BANK = 2
001A80 6F50           03936         MOVWF SD_ROOT_DIR_FILE_POS
001A82                03937 FR@LB172
001A82 0100           03938         MOVLB 0
  00000000            03939 RAM_BANK = 0
001A84 0E0B           03940         MOVLW 11
001A86 0102           03941         MOVLB 2
  00000002            03942 RAM_BANK = 2
001A88 5D50           03943         SUBWF SD_ROOT_DIR_FILE_POS,W
001A8A 0100           03944         MOVLB 0
  00000000            03945 RAM_BANK = 0
001A8C B0D8           03946         BTFSC STATUS,0,0
                      03947         GO@TO NX@LB173
  00001A92            03948 F4_000978 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + SD_Root_Dir_File_Pos
001A92 0102           03949         MOVLB 2
  00000002            03950 RAM_BANK = 2
001A94 5150           03951         MOVF SD_ROOT_DIR_FILE_POS,W
001A96 2589           03952         ADDWF SD_ROOT_DIR_POS,W
001A98 6FC2           03953         MOVWF SD_WRITE_BUFFER_POS
001A9A 0E00           03954         MOVLW 0
001A9C 218A           03955         ADDWFC SD_ROOT_DIR_POSH,W
001A9E 6FC3           03956         MOVWF SD_WRITE_BUFFER_POSH
  00001AA0            03957 F4_000979 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_File_Ext[SD_Root_Dir_File_Pos - $08]
001AA0 0E08           03958         MOVLW 8
001AA2 5D50           03959         SUBWF SD_ROOT_DIR_FILE_POS,W
001AA4 EE02 F09A      03960         LFSR 0,SD_FILE_EXT
001AA8 50EB           03961         MOVF PLUSW0,W,0
001AAA 6F4D           03962         MOVWF SD_DATA_IO
  00001AAC            03963 F4_000980 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001AAC 0100           03964         MOVLB 0
  00000000            03965 RAM_BANK = 0
                      03966         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001AB2            03967 F4_000981 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_Root_Dir_File_Pos
001AB2 0102           03968         MOVLB 2
  00000002            03969 RAM_BANK = 2
001AB4 2B50           03970         INCF SD_ROOT_DIR_FILE_POS,F
001AB6 0100           03971         MOVLB 0
  00000000            03972 RAM_BANK = 0
001AB8 A4D8           03973         BTFSS STATUS,2,0
                      03974         GO@TO FR@LB172
001ABC                03975 NX@LB173
  00001ABC            03976 F4_000982 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $0B
001ABC 0E0B           03977         MOVLW 11
001ABE 0102           03978         MOVLB 2
  00000002            03979 RAM_BANK = 2
001AC0 2589           03980         ADDWF SD_ROOT_DIR_POS,W
001AC2 6FC2           03981         MOVWF SD_WRITE_BUFFER_POS
001AC4 0E00           03982         MOVLW 0
001AC6 218A           03983         ADDWFC SD_ROOT_DIR_POSH,W
001AC8 6FC3           03984         MOVWF SD_WRITE_BUFFER_POSH
  00001ACA            03985 F4_000983 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = %00100000
001ACA 0E20           03986         MOVLW 32
001ACC 6F4D           03987         MOVWF SD_DATA_IO
  00001ACE            03988 F4_000984 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001ACE 0100           03989         MOVLB 0
  00000000            03990 RAM_BANK = 0
                      03991         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001AD4            03992 F4_000985 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $0D
001AD4 0E0D           03993         MOVLW 13
001AD6 0102           03994         MOVLB 2
  00000002            03995 RAM_BANK = 2
001AD8 2589           03996         ADDWF SD_ROOT_DIR_POS,W
001ADA 6FC2           03997         MOVWF SD_WRITE_BUFFER_POS
001ADC 0E00           03998         MOVLW 0
001ADE 218A           03999         ADDWFC SD_ROOT_DIR_POSH,W
001AE0 6FC3           04000         MOVWF SD_WRITE_BUFFER_POSH
  00001AE2            04001 F4_000986 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Set_File_Time_Create
001AE2 0100           04002         MOVLB 0
  00000000            04003 RAM_BANK = 0
                      04004         F@CALL SD_SET_FILE_TIME_CREATE
  00001AE8            04005 F4_000987 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos + $1A
001AE8 0E1A           04006         MOVLW 26
001AEA 0102           04007         MOVLB 2
  00000002            04008 RAM_BANK = 2
001AEC 2589           04009         ADDWF SD_ROOT_DIR_POS,W
001AEE 6FC2           04010         MOVWF SD_WRITE_BUFFER_POS
001AF0 0E00           04011         MOVLW 0
001AF2 218A           04012         ADDWFC SD_ROOT_DIR_POSH,W
001AF4 6FC3           04013         MOVWF SD_WRITE_BUFFER_POSH
  00001AF6            04014 F4_000988 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE0
001AF6 C2C5 F24D      04015         MOVFF SD_CLUSTER_NUM,SD_DATA_IO
  00001AFA            04016 F4_000989 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001AFA 0100           04017         MOVLB 0
  00000000            04018 RAM_BANK = 0
                      04019         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001B00            04020 F4_000990 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Write_Buffer_Pos
001B00 0102           04021         MOVLB 2
  00000002            04022 RAM_BANK = 2
001B02 4BC2           04023         INFSNZ SD_WRITE_BUFFER_POS,F
001B04 2BC3           04024         INCF SD_WRITE_BUFFER_POSH,F
  00001B06            04025 F4_000991 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = SD_Cluster_Num.BYTE1
001B06 C2C6 F24D      04026         MOVFF SD_CLUSTER_NUMH,SD_DATA_IO
  00001B0A            04027 F4_000992 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001B0A 0100           04028         MOVLB 0
  00000000            04029 RAM_BANK = 0
                      04030         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001B10            04031 F4_000993 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04032         F@CALL SD_WRITE_SECTOR
  00001B14            04033 F4_000994 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001B14 0EFE           04034         MOVLW 254
001B16 0102           04035         MOVLB 2
  00000002            04036 RAM_BANK = 2
001B18 25C5           04037         ADDWF SD_CLUSTER_NUM,W
001B1A 6E23           04038         MOVWF PP7,0
001B1C 0EFF           04039         MOVLW 255
001B1E 21C6           04040         ADDWFC SD_CLUSTER_NUMH,W
001B20 6E24           04041         MOVWF PP7H,0
001B22 0EFF           04042         MOVLW 255
001B24 6A25           04043         CLRF PP7HH,0
001B26 2225           04044         ADDWFC PP7HH,F,0
001B28 6A26           04045         CLRF PP7HHH,0
001B2A 2226           04046         ADDWFC PP7HHH,F,0
001B2C C026 F014      04047         MOVFF PP7HHH,PP0HHH
001B30 C025 F013      04048         MOVFF PP7HH,PP0HH
001B34 C024 F012      04049         MOVFF PP7H,PP0H
001B38 C023 F011      04050         MOVFF PP7,PP0
001B3C 6A1C           04051         CLRF PP2HHH,0
001B3E 6A1B           04052         CLRF PP2HH,0
001B40 6A1A           04053         CLRF PP2H,0
001B42 C255 F019      04054         MOVFF SD_SECS_PER_CLUSTER,PP2
                      04055         F@CALL AL@MUL
001B4A C014 F28E      04056         MOVFF PP0HHH,SD_DATA_SECHHH
001B4E C013 F28D      04057         MOVFF PP0HH,SD_DATA_SECHH
001B52 C012 F28C      04058         MOVFF PP0H,SD_DATA_SECH
001B56 C011 F28B      04059         MOVFF PP0,SD_DATA_SEC
  00001B5A            04060 F4_000995 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
001B5A 5173           04061         MOVF SD_DATA_AREA,W
001B5C 278B           04062         ADDWF SD_DATA_SEC,F
001B5E 5174           04063         MOVF SD_DATA_AREAH,W
001B60 238C           04064         ADDWFC SD_DATA_SECH,F
001B62 5175           04065         MOVF SD_DATA_AREAHH,W
001B64 238D           04066         ADDWFC SD_DATA_SECHH,F
001B66 5176           04067         MOVF SD_DATA_AREAHHH,W
001B68 238E           04068         ADDWFC SD_DATA_SECHHH,F
  00001B6A            04069 F4_000996 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 1
001B6A 0E01           04070         MOVLW 1
001B6C 6FCB           04071         MOVWF SD_SEC_IN_CLUSTER
  00001B6E            04072 F4_000997 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001B6E C28E F037      04073         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001B72 C28D F036      04074         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001B76 C28C F035      04075         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001B7A C28B F034      04076         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001B7E            04077 F4_000998 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 0
001B7E 6B4A           04078         CLRF SD_RW_OPTION
  00001B80            04079 F4_000999 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001B80 0100           04080         MOVLB 0
  00000000            04081 RAM_BANK = 0
                      04082         F@CALL SD_SECTOR_SUB
  00001B86            04083 F4_001001 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = 0
001B86 0102           04084         MOVLB 2
  00000002            04085 RAM_BANK = 2
001B88 6B90           04086         CLRF SD_DATA_BUFFER_POSH
001B8A 6B8F           04087         CLRF SD_DATA_BUFFER_POS
  00001B8C            04088 F4_001002 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size = 0
001B8C 6BCF           04089         CLRF SD_FILE_SIZEHHH
001B8E 6BCE           04090         CLRF SD_FILE_SIZEHH
001B90 6BCD           04091         CLRF SD_FILE_SIZEH
001B92 6BCC           04092         CLRF SD_FILE_SIZE
  00001B94            04093 F4_001003 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Ptr = 0
001B94 6BE4           04094         CLRF SD_BYTES_READHHH
001B96 6BE3           04095         CLRF SD_BYTES_READHH
001B98 6BE2           04096         CLRF SD_BYTES_READH
001B9A 6BE1           04097         CLRF SD_BYTES_READ
  00001B9C            04098 F4_001004 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
001B9C 81E5           04099         BSF _B#VR1,0
  00001B9E            04100 F4_001005 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Return_F = 1
001B9E 0E01           04101         MOVLW 1
001BA0 6FF8           04102         MOVWF SD_RETURN_F
  00001BA2            04103 F4_001006 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
001BA2 0100           04104         MOVLB 0
  00000000            04105 RAM_BANK = 0
001BA4 0012           04106         RETURN 0
  00001BA6            04107 F4_001012 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Append_File MACRO
                      04108 SD_APPEND_FILE  MACRO .,.,.,.,.,.,.,.,.,.
                      04109  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      04110  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      04111         F@CALL SD_APPEND_FILE_SUB
                      04112         IF (RETURN_TYPE !=BYTE)
                      04113         ERROR "(In Asm) SD_Append_File - Return variable should be a Byte variable"
                      04114         ELSE
                      04115         IF (RETURN_TYPE == BYTE)
                      04116         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      04117         ENDIF
                      04118         ENDIF
                      04119         ENDM
001BA6                04120 SD_APPEND_FILE_SUB
  00001BA6            04121 F4_001030 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Check_For_File_Sub
                      04122         F@CALL SD_CHECK_FOR_FILE_SUB
  00001BAA            04123 F4_001031 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir <> 0 Then
001BAA 0102           04124         MOVLB 2
  00000002            04125 RAM_BANK = 2
001BAC 534C           04126         MOVF SD_EXTENDED_RETURN_ROOT_DIR,F
001BAE 0100           04127         MOVLB 0
  00000000            04128 RAM_BANK = 0
001BB0 B4D8           04129         BTFSC STATUS,2,0
                      04130         GO@TO BC@LL174
  00001BB6            04131 F4_001032 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001BB6 0E01           04132         MOVLW 1
001BB8 0102           04133         MOVLB 2
  00000002            04134 RAM_BANK = 2
001BBA 6F4B           04135         MOVWF SD_EXTENDED_RETURN
  00001BBC            04136 F4_001033 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
001BBC 0100           04137         MOVLB 0
  00000000            04138 RAM_BANK = 0
001BBE 0012           04139         RETURN 0
  00001BC0            04140 F4_001034 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001BC0                04141 BC@LL174
  00001BC0            04142 F4_001035 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE0 = SD_Root_Dir_File[$1A]
001BC0 0102           04143         MOVLB 2
  00000002            04144 RAM_BANK = 2
001BC2 51B8           04145         MOVF SD_ROOT_DIR_FILE#26,W
001BC4 6FC5           04146         MOVWF SD_CLUSTER_NUM
  00001BC6            04147 F4_001036 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE1 = SD_Root_Dir_File[$1B]
001BC6 51B9           04148         MOVF SD_ROOT_DIR_FILE#27,W
001BC8 6FC6           04149         MOVWF SD_CLUSTER_NUMH
  00001BCA            04150 F4_001037 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE0 = SD_Root_Dir_File[$1C]
001BCA 51BA           04151         MOVF SD_ROOT_DIR_FILE#28,W
001BCC 6FCC           04152         MOVWF SD_FILE_SIZE
  00001BCE            04153 F4_001038 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE1 = SD_Root_Dir_File[$1D]
001BCE 51BB           04154         MOVF SD_ROOT_DIR_FILE#29,W
001BD0 6FCD           04155         MOVWF SD_FILE_SIZEH
  00001BD2            04156 F4_001039 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE2 = SD_Root_Dir_File[$1E]
001BD2 51BC           04157         MOVF SD_ROOT_DIR_FILE#30,W
001BD4 6FCE           04158         MOVWF SD_FILE_SIZEHH
  00001BD6            04159 F4_001040 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size.BYTE3 = SD_Root_Dir_File[$1F]
001BD6 51BD           04160         MOVF SD_ROOT_DIR_FILE#31,W
001BD8 6FCF           04161         MOVWF SD_FILE_SIZEHHH
  00001BDA            04162 F4_001041 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size_Left = SD_File_Size
001BDA C2CF F2ED      04163         MOVFF SD_FILE_SIZEHHH,SD_FILE_SIZE_LEFTHHH
001BDE C2CE F2EC      04164         MOVFF SD_FILE_SIZEHH,SD_FILE_SIZE_LEFTHH
001BE2 C2CD F2EB      04165         MOVFF SD_FILE_SIZEH,SD_FILE_SIZE_LEFTH
001BE6 C2CC F2EA      04166         MOVFF SD_FILE_SIZE,SD_FILE_SIZE_LEFT
  00001BEA            04167 F4_001042 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = 0
001BEA 6A37           04168         CLRF SD_SECTOR_NUMHHH,0
001BEC 6A36           04169         CLRF SD_SECTOR_NUMHH,0
001BEE 6A35           04170         CLRF SD_SECTOR_NUMH,0
001BF0 6A34           04171         CLRF SD_SECTOR_NUM,0
  00001BF2            04172 F4_001043 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] While SD_File_Size_Left > (SD_Bytes_Per_Sec * SD_Secs_Per_Cluster)
001BF2                04173 BC@LL175
001BF2 0100           04174         MOVLB 0
  00000000            04175 RAM_BANK = 0
001BF4 0102           04176         MOVLB 2
  00000002            04177 RAM_BANK = 2
001BF6 5155           04178         MOVF SD_SECS_PER_CLUSTER,W
001BF8 035F           04179         MULWF SD_BYTES_PER_SEC
001BFA CFF3 F008      04180         MOVFF PRODL,PBP#VAR0
001BFE CFF4 F009      04181         MOVFF PRODH,PBP#VAR0H
001C02 0360           04182         MULWF SD_BYTES_PER_SECH
001C04 50F3           04183         MOVF PRODL,W,0
001C06 2609           04184         ADDWF PBP#VAR0H,F,0
001C08 96D8           04185         BCF STATUS,3,0
001C0A BFED           04186         BTFSC SD_FILE_SIZE_LEFTHHH,7
001C0C 86D8           04187         BSF STATUS,3,0
001C0E 0100           04188         MOVLB 0
  00000000            04189 RAM_BANK = 0
                      04190         G@OTO BC@LL176
001C16 0102           04191         MOVLB 2
  00000002            04192 RAM_BANK = 2
001C18 53ED           04193         MOVF SD_FILE_SIZE_LEFTHHH,F
001C1A E110           04194         BNZ CP@LB25
001C1C 53EC           04195         MOVF SD_FILE_SIZE_LEFTHH,F
001C1E E10E           04196         BNZ CP@LB25
001C20 5009           04197         MOVF PBP#VAR0H,W,0
001C22 5DEB           04198         SUBWF SD_FILE_SIZE_LEFTH,W
001C24 0100           04199         MOVLB 0
  00000000            04200 RAM_BANK = 0
001C26 A0D8           04201         BTFSS STATUS,0,0
                      04202         GO@TO BC@LL176
001C2C E107           04203         BNZ CP@LB25
001C2E 0102           04204         MOVLB 2
  00000002            04205 RAM_BANK = 2
001C30 51EA           04206         MOVF SD_FILE_SIZE_LEFT,W
001C32 5C08           04207         SUBWF PBP#VAR0,W,0
001C34 0100           04208         MOVLB 0
  00000000            04209 RAM_BANK = 0
001C36 B0D8           04210         BTFSC STATUS,0,0
                      04211         GO@TO BC@LL176
001C3C                04212 CP@LB25
  00001C3C            04213 F4_001044 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001C3C 6A14           04214         CLRF PP0HHH,0
001C3E 6A13           04215         CLRF PP0HH,0
001C40 C2C6 F012      04216         MOVFF SD_CLUSTER_NUMH,PP0H
001C44 C2C5 F011      04217         MOVFF SD_CLUSTER_NUM,PP0
001C48 6A1C           04218         CLRF PP2HHH,0
001C4A 6A1B           04219         CLRF PP2HH,0
001C4C 0E01           04220         MOVLW 1
001C4E 6E1A           04221         MOVWF PP2H,0
001C50 6A19           04222         CLRF PP2,0
                      04223         F@CALL L@DIV
001C56 C014 F27C      04224         MOVFF PP0HHH,SD_FAT_SECHHH
001C5A C013 F27B      04225         MOVFF PP0HH,SD_FAT_SECHH
001C5E C012 F27A      04226         MOVFF PP0H,SD_FAT_SECH
001C62 C011 F279      04227         MOVFF PP0,SD_FAT_SEC
  00001C66            04228 F4_001045 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001C66 C2C5 F27D      04229         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001C6A 0102           04230         MOVLB 2
  00000002            04231 RAM_BANK = 2
001C6C 6B7E           04232         CLRF SD_FAT_BUFFER_POSH
  00001C6E            04233 F4_001046 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001C6E 90D8           04234         BCF STATUS,0,0
001C70 377D           04235         RLCF SD_FAT_BUFFER_POS,F
001C72 377E           04236         RLCF SD_FAT_BUFFER_POSH,F
  00001C74            04237 F4_001047 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Sector_Num <> (SD_FAT1 + SD_FAT_Sec) Then
001C74 5179           04238         MOVF SD_FAT_SEC,W
001C76 2567           04239         ADDWF SD_FAT1,W
001C78 6E08           04240         MOVWF PBP#VAR0,0
001C7A 517A           04241         MOVF SD_FAT_SECH,W
001C7C 2168           04242         ADDWFC SD_FAT1H,W
001C7E 6E09           04243         MOVWF PBP#VAR0H,0
001C80 517B           04244         MOVF SD_FAT_SECHH,W
001C82 2169           04245         ADDWFC SD_FAT1HH,W
001C84 6E0A           04246         MOVWF PBP#VAR0HH,0
001C86 517C           04247         MOVF SD_FAT_SECHHH,W
001C88 216A           04248         ADDWFC SD_FAT1HHH,W
001C8A 6E0B           04249         MOVWF PBP#VAR0HHH,0
001C8C 5008           04250         MOVF PBP#VAR0,W,0
001C8E 5C34           04251         SUBWF SD_SECTOR_NUM,W,0
001C90 E10C           04252         BNZ CP@LB26
001C92 5009           04253         MOVF PBP#VAR0H,W,0
001C94 5C35           04254         SUBWF SD_SECTOR_NUMH,W,0
001C96 E109           04255         BNZ CP@LB26
001C98 500A           04256         MOVF PBP#VAR0HH,W,0
001C9A 5C36           04257         SUBWF SD_SECTOR_NUMHH,W,0
001C9C E106           04258         BNZ CP@LB26
001C9E 500B           04259         MOVF PBP#VAR0HHH,W,0
001CA0 5C37           04260         SUBWF SD_SECTOR_NUMHHH,W,0
001CA2 0100           04261         MOVLB 0
  00000000            04262 RAM_BANK = 0
001CA4 B4D8           04263         BTFSC STATUS,2,0
                      04264         GO@TO BC@LL178
001CAA                04265 CP@LB26
  00001CAA            04266 F4_001048 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
001CAA 0102           04267         MOVLB 2
  00000002            04268 RAM_BANK = 2
001CAC 5179           04269         MOVF SD_FAT_SEC,W
001CAE 2567           04270         ADDWF SD_FAT1,W
001CB0 6E34           04271         MOVWF SD_SECTOR_NUM,0
001CB2 517A           04272         MOVF SD_FAT_SECH,W
001CB4 2168           04273         ADDWFC SD_FAT1H,W
001CB6 6E35           04274         MOVWF SD_SECTOR_NUMH,0
001CB8 517B           04275         MOVF SD_FAT_SECHH,W
001CBA 2169           04276         ADDWFC SD_FAT1HH,W
001CBC 6E36           04277         MOVWF SD_SECTOR_NUMHH,0
001CBE 517C           04278         MOVF SD_FAT_SECHHH,W
001CC0 216A           04279         ADDWFC SD_FAT1HHH,W
001CC2 6E37           04280         MOVWF SD_SECTOR_NUMHHH,0
  00001CC4            04281 F4_001049 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001CC4 0E01           04282         MOVLW 1
001CC6 6F4A           04283         MOVWF SD_RW_OPTION
  00001CC8            04284 F4_001050 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001CC8 0100           04285         MOVLB 0
  00000000            04286 RAM_BANK = 0
                      04287         F@CALL SD_SECTOR_SUB
  00001CCE            04288 F4_001052 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001CCE                04289 BC@LL178
  00001CCE            04290 F4_001053 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
001CCE C27E F24F      04291         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
001CD2 C27D F24E      04292         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  00001CD6            04293 F4_001054 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      04294         F@CALL SD_READ_FAT_ENTRY
  00001CDA            04295 F4_001055 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
001CDA C278 F2C6      04296         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
001CDE C277 F2C5      04297         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  00001CE2            04298 F4_001056 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Size_Left = SD_File_Size_Left - (SD_Bytes_Per_Sec * SD_Secs_Per_Cluster)
001CE2 6A14           04299         CLRF PP0HHH,0
001CE4 6A13           04300         CLRF PP0HH,0
001CE6 C260 F012      04301         MOVFF SD_BYTES_PER_SECH,PP0H
001CEA C25F F011      04302         MOVFF SD_BYTES_PER_SEC,PP0
001CEE 6A1C           04303         CLRF PP2HHH,0
001CF0 6A1B           04304         CLRF PP2HH,0
001CF2 6A1A           04305         CLRF PP2H,0
001CF4 C255 F019      04306         MOVFF SD_SECS_PER_CLUSTER,PP2
                      04307         F@CALL AL@MUL
001CFC C014 F026      04308         MOVFF PP0HHH,PP7HHH
001D00 C013 F025      04309         MOVFF PP0HH,PP7HH
001D04 C012 F024      04310         MOVFF PP0H,PP7H
001D08 C011 F023      04311         MOVFF PP0,PP7
001D0C 5023           04312         MOVF PP7,W,0
001D0E 0102           04313         MOVLB 2
  00000002            04314 RAM_BANK = 2
001D10 5FEA           04315         SUBWF SD_FILE_SIZE_LEFT,F
001D12 5024           04316         MOVF PP7H,W,0
001D14 5BEB           04317         SUBWFB SD_FILE_SIZE_LEFTH,F
001D16 5025           04318         MOVF PP7HH,W,0
001D18 5BEC           04319         SUBWFB SD_FILE_SIZE_LEFTHH,F
001D1A 5026           04320         MOVF PP7HHH,W,0
001D1C 5BED           04321         SUBWFB SD_FILE_SIZE_LEFTHHH,F
  00001D1E            04322 F4_001057 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Wend
001D1E 0100           04323         MOVLB 0
  00000000            04324 RAM_BANK = 0
                      04325         F@JUMP BC@LL175
001D22                04326 BC@LL176
  00001D22            04327 F4_001058 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001D22 6A14           04328         CLRF PP0HHH,0
001D24 6A13           04329         CLRF PP0HH,0
001D26 C2C6 F012      04330         MOVFF SD_CLUSTER_NUMH,PP0H
001D2A C2C5 F011      04331         MOVFF SD_CLUSTER_NUM,PP0
001D2E 6A1C           04332         CLRF PP2HHH,0
001D30 6A1B           04333         CLRF PP2HH,0
001D32 0E01           04334         MOVLW 1
001D34 6E1A           04335         MOVWF PP2H,0
001D36 6A19           04336         CLRF PP2,0
                      04337         F@CALL L@DIV
001D3C C014 F27C      04338         MOVFF PP0HHH,SD_FAT_SECHHH
001D40 C013 F27B      04339         MOVFF PP0HH,SD_FAT_SECHH
001D44 C012 F27A      04340         MOVFF PP0H,SD_FAT_SECH
001D48 C011 F279      04341         MOVFF PP0,SD_FAT_SEC
  00001D4C            04342 F4_001059 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001D4C C2C5 F27D      04343         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001D50 0102           04344         MOVLB 2
  00000002            04345 RAM_BANK = 2
001D52 6B7E           04346         CLRF SD_FAT_BUFFER_POSH
  00001D54            04347 F4_001060 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001D54 90D8           04348         BCF STATUS,0,0
001D56 377D           04349         RLCF SD_FAT_BUFFER_POS,F
001D58 377E           04350         RLCF SD_FAT_BUFFER_POSH,F
  00001D5A            04351 F4_001061 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_File_Size_Left = 0 Then
001D5A 51ED           04352         MOVF SD_FILE_SIZE_LEFTHHH,W
001D5C 11EC           04353         IORWF SD_FILE_SIZE_LEFTHH,W
001D5E 11EB           04354         IORWF SD_FILE_SIZE_LEFTH,W
001D60 11EA           04355         IORWF SD_FILE_SIZE_LEFT,W
001D62 0100           04356         MOVLB 0
  00000000            04357 RAM_BANK = 0
001D64 A4D8           04358         BTFSS STATUS,2,0
                      04359         GO@TO BC@LL180
  00001D6A            04360 F4_001062 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = 0
001D6A 0102           04361         MOVLB 2
  00000002            04362 RAM_BANK = 2
001D6C 6BCB           04363         CLRF SD_SEC_IN_CLUSTER
001D6E 0100           04364         MOVLB 0
  00000000            04365 RAM_BANK = 0
                      04366         F@JUMP BC@LL181
001D74                04367 BC@LL180
  00001D74            04368 F4_001063 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  00001D74            04369 F4_001064 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = (SD_File_Size_Left - 1) / SD_Bytes_Per_Sec
001D74 0102           04370         MOVLB 2
  00000002            04371 RAM_BANK = 2
001D76 05EA           04372         DECF SD_FILE_SIZE_LEFT,W
001D78 6E23           04373         MOVWF PP7,0
001D7A 0E00           04374         MOVLW 0
001D7C 59EB           04375         SUBWFB SD_FILE_SIZE_LEFTH,W
001D7E 6E24           04376         MOVWF PP7H,0
001D80 0E00           04377         MOVLW 0
001D82 59EC           04378         SUBWFB SD_FILE_SIZE_LEFTHH,W
001D84 6E25           04379         MOVWF PP7HH,0
001D86 0E00           04380         MOVLW 0
001D88 59ED           04381         SUBWFB SD_FILE_SIZE_LEFTHHH,W
001D8A 6E26           04382         MOVWF PP7HHH,0
001D8C C026 F014      04383         MOVFF PP7HHH,PP0HHH
001D90 C025 F013      04384         MOVFF PP7HH,PP0HH
001D94 C024 F012      04385         MOVFF PP7H,PP0H
001D98 C023 F011      04386         MOVFF PP7,PP0
001D9C 6A1C           04387         CLRF PP2HHH,0
001D9E 6A1B           04388         CLRF PP2HH,0
001DA0 C260 F01A      04389         MOVFF SD_BYTES_PER_SECH,PP2H
001DA4 C25F F019      04390         MOVFF SD_BYTES_PER_SEC,PP2
                      04391         F@CALL L@DIV
001DAC C011 F2CB      04392         MOVFF PP0,SD_SEC_IN_CLUSTER
  00001DB0            04393 F4_001065 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001DB0                04394 BC@LL181
001DB0 0100           04395         MOVLB 0
  00000000            04396 RAM_BANK = 0
  00001DB2            04397 F4_001066 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = (SD_Cluster_Num - 2) * SD_Secs_Per_Cluster
001DB2 0EFE           04398         MOVLW 254
001DB4 0102           04399         MOVLB 2
  00000002            04400 RAM_BANK = 2
001DB6 25C5           04401         ADDWF SD_CLUSTER_NUM,W
001DB8 6E23           04402         MOVWF PP7,0
001DBA 0EFF           04403         MOVLW 255
001DBC 21C6           04404         ADDWFC SD_CLUSTER_NUMH,W
001DBE 6E24           04405         MOVWF PP7H,0
001DC0 0EFF           04406         MOVLW 255
001DC2 6A25           04407         CLRF PP7HH,0
001DC4 2225           04408         ADDWFC PP7HH,F,0
001DC6 6A26           04409         CLRF PP7HHH,0
001DC8 2226           04410         ADDWFC PP7HHH,F,0
001DCA C026 F014      04411         MOVFF PP7HHH,PP0HHH
001DCE C025 F013      04412         MOVFF PP7HH,PP0HH
001DD2 C024 F012      04413         MOVFF PP7H,PP0H
001DD6 C023 F011      04414         MOVFF PP7,PP0
001DDA 6A1C           04415         CLRF PP2HHH,0
001DDC 6A1B           04416         CLRF PP2HH,0
001DDE 6A1A           04417         CLRF PP2H,0
001DE0 C255 F019      04418         MOVFF SD_SECS_PER_CLUSTER,PP2
                      04419         F@CALL AL@MUL
001DE8 C014 F28E      04420         MOVFF PP0HHH,SD_DATA_SECHHH
001DEC C013 F28D      04421         MOVFF PP0HH,SD_DATA_SECHH
001DF0 C012 F28C      04422         MOVFF PP0H,SD_DATA_SECH
001DF4 C011 F28B      04423         MOVFF PP0,SD_DATA_SEC
  00001DF8            04424 F4_001067 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Sec_in_Cluster
001DF8 51CB           04425         MOVF SD_SEC_IN_CLUSTER,W
001DFA 258B           04426         ADDWF SD_DATA_SEC,W
001DFC 6F8B           04427         MOVWF SD_DATA_SEC
001DFE 0E00           04428         MOVLW 0
001E00 218C           04429         ADDWFC SD_DATA_SECH,W
001E02 6F8C           04430         MOVWF SD_DATA_SECH
001E04 0E00           04431         MOVLW 0
001E06 218D           04432         ADDWFC SD_DATA_SECHH,W
001E08 6F8D           04433         MOVWF SD_DATA_SECHH
001E0A 0E00           04434         MOVLW 0
001E0C 218E           04435         ADDWFC SD_DATA_SECHHH,W
001E0E 6F8E           04436         MOVWF SD_DATA_SECHHH
  00001E10            04437 F4_001068 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Sec = SD_Data_Sec + SD_Data_Area
001E10 5173           04438         MOVF SD_DATA_AREA,W
001E12 278B           04439         ADDWF SD_DATA_SEC,F
001E14 5174           04440         MOVF SD_DATA_AREAH,W
001E16 238C           04441         ADDWFC SD_DATA_SECH,F
001E18 5175           04442         MOVF SD_DATA_AREAHH,W
001E1A 238D           04443         ADDWFC SD_DATA_SECHH,F
001E1C 5176           04444         MOVF SD_DATA_AREAHHH,W
001E1E 238E           04445         ADDWFC SD_DATA_SECHHH,F
  00001E20            04446 F4_001069 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sec_in_Cluster = SD_Sec_in_Cluster + 1
001E20 2BCB           04447         INCF SD_SEC_IN_CLUSTER,F
  00001E22            04448 F4_001070 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Data_Sec
001E22 C28E F037      04449         MOVFF SD_DATA_SECHHH,SD_SECTOR_NUMHHH
001E26 C28D F036      04450         MOVFF SD_DATA_SECHH,SD_SECTOR_NUMHH
001E2A C28C F035      04451         MOVFF SD_DATA_SECH,SD_SECTOR_NUMH
001E2E C28B F034      04452         MOVFF SD_DATA_SEC,SD_SECTOR_NUM
  00001E32            04453 F4_001071 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
001E32 0E01           04454         MOVLW 1
001E34 6F4A           04455         MOVWF SD_RW_OPTION
  00001E36            04456 F4_001072 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
001E36 0100           04457         MOVLB 0
  00000000            04458 RAM_BANK = 0
                      04459         F@CALL SD_SECTOR_SUB
  00001E3C            04460 F4_001074 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Return = 1 Then
001E3C 0E01           04461         MOVLW 1
001E3E 5C40           04462         SUBWF SD_RETURN,W,0
001E40 A4D8           04463         BTFSS STATUS,2,0
                      04464         GO@TO BC@LL183
  00001E46            04465 F4_001075 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001E46 0E01           04466         MOVLW 1
001E48 0102           04467         MOVLB 2
  00000002            04468 RAM_BANK = 2
001E4A 6F4B           04469         MOVWF SD_EXTENDED_RETURN
  00001E4C            04470 F4_001076 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
001E4C 0100           04471         MOVLB 0
  00000000            04472 RAM_BANK = 0
001E4E 0012           04473         RETURN 0
  00001E50            04474 F4_001077 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001E50                04475 BC@LL183
  00001E50            04476 F4_001078 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = SD_File_Size_Left // SD_Bytes_Per_Sec
001E50 C2ED F014      04477         MOVFF SD_FILE_SIZE_LEFTHHH,PP0HHH
001E54 C2EC F013      04478         MOVFF SD_FILE_SIZE_LEFTHH,PP0HH
001E58 C2EB F012      04479         MOVFF SD_FILE_SIZE_LEFTH,PP0H
001E5C C2EA F011      04480         MOVFF SD_FILE_SIZE_LEFT,PP0
001E60 6A1C           04481         CLRF PP2HHH,0
001E62 6A1B           04482         CLRF PP2HH,0
001E64 C260 F01A      04483         MOVFF SD_BYTES_PER_SECH,PP2H
001E68 C25F F019      04484         MOVFF SD_BYTES_PER_SEC,PP2
                      04485         F@CALL L@MOD
001E70 C01A F290      04486         MOVFF PP2H,SD_DATA_BUFFER_POSH
001E74 C019 F28F      04487         MOVFF PP2,SD_DATA_BUFFER_POS
  00001E78            04488 F4_001079 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Idx = SD_Data_Buffer_Pos
001E78 C290 F248      04489         MOVFF SD_DATA_BUFFER_POSH,SD_BUFFER_IDXH
001E7C C28F F247      04490         MOVFF SD_DATA_BUFFER_POS,SD_BUFFER_IDX
  00001E80            04491 F4_001080 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Data_Buffer_Pos = 0 Then
001E80 0102           04492         MOVLB 2
  00000002            04493 RAM_BANK = 2
001E82 5190           04494         MOVF SD_DATA_BUFFER_POSH,W
001E84 118F           04495         IORWF SD_DATA_BUFFER_POS,W
001E86 0100           04496         MOVLB 0
  00000000            04497 RAM_BANK = 0
001E88 A4D8           04498         BTFSS STATUS,2,0
                      04499         GO@TO BC@LL185
  00001E8E            04500 F4_001081 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_File_Size_Left > 0 Then
001E8E 96D8           04501         BCF STATUS,3,0
001E90 0102           04502         MOVLB 2
  00000002            04503 RAM_BANK = 2
001E92 BFED           04504         BTFSC SD_FILE_SIZE_LEFTHHH,7
001E94 86D8           04505         BSF STATUS,3,0
001E96 0100           04506         MOVLB 0
  00000000            04507 RAM_BANK = 0
                      04508         G@OTO BC@LL187
001E9E 0102           04509         MOVLB 2
  00000002            04510 RAM_BANK = 2
001EA0 51EA           04511         MOVF SD_FILE_SIZE_LEFT,W
001EA2 11EB           04512         IORWF SD_FILE_SIZE_LEFTH,W
001EA4 11EC           04513         IORWF SD_FILE_SIZE_LEFTHH,W
001EA6 11ED           04514         IORWF SD_FILE_SIZE_LEFTHHH,W
001EA8 0100           04515         MOVLB 0
  00000000            04516 RAM_BANK = 0
001EAA B4D8           04517         BTFSC STATUS,2,0
                      04518         GO@TO BC@LL187
001EB0 96D8           04519         BCF STATUS,3,0
001EB2 0102           04520         MOVLB 2
  00000002            04521 RAM_BANK = 2
001EB4 BFED           04522         BTFSC SD_FILE_SIZE_LEFTHHH,7
001EB6 86D8           04523         BSF STATUS,3,0
001EB8 0100           04524         MOVLB 0
  00000000            04525 RAM_BANK = 0
                      04526         G@OTO BC@LL187
001EC0 0102           04527         MOVLB 2
  00000002            04528 RAM_BANK = 2
001EC2 51EB           04529         MOVF SD_FILE_SIZE_LEFTH,W
001EC4 11EC           04530         IORWF SD_FILE_SIZE_LEFTHH,W
001EC6 11ED           04531         IORWF SD_FILE_SIZE_LEFTHHH,W
001EC8 E106           04532         BNZ CP@LB28
001ECA 0E01           04533         MOVLW 1
001ECC 5DEA           04534         SUBWF SD_FILE_SIZE_LEFT,W
001ECE 0100           04535         MOVLB 0
  00000000            04536 RAM_BANK = 0
001ED0 A0D8           04537         BTFSS STATUS,0,0
                      04538         GO@TO BC@LL187
001ED6                04539 CP@LB28
  00001ED6            04540 F4_001082 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Buffer_Pos = SD_Bytes_Per_Sec
001ED6 C260 F290      04541         MOVFF SD_BYTES_PER_SECH,SD_DATA_BUFFER_POSH
001EDA C25F F28F      04542         MOVFF SD_BYTES_PER_SEC,SD_DATA_BUFFER_POS
  00001EDE            04543 F4_001083 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Inc SD_Sector_Num
001EDE 2A34           04544         INCF SD_SECTOR_NUM,F,0
001EE0 0E00           04545         MOVLW 0
001EE2 2235           04546         ADDWFC SD_SECTOR_NUMH,F,0
001EE4 2236           04547         ADDWFC SD_SECTOR_NUMHH,F,0
001EE6 2237           04548         ADDWFC SD_SECTOR_NUMHHH,F,0
  00001EE8            04549 F4_001084 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001EE8                04550 BC@LL187
  00001EE8            04551 F4_001085 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001EE8                04552 BC@LL185
  00001EE8            04553 F4_001086 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Idx = 1
001EE8 0102           04554         MOVLB 2
  00000002            04555 RAM_BANK = 2
001EEA 6BDB           04556         CLRF SD_CLUSTER_SEQ_IDXH
001EEC 0E01           04557         MOVLW 1
001EEE 6FDA           04558         MOVWF SD_CLUSTER_SEQ_IDX
  00001EF0            04559 F4_001087 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Seq_Num = 1
001EF0 6BD9           04560         CLRF SD_CLUSTER_SEQ_NUMH
001EF2 0E01           04561         MOVLW 1
001EF4 6FD8           04562         MOVWF SD_CLUSTER_SEQ_NUM
  00001EF6            04563 F4_001088 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_EOF = 1
001EF6 81E5           04564         BSF _B#VR1,0
  00001EF8            04565 F4_001089 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Ptr = SD_File_Size
001EF8 C2CF F2E4      04566         MOVFF SD_FILE_SIZEHHH,SD_BYTES_READHHH
001EFC C2CE F2E3      04567         MOVFF SD_FILE_SIZEHH,SD_BYTES_READHH
001F00 C2CD F2E2      04568         MOVFF SD_FILE_SIZEH,SD_BYTES_READH
001F04 C2CC F2E1      04569         MOVFF SD_FILE_SIZE,SD_BYTES_READ
  00001F08            04570 F4_001090 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
001F08 6B4B           04571         CLRF SD_EXTENDED_RETURN
  00001F0A            04572 F4_001091 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
001F0A 0100           04573         MOVLB 0
  00000000            04574 RAM_BANK = 0
001F0C 0012           04575         RETURN 0
  00001F0E            04576 F4_001097 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Delete_File MACRO
                      04577 SD_DELETE_FILE  MACRO .,.,.,.,.,.,.,.,.,.
                      04578  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      04579  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      04580         F@CALL SD_DELETE_FILE_SUB
                      04581         ENDM
001F0E                04582 SD_DELETE_FILE_SUB
  00001F0E            04583 F4_001108 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Check_For_File_Sub
                      04584         F@CALL SD_CHECK_FOR_FILE_SUB
  00001F12            04585 F4_001109 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Root_Dir <> 0 Then
001F12 0102           04586         MOVLB 2
  00000002            04587 RAM_BANK = 2
001F14 534C           04588         MOVF SD_EXTENDED_RETURN_ROOT_DIR,F
001F16 0100           04589         MOVLB 0
  00000000            04590 RAM_BANK = 0
001F18 B4D8           04591         BTFSC STATUS,2,0
                      04592         GO@TO BC@LL189
  00001F1E            04593 F4_001110 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
001F1E 0E01           04594         MOVLW 1
001F20 0102           04595         MOVLB 2
  00000002            04596 RAM_BANK = 2
001F22 6F4B           04597         MOVWF SD_EXTENDED_RETURN
  00001F24            04598 F4_001111 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
001F24 0100           04599         MOVLB 0
  00000000            04600 RAM_BANK = 0
001F26 0012           04601         RETURN 0
  00001F28            04602 F4_001112 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
001F28                04603 BC@LL189
  00001F28            04604 F4_001113 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE0 = SD_Root_Dir_File[$1A]
001F28 0102           04605         MOVLB 2
  00000002            04606 RAM_BANK = 2
001F2A 51B8           04607         MOVF SD_ROOT_DIR_FILE#26,W
001F2C 6FC5           04608         MOVWF SD_CLUSTER_NUM
  00001F2E            04609 F4_001114 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num.BYTE1 = SD_Root_Dir_File[$1B]
001F2E 51B9           04610         MOVF SD_ROOT_DIR_FILE#27,W
001F30 6FC6           04611         MOVWF SD_CLUSTER_NUMH
  00001F32            04612 F4_001115 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_Root_Dir_Pos
001F32 C28A F2C3      04613         MOVFF SD_ROOT_DIR_POSH,SD_WRITE_BUFFER_POSH
001F36 C289 F2C2      04614         MOVFF SD_ROOT_DIR_POS,SD_WRITE_BUFFER_POS
  00001F3A            04615 F4_001116 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = $E5
001F3A 0EE5           04616         MOVLW 229
001F3C 6F4D           04617         MOVWF SD_DATA_IO
  00001F3E            04618 F4_001117 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
001F3E 0100           04619         MOVLB 0
  00000000            04620 RAM_BANK = 0
                      04621         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00001F44            04622 F4_001118 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04623         F@CALL SD_WRITE_SECTOR
  00001F48            04624 F4_001119 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 0
001F48 0102           04625         MOVLB 2
  00000002            04626 RAM_BANK = 2
001F4A 6B4A           04627         CLRF SD_RW_OPTION
  00001F4C            04628 F4_001120 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Repeat
001F4C                04629 BC@LL190
001F4C 0100           04630         MOVLB 0
  00000000            04631 RAM_BANK = 0
  00001F4E            04632 F4_001121 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Sec = SD_Cluster_Num / $100
001F4E 6A14           04633         CLRF PP0HHH,0
001F50 6A13           04634         CLRF PP0HH,0
001F52 C2C6 F012      04635         MOVFF SD_CLUSTER_NUMH,PP0H
001F56 C2C5 F011      04636         MOVFF SD_CLUSTER_NUM,PP0
001F5A 6A1C           04637         CLRF PP2HHH,0
001F5C 6A1B           04638         CLRF PP2HH,0
001F5E 0E01           04639         MOVLW 1
001F60 6E1A           04640         MOVWF PP2H,0
001F62 6A19           04641         CLRF PP2,0
                      04642         F@CALL L@DIV
001F68 C014 F27C      04643         MOVFF PP0HHH,SD_FAT_SECHHH
001F6C C013 F27B      04644         MOVFF PP0HH,SD_FAT_SECHH
001F70 C012 F27A      04645         MOVFF PP0H,SD_FAT_SECH
001F74 C011 F279      04646         MOVFF PP0,SD_FAT_SEC
  00001F78            04647 F4_001122 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_Cluster_Num // $100
001F78 C2C5 F27D      04648         MOVFF SD_CLUSTER_NUM,SD_FAT_BUFFER_POS
001F7C 0102           04649         MOVLB 2
  00000002            04650 RAM_BANK = 2
001F7E 6B7E           04651         CLRF SD_FAT_BUFFER_POSH
  00001F80            04652 F4_001123 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT_Buffer_Pos = SD_FAT_Buffer_Pos * 2
001F80 90D8           04653         BCF STATUS,0,0
001F82 377D           04654         RLCF SD_FAT_BUFFER_POS,F
001F84 377E           04655         RLCF SD_FAT_BUFFER_POSH,F
  00001F86            04656 F4_001124 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Sector_Num <> (SD_FAT1 + SD_FAT_Sec) Then
001F86 5179           04657         MOVF SD_FAT_SEC,W
001F88 2567           04658         ADDWF SD_FAT1,W
001F8A 6E08           04659         MOVWF PBP#VAR0,0
001F8C 517A           04660         MOVF SD_FAT_SECH,W
001F8E 2168           04661         ADDWFC SD_FAT1H,W
001F90 6E09           04662         MOVWF PBP#VAR0H,0
001F92 517B           04663         MOVF SD_FAT_SECHH,W
001F94 2169           04664         ADDWFC SD_FAT1HH,W
001F96 6E0A           04665         MOVWF PBP#VAR0HH,0
001F98 517C           04666         MOVF SD_FAT_SECHHH,W
001F9A 216A           04667         ADDWFC SD_FAT1HHH,W
001F9C 6E0B           04668         MOVWF PBP#VAR0HHH,0
001F9E 5008           04669         MOVF PBP#VAR0,W,0
001FA0 5C34           04670         SUBWF SD_SECTOR_NUM,W,0
001FA2 E10C           04671         BNZ CP@LB29
001FA4 5009           04672         MOVF PBP#VAR0H,W,0
001FA6 5C35           04673         SUBWF SD_SECTOR_NUMH,W,0
001FA8 E109           04674         BNZ CP@LB29
001FAA 500A           04675         MOVF PBP#VAR0HH,W,0
001FAC 5C36           04676         SUBWF SD_SECTOR_NUMHH,W,0
001FAE E106           04677         BNZ CP@LB29
001FB0 500B           04678         MOVF PBP#VAR0HHH,W,0
001FB2 5C37           04679         SUBWF SD_SECTOR_NUMHHH,W,0
001FB4 0100           04680         MOVLB 0
  00000000            04681 RAM_BANK = 0
001FB6 B4D8           04682         BTFSC STATUS,2,0
                      04683         GO@TO BC@LL193
001FBC                04684 CP@LB29
  00001FBC            04685 F4_001125 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_RW_Option > 0 Then
001FBC 0102           04686         MOVLB 2
  00000002            04687 RAM_BANK = 2
001FBE 534A           04688         MOVF SD_RW_OPTION,F
001FC0 0100           04689         MOVLB 0
  00000000            04690 RAM_BANK = 0
001FC2 B4D8           04691         BTFSC STATUS,2,0
                      04692         GO@TO BC@LL195
  00001FC8            04693 F4_001126 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04694         F@CALL SD_WRITE_SECTOR
  00001FCC            04695 F4_001127 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num - SD_FAT1 + SD_FAT2
001FCC 0102           04696         MOVLB 2
  00000002            04697 RAM_BANK = 2
001FCE 5167           04698         MOVF SD_FAT1,W
001FD0 5C34           04699         SUBWF SD_SECTOR_NUM,W,0
001FD2 6E23           04700         MOVWF PP7,0
001FD4 5168           04701         MOVF SD_FAT1H,W
001FD6 5835           04702         SUBWFB SD_SECTOR_NUMH,W,0
001FD8 6E24           04703         MOVWF PP7H,0
001FDA 5169           04704         MOVF SD_FAT1HH,W
001FDC 5836           04705         SUBWFB SD_SECTOR_NUMHH,W,0
001FDE 6E25           04706         MOVWF PP7HH,0
001FE0 516A           04707         MOVF SD_FAT1HHH,W
001FE2 5837           04708         SUBWFB SD_SECTOR_NUMHHH,W,0
001FE4 6E26           04709         MOVWF PP7HHH,0
001FE6 516B           04710         MOVF SD_FAT2,W
001FE8 2423           04711         ADDWF PP7,W,0
001FEA 6E34           04712         MOVWF SD_SECTOR_NUM,0
001FEC 516C           04713         MOVF SD_FAT2H,W
001FEE 2024           04714         ADDWFC PP7H,W,0
001FF0 6E35           04715         MOVWF SD_SECTOR_NUMH,0
001FF2 516D           04716         MOVF SD_FAT2HH,W
001FF4 2025           04717         ADDWFC PP7HH,W,0
001FF6 6E36           04718         MOVWF SD_SECTOR_NUMHH,0
001FF8 516E           04719         MOVF SD_FAT2HHH,W
001FFA 2026           04720         ADDWFC PP7HHH,W,0
001FFC 6E37           04721         MOVWF SD_SECTOR_NUMHHH,0
  00001FFE            04722 F4_001128 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
001FFE 0100           04723         MOVLB 0
  00000000            04724 RAM_BANK = 0
                      04725         F@CALL SD_WRITE_SECTOR
  00002004            04726 F4_001129 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
002004                04727 BC@LL195
  00002004            04728 F4_001130 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_FAT1 + SD_FAT_Sec
002004 0102           04729         MOVLB 2
  00000002            04730 RAM_BANK = 2
002006 5179           04731         MOVF SD_FAT_SEC,W
002008 2567           04732         ADDWF SD_FAT1,W
00200A 6E34           04733         MOVWF SD_SECTOR_NUM,0
00200C 517A           04734         MOVF SD_FAT_SECH,W
00200E 2168           04735         ADDWFC SD_FAT1H,W
002010 6E35           04736         MOVWF SD_SECTOR_NUMH,0
002012 517B           04737         MOVF SD_FAT_SECHH,W
002014 2169           04738         ADDWFC SD_FAT1HH,W
002016 6E36           04739         MOVWF SD_SECTOR_NUMHH,0
002018 517C           04740         MOVF SD_FAT_SECHHH,W
00201A 216A           04741         ADDWFC SD_FAT1HHH,W
00201C 6E37           04742         MOVWF SD_SECTOR_NUMHHH,0
  0000201E            04743 F4_001131 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
00201E 0E01           04744         MOVLW 1
002020 6F4A           04745         MOVWF SD_RW_OPTION
  00002022            04746 F4_001132 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
002022 0100           04747         MOVLB 0
  00000000            04748 RAM_BANK = 0
                      04749         F@CALL SD_SECTOR_SUB
  00002028            04750 F4_001134 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
002028                04751 BC@LL193
  00002028            04752 F4_001135 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Buffer_Pos = SD_FAT_Buffer_Pos
002028 C27E F24F      04753         MOVFF SD_FAT_BUFFER_POSH,SD_BUFFER_POSH
00202C C27D F24E      04754         MOVFF SD_FAT_BUFFER_POS,SD_BUFFER_POS
  00002030            04755 F4_001136 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Read_FAT_Entry
                      04756         F@CALL SD_READ_FAT_ENTRY
  00002034            04757 F4_001137 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Cluster_Num = SD_FAT_Entry
002034 C278 F2C6      04758         MOVFF SD_FAT_ENTRYH,SD_CLUSTER_NUMH
002038 C277 F2C5      04759         MOVFF SD_FAT_ENTRY,SD_CLUSTER_NUM
  0000203C            04760 F4_001138 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_FAT_Buffer_Pos
00203C C27E F2C3      04761         MOVFF SD_FAT_BUFFER_POSH,SD_WRITE_BUFFER_POSH
002040 C27D F2C2      04762         MOVFF SD_FAT_BUFFER_POS,SD_WRITE_BUFFER_POS
  00002044            04763 F4_001139 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_IO = $00
002044 0102           04764         MOVLB 2
  00000002            04765 RAM_BANK = 2
002046 6B4D           04766         CLRF SD_DATA_IO
  00002048            04767 F4_001140 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
002048 0100           04768         MOVLB 0
  00000000            04769 RAM_BANK = 0
                      04770         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  0000204E            04771 F4_001141 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Buffer_Pos = SD_FAT_Buffer_Pos + 1
00204E 0E01           04772         MOVLW 1
002050 0102           04773         MOVLB 2
  00000002            04774 RAM_BANK = 2
002052 257D           04775         ADDWF SD_FAT_BUFFER_POS,W
002054 6FC2           04776         MOVWF SD_WRITE_BUFFER_POS
002056 0E00           04777         MOVLW 0
002058 217E           04778         ADDWFC SD_FAT_BUFFER_POSH,W
00205A 6FC3           04779         MOVWF SD_WRITE_BUFFER_POSH
  0000205C            04780 F4_001142 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Insert_Byte_Into_Buffer
00205C 0100           04781         MOVLB 0
  00000000            04782 RAM_BANK = 0
                      04783         F@CALL SD_INSERT_BYTE_INTO_BUFFER
  00002062            04784 F4_001143 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Until SD_Cluster_Num = $FFFF
002062 0102           04785         MOVLB 2
  00000002            04786 RAM_BANK = 2
002064 29C5           04787         INCF SD_CLUSTER_NUM,W
002066 E101           04788         BNZ CP@LB30
002068 29C6           04789         INCF SD_CLUSTER_NUMH,W
00206A                04790 CP@LB30
00206A 0100           04791         MOVLB 0
  00000000            04792 RAM_BANK = 0
00206C A4D8           04793         BTFSS STATUS,2,0
                      04794         GO@TO BC@LL190
002070                04795 BC@LL191
  00002070            04796 F4_001144 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
                      04797         F@CALL SD_WRITE_SECTOR
  00002074            04798 F4_001145 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num - SD_FAT1 + SD_FAT2
002074 0102           04799         MOVLB 2
  00000002            04800 RAM_BANK = 2
002076 5167           04801         MOVF SD_FAT1,W
002078 5C34           04802         SUBWF SD_SECTOR_NUM,W,0
00207A 6E23           04803         MOVWF PP7,0
00207C 5168           04804         MOVF SD_FAT1H,W
00207E 5835           04805         SUBWFB SD_SECTOR_NUMH,W,0
002080 6E24           04806         MOVWF PP7H,0
002082 5169           04807         MOVF SD_FAT1HH,W
002084 5836           04808         SUBWFB SD_SECTOR_NUMHH,W,0
002086 6E25           04809         MOVWF PP7HH,0
002088 516A           04810         MOVF SD_FAT1HHH,W
00208A 5837           04811         SUBWFB SD_SECTOR_NUMHHH,W,0
00208C 6E26           04812         MOVWF PP7HHH,0
00208E 516B           04813         MOVF SD_FAT2,W
002090 2423           04814         ADDWF PP7,W,0
002092 6E34           04815         MOVWF SD_SECTOR_NUM,0
002094 516C           04816         MOVF SD_FAT2H,W
002096 2024           04817         ADDWFC PP7H,W,0
002098 6E35           04818         MOVWF SD_SECTOR_NUMH,0
00209A 516D           04819         MOVF SD_FAT2HH,W
00209C 2025           04820         ADDWFC PP7HH,W,0
00209E 6E36           04821         MOVWF SD_SECTOR_NUMHH,0
0020A0 516E           04822         MOVF SD_FAT2HHH,W
0020A2 2026           04823         ADDWFC PP7HHH,W,0
0020A4 6E37           04824         MOVWF SD_SECTOR_NUMHHH,0
  000020A6            04825 F4_001146 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Sector
0020A6 0100           04826         MOVLB 0
  00000000            04827 RAM_BANK = 0
                      04828         F@CALL SD_WRITE_SECTOR
  000020AC            04829 F4_001147 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
0020AC 0102           04830         MOVLB 2
  00000002            04831 RAM_BANK = 2
0020AE 6B4B           04832         CLRF SD_EXTENDED_RETURN
  000020B0            04833 F4_001148 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0020B0 0100           04834         MOVLB 0
  00000000            04835 RAM_BANK = 0
0020B2 0012           04836         RETURN 0
  000020B4            04837 F4_001154 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Init_FS_MSSP MACRO P1
                      04838 SD_INIT_FS_MSSP MACRO P1,.,.,.,.,.,.,.,.,.
                      04839  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      04840  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      04841         IF (PRM_COUNT > 1)
                      04842         ERROR "(In Asm) SD_Init_FS_MSSP - Too many parameters"
                      04843         ELSE
                      04844         IF (PRM_COUNT == 0)
                      04845         MOVLW 32
                      04846         MOVWF SSPCON1,0
                      04847         ELSE
                      04848         IF (PRM_1 != BYTE) && (PRM_1 != NUM8)
                      04849         ERROR "(In Asm) SD_Init_FS_MSSP - Speed(Param1) should be a Byte variable or number"
                      04850         ENDIF
                      04851         IF (PRM_1 == BYTE)
                      04852         BYTE_BYTE P1, SSPCON1
                      04853         BSF SSPCON1,5,0
                      04854         ENDIF
                      04855         IF (PRM_1 == NUM8)
                      04856         NUM_DWORD P1, SSPCON1
                      04857 RAM_BANK = 0
                      04858         BSF SSPCON1,5,0
                      04859         ENDIF
                      04860         ENDIF
                      04861         ENDIF
                      04862         F@CALL SD_INIT_FS_MSSP_SUB
                      04863         IF (SD_INIT_FS_MSSP_RETURN != 1)
                      04864         ELSE
                      04865         IF (RETURN_TYPE != BYTE)
                      04866         ERROR "(In Asm) SD_Init_FS_MSSP - Return variable should be a Byte variable"
                      04867         ENDIF
                      04868         IF (RETURN_TYPE == BYTE)
                      04869         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      04870         ENDIF
                      04871         ENDIF
                      04872         ENDM
0020B4                04873 SD_INIT_FS_MSSP_SUB
  000020B4            04874 F4_001193 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return_Int = SD_Init_MSSP SSPCON1
  0002                04875  VARIABLE PRM_1=2
  0000                04876  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                04877  VARIABLE SD_INIT_MSSP_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=SSPCON1
  000A                04878  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=SD_EXTENDED_RETURN_INT,SD_INIT_MSSP_RETURN=1,PRM_COUNT=1
                      04879         SD_INIT_MSSP SSPCON1,0,0,0,0,0,0,0,0,0
  000A                04880  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=SD_EXTENDED_RETURN_INT,SD_INIT_MSSP_RETURN=1,PRM_COUNT=1
  0002                04881  VARIABLE PRM_1=2
  0000                04882  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                04883  VARIABLE SD_INIT_MSSP_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=SSPCON1
  000020C2            04884 F4_001194 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return_Int = 1 Then
0020C2 0E01           04885         MOVLW 1
0020C4 0102           04886         MOVLB 2
  00000002            04887 RAM_BANK = 2
0020C6 5DE9           04888         SUBWF SD_EXTENDED_RETURN_INT,W
0020C8 0100           04889         MOVLB 0
  00000000            04890 RAM_BANK = 0
0020CA A4D8           04891         BTFSS STATUS,2,0
                      04892         GO@TO BC@LL197
  000020D0            04893 F4_001195 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 1
0020D0 0E01           04894         MOVLW 1
0020D2 0102           04895         MOVLB 2
  00000002            04896 RAM_BANK = 2
0020D4 6F4B           04897         MOVWF SD_EXTENDED_RETURN
  000020D6            04898 F4_001196 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
0020D6 0100           04899         MOVLB 0
  00000000            04900 RAM_BANK = 0
0020D8 0012           04901         RETURN 0
  000020DA            04902 F4_001197 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
0020DA                04903 BC@LL197
  000020DA            04904 F4_001198 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = $00
0020DA 6A37           04905         CLRF SD_SECTOR_NUMHHH,0
0020DC 6A36           04906         CLRF SD_SECTOR_NUMHH,0
0020DE 6A35           04907         CLRF SD_SECTOR_NUMH,0
0020E0 6A34           04908         CLRF SD_SECTOR_NUM,0
  000020E2            04909 F4_001199 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
0020E2 0E01           04910         MOVLW 1
0020E4 0102           04911         MOVLB 2
  00000002            04912 RAM_BANK = 2
0020E6 6F4A           04913         MOVWF SD_RW_OPTION
  000020E8            04914 F4_001200 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
0020E8 0100           04915         MOVLB 0
  00000000            04916 RAM_BANK = 0
                      04917         F@CALL SD_SECTOR_SUB
  000020EE            04918 F4_001202 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Buffer0[0] = $EB And SD_Buffer0[2] = $90 Then
0020EE 5041           04919         MOVF SD_BUFFER0#0,W,0
0020F0 6E08           04920         MOVWF PBP#VAR0,0
0020F2 0EEB           04921         MOVLW 235
0020F4 5C08           04922         SUBWF PBP#VAR0,W,0
0020F6 0E01           04923         MOVLW 1
0020F8 A4D8           04924         BTFSS STATUS,2,0
0020FA 0E00           04925         MOVLW 0
0020FC 6E2D           04926         MOVWF SP#P9,0
0020FE 5043           04927         MOVF SD_BUFFER0#2,W,0
002100 6E08           04928         MOVWF PBP#VAR0,0
002102 0E90           04929         MOVLW 144
002104 5C08           04930         SUBWF PBP#VAR0,W,0
002106 0E01           04931         MOVLW 1
002108 A4D8           04932         BTFSS STATUS,2,0
00210A 0E00           04933         MOVLW 0
00210C 142D           04934         ANDWF SP#P9,W,0
00210E B4D8           04935         BTFSC STATUS,2,0
                      04936         GO@TO BC@LL199
  00002114            04937 F4_001204 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Boot_Record = $0000
002114 0102           04938         MOVLB 2
  00000002            04939 RAM_BANK = 2
002116 6B66           04940         CLRF SD_BOOT_RECORDH
002118 6B65           04941         CLRF SD_BOOT_RECORD
00211A 0100           04942         MOVLB 0
  00000000            04943 RAM_BANK = 0
                      04944         F@JUMP BC@LL198
  00002120            04945 F4_001205 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] ElseIf SD_Buffer0[0] = $E9 Then
002120                04946 BC@LL199
002120 5041           04947         MOVF SD_BUFFER0#0,W,0
002122 6E08           04948         MOVWF PBP#VAR0,0
002124 0EE9           04949         MOVLW 233
002126 5C08           04950         SUBWF PBP#VAR0,W,0
002128 A4D8           04951         BTFSS STATUS,2,0
                      04952         GO@TO BC@LL200
  0000212E            04953 F4_001207 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Boot_Record = $0000
00212E 0102           04954         MOVLB 2
  00000002            04955 RAM_BANK = 2
002130 6B66           04956         CLRF SD_BOOT_RECORDH
002132 6B65           04957         CLRF SD_BOOT_RECORD
002134 0100           04958         MOVLB 0
  00000000            04959 RAM_BANK = 0
                      04960         F@JUMP BC@LL201
00213A                04961 BC@LL200
  0000213A            04962 F4_001208 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Else
  0000213A            04963 F4_001210 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Boot_Record = SD_Buffer1[$0C6] + 0
00213A 0102           04964         MOVLB 2
  00000002            04965 RAM_BANK = 2
00213C 5107           04966         MOVF SD_BUFFER1#198,W
00213E 6E0C           04967         MOVWF PBP#VAR1,0
002140 6B66           04968         CLRF SD_BOOT_RECORDH
002142 C00C F265      04969         MOVFF PBP#VAR1,SD_BOOT_RECORD
  00002146            04970 F4_001211 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] EndIf
002146                04971 BC@LL201
002146 0100           04972         MOVLB 0
  00000000            04973 RAM_BANK = 0
002148                04974 BC@LL198
  00002148            04975 F4_001212 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Boot_Record
002148 6A37           04976         CLRF SD_SECTOR_NUMHHH,0
00214A 6A36           04977         CLRF SD_SECTOR_NUMHH,0
00214C C266 F035      04978         MOVFF SD_BOOT_RECORDH,SD_SECTOR_NUMH
002150 C265 F034      04979         MOVFF SD_BOOT_RECORD,SD_SECTOR_NUM
  00002154            04980 F4_001213 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_RW_Option = 1
002154 0E01           04981         MOVLW 1
002156 0102           04982         MOVLB 2
  00000002            04983 RAM_BANK = 2
002158 6F4A           04984         MOVWF SD_RW_OPTION
  0000215A            04985 F4_001214 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Sector_Sub
00215A 0100           04986         MOVLB 0
  00000000            04987 RAM_BANK = 0
                      04988         F@CALL SD_SECTOR_SUB
  00002160            04989 F4_001216 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Bytes_Per_Sec.BYTE0 = SD_Buffer0[$0B]
002160 504C           04990         MOVF SD_BUFFER0#11,W,0
002162 0102           04991         MOVLB 2
  00000002            04992 RAM_BANK = 2
002164 6F5F           04993         MOVWF SD_BYTES_PER_SEC
  00002166            04994 F4_001217 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Bytes_Per_Sec.BYTE1 = SD_Buffer0[$0C]
002166 504D           04995         MOVF SD_BUFFER0#12,W,0
002168 6F60           04996         MOVWF SD_BYTES_PER_SECH
  0000216A            04997 F4_001218 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Secs_Per_Cluster = SD_Buffer0[$0D]
00216A 504E           04998         MOVF SD_BUFFER0#13,W,0
00216C 6F55           04999         MOVWF SD_SECS_PER_CLUSTER
  0000216E            05000 F4_001219 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Reserved_Secs.BYTE0 = SD_Buffer0[$0E]
00216E 504F           05001         MOVF SD_BUFFER0#14,W,0
002170 6F56           05002         MOVWF SD_RESERVED_SECS
  00002172            05003 F4_001220 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Reserved_Secs.BYTE1 = SD_Buffer0[$0F]
002172 5050           05004         MOVF SD_BUFFER0#15,W,0
002174 6F57           05005         MOVWF SD_RESERVED_SECSH
  00002176            05006 F4_001221 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_FATs = SD_Buffer0[$10]
002176 5051           05007         MOVF SD_BUFFER0#16,W,0
002178 6F5A           05008         MOVWF SD_NUM_OF_FATS
  0000217A            05009 F4_001222 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Root_Entries.BYTE0 = SD_Buffer0[$11]
00217A 5052           05010         MOVF SD_BUFFER0#17,W,0
00217C 6F61           05011         MOVWF SD_NUM_OF_ROOT_ENTRIES
  0000217E            05012 F4_001223 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Root_Entries.BYTE1 = SD_Buffer0[$12]
00217E 5053           05013         MOVF SD_BUFFER0#18,W,0
002180 6F62           05014         MOVWF SD_NUM_OF_ROOT_ENTRIESH
  00002182            05015 F4_001224 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Secs_Per_FAT.BYTE0 = SD_Buffer0[$16]
002182 5057           05016         MOVF SD_BUFFER0#22,W,0
002184 6F58           05017         MOVWF SD_SECS_PER_FAT
  00002186            05018 F4_001225 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Secs_Per_FAT.BYTE1 = SD_Buffer0[$17]
002186 5058           05019         MOVF SD_BUFFER0#23,W,0
002188 6F59           05020         MOVWF SD_SECS_PER_FATH
  0000218A            05021 F4_001226 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE0 = SD_Buffer0[$20]
00218A 5061           05022         MOVF SD_BUFFER0#32,W,0
00218C 6F5B           05023         MOVWF SD_NUM_OF_SECS
  0000218E            05024 F4_001227 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE1 = SD_Buffer0[$21]
00218E 5062           05025         MOVF SD_BUFFER0#33,W,0
002190 6F5C           05026         MOVWF SD_NUM_OF_SECSH
  00002192            05027 F4_001228 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE2 = SD_Buffer0[$22]
002192 5063           05028         MOVF SD_BUFFER0#34,W,0
002194 6F5D           05029         MOVWF SD_NUM_OF_SECSHH
  00002196            05030 F4_001229 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Num_of_Secs.BYTE3 = SD_Buffer0[$23]
002196 5064           05031         MOVF SD_BUFFER0#35,W,0
002198 6F5E           05032         MOVWF SD_NUM_OF_SECSHHH
  0000219A            05033 F4_001230 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT1 = SD_Boot_Record + SD_Reserved_Secs
00219A 5156           05034         MOVF SD_RESERVED_SECS,W
00219C 2565           05035         ADDWF SD_BOOT_RECORD,W
00219E 6F67           05036         MOVWF SD_FAT1
0021A0 5157           05037         MOVF SD_RESERVED_SECSH,W
0021A2 2166           05038         ADDWFC SD_BOOT_RECORDH,W
0021A4 6F68           05039         MOVWF SD_FAT1H
0021A6 0E00           05040         MOVLW 0
0021A8 6B69           05041         CLRF SD_FAT1HH
0021AA 2369           05042         ADDWFC SD_FAT1HH,F
0021AC 6B6A           05043         CLRF SD_FAT1HHH
  000021AE            05044 F4_001231 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_FAT2 = SD_Boot_Record + SD_Reserved_Secs + SD_Secs_Per_FAT
0021AE 5156           05045         MOVF SD_RESERVED_SECS,W
0021B0 2565           05046         ADDWF SD_BOOT_RECORD,W
0021B2 6E23           05047         MOVWF PP7,0
0021B4 5157           05048         MOVF SD_RESERVED_SECSH,W
0021B6 2166           05049         ADDWFC SD_BOOT_RECORDH,W
0021B8 6E24           05050         MOVWF PP7H,0
0021BA 0E00           05051         MOVLW 0
0021BC 6A25           05052         CLRF PP7HH,0
0021BE 2225           05053         ADDWFC PP7HH,F,0
0021C0 6A26           05054         CLRF PP7HHH,0
0021C2 5158           05055         MOVF SD_SECS_PER_FAT,W
0021C4 2423           05056         ADDWF PP7,W,0
0021C6 6F6B           05057         MOVWF SD_FAT2
0021C8 5159           05058         MOVF SD_SECS_PER_FATH,W
0021CA 2024           05059         ADDWFC PP7H,W,0
0021CC 6F6C           05060         MOVWF SD_FAT2H
0021CE 0E00           05061         MOVLW 0
0021D0 2025           05062         ADDWFC PP7HH,W,0
0021D2 6F6D           05063         MOVWF SD_FAT2HH
0021D4 0E00           05064         MOVLW 0
0021D6 2026           05065         ADDWFC PP7HHH,W,0
0021D8 6F6E           05066         MOVWF SD_FAT2HHH
  000021DA            05067 F4_001232 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir = SD_Num_of_FATs * SD_Secs_Per_FAT
0021DA 6A14           05068         CLRF PP0HHH,0
0021DC 6A13           05069         CLRF PP0HH,0
0021DE 6A12           05070         CLRF PP0H,0
0021E0 C25A F011      05071         MOVFF SD_NUM_OF_FATS,PP0
0021E4 6A1C           05072         CLRF PP2HHH,0
0021E6 6A1B           05073         CLRF PP2HH,0
0021E8 C259 F01A      05074         MOVFF SD_SECS_PER_FATH,PP2H
0021EC C258 F019      05075         MOVFF SD_SECS_PER_FAT,PP2
                      05076         F@CALL AL@MUL
0021F4 C014 F272      05077         MOVFF PP0HHH,SD_ROOT_DIRHHH
0021F8 C013 F271      05078         MOVFF PP0HH,SD_ROOT_DIRHH
0021FC C012 F270      05079         MOVFF PP0H,SD_ROOT_DIRH
002200 C011 F26F      05080         MOVFF PP0,SD_ROOT_DIR
  00002204            05081 F4_001233 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Root_Dir = SD_Boot_Record + SD_Reserved_Secs + SD_Root_Dir
002204 5156           05082         MOVF SD_RESERVED_SECS,W
002206 2565           05083         ADDWF SD_BOOT_RECORD,W
002208 6E23           05084         MOVWF PP7,0
00220A 5157           05085         MOVF SD_RESERVED_SECSH,W
00220C 2166           05086         ADDWFC SD_BOOT_RECORDH,W
00220E 6E24           05087         MOVWF PP7H,0
002210 0E00           05088         MOVLW 0
002212 6A25           05089         CLRF PP7HH,0
002214 2225           05090         ADDWFC PP7HH,F,0
002216 6A26           05091         CLRF PP7HHH,0
002218 5023           05092         MOVF PP7,W,0
00221A 276F           05093         ADDWF SD_ROOT_DIR,F
00221C 5024           05094         MOVF PP7H,W,0
00221E 2370           05095         ADDWFC SD_ROOT_DIRH,F
002220 5025           05096         MOVF PP7HH,W,0
002222 2371           05097         ADDWFC SD_ROOT_DIRHH,F
002224 5026           05098         MOVF PP7HHH,W,0
002226 2372           05099         ADDWFC SD_ROOT_DIRHHH,F
  00002228            05100 F4_001234 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Secs_in_Root = SD_Num_of_Root_Entries * 32
002228 5162           05101         MOVF SD_NUM_OF_ROOT_ENTRIESH,W
00222A 0D20           05102         MULLW 32
00222C CFF3 F264      05103         MOVFF PRODL,SD_SECS_IN_ROOTH
002230 5161           05104         MOVF SD_NUM_OF_ROOT_ENTRIES,W
002232 0D20           05105         MULLW 32
002234 CFF3 F263      05106         MOVFF PRODL,SD_SECS_IN_ROOT
002238 50F4           05107         MOVF PRODH,W,0
00223A 2764           05108         ADDWF SD_SECS_IN_ROOTH,F
  0000223C            05109 F4_001235 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Secs_in_Root = SD_Secs_in_Root / SD_Bytes_Per_Sec
00223C C264 F012      05110         MOVFF SD_SECS_IN_ROOTH,PP0H
002240 C263 F011      05111         MOVFF SD_SECS_IN_ROOT,PP0
002244 C260 F016      05112         MOVFF SD_BYTES_PER_SECH,PP1H
002248 C25F F015      05113         MOVFF SD_BYTES_PER_SEC,PP1
                      05114         F@CALL D@VD
002250 6F63           05115         MOVWF SD_SECS_IN_ROOT
002252 C012 F264      05116         MOVFF PP0H,SD_SECS_IN_ROOTH
  00002256            05117 F4_001236 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Data_Area = SD_Root_Dir + SD_Secs_in_Root
002256 5163           05118         MOVF SD_SECS_IN_ROOT,W
002258 256F           05119         ADDWF SD_ROOT_DIR,W
00225A 6F73           05120         MOVWF SD_DATA_AREA
00225C 5164           05121         MOVF SD_SECS_IN_ROOTH,W
00225E 2170           05122         ADDWFC SD_ROOT_DIRH,W
002260 6F74           05123         MOVWF SD_DATA_AREAH
002262 0E00           05124         MOVLW 0
002264 2171           05125         ADDWFC SD_ROOT_DIRHH,W
002266 6F75           05126         MOVWF SD_DATA_AREAHH
002268 0E00           05127         MOVLW 0
00226A 2172           05128         ADDWFC SD_ROOT_DIRHHH,W
00226C 6F76           05129         MOVWF SD_DATA_AREAHHH
  0000226E            05130 F4_001238 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Boot_Record + SD_Num_of_Secs - 1
00226E 5165           05131         MOVF SD_BOOT_RECORD,W
002270 255B           05132         ADDWF SD_NUM_OF_SECS,W
002272 6E23           05133         MOVWF PP7,0
002274 5166           05134         MOVF SD_BOOT_RECORDH,W
002276 215C           05135         ADDWFC SD_NUM_OF_SECSH,W
002278 6E24           05136         MOVWF PP7H,0
00227A 0E00           05137         MOVLW 0
00227C 215D           05138         ADDWFC SD_NUM_OF_SECSHH,W
00227E 6E25           05139         MOVWF PP7HH,0
002280 0E00           05140         MOVLW 0
002282 215E           05141         ADDWFC SD_NUM_OF_SECSHHH,W
002284 6E26           05142         MOVWF PP7HHH,0
002286 0423           05143         DECF PP7,W,0
002288 6E34           05144         MOVWF SD_SECTOR_NUM,0
00228A 0E00           05145         MOVLW 0
00228C 5824           05146         SUBWFB PP7H,W,0
00228E 6E35           05147         MOVWF SD_SECTOR_NUMH,0
002290 0E00           05148         MOVLW 0
002292 5825           05149         SUBWFB PP7HH,W,0
002294 6E36           05150         MOVWF SD_SECTOR_NUMHH,0
002296 0E00           05151         MOVLW 0
002298 5826           05152         SUBWFB PP7HHH,W,0
00229A 6E37           05153         MOVWF SD_SECTOR_NUMHHH,0
  0000229C            05154 F4_001239 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num - SD_Data_Area + 1
00229C 5173           05155         MOVF SD_DATA_AREA,W
00229E 5C34           05156         SUBWF SD_SECTOR_NUM,W,0
0022A0 6E23           05157         MOVWF PP7,0
0022A2 5174           05158         MOVF SD_DATA_AREAH,W
0022A4 5835           05159         SUBWFB SD_SECTOR_NUMH,W,0
0022A6 6E24           05160         MOVWF PP7H,0
0022A8 5175           05161         MOVF SD_DATA_AREAHH,W
0022AA 5836           05162         SUBWFB SD_SECTOR_NUMHH,W,0
0022AC 6E25           05163         MOVWF PP7HH,0
0022AE 5176           05164         MOVF SD_DATA_AREAHHH,W
0022B0 5837           05165         SUBWFB SD_SECTOR_NUMHHH,W,0
0022B2 6E26           05166         MOVWF PP7HHH,0
0022B4 2823           05167         INCF PP7,W,0
0022B6 6E34           05168         MOVWF SD_SECTOR_NUM,0
0022B8 0E00           05169         MOVLW 0
0022BA 2024           05170         ADDWFC PP7H,W,0
0022BC 6E35           05171         MOVWF SD_SECTOR_NUMH,0
0022BE 0E00           05172         MOVLW 0
0022C0 2025           05173         ADDWFC PP7HH,W,0
0022C2 6E36           05174         MOVWF SD_SECTOR_NUMHH,0
0022C4 0E00           05175         MOVLW 0
0022C6 2026           05176         ADDWFC PP7HHH,W,0
0022C8 6E37           05177         MOVWF SD_SECTOR_NUMHHH,0
  000022CA            05178 F4_001240 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Sector_Num = SD_Sector_Num / SD_Secs_Per_Cluster
0022CA C037 F014      05179         MOVFF SD_SECTOR_NUMHHH,PP0HHH
0022CE C036 F013      05180         MOVFF SD_SECTOR_NUMHH,PP0HH
0022D2 C035 F012      05181         MOVFF SD_SECTOR_NUMH,PP0H
0022D6 C034 F011      05182         MOVFF SD_SECTOR_NUM,PP0
0022DA 6A1C           05183         CLRF PP2HHH,0
0022DC 6A1B           05184         CLRF PP2HH,0
0022DE 6A1A           05185         CLRF PP2H,0
0022E0 C255 F019      05186         MOVFF SD_SECS_PER_CLUSTER,PP2
                      05187         F@CALL L@DIV
0022E8 C014 F037      05188         MOVFF PP0HHH,SD_SECTOR_NUMHHH
0022EC C013 F036      05189         MOVFF PP0HH,SD_SECTOR_NUMHH
0022F0 C012 F035      05190         MOVFF PP0H,SD_SECTOR_NUMH
0022F4 C011 F034      05191         MOVFF PP0,SD_SECTOR_NUM
  000022F8            05192 F4_001241 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Last_Cluster = SD_Sector_Num + 1
0022F8 0E01           05193         MOVLW 1
0022FA 2434           05194         ADDWF SD_SECTOR_NUM,W,0
0022FC 6FC9           05195         MOVWF SD_LAST_CLUSTER
0022FE 0E00           05196         MOVLW 0
002300 2035           05197         ADDWFC SD_SECTOR_NUMH,W,0
002302 6FCA           05198         MOVWF SD_LAST_CLUSTERH
  00002304            05199 F4_001243 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Name = "        "
002304 EE02 F091      05200         LFSR 0,SD_FILE_NAME
002308 0E04           05201         MOVLW ((STR@LB1 >> 8) & 255)
00230A 6EF7           05202         MOVWF TBLPTRLH,0
00230C 0E68           05203         MOVLW (STR@LB1 & 255)
00230E 6EF6           05204         MOVWF TBLPTRL,0
                      05205         F@CALL LOAD@MSTR
002314 6AEF           05206         CLRF INDF0,0
  00002316            05207 F4_001244 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Ext = "   "
002316 EE02 F09A      05208         LFSR 0,SD_FILE_EXT
00231A 0E20           05209         MOVLW 32
00231C 6EEE           05210         MOVWF POSTINC0,0
00231E 6EEE           05211         MOVWF POSTINC0,0
002320 6EEE           05212         MOVWF POSTINC0,0
002322 6AEF           05213         CLRF INDF0,0
  00002324            05214 F4_001245 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Day = 1
002324 0E01           05215         MOVLW 1
002326 6FEF           05216         MOVWF SD_DAY
  00002328            05217 F4_001246 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Month = 1
002328 0E01           05218         MOVLW 1
00232A 6FF0           05219         MOVWF SD_MONTH
  0000232C            05220 F4_001247 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Year = 0
00232C 6BF1           05221         CLRF SD_YEAR
  0000232E            05222 F4_001248 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_MSeconds = 0
00232E 6BF2           05223         CLRF SD_MSECONDS
  00002330            05224 F4_001249 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Seconds = 0
002330 6BF3           05225         CLRF SD_SECONDS
  00002332            05226 F4_001250 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Minutes = 0
002332 6BF4           05227         CLRF SD_MINUTES
  00002334            05228 F4_001251 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Hours = 0
002334 6BF5           05229         CLRF SD_HOURS
  00002336            05230 F4_001252 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_File_Num = 0
002336 6BE7           05231         CLRF SD_FILE_NUMH
002338 6BE6           05232         CLRF SD_FILE_NUM
  0000233A            05233 F4_001253 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Extended_Return = 0
00233A 6B4B           05234         CLRF SD_EXTENDED_RETURN
  0000233C            05235 F4_001254 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
00233C 0100           05236         MOVLB 0
  00000000            05237 RAM_BANK = 0
00233E 0012           05238         RETURN 0
  00002340            05239 F4_001260 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_Byte_To_File MACRO P1
                      05240 SD_WRITE_BYTE_TO_FILE   MACRO P1,.,.,.,.,.,.,.,.,.
                      05241  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      05242  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      05243         IF (PRM_COUNT >  1)
                      05244         ERROR "(In Asm) SD_Write_Byte_to_File - Too many parameters"
                      05245         ELSE
                      05246         IF (PRM_COUNT <  1)
                      05247         ERROR "(In Asm) SD_Write_Byte_to_File - Too few parameters"
                      05248         ELSE
                      05249         IF (PRM_1 != BYTE) && (PRM_1 != NUM8) && (PRM_1 != NUM16) && (PRM_1 != NUM32) && (PRM_1 != WORD) && (PRM_1 != DWORD)
                      05250         ERROR "(In Asm) SD_Write_Byte_to_File - Byte(Param 1) should be a Byte, Word or DWord variable or number"
                      05251         ENDIF
                      05252         IF (PRM_1 == BYTE)
                      05253         BYTE_BYTE P1, SD_IO_BYTE
                      05254         ENDIF
                      05255         IF (PRM_1 == NUM8)
                      05256         NUM_BYTE P1, SD_IO_BYTE
                      05257 RAM_BANK = 0
                      05258         ENDIF
                      05259         IF (PRM_1 == NUM16)
                      05260         NUM_BYTE P1, SD_IO_BYTE
                      05261 RAM_BANK = 0
                      05262         ENDIF
                      05263         IF (PRM_1 == NUM32)
                      05264         NUM_BYTE P1, SD_IO_BYTE
                      05265 RAM_BANK = 0
                      05266         ENDIF
                      05267         IF (PRM_1 == WORD)
                      05268         BYTE_BYTE P1, SD_IO_BYTE
                      05269         ENDIF
                      05270         IF (PRM_1 == DWORD)
                      05271         BYTE_BYTE P1, SD_IO_BYTE
                      05272         ENDIF
                      05273         IF (PRM_1 == FLOAT)
                      05274         FLOAT_BYTE P1, SD_IO_BYTE
                      05275         ENDIF
                      05276         F@CALL SD_WRITE_BYTE_TO_FILE_SUB
                      05277         IF (SD_WRITE_BYTE_TO_FILE_RETURN != 1)
                      05278         ELSE
                      05279         IF (RETURN_TYPE != BYTE)
                      05280         ERROR "(In Asm) SD_Write_Byte_To_File - Return variable should be a Byte variable"
                      05281         ENDIF
                      05282         IF (RETURN_TYPE == BYTE)
                      05283         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      05284         ENDIF
                      05285         ENDIF
                      05286         ENDIF
                      05287         ENDIF
                      05288         ENDM
  00002340            05289 F4_001318 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_Write_String_To_File MACRO
                      05290 SD_WRITE_STRING_TO_FILE MACRO .,.,.,.,.,.,.,.,.,.
                      05291  LOCAL PRM_EMPTY=0,BIT=1,BYTE=2,WORD=3,DWORD=4,FLOAT=5,LABEL=6,CHAR=7,STRING=9
                      05292  LOCAL NUM8=8,NUM16=16,NUM32=32,SNUM8=10,SNUM16=15,SNUM32=31,FNUM=33,BYTE_ARRAY_PTR=22,WORD_ARRAY_PTR=23
                      05293         IF (PRM_COUNT != 0)
                      05294         ERROR "(In Asm) No parameters required for SD_Write_String_To_File"
                      05295         EXITM
                      05296         ENDIF
                      05297         F@CALL SD_WRITE_STRING_TO_FILE_SUB
                      05298         IF (SD_WRITE_STRING_TO_FILE_RETURN != 1)
                      05299         ELSE
                      05300         IF (RETURN_TYPE != BYTE)
                      05301         ERROR "(In Asm) SD_Write_String_To_File - Return variable should be a Byte variable"
                      05302         ENDIF
                      05303         IF (RETURN_TYPE == BYTE)
                      05304         BYTE_BYTE SD_EXTENDED_RETURN, RETURN_VAR
                      05305         ENDIF
                      05306         ENDIF
                      05307         ENDM
002340                05308 SD_WRITE_STRING_TO_FILE_SUB
  00002340            05309 F4_001345 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_IO_String_Length = Len(SD_IO_String)
002340 EE02 F0FB      05310         LFSR 0,SD_IO_STRING
002344 6AE8           05311         CLRF WREG,0
002346 52EE           05312         MOVF POSTINC0,F,0
002348 E002           05313         BZ $ + 6
00234A 3EE8           05314         INCFSZ WREG,F,0
00234C D7FC           05315         BRA $ - 6
00234E 0102           05316         MOVLB 2
  00000002            05317 RAM_BANK = 2
002350 6FF9           05318         MOVWF SD_IO_STRING_LENGTH
  00002352            05319 F4_001346 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_IO_String_Length = SD_IO_String_Length - 1
002352 07F9           05320         DECF SD_IO_STRING_LENGTH,F
  00002354            05321 F4_001347 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] For SD_IO_String_Pos = 0 To SD_IO_String_Length
002354 6BFA           05322         CLRF SD_IO_STRING_POS
002356                05323 FR@LB203
002356 0100           05324         MOVLB 0
  00000000            05325 RAM_BANK = 0
002358 0102           05326         MOVLB 2
  00000002            05327 RAM_BANK = 2
00235A 51FA           05328         MOVF SD_IO_STRING_POS,W
00235C 5DF9           05329         SUBWF SD_IO_STRING_LENGTH,W
00235E 0100           05330         MOVLB 0
  00000000            05331 RAM_BANK = 0
002360 A0D8           05332         BTFSS STATUS,0,0
                      05333         GO@TO NX@LB204
  00002366            05334 F4_001348 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] SD_IO_Byte = SD_IO_String[SD_IO_String_Pos]
002366 EE02 F0FB      05335         LFSR 0,SD_IO_STRING
00236A 0102           05336         MOVLB 2
  00000002            05337 RAM_BANK = 2
00236C 51FA           05338         MOVF SD_IO_STRING_POS,W
00236E 26E9           05339         ADDWF FSR0L,F,0
002370 0E00           05340         MOVLW 0
002372 22EA           05341         ADDWFC FSR0H,F,0
002374 50EF           05342         MOVF INDF0,W,0
002376 6FD0           05343         MOVWF SD_IO_BYTE
  00002378            05344 F4_001349 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] GoSub SD_Write_Byte_To_File_Sub
002378 0100           05345         MOVLB 0
  00000000            05346 RAM_BANK = 0
                      05347         F@CALL SD_WRITE_BYTE_TO_FILE_SUB
  0000237E            05348 F4_001350 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] If SD_Extended_Return = 1 Then Return
00237E 0E01           05349         MOVLW 1
002380 0102           05350         MOVLB 2
  00000002            05351 RAM_BANK = 2
002382 5D4B           05352         SUBWF SD_EXTENDED_RETURN,W
002384 0100           05353         MOVLB 0
  00000000            05354 RAM_BANK = 0
002386 A4D8           05355         BTFSS STATUS,2,0
                      05356         GO@TO BC@LL205
00238C 0012           05357         RETURN 0
00238E                05358 BC@LL205
  0000238E            05359 F4_001351 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Next SD_IO_String_Pos
00238E 0102           05360         MOVLB 2
  00000002            05361 RAM_BANK = 2
002390 2BFA           05362         INCF SD_IO_STRING_POS,F
002392 0100           05363         MOVLB 0
  00000000            05364 RAM_BANK = 0
002394 A4D8           05365         BTFSS STATUS,2,0
                      05366         GO@TO FR@LB203
002398                05367 NX@LB204
  00002398            05368 F4_001352 EQU $ ; in [V2.41 RFID 2ND GENERATION_LIB.PBP] Return
002398 0012           05369         RETURN 0
00239A                05370 OVERLIBCODE
  0000239A            05371 F4_EOF EQU $ ; V2.41 RFID 2ND GENERATION_LIB.PBP
  0000239A            05372 F2_EOF EQU $ ; V2.41 RFID 2ND GENERATION.PRP
  0000239A            05373 F1_SOF EQU $ ; V2.41 RFID 2ND GENERATION.BAS
  0000239A            05374 F5_SOF EQU $ ; INITIALIZE.INC
  0000239A            05375 F5_000036 EQU $ ; in [INITIALIZE.INC] ALL_DIGITAL = TRUE
00239A 0E07           05376         MOVLW 7
00239C 6EB4           05377         MOVWF CMCON,0
00239E 0E0F           05378         MOVLW 15
0023A0 6EC1           05379         MOVWF ADCON1,0
  000023A2            05380 F5_EOF EQU $ ; INITIALIZE.INC
  000023A2            05381 F1_000048 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] DelayMS 200               'Allow chip to settle
0023A2 0EC8           05382         MOVLW 200
                      05383         F@CALL DL@MS
  000023A8            05384 F1_000050 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Input SD_Detect           'Set SD Detect port as input...  (PORTA.1 Initialize module)
0023A8 8292           05385         BSF TRISA,1,0
  000023AA            05386 F1_000051 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Low RFIDEnable                ' Turn off RFID Reader     (PORTD.4 Initialize module)
0023AA 9895           05387         BCF TRISD,4,0
0023AC 9883           05388         BCF PORTD,4,0
  000023AE            05389 F1_000053 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] User_Pointer.LowByte = ERead UPA_L    'Read the low and high bytes of...
0023AE 0E00           05390         MOVLW 0
                      05391         F@CALL EE@RD
0023B4 0103           05392         MOVLB 3
  00000003            05393 RAM_BANK = 3
0023B6 6FC4           05394         MOVWF USER_POINTER
  000023B8            05395 F1_000054 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] User_Pointer.HighByte = ERead UPA_H    'user pointer address from EEprom
0023B8 0E01           05396         MOVLW 1
                      05397         F@CALL EE@RD
0023BE 6FC5           05398         MOVWF USER_POINTERH
  000023C0            05399 F1_000056 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] If User_Pointer = 0XFFFF Then             'If the value read from EEprom is OXFFFF then this is a new chip so....
0023C0 29C4           05400         INCF USER_POINTER,W
0023C2 E101           05401         BNZ CP@LB31
0023C4 29C5           05402         INCF USER_POINTERH,W
0023C6                05403 CP@LB31
0023C6 0100           05404         MOVLB 0
  00000000            05405 RAM_BANK = 0
0023C8 A4D8           05406         BTFSS STATUS,2,0
                      05407         GO@TO BC@LL207
  000023CE            05408 F1_000057 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] User_Pointer = BUA                   '...we write the low and ..
0023CE 0E9C           05409         MOVLW 156
0023D0 0103           05410         MOVLB 3
  00000003            05411 RAM_BANK = 3
0023D2 6FC5           05412         MOVWF USER_POINTERH
0023D4 0E50           05413         MOVLW 80
0023D6 6FC4           05414         MOVWF USER_POINTER
  000023D8            05415 F1_000058 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] EWrite UPA_L, [User_Pointer.LowByte]  '...high bytes of the base user address (0X9C500...
0023D8 6AAA           05416         CLRF EEADRH,0
0023DA 6AA9           05417         CLRF EEADR,0
0023DC 51C4           05418         MOVF USER_POINTER,W
                      05419         F@CALL EE@WR@W
  000023E2            05420 F1_000059 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] EWrite UPA_H, [User_Pointer.HighByte]  '...into the EEProm Pointer storage spot (0X000 and 0X001)
0023E2 6AAA           05421         CLRF EEADRH,0
0023E4 0E01           05422         MOVLW 1
0023E6 6EA9           05423         MOVWF EEADR,0
0023E8 51C5           05424         MOVF USER_POINTERH,W
                      05425         F@CALL EE@WR@W
  000023EE            05426 F1_000060 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] EWrite num_UHE, [0X00]              'Initialize number of User histories to zero
0023EE 6AAA           05427         CLRF EEADRH,0
0023F0 0E03           05428         MOVLW 3
0023F2 6EA9           05429         MOVWF EEADR,0
0023F4 0E00           05430         MOVLW 0
                      05431         F@CALL EE@WR@W
  000023FA            05432 F1_000061 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] EWrite num_MHE, [0X00]               'Initialize number of Manager histories to zero
0023FA 6AAA           05433         CLRF EEADRH,0
0023FC 0E04           05434         MOVLW 4
0023FE 6EA9           05435         MOVWF EEADR,0
002400 0E00           05436         MOVLW 0
                      05437         F@CALL EE@WR@W
  00002406            05438 F1_000062 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] EndIf
002406                05439 BC@LL207
002406 0100           05440         MOVLB 0
  00000000            05441 RAM_BANK = 0
  00002408            05442 F1_000066 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] If SD_Detect = 0 Then
002408 B280           05443         BTFSC PORTA,1,0
                      05444         GO@TO BC@LL209
  0000240E            05445 F1_000067 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Cls
                      05446         F@CALL LCD@CLS
  00002412            05447 F1_000068 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Print "Detected!"
002412 0E04           05448         MOVLW ((STR@LB2 >> 8) & 255)
002414 6EF7           05449         MOVWF TBLPTRLH,0
002416 0E72           05450         MOVLW (STR@LB2 & 255)
002418 6EF6           05451         MOVWF TBLPTRL,0
                      05452         F@CALL PRINT@MSTR
  0000241E            05453 F1_000069 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Pause 3000
00241E 0E0B           05454         MOVLW 11
002420 6E16           05455         MOVWF PP1H,0
002422 0EB8           05456         MOVLW 184
                      05457         F@CALL DLY@W
  00002428            05458 F1_000070 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] GoSub Init_SD  '************ Only do one time when SD card detected.
                      05459         F@CALL INIT_SD
  0000242C            05460 F1_000071 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] GoSub Read_SD   'This sub reads and writes users and managers to memory
                      05461         F@CALL READ_SD
                      05462         F@JUMP BC@LL210
002434                05463 BC@LL209
  00002434            05464 F1_000072 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Else
  00002434            05465 F1_000073 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] GoSub Init_SD  '************ Only do one time when SD card detected.
                      05466         F@CALL INIT_SD
  00002438            05467 F1_000074 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] End If
002438                05468 BC@LL210
  00002438            05469 F1_000078 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] GoSub Write_Users_SD
                      05470         F@CALL WRITE_USERS_SD
  0000243C            05471 F1_000079 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Cls
                      05472         F@CALL LCD@CLS
  00002440            05473 F1_000080 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Print "Done"
002440 0E44           05474         MOVLW 68
                      05475         F@CALL PRINT
002446 0E6F           05476         MOVLW 111
                      05477         F@CALL PRINT
00244C 0E6E           05478         MOVLW 110
                      05479         F@CALL PRINT
002452 0E65           05480         MOVLW 101
                      05481         F@CALL PRINT
  00002458            05482 F1_000084 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Pause 3000
002458 0E0B           05483         MOVLW 11
00245A 6E16           05484         MOVWF PP1H,0
00245C 0EB8           05485         MOVLW 184
                      05486         F@CALL DLY@W
002462                05487 START
002462                05488 START2
  00002462            05489 F1_000091 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] GoSub Read_Tag
                      05490         F@CALL READ_TAG
  00002466            05491 F1_000093 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Cls
                      05492         F@CALL LCD@CLS
  0000246A            05493 F1_000094 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Print "Checking TAG"
00246A 0E04           05494         MOVLW ((STR@LB3 >> 8) & 255)
00246C 6EF7           05495         MOVWF TBLPTRLH,0
00246E 0E7C           05496         MOVLW (STR@LB3 & 255)
002470 6EF6           05497         MOVWF TBLPTRL,0
                      05498         F@CALL PRINT@MSTR
  00002476            05499 F1_000096 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] GoSub Check_Tag
                      05500         F@CALL CHECK_TAG
  0000247A            05501 F1_000097 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] If Response = 1 Then
00247A 0E01           05502         MOVLW 1
00247C 0103           05503         MOVLB 3
  00000003            05504 RAM_BANK = 3
00247E 5DEB           05505         SUBWF RESPONSE,W
002480 0100           05506         MOVLB 0
  00000000            05507 RAM_BANK = 0
002482 A4D8           05508         BTFSS STATUS,2,0
                      05509         GO@TO BC@LL212
  00002488            05510 F1_000098 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Cls
                      05511         F@CALL LCD@CLS
  0000248C            05512 F1_000099 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Print At 1,1, "Got a match"
00248C 0E80           05513         MOVLW 128
00248E 6E01           05514         MOVWF BPFH,0
002490 0E80           05515         MOVLW 128
                      05516         F@CALL LCD@CRS
002496 0E04           05517         MOVLW ((STR@LB4 >> 8) & 255)
002498 6EF7           05518         MOVWF TBLPTRLH,0
00249A 0E8A           05519         MOVLW (STR@LB4 & 255)
00249C 6EF6           05520         MOVWF TBLPTRL,0
                      05521         F@CALL PRINT@MSTR
  000024A2            05522 F1_000100 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Print At 2,1, Str UserIn
0024A2 0E80           05523         MOVLW 128
0024A4 6E01           05524         MOVWF BPFH,0
0024A6 0EC0           05525         MOVLW 192
                      05526         F@CALL LCD@CRS
0024AC 0E04           05527         MOVLW 4
0024AE 6E04           05528         MOVWF GEN4,0
0024B0 0E03           05529         MOVLW 3
0024B2 6E1A           05530         MOVWF PP2H,0
0024B4 0ED0           05531         MOVLW 208
                      05532         F@CALL SB@STROUT
  000024BA            05533 F1_000101 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] GoSub WriteH
                      05534         F@CALL WRITEH
  000024BE            05535 F1_000102 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Cls
                      05536         F@CALL LCD@CLS
  000024C2            05537 F1_000103 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Print "History DONE!"
0024C2 0E04           05538         MOVLW ((STR@LB5 >> 8) & 255)
0024C4 6EF7           05539         MOVWF TBLPTRLH,0
0024C6 0E96           05540         MOVLW (STR@LB5 & 255)
0024C8 6EF6           05541         MOVWF TBLPTRL,0
                      05542         F@CALL PRINT@MSTR
  000024CE            05543 F1_000104 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Pause 2000
0024CE 0E07           05544         MOVLW 7
0024D0 6E16           05545         MOVWF PP1H,0
0024D2 0ED0           05546         MOVLW 208
                      05547         F@CALL DLY@W
  000024D8            05548 F1_000105 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] GoTo Start2
                      05549         F@JUMP START2
                      05550         F@JUMP BC@LL215
0024DE                05551 BC@LL212
  000024DE            05552 F1_000106 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Else
  000024DE            05553 F1_000107 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Cls
                      05554         F@CALL LCD@CLS
  000024E2            05555 F1_000108 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Print "No Match"
0024E2 0E04           05556         MOVLW ((STR@LB6 >> 8) & 255)
0024E4 6EF7           05557         MOVWF TBLPTRLH,0
0024E6 0EA4           05558         MOVLW (STR@LB6 & 255)
0024E8 6EF6           05559         MOVWF TBLPTRL,0
                      05560         F@CALL PRINT@MSTR
  000024EE            05561 F1_000109 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Pause 2000
0024EE 0E07           05562         MOVLW 7
0024F0 6E16           05563         MOVWF PP1H,0
0024F2 0ED0           05564         MOVLW 208
                      05565         F@CALL DLY@W
  000024F8            05566 F1_000110 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] GoTo Start2
                      05567         F@JUMP START2
  000024FA            05568 F1_000111 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] EndIf
0024FA                05569 BC@LL215
  000024FA            05570 F1_000112 EQU $ ; in [V2.41 RFID 2ND GENERATION.BAS] Stop
0024FA                05571 PB@LB217
0024FA D7FF           05572         BRA PB@LB217
  000024FC            05573 F6_SOF EQU $ ; READ TAG.INC
0024FC                05574 READ_TAG
  000024FC            05575 F6_000012 EQU $ ; in [READ TAG.INC] Cls
                      05576         F@CALL LCD@CLS
  00002500            05577 F6_000013 EQU $ ; in [READ TAG.INC] Print At 1,1, "ATTEMPTING TO"
002500 0E80           05578         MOVLW 128
002502 6E01           05579         MOVWF BPFH,0
002504 0E80           05580         MOVLW 128
                      05581         F@CALL LCD@CRS
00250A 0E04           05582         MOVLW ((STR@LB7 >> 8) & 255)
00250C 6EF7           05583         MOVWF TBLPTRLH,0
00250E 0EAE           05584         MOVLW (STR@LB7 & 255)
002510 6EF6           05585         MOVWF TBLPTRL,0
                      05586         F@CALL PRINT@MSTR
  00002516            05587 F6_000014 EQU $ ; in [READ TAG.INC] Print At 2,1, "READ TAG...."
002516 0E80           05588         MOVLW 128
002518 6E01           05589         MOVWF BPFH,0
00251A 0EC0           05590         MOVLW 192
                      05591         F@CALL LCD@CRS
002520 0E04           05592         MOVLW ((STR@LB8 >> 8) & 255)
002522 6EF7           05593         MOVWF TBLPTRLH,0
002524 0EBC           05594         MOVLW (STR@LB8 & 255)
002526 6EF6           05595         MOVWF TBLPTRL,0
                      05596         F@CALL PRINT@MSTR
  0000252C            05597 F6_000017 EQU $ ; in [READ TAG.INC] High RFIDEnable                 ' Turn on RFID Reader
00252C 9895           05598         BCF TRISD,4,0
00252E 8883           05599         BSF PORTD,4,0
  00002530            05600 F6_000018 EQU $ ; in [READ TAG.INC] Pause 10               'Time for Reader to settle
002530 0E0A           05601         MOVLW 10
                      05602         F@CALL DL@MS
  00002536            05603 F6_000020 EQU $ ; in [READ TAG.INC] HSerIn 30000, Timeout, [Wait (0X82) ,Str TagIn]  'Wait for header (0X82)
002536 0E75           05604         MOVLW 117
002538 6E06           05605         MOVWF GENH,0
00253A 0E30           05606         MOVLW 48
00253C 6E02           05607         MOVWF GEN,0
00253E                05608 PB@LB218
                      05609         F@CALL HRSIN2
002542 A0D8           05610         BTFSS STATUS,0,0
                      05611         GO@TO TIMEOUT
002548 0882           05612         SUBLW 130
00254A A4D8           05613         BTFSS STATUS,2,0
                      05614         GO@TO PB@LB218
00254E EE03 F0C6      05615         LFSR 0,TAGIN
002552 0E0A           05616         MOVLW 10
002554 6EF3           05617         MOVWF PRODL,0
002556                05618 PB@LB221
002556 80D8           05619         BSF STATUS,0,0
                      05620         F@CALL HRSIN2
00255C A0D8           05621         BTFSS STATUS,0,0
                      05622         GO@TO TIMEOUT
002562 6EEE           05623         MOVWF POSTINC0,0
002564 2EF3           05624         DECFSZ PRODL,F,0
002566 D7F7           05625         BRA PB@LB221
  00002568            05626 F6_000023 EQU $ ; in [READ TAG.INC] HSerIn [Response]                      'End of Transmission (Footer...Should be 0X83)
                      05627         F@CALL HRSIN
00256C 0103           05628         MOVLB 3
  00000003            05629 RAM_BANK = 3
00256E 6FEB           05630         MOVWF RESPONSE
  00002570            05631 F6_000024 EQU $ ; in [READ TAG.INC] Low RFIDEnable                ' Turn off RFID Reader
002570 9895           05632         BCF TRISD,4,0
002572 9883           05633         BCF PORTD,4,0
  00002574            05634 F6_000025 EQU $ ; in [READ TAG.INC] If Response <> 0X83 Then  GoTo Read_Tag 'Tag Footer was not correct
002574 0E83           05635         MOVLW 131
002576 5DEB           05636         SUBWF RESPONSE,W
002578 0100           05637         MOVLB 0
  00000000            05638 RAM_BANK = 0
00257A B4D8           05639         BTFSC STATUS,2,0
                      05640         GO@TO BC@LL222
                      05641         F@JUMP READ_TAG
002582                05642 BC@LL222
  00002582            05643 F6_000031 EQU $ ; in [READ TAG.INC] For Index = 0 To 9
002582 0103           05644         MOVLB 3
  00000003            05645 RAM_BANK = 3
002584 6BED           05646         CLRF INDEX
002586                05647 FR@LB224
002586 0100           05648         MOVLB 0
  00000000            05649 RAM_BANK = 0
002588 0E0A           05650         MOVLW 10
00258A 0103           05651         MOVLB 3
  00000003            05652 RAM_BANK = 3
00258C 5DED           05653         SUBWF INDEX,W
00258E 0100           05654         MOVLB 0
  00000000            05655 RAM_BANK = 0
002590 B0D8           05656         BTFSC STATUS,0,0
                      05657         GO@TO NX@LB225
  00002596            05658 F6_000032 EQU $ ; in [READ TAG.INC] Select TagIn[Index]
002596 EE03 F0C6      05659         LFSR 0,TAGIN
00259A 0103           05660         MOVLB 3
  00000003            05661 RAM_BANK = 3
00259C 51ED           05662         MOVF INDEX,W
00259E 50EB           05663         MOVF PLUSW0,W,0
0025A0 6E0C           05664         MOVWF PBP#VAR1,0
  000025A2            05665 F6_000033 EQU $ ; in [READ TAG.INC] Case 0XB0 To 0XB9
0025A2 0EB0           05666         MOVLW 176
0025A4 5C0C           05667         SUBWF PBP#VAR1,W,0
0025A6 0100           05668         MOVLB 0
  00000000            05669 RAM_BANK = 0
0025A8 A0D8           05670         BTFSS STATUS,0,0
                      05671         GO@TO BC@LL226
0025AE 0EBA           05672         MOVLW 186
0025B0 5C0C           05673         SUBWF PBP#VAR1,W,0
0025B2 B0D8           05674         BTFSC STATUS,0,0
                      05675         GO@TO BC@LL226
  000025B8            05676 F6_000034 EQU $ ; in [READ TAG.INC] TV1 = TagIn[Index]
0025B8 EE03 F0C6      05677         LFSR 0,TAGIN
0025BC 0103           05678         MOVLB 3
  00000003            05679 RAM_BANK = 3
0025BE 51ED           05680         MOVF INDEX,W
0025C0 50EB           05681         MOVF PLUSW0,W,0
0025C2 6FEF           05682         MOVWF TV1
  000025C4            05683 F6_000035 EQU $ ; in [READ TAG.INC] ClearBit TV1 , 7
0025C4 9FEF           05684         BCF TV1,7
  000025C6            05685 F6_000036 EQU $ ; in [READ TAG.INC] TagIn[Index] = TV1
0025C6 EE03 F0C6      05686         LFSR 0,TAGIN
0025CA 51ED           05687         MOVF INDEX,W
0025CC C3EF FFEB      05688         MOVFF TV1,PLUSW0
0025D0 0100           05689         MOVLB 0
  00000000            05690 RAM_BANK = 0
                      05691         F@JUMP BC@LL225
0025D6                05692 BC@LL226
  000025D6            05693 F6_000038 EQU $ ; in [READ TAG.INC] Case 0X81 To 0X86
0025D6 0E81           05694         MOVLW 129
0025D8 5C0C           05695         SUBWF PBP#VAR1,W,0
0025DA A0D8           05696         BTFSS STATUS,0,0
                      05697         GO@TO BC@LL229
0025E0 0E87           05698         MOVLW 135
0025E2 5C0C           05699         SUBWF PBP#VAR1,W,0
0025E4 B0D8           05700         BTFSC STATUS,0,0
                      05701         GO@TO BC@LL229
  000025EA            05702 F6_000039 EQU $ ; in [READ TAG.INC] TV1 = TagIn[Index]
0025EA EE03 F0C6      05703         LFSR 0,TAGIN
0025EE 0103           05704         MOVLB 3
  00000003            05705 RAM_BANK = 3
0025F0 51ED           05706         MOVF INDEX,W
0025F2 50EB           05707         MOVF PLUSW0,W,0
0025F4 6FEF           05708         MOVWF TV1
  000025F6            05709 F6_000040 EQU $ ; in [READ TAG.INC] ClearBit TV1 , 7
0025F6 9FEF           05710         BCF TV1,7
  000025F8            05711 F6_000041 EQU $ ; in [READ TAG.INC] SetBit TV1, 6
0025F8 8DEF           05712         BSF TV1,6
  000025FA            05713 F6_000042 EQU $ ; in [READ TAG.INC] TagIn[Index] = TV1
0025FA EE03 F0C6      05714         LFSR 0,TAGIN
0025FE 51ED           05715         MOVF INDEX,W
002600 C3EF FFEB      05716         MOVFF TV1,PLUSW0
  00002604            05717 F6_000044 EQU $ ; in [READ TAG.INC] End Select
002604                05718 BC@LL229
002604 0100           05719         MOVLB 0
  00000000            05720 RAM_BANK = 0
002606                05721 BC@LL225
  00002606            05722 F6_000045 EQU $ ; in [READ TAG.INC] Next Index
002606 0103           05723         MOVLB 3
  00000003            05724 RAM_BANK = 3
002608 2BED           05725         INCF INDEX,F
00260A 0100           05726         MOVLB 0
  00000000            05727 RAM_BANK = 0
00260C A4D8           05728         BTFSS STATUS,2,0
                      05729         GO@TO FR@LB224
002610                05730 NX@LB225
  00002610            05731 F6_000048 EQU $ ; in [READ TAG.INC] Cls
                      05732         F@CALL LCD@CLS
  00002614            05733 F6_000049 EQU $ ; in [READ TAG.INC] Print "Thank You"
002614 0E04           05734         MOVLW ((STR@LB9 >> 8) & 255)
002616 6EF7           05735         MOVWF TBLPTRLH,0
002618 0ECA           05736         MOVLW (STR@LB9 & 255)
00261A 6EF6           05737         MOVWF TBLPTRL,0
                      05738         F@CALL PRINT@MSTR
  00002620            05739 F6_000050 EQU $ ; in [READ TAG.INC] Return
002620 0012           05740         RETURN 0
002622                05741 TIMEOUT
  00002622            05742 F6_000052 EQU $ ; in [READ TAG.INC] Timeout: Low RFIDEnable       ' Turn off RFID Reader ..No Tag detected for 30 sec
002622 9895           05743         BCF TRISD,4,0
002624 9883           05744         BCF PORTD,4,0
  00002626            05745 F6_000054 EQU $ ; in [READ TAG.INC] Cls
                      05746         F@CALL LCD@CLS
  0000262A            05747 F6_000055 EQU $ ; in [READ TAG.INC] Print At 1,1, "No Tag Detected"
00262A 0E80           05748         MOVLW 128
00262C 6E01           05749         MOVWF BPFH,0
00262E 0E80           05750         MOVLW 128
                      05751         F@CALL LCD@CRS
002634 0E04           05752         MOVLW ((STR@LB10 >> 8) & 255)
002636 6EF7           05753         MOVWF TBLPTRLH,0
002638 0ED4           05754         MOVLW (STR@LB10 & 255)
00263A 6EF6           05755         MOVWF TBLPTRL,0
                      05756         F@CALL PRINT@MSTR
  00002640            05757 F6_000056 EQU $ ; in [READ TAG.INC] DelayMS 2000   'EVENTUALLY WE MUST GET RID OF THE PAUSE.
002640 0E07           05758         MOVLW 7
002642 6E16           05759         MOVWF PP1H,0
002644 0ED0           05760         MOVLW 208
                      05761         F@CALL DLY@W
  0000264A            05762 F6_000057 EQU $ ; in [READ TAG.INC] Sleep          'EVENTUALLY WE MUST INFORM THE USER HIS TAG FAILED.
00264A 0003           05763         SLEEP
  0000264C            05764 F6_EOF EQU $ ; READ TAG.INC
  0000264C            05765 F7_SOF EQU $ ; READ SD.INC
00264C                05766 READ_SD
  0000264C            05767 F7_000012 EQU $ ; in [READ SD.INC] MyCount = 0
00264C 0103           05768         MOVLB 3
  00000003            05769 RAM_BANK = 3
00264E 6BEC           05770         CLRF MYCOUNT
  00002650            05771 F7_000014 EQU $ ; in [READ SD.INC] GoSub Read_Mod        'Go get Module number
002650 0100           05772         MOVLB 0
  00000000            05773 RAM_BANK = 0
                      05774         F@CALL READ_MOD
  00002656            05775 F7_000016 EQU $ ; in [READ SD.INC] SD_File_Name = Str ModNum          'Change Mod # into string
002656 EE02 F091      05776         LFSR 0,SD_FILE_NAME
00265A EE13 F0E4      05777         LFSR 1,MODNUM
00265E 0E07           05778         MOVLW 7
002660 6EF3           05779         MOVWF PRODL,0
002662 50E6           05780         MOVF POSTINC1,W,0
002664 E003           05781         BZ $ + 8
002666 6EEE           05782         MOVWF POSTINC0,0
002668 2EF3           05783         DECFSZ PRODL,F,0
00266A D7FB           05784         BRA $ - 8
00266C 6AEF           05785         CLRF INDF0,0
  0000266E            05786 F7_000017 EQU $ ; in [READ SD.INC] SD_File_Ext = "TXT"                'File Ext, upper case only!
00266E EE02 F09A      05787         LFSR 0,SD_FILE_EXT
002672 0E54           05788         MOVLW 84
002674 6EEE           05789         MOVWF POSTINC0,0
002676 0E58           05790         MOVLW 88
002678 6EEE           05791         MOVWF POSTINC0,0
00267A 0E54           05792         MOVLW 84
00267C 6EEE           05793         MOVWF POSTINC0,0
00267E 6AEF           05794         CLRF INDF0,0
  00002680            05795 F7_000018 EQU $ ; in [READ SD.INC] Response = SD_Open_File             'Using the Module serial number stored within the Module at
  000A                05796  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_OPEN_FILE_RETURN=1,PRM_COUNT=0
                      05797         SD_OPEN_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05798  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_OPEN_FILE_RETURN=1,PRM_COUNT=0
  00002688            05799 F7_000021 EQU $ ; in [READ SD.INC] If Response = 1 Then
002688 0E01           05800         MOVLW 1
00268A 0103           05801         MOVLB 3
  00000003            05802 RAM_BANK = 3
00268C 5DEB           05803         SUBWF RESPONSE,W
00268E 0100           05804         MOVLB 0
  00000000            05805 RAM_BANK = 0
002690 A4D8           05806         BTFSS STATUS,2,0
                      05807         GO@TO BC@LL231
  00002696            05808 F7_000022 EQU $ ; in [READ SD.INC] Cls
                      05809         F@CALL LCD@CLS
  0000269A            05810 F7_000023 EQU $ ; in [READ SD.INC] Print "File not found"          'File with Module serial number not found.
00269A 0E04           05811         MOVLW ((STR@LB11 >> 8) & 255)
00269C 6EF7           05812         MOVWF TBLPTRLH,0
00269E 0EE4           05813         MOVLW (STR@LB11 & 255)
0026A0 6EF6           05814         MOVWF TBLPTRL,0
                      05815         F@CALL PRINT@MSTR
  000026A6            05816 F7_000025 EQU $ ; in [READ SD.INC] Sleep
0026A6 0003           05817         SLEEP
  000026A8            05818 F7_000026 EQU $ ; in [READ SD.INC] EndIf
0026A8                05819 BC@LL231
  000026A8            05820 F7_000030 EQU $ ; in [READ SD.INC] User_Pointer = BUA                   '...we write the low and ..
0026A8 0E9C           05821         MOVLW 156
0026AA 0103           05822         MOVLB 3
  00000003            05823 RAM_BANK = 3
0026AC 6FC5           05824         MOVWF USER_POINTERH
0026AE 0E50           05825         MOVLW 80
0026B0 6FC4           05826         MOVWF USER_POINTER
  000026B2            05827 F7_000031 EQU $ ; in [READ SD.INC] EWrite UPA_L, [User_Pointer.LowByte]  '...high bytes of the base user address (0X9C500...
0026B2 6AAA           05828         CLRF EEADRH,0
0026B4 6AA9           05829         CLRF EEADR,0
0026B6 51C4           05830         MOVF USER_POINTER,W
                      05831         F@CALL EE@WR@W
  000026BC            05832 F7_000032 EQU $ ; in [READ SD.INC] EWrite UPA_H, [User_Pointer.HighByte]  '...into the EEProm Pointer storage spot (0X000 and 0X001)
0026BC 6AAA           05833         CLRF EEADRH,0
0026BE 0E01           05834         MOVLW 1
0026C0 6EA9           05835         MOVWF EEADR,0
0026C2 51C5           05836         MOVF USER_POINTERH,W
                      05837         F@CALL EE@WR@W
  000026C8            05838 F7_000033 EQU $ ; in [READ SD.INC] Pause 2000    'EVENTUALLY DELETE THIS PAUSE
0026C8 0E07           05839         MOVLW 7
0026CA 6E16           05840         MOVWF PP1H,0
0026CC 0ED0           05841         MOVLW 208
                      05842         F@CALL DLY@W
  000026D2            05843 F7_000035 EQU $ ; in [READ SD.INC] While SD_EOF < 1      'Read SD until end of file....
0026D2                05844 BC@LL232
0026D2 0100           05845         MOVLB 0
  00000000            05846 RAM_BANK = 0
0026D4 96D8           05847         BCF STATUS,3,0
0026D6 0102           05848         MOVLB 2
  00000002            05849 RAM_BANK = 2
0026D8 B1E5           05850         BTFSC _B#VR1,0
0026DA 86D8           05851         BSF STATUS,3,0
0026DC 0100           05852         MOVLB 0
  00000000            05853 RAM_BANK = 0
                      05854         G@OTO BC@LL233
  000026E4            05855 F7_000037 EQU $ ; in [READ SD.INC] Response = SD_Read_Byte_From_File
  000A                05856  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      05857         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05858  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
  000026EC            05859 F7_000039 EQU $ ; in [READ SD.INC] If Response <> 0X5E Then       'first character for each user should be "^"
0026EC 0E5E           05860         MOVLW 94
0026EE 0103           05861         MOVLB 3
  00000003            05862 RAM_BANK = 3
0026F0 5DEB           05863         SUBWF RESPONSE,W
0026F2 0100           05864         MOVLB 0
  00000000            05865 RAM_BANK = 0
0026F4 B4D8           05866         BTFSC STATUS,2,0
                      05867         GO@TO BC@LL235
  000026FA            05868 F7_000040 EQU $ ; in [READ SD.INC] If Response = 0X40 Then   ' if the first char is not '^' then is it a '@'?
0026FA 0E40           05869         MOVLW 64
0026FC 0103           05870         MOVLB 3
  00000003            05871 RAM_BANK = 3
0026FE 5DEB           05872         SUBWF RESPONSE,W
002700 0100           05873         MOVLB 0
  00000000            05874 RAM_BANK = 0
002702 A4D8           05875         BTFSS STATUS,2,0
                      05876         GO@TO BC@LL237
  00002708            05877 F7_000043 EQU $ ; in [READ SD.INC] EWrite NOU, [MyCount]     'Write total # of Users to EEProm
002708 6AAA           05878         CLRF EEADRH,0
00270A 0E02           05879         MOVLW 2
00270C 6EA9           05880         MOVWF EEADR,0
00270E 0103           05881         MOVLB 3
  00000003            05882 RAM_BANK = 3
002710 51EC           05883         MOVF MYCOUNT,W
                      05884         F@CALL EE@WR@W
  00002716            05885 F7_000044 EQU $ ; in [READ SD.INC] GoTo Write_Manager     'Located in 'Write_M_SD' module
002716 0100           05886         MOVLB 0
  00000000            05887 RAM_BANK = 0
                      05888         F@JUMP WRITE_MANAGER
  0000271C            05889 F7_000045 EQU $ ; in [READ SD.INC] Return                  'Return to main module
00271C 0012           05890         RETURN 0
  0000271E            05891 F7_000046 EQU $ ; in [READ SD.INC] EndIf
00271E                05892 BC@LL237
  0000271E            05893 F7_000048 EQU $ ; in [READ SD.INC] Cls
                      05894         F@CALL LCD@CLS
  00002722            05895 F7_000049 EQU $ ; in [READ SD.INC] Print At 1,1, "No 5E (^)"
002722 0E80           05896         MOVLW 128
002724 6E01           05897         MOVWF BPFH,0
002726 0E80           05898         MOVLW 128
                      05899         F@CALL LCD@CRS
00272C 0E04           05900         MOVLW ((STR@LB12 >> 8) & 255)
00272E 6EF7           05901         MOVWF TBLPTRLH,0
002730 0EF4           05902         MOVLW (STR@LB12 & 255)
002732 6EF6           05903         MOVWF TBLPTRL,0
                      05904         F@CALL PRINT@MSTR
  00002738            05905 F7_000050 EQU $ ; in [READ SD.INC] Print At 2,1, "Stopped!"
002738 0E80           05906         MOVLW 128
00273A 6E01           05907         MOVWF BPFH,0
00273C 0EC0           05908         MOVLW 192
                      05909         F@CALL LCD@CRS
002742 0E04           05910         MOVLW ((STR@LB13 >> 8) & 255)
002744 6EF7           05911         MOVWF TBLPTRLH,0
002746 0EFE           05912         MOVLW (STR@LB13 & 255)
002748 6EF6           05913         MOVWF TBLPTRL,0
                      05914         F@CALL PRINT@MSTR
  0000274E            05915 F7_000051 EQU $ ; in [READ SD.INC] Pause 3000
00274E 0E0B           05916         MOVLW 11
002750 6E16           05917         MOVWF PP1H,0
002752 0EB8           05918         MOVLW 184
                      05919         F@CALL DLY@W
  00002758            05920 F7_000052 EQU $ ; in [READ SD.INC] SD_Close_File
  000A                05921  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      05922         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05923  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  0000275C            05924 F7_000053 EQU $ ; in [READ SD.INC] Stop
00275C                05925 PB@LB239
00275C D7FF           05926         BRA PB@LB239
  0000275E            05927 F7_000054 EQU $ ; in [READ SD.INC] Sleep    'EVENTUALLY WE NEED TO HAVE A WAY TO TELL THE USER THERE WAS A PROBLEM.
00275E 0003           05928         SLEEP
  00002760            05929 F7_000056 EQU $ ; in [READ SD.INC] EndIf
002760                05930 BC@LL235
  00002760            05931 F7_000060 EQU $ ; in [READ SD.INC] For Index = 0 To 3                'next 4 characters will be the User ID number
002760 0103           05932         MOVLB 3
  00000003            05933 RAM_BANK = 3
002762 6BED           05934         CLRF INDEX
002764                05935 FR@LB240
002764 0100           05936         MOVLB 0
  00000000            05937 RAM_BANK = 0
002766 0E04           05938         MOVLW 4
002768 0103           05939         MOVLB 3
  00000003            05940 RAM_BANK = 3
00276A 5DED           05941         SUBWF INDEX,W
00276C 0100           05942         MOVLB 0
  00000000            05943 RAM_BANK = 0
00276E B0D8           05944         BTFSC STATUS,0,0
                      05945         GO@TO NX@LB241
  00002774            05946 F7_000061 EQU $ ; in [READ SD.INC] UTag[Index] = SD_Read_Byte_From_File
  000A                05947  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      05948         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05949  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
00277C EE03 F0D4      05950         LFSR 0,UTAG
002780 0103           05951         MOVLB 3
  00000003            05952 RAM_BANK = 3
002782 51ED           05953         MOVF INDEX,W
002784 C00C FFEB      05954         MOVFF PBP#VAR1,PLUSW0
  00002788            05955 F7_000062 EQU $ ; in [READ SD.INC] Next
002788 2BED           05956         INCF INDEX,F
00278A 0100           05957         MOVLB 0
  00000000            05958 RAM_BANK = 0
00278C A4D8           05959         BTFSS STATUS,2,0
                      05960         GO@TO FR@LB240
002790                05961 NX@LB241
  00002790            05962 F7_000064 EQU $ ; in [READ SD.INC] Response = SD_Read_Byte_From_File
  000A                05963  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      05964         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                05965  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
  00002798            05966 F7_000066 EQU $ ; in [READ SD.INC] If Response <> 0X3A Then       'first character for each Tag should be ":"
002798 0E3A           05967         MOVLW 58
00279A 0103           05968         MOVLB 3
  00000003            05969 RAM_BANK = 3
00279C 5DEB           05970         SUBWF RESPONSE,W
00279E 0100           05971         MOVLB 0
  00000000            05972 RAM_BANK = 0
0027A0 B4D8           05973         BTFSC STATUS,2,0
                      05974         GO@TO BC@LL242
  000027A6            05975 F7_000067 EQU $ ; in [READ SD.INC] Cls
                      05976         F@CALL LCD@CLS
  000027AA            05977 F7_000068 EQU $ ; in [READ SD.INC] Print At 1,1, "No 3A (:).."      '*******Eventually will flash LED *************
0027AA 0E80           05978         MOVLW 128
0027AC 6E01           05979         MOVWF BPFH,0
0027AE 0E80           05980         MOVLW 128
                      05981         F@CALL LCD@CRS
0027B4 0E05           05982         MOVLW ((STR@LB14 >> 8) & 255)
0027B6 6EF7           05983         MOVWF TBLPTRLH,0
0027B8 0E08           05984         MOVLW (STR@LB14 & 255)
0027BA 6EF6           05985         MOVWF TBLPTRL,0
                      05986         F@CALL PRINT@MSTR
  000027C0            05987 F7_000069 EQU $ ; in [READ SD.INC] Print At 2,1, "Stopped!"
0027C0 0E80           05988         MOVLW 128
0027C2 6E01           05989         MOVWF BPFH,0
0027C4 0EC0           05990         MOVLW 192
                      05991         F@CALL LCD@CRS
0027CA 0E05           05992         MOVLW ((STR@LB15 >> 8) & 255)
0027CC 6EF7           05993         MOVWF TBLPTRLH,0
0027CE 0E14           05994         MOVLW (STR@LB15 & 255)
0027D0 6EF6           05995         MOVWF TBLPTRL,0
                      05996         F@CALL PRINT@MSTR
  000027D6            05997 F7_000070 EQU $ ; in [READ SD.INC] Pause 3000
0027D6 0E0B           05998         MOVLW 11
0027D8 6E16           05999         MOVWF PP1H,0
0027DA 0EB8           06000         MOVLW 184
                      06001         F@CALL DLY@W
  000027E0            06002 F7_000071 EQU $ ; in [READ SD.INC] SD_Close_File
  000A                06003  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06004         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06005  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  000027E4            06006 F7_000072 EQU $ ; in [READ SD.INC] Sleep    'EVENTUALLY WE NEED TO HAVE A WAY TO TELL THE USER THERE WAS A PROBLEM.
0027E4 0003           06007         SLEEP
  000027E6            06008 F7_000073 EQU $ ; in [READ SD.INC] EndIf
0027E6                06009 BC@LL242
  000027E6            06010 F7_000075 EQU $ ; in [READ SD.INC] For Index = 4 To 13                'next 9 characters will be the User Tag number
0027E6 0E04           06011         MOVLW 4
0027E8 0103           06012         MOVLB 3
  00000003            06013 RAM_BANK = 3
0027EA 6FED           06014         MOVWF INDEX
0027EC                06015 FR@LB244
0027EC 0100           06016         MOVLB 0
  00000000            06017 RAM_BANK = 0
0027EE 0E0E           06018         MOVLW 14
0027F0 0103           06019         MOVLB 3
  00000003            06020 RAM_BANK = 3
0027F2 5DED           06021         SUBWF INDEX,W
0027F4 0100           06022         MOVLB 0
  00000000            06023 RAM_BANK = 0
0027F6 B0D8           06024         BTFSC STATUS,0,0
                      06025         GO@TO NX@LB245
  000027FC            06026 F7_000076 EQU $ ; in [READ SD.INC] UTag[Index] = SD_Read_Byte_From_File
  000A                06027  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      06028         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06029  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=PBP#VAR1,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
002804 EE03 F0D4      06030         LFSR 0,UTAG
002808 0103           06031         MOVLB 3
  00000003            06032 RAM_BANK = 3
00280A 51ED           06033         MOVF INDEX,W
00280C C00C FFEB      06034         MOVFF PBP#VAR1,PLUSW0
  00002810            06035 F7_000077 EQU $ ; in [READ SD.INC] Next
002810 2BED           06036         INCF INDEX,F
002812 0100           06037         MOVLB 0
  00000000            06038 RAM_BANK = 0
002814 A4D8           06039         BTFSS STATUS,2,0
                      06040         GO@TO FR@LB244
002818                06041 NX@LB245
  00002818            06042 F7_000081 EQU $ ; in [READ SD.INC] UTag[14] = 0XFF   'Dummy byte
002818 0103           06043         MOVLB 3
  00000003            06044 RAM_BANK = 3
00281A 69E2           06045         SETF UTAG#14
  0000281C            06046 F7_000082 EQU $ ; in [READ SD.INC] UTag[15] = 0XFF   'Dummy byte
00281C 69E3           06047         SETF UTAG#15
  0000281E            06048 F7_000083 EQU $ ; in [READ SD.INC] For Index = 0 To 15
00281E 6BED           06049         CLRF INDEX
002820                06050 FR@LB246
002820 0100           06051         MOVLB 0
  00000000            06052 RAM_BANK = 0
002822 0E10           06053         MOVLW 16
002824 0103           06054         MOVLB 3
  00000003            06055 RAM_BANK = 3
002826 5DED           06056         SUBWF INDEX,W
002828 0100           06057         MOVLB 0
  00000000            06058 RAM_BANK = 0
00282A B0D8           06059         BTFSC STATUS,0,0
                      06060         GO@TO NX@LB247
  00002830            06061 F7_000084 EQU $ ; in [READ SD.INC] CWrite User_Pointer + Index, [UTag[Index]]    'Here we are writing the 16 byte chunk to the program memory
002830 0103           06062         MOVLB 3
  00000003            06063 RAM_BANK = 3
002832 51ED           06064         MOVF INDEX,W
002834 25C4           06065         ADDWF USER_POINTER,W
002836 6EF6           06066         MOVWF TBLPTRL,0
002838 0E00           06067         MOVLW 0
00283A 21C5           06068         ADDWFC USER_POINTERH,W
00283C 6EF7           06069         MOVWF TBLPTRLH,0
00283E EE03 F0D4      06070         LFSR 0,UTAG
002842 51ED           06071         MOVF INDEX,W
002844 50EB           06072         MOVF PLUSW0,W,0
                      06073         F@CALL C@WRITE
  0000284A            06074 F7_000086 EQU $ ; in [READ SD.INC] Next
00284A 2BED           06075         INCF INDEX,F
00284C 0100           06076         MOVLB 0
  00000000            06077 RAM_BANK = 0
00284E A4D8           06078         BTFSS STATUS,2,0
                      06079         GO@TO FR@LB246
002852                06080 NX@LB247
  00002852            06081 F7_000087 EQU $ ; in [READ SD.INC] User_Pointer = User_Pointer + 16      'Here we will update the user pointer to reflect..
002852 0E10           06082         MOVLW 16
002854 0103           06083         MOVLB 3
  00000003            06084 RAM_BANK = 3
002856 27C4           06085         ADDWF USER_POINTER,F
002858 0E00           06086         MOVLW 0
00285A 23C5           06087         ADDWFC USER_POINTERH,F
  0000285C            06088 F7_000088 EQU $ ; in [READ SD.INC] EWrite UPA_L, [User_Pointer.LowByte]   'our progress so far. If a problem arises then we have not lost all
00285C 6AAA           06089         CLRF EEADRH,0
00285E 6AA9           06090         CLRF EEADR,0
002860 51C4           06091         MOVF USER_POINTER,W
                      06092         F@CALL EE@WR@W
  00002866            06093 F7_000089 EQU $ ; in [READ SD.INC] EWrite UPA_H, [User_Pointer.HighByte]  'UPA_L and UPA_H hold the start of the next empty user spot.
002866 6AAA           06094         CLRF EEADRH,0
002868 0E01           06095         MOVLW 1
00286A 6EA9           06096         MOVWF EEADR,0
00286C 51C5           06097         MOVF USER_POINTERH,W
                      06098         F@CALL EE@WR@W
  00002872            06099 F7_000090 EQU $ ; in [READ SD.INC] Inc MyCount    'Keeps track of how many Users we have added
002872 2BEC           06100         INCF MYCOUNT,F
  00002874            06101 F7_000092 EQU $ ; in [READ SD.INC] Wend    'Next user
002874 0100           06102         MOVLB 0
  00000000            06103 RAM_BANK = 0
                      06104         F@JUMP BC@LL232
002878                06105 BC@LL233
  00002878            06106 F7_EOF EQU $ ; READ SD.INC
  00002878            06107 F8_SOF EQU $ ; WRITE SD.INC
002878                06108 WRITE_SD
  00002878            06109 F8_000016 EQU $ ; in [WRITE SD.INC] SD_File_Name = Str ModNum + "W"      'Module File Name with 'W' appended to differeniate from Input file, upper case only!
002878 EE02 F091      06110         LFSR 0,SD_FILE_NAME
00287C EE13 F0E4      06111         LFSR 1,MODNUM
002880 0E07           06112         MOVLW 7
002882 6EF3           06113         MOVWF PRODL,0
002884 50E6           06114         MOVF POSTINC1,W,0
002886 E003           06115         BZ $ + 8
002888 6EEE           06116         MOVWF POSTINC0,0
00288A 2EF3           06117         DECFSZ PRODL,F,0
00288C D7FB           06118         BRA $ - 8
00288E 0E57           06119         MOVLW 87
002890 6EEE           06120         MOVWF POSTINC0,0
002892 6AEF           06121         CLRF INDF0,0
  00002894            06122 F8_000017 EQU $ ; in [WRITE SD.INC] SD_File_Ext = "TXT"                  'File Ext, upper case only!
002894 EE02 F09A      06123         LFSR 0,SD_FILE_EXT
002898 0E54           06124         MOVLW 84
00289A 6EEE           06125         MOVWF POSTINC0,0
00289C 0E58           06126         MOVLW 88
00289E 6EEE           06127         MOVWF POSTINC0,0
0028A0 0E54           06128         MOVLW 84
0028A2 6EEE           06129         MOVWF POSTINC0,0
0028A4 6AEF           06130         CLRF INDF0,0
  000028A6            06131 F8_000018 EQU $ ; in [WRITE SD.INC] Response = SD_Check_For_File         'Check if file exists already
  000A                06132  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_CHECK_FOR_FILE_RETURN=1,PRM_COUNT=0
                      06133         SD_CHECK_FOR_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06134  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_CHECK_FOR_FILE_RETURN=1,PRM_COUNT=0
  000028AE            06135 F8_000019 EQU $ ; in [WRITE SD.INC] If Response = 0 Then
0028AE 0103           06136         MOVLB 3
  00000003            06137 RAM_BANK = 3
0028B0 53EB           06138         MOVF RESPONSE,F
0028B2 0100           06139         MOVLB 0
  00000000            06140 RAM_BANK = 0
0028B4 A4D8           06141         BTFSS STATUS,2,0
                      06142         GO@TO BC@LL248
  000028BA            06143 F8_000020 EQU $ ; in [WRITE SD.INC] SD_Delete_File               ' If file exists then delete it........
  000A                06144  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
                      06145         SD_DELETE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06146  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
  000028BE            06147 F8_000021 EQU $ ; in [WRITE SD.INC] EndIf
0028BE                06148 BC@LL248
  000028BE            06149 F8_000022 EQU $ ; in [WRITE SD.INC] SD_New_File     'Create new file
  000A                06150  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
                      06151         SD_NEW_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06152  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
  000028C2            06153 F8_000023 EQU $ ; in [WRITE SD.INC] SD_Close_File   'Close file now that is has been created... Only one file at a time can be opened
  000A                06154  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06155         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06156  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  000028C6            06157 F8_000025 EQU $ ; in [WRITE SD.INC] SD_File_Name = Str ModNum + "W"      'Module File Name with 'W' appended to differeniate from Input file, upper case only!
0028C6 EE02 F091      06158         LFSR 0,SD_FILE_NAME
0028CA EE13 F0E4      06159         LFSR 1,MODNUM
0028CE 0E07           06160         MOVLW 7
0028D0 6EF3           06161         MOVWF PRODL,0
0028D2 50E6           06162         MOVF POSTINC1,W,0
0028D4 E003           06163         BZ $ + 8
0028D6 6EEE           06164         MOVWF POSTINC0,0
0028D8 2EF3           06165         DECFSZ PRODL,F,0
0028DA D7FB           06166         BRA $ - 8
0028DC 0E57           06167         MOVLW 87
0028DE 6EEE           06168         MOVWF POSTINC0,0
0028E0 6AEF           06169         CLRF INDF0,0
  000028E2            06170 F8_000026 EQU $ ; in [WRITE SD.INC] SD_File_Ext = "TXT"                'File Ext, upper case only!
0028E2 EE02 F09A      06171         LFSR 0,SD_FILE_EXT
0028E6 0E54           06172         MOVLW 84
0028E8 6EEE           06173         MOVWF POSTINC0,0
0028EA 0E58           06174         MOVLW 88
0028EC 6EEE           06175         MOVWF POSTINC0,0
0028EE 0E54           06176         MOVLW 84
0028F0 6EEE           06177         MOVWF POSTINC0,0
0028F2 6AEF           06178         CLRF INDF0,0
  000028F4            06179 F8_000027 EQU $ ; in [WRITE SD.INC] Response = SD_Append_File     'Here we are going to 'Append' the Output file with data so far
  000A                06180  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_APPEND_FILE_RETURN=1,PRM_COUNT=0
                      06181         SD_APPEND_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06182  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_APPEND_FILE_RETURN=1,PRM_COUNT=0
  000028FC            06183 F8_000028 EQU $ ; in [WRITE SD.INC] If Response = 1 Then
0028FC 0E01           06184         MOVLW 1
0028FE 0103           06185         MOVLB 3
  00000003            06186 RAM_BANK = 3
002900 5DEB           06187         SUBWF RESPONSE,W
002902 0100           06188         MOVLB 0
  00000000            06189 RAM_BANK = 0
002904 A4D8           06190         BTFSS STATUS,2,0
                      06191         GO@TO BC@LL250
  0000290A            06192 F8_000029 EQU $ ; in [WRITE SD.INC] Cls
                      06193         F@CALL LCD@CLS
  0000290E            06194 F8_000030 EQU $ ; in [WRITE SD.INC] Print "File not found"
00290E 0E05           06195         MOVLW ((STR@LB16 >> 8) & 255)
002910 6EF7           06196         MOVWF TBLPTRLH,0
002912 0E1E           06197         MOVLW (STR@LB16 & 255)
002914 6EF6           06198         MOVWF TBLPTRL,0
                      06199         F@CALL PRINT@MSTR
  0000291A            06200 F8_000032 EQU $ ; in [WRITE SD.INC] Sleep
00291A 0003           06201         SLEEP
  0000291C            06202 F8_000033 EQU $ ; in [WRITE SD.INC] EndIf
00291C                06203 BC@LL250
00291C                06204 CLOSE_FILE
  0000291C            06205 F8_000039 EQU $ ; in [WRITE SD.INC] SD_Close_File                                           'Close file
  000A                06206  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06207         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06208  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002920            06209 F8_000040 EQU $ ; in [WRITE SD.INC] Return
002920 0012           06210         RETURN 0
  00002922            06211 F8_EOF EQU $ ; WRITE SD.INC
  00002922            06212 F9_SOF EQU $ ; INIT SD.INC
002922                06213 INIT_SD
  00002922            06214 F9_000013 EQU $ ; in [INIT SD.INC] For Index = 0 To 2   'We allow 3 tries to intialize the SD card
002922 0103           06215         MOVLB 3
  00000003            06216 RAM_BANK = 3
002924 6BED           06217         CLRF INDEX
002926                06218 FR@LB252
002926 0100           06219         MOVLB 0
  00000000            06220 RAM_BANK = 0
002928 0E03           06221         MOVLW 3
00292A 0103           06222         MOVLB 3
  00000003            06223 RAM_BANK = 3
00292C 5DED           06224         SUBWF INDEX,W
00292E 0100           06225         MOVLB 0
  00000000            06226 RAM_BANK = 0
002930 B0D8           06227         BTFSC STATUS,0,0
                      06228         GO@TO NX@LB253
  00002936            06229 F9_000015 EQU $ ; in [INIT SD.INC] Response = SD_Init_FS_MSSP SD_SPI_FOSC_04
  0008                06230  VARIABLE PRM_1=8
  0000                06231  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06232  VARIABLE SD_INIT_FS_MSSP_LST_PRM=0
  000A                06233  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_INIT_FS_MSSP_RETURN=1,PRM_COUNT=1
                      06234         SD_INIT_FS_MSSP 0,0,0,0,0,0,0,0,0,0
  000A                06235  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_INIT_FS_MSSP_RETURN=1,PRM_COUNT=1
  0008                06236  VARIABLE PRM_1=8
  0000                06237  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06238  VARIABLE SD_INIT_FS_MSSP_LST_PRM=0
  00002950            06239 F9_000016 EQU $ ; in [INIT SD.INC] If Response = 0 Then
002950 0103           06240         MOVLB 3
  00000003            06241 RAM_BANK = 3
002952 53EB           06242         MOVF RESPONSE,F
002954 0100           06243         MOVLB 0
  00000000            06244 RAM_BANK = 0
002956 A4D8           06245         BTFSS STATUS,2,0
                      06246         GO@TO BC@LL254
  0000295C            06247 F9_000017 EQU $ ; in [INIT SD.INC] Return
00295C 0012           06248         RETURN 0
  0000295E            06249 F9_000018 EQU $ ; in [INIT SD.INC] EndIf
00295E                06250 BC@LL254
  0000295E            06251 F9_000019 EQU $ ; in [INIT SD.INC] Next Index     'Next try to intitialize card
00295E 0103           06252         MOVLB 3
  00000003            06253 RAM_BANK = 3
002960 2BED           06254         INCF INDEX,F
002962 0100           06255         MOVLB 0
  00000000            06256 RAM_BANK = 0
002964 A4D8           06257         BTFSS STATUS,2,0
                      06258         GO@TO FR@LB252
002968                06259 NX@LB253
  00002968            06260 F9_000022 EQU $ ; in [INIT SD.INC] Cls
                      06261         F@CALL LCD@CLS
  0000296C            06262 F9_000023 EQU $ ; in [INIT SD.INC] Print "No Init!"     'Eventually we will flash a LED here to tell operator the Init failed
00296C 0E05           06263         MOVLW ((STR@LB17 >> 8) & 255)
00296E 6EF7           06264         MOVWF TBLPTRLH,0
002970 0E2E           06265         MOVLW (STR@LB17 & 255)
002972 6EF6           06266         MOVWF TBLPTRL,0
                      06267         F@CALL PRINT@MSTR
  00002978            06268 F9_000024 EQU $ ; in [INIT SD.INC] Pause 3000
002978 0E0B           06269         MOVLW 11
00297A 6E16           06270         MOVWF PP1H,0
00297C 0EB8           06271         MOVLW 184
                      06272         F@CALL DLY@W
  00002982            06273 F9_000025 EQU $ ; in [INIT SD.INC] Return
002982 0012           06274         RETURN 0
  00002984            06275 F9_EOF EQU $ ; INIT SD.INC
  00002984            06276 F10_SOF EQU $ ; CHECK TAG.INC
002984                06277 CHECK_TAG
  00002984            06278 F10_000004 EQU $ ; in [CHECK TAG.INC] Check_Tag:    Response = 0        'Process will set Response to 1 if Tag is found
002984 0103           06279         MOVLB 3
  00000003            06280 RAM_BANK = 3
002986 6BEB           06281         CLRF RESPONSE
  00002988            06282 F10_000005 EQU $ ; in [CHECK TAG.INC] If User_Pointer = BUA Then    'there are no User entries in the table
002988 51C5           06283         MOVF USER_POINTERH,W
00298A 0A9C           06284         XORLW 156
00298C 0E50           06285         MOVLW 80
00298E B4D8           06286         BTFSC STATUS,2,0
002990 19C4           06287         XORWF USER_POINTER,W
002992 0100           06288         MOVLB 0
  00000000            06289 RAM_BANK = 0
002994 A4D8           06290         BTFSS STATUS,2,0
                      06291         GO@TO BC@LL256
  0000299A            06292 F10_000006 EQU $ ; in [CHECK TAG.INC] Cls
                      06293         F@CALL LCD@CLS
  0000299E            06294 F10_000007 EQU $ ; in [CHECK TAG.INC] Print "No Users"
00299E 0E05           06295         MOVLW ((STR@LB18 >> 8) & 255)
0029A0 6EF7           06296         MOVWF TBLPTRLH,0
0029A2 0E38           06297         MOVLW (STR@LB18 & 255)
0029A4 6EF6           06298         MOVWF TBLPTRL,0
                      06299         F@CALL PRINT@MSTR
  000029AA            06300 F10_000008 EQU $ ; in [CHECK TAG.INC] Pause 2000
0029AA 0E07           06301         MOVLW 7
0029AC 6E16           06302         MOVWF PP1H,0
0029AE 0ED0           06303         MOVLW 208
                      06304         F@CALL DLY@W
  000029B4            06305 F10_000009 EQU $ ; in [CHECK TAG.INC] Return
0029B4 0012           06306         RETURN 0
  000029B6            06307 F10_000010 EQU $ ; in [CHECK TAG.INC] EndIf
0029B6                06308 BC@LL256
  000029B6            06309 F10_000011 EQU $ ; in [CHECK TAG.INC] Word_Var = BUA   ' Start search in first user memory spot
0029B6 0E9C           06310         MOVLW 156
0029B8 0103           06311         MOVLB 3
  00000003            06312 RAM_BANK = 3
0029BA 6FF1           06313         MOVWF WORD_VARH
0029BC 0E50           06314         MOVLW 80
0029BE 6FF0           06315         MOVWF WORD_VAR
0029C0                06316 NEXTTAG
0029C0 0100           06317         MOVLB 0
  00000000            06318 RAM_BANK = 0
  000029C2            06319 F10_000012 EQU $ ; in [CHECK TAG.INC] NextTag:  Index = 0
0029C2 0103           06320         MOVLB 3
  00000003            06321 RAM_BANK = 3
0029C4 6BED           06322         CLRF INDEX
  000029C6            06323 F10_000013 EQU $ ; in [CHECK TAG.INC] Response = 0     'Process will set Flag to 1 if Tag is found
0029C6 6BEB           06324         CLRF RESPONSE
  000029C8            06325 F10_000014 EQU $ ; in [CHECK TAG.INC] Repeat      'Repeat until all Tag digits are checked
0029C8                06326 BC@LL257
0029C8 0100           06327         MOVLB 0
  00000000            06328 RAM_BANK = 0
  000029CA            06329 F10_000015 EQU $ ; in [CHECK TAG.INC] TV1 = CRead TagOffset + Word_Var + Index   'TagOffset jumps over User #
0029CA 0E04           06330         MOVLW 4
0029CC 0103           06331         MOVLB 3
  00000003            06332 RAM_BANK = 3
0029CE 25F0           06333         ADDWF WORD_VAR,W
0029D0 6E23           06334         MOVWF PP7,0
0029D2 0E00           06335         MOVLW 0
0029D4 21F1           06336         ADDWFC WORD_VARH,W
0029D6 6E24           06337         MOVWF PP7H,0
0029D8 51ED           06338         MOVF INDEX,W
0029DA 2423           06339         ADDWF PP7,W,0
0029DC 6EF6           06340         MOVWF TBLPTRL,0
0029DE 0E00           06341         MOVLW 0
0029E0 2024           06342         ADDWFC PP7H,W,0
0029E2 6EF7           06343         MOVWF TBLPTRLH,0
0029E4 6AA6           06344         CLRF EECON1,0
0029E6 8EA6           06345         BSF EECON1,EEPGD,0
0029E8 0008           06346         TBLRD*
0029EA CFF5 F3EF      06347         MOVFF TABLAT,TV1
  000029EE            06348 F10_000016 EQU $ ; in [CHECK TAG.INC] If TV1 = TagIn[Index] Then
0029EE EE03 F0C6      06349         LFSR 0,TAGIN
0029F2 51ED           06350         MOVF INDEX,W
0029F4 50EB           06351         MOVF PLUSW0,W,0
0029F6 6E0C           06352         MOVWF PBP#VAR1,0
0029F8 51EF           06353         MOVF TV1,W
0029FA 5C0C           06354         SUBWF PBP#VAR1,W,0
0029FC 0100           06355         MOVLB 0
  00000000            06356 RAM_BANK = 0
0029FE A4D8           06357         BTFSS STATUS,2,0
                      06358         GO@TO BC@LL260
  00002A04            06359 F10_000017 EQU $ ; in [CHECK TAG.INC] Response = 1      'Digits Match
002A04 0E01           06360         MOVLW 1
002A06 0103           06361         MOVLB 3
  00000003            06362 RAM_BANK = 3
002A08 6FEB           06363         MOVWF RESPONSE
  00002A0A            06364 F10_000018 EQU $ ; in [CHECK TAG.INC] Inc Index      'Check Next Digit
002A0A 2BED           06365         INCF INDEX,F
002A0C 0100           06366         MOVLB 0
  00000000            06367 RAM_BANK = 0
                      06368         F@JUMP BC@LL261
002A12                06369 BC@LL260
  00002A12            06370 F10_000019 EQU $ ; in [CHECK TAG.INC] Else
  00002A12            06371 F10_000020 EQU $ ; in [CHECK TAG.INC] Response = 0     'Digit does not match, therefore
002A12 0103           06372         MOVLB 3
  00000003            06373 RAM_BANK = 3
002A14 6BEB           06374         CLRF RESPONSE
  00002A16            06375 F10_000021 EQU $ ; in [CHECK TAG.INC] Index = 10  'we are finished with this Tag
002A16 0E0A           06376         MOVLW 10
002A18 6FED           06377         MOVWF INDEX
  00002A1A            06378 F10_000022 EQU $ ; in [CHECK TAG.INC] EndIf
002A1A                06379 BC@LL261
002A1A 0100           06380         MOVLB 0
  00000000            06381 RAM_BANK = 0
  00002A1C            06382 F10_000023 EQU $ ; in [CHECK TAG.INC] Until Index > 9
002A1C 0E0A           06383         MOVLW 10
002A1E 0103           06384         MOVLB 3
  00000003            06385 RAM_BANK = 3
002A20 5DED           06386         SUBWF INDEX,W
002A22 0100           06387         MOVLB 0
  00000000            06388 RAM_BANK = 0
002A24 A0D8           06389         BTFSS STATUS,0,0
                      06390         GO@TO BC@LL257
002A28                06391 BC@LL258
  00002A28            06392 F10_000024 EQU $ ; in [CHECK TAG.INC] If Response = 1 Then      'Write User of Tag into UserIn variable array
002A28 0E01           06393         MOVLW 1
002A2A 0103           06394         MOVLB 3
  00000003            06395 RAM_BANK = 3
002A2C 5DEB           06396         SUBWF RESPONSE,W
002A2E 0100           06397         MOVLB 0
  00000000            06398 RAM_BANK = 0
002A30 A4D8           06399         BTFSS STATUS,2,0
                      06400         GO@TO BC@LL263
  00002A36            06401 F10_000025 EQU $ ; in [CHECK TAG.INC] For Index = 0 To 3
002A36 0103           06402         MOVLB 3
  00000003            06403 RAM_BANK = 3
002A38 6BED           06404         CLRF INDEX
002A3A                06405 FR@LB265
002A3A 0100           06406         MOVLB 0
  00000000            06407 RAM_BANK = 0
002A3C 0E04           06408         MOVLW 4
002A3E 0103           06409         MOVLB 3
  00000003            06410 RAM_BANK = 3
002A40 5DED           06411         SUBWF INDEX,W
002A42 0100           06412         MOVLB 0
  00000000            06413 RAM_BANK = 0
002A44 B0D8           06414         BTFSC STATUS,0,0
                      06415         GO@TO NX@LB266
  00002A4A            06416 F10_000026 EQU $ ; in [CHECK TAG.INC] UserIn[Index] = CRead Word_Var + Index
002A4A 0103           06417         MOVLB 3
  00000003            06418 RAM_BANK = 3
002A4C 51ED           06419         MOVF INDEX,W
002A4E 25F0           06420         ADDWF WORD_VAR,W
002A50 6EF6           06421         MOVWF TBLPTRL,0
002A52 0E00           06422         MOVLW 0
002A54 21F1           06423         ADDWFC WORD_VARH,W
002A56 6EF7           06424         MOVWF TBLPTRLH,0
002A58 6AA6           06425         CLRF EECON1,0
002A5A 8EA6           06426         BSF EECON1,EEPGD,0
002A5C 0008           06427         TBLRD*
002A5E CFF5 F00C      06428         MOVFF TABLAT,PBP#VAR1
002A62 EE03 F0D0      06429         LFSR 0,USERIN
002A66 51ED           06430         MOVF INDEX,W
002A68 C00C FFEB      06431         MOVFF PBP#VAR1,PLUSW0
  00002A6C            06432 F10_000027 EQU $ ; in [CHECK TAG.INC] Next
002A6C 2BED           06433         INCF INDEX,F
002A6E 0100           06434         MOVLB 0
  00000000            06435 RAM_BANK = 0
002A70 A4D8           06436         BTFSS STATUS,2,0
                      06437         GO@TO FR@LB265
002A74                06438 NX@LB266
  00002A74            06439 F10_000028 EQU $ ; in [CHECK TAG.INC] Return
002A74 0012           06440         RETURN 0
  00002A76            06441 F10_000029 EQU $ ; in [CHECK TAG.INC] EndIf
002A76                06442 BC@LL263
  00002A76            06443 F10_000031 EQU $ ; in [CHECK TAG.INC] Word_Var = Word_Var + 16
002A76 0E10           06444         MOVLW 16
002A78 0103           06445         MOVLB 3
  00000003            06446 RAM_BANK = 3
002A7A 27F0           06447         ADDWF WORD_VAR,F
002A7C 0E00           06448         MOVLW 0
002A7E 23F1           06449         ADDWFC WORD_VARH,F
  00002A80            06450 F10_000032 EQU $ ; in [CHECK TAG.INC] If Word_Var = User_Pointer Then Return
002A80 51C5           06451         MOVF USER_POINTERH,W
002A82 5DF1           06452         SUBWF WORD_VARH,W
002A84 0100           06453         MOVLB 0
  00000000            06454 RAM_BANK = 0
002A86 A4D8           06455         BTFSS STATUS,2,0
                      06456         GO@TO BC@LL267
002A8C 0103           06457         MOVLB 3
  00000003            06458 RAM_BANK = 3
002A8E 51C4           06459         MOVF USER_POINTER,W
002A90 5DF0           06460         SUBWF WORD_VAR,W
002A92 0100           06461         MOVLB 0
  00000000            06462 RAM_BANK = 0
002A94 A4D8           06463         BTFSS STATUS,2,0
                      06464         GO@TO BC@LL267
002A9A 0012           06465         RETURN 0
002A9C                06466 BC@LL267
  00002A9C            06467 F10_000034 EQU $ ; in [CHECK TAG.INC] GoTo NextTag
                      06468         F@JUMP NEXTTAG
  00002A9E            06469 F10_EOF EQU $ ; CHECK TAG.INC
  00002A9E            06470 F11_SOF EQU $ ; WRITE_U_H.INC
002A9E                06471 WRITEH
  00002A9E            06472 F11_000012 EQU $ ; in [WRITE_U_H.INC] For Index = num_UH To 0 Step -1          'Here we move all old history down one notch to ready 1st place for new entry
002A9E 0EC8           06473         MOVLW 200
002AA0 0103           06474         MOVLB 3
  00000003            06475 RAM_BANK = 3
002AA2 6FED           06476         MOVWF INDEX
002AA4                06477 FR@LB269
002AA4 0100           06478         MOVLB 0
  00000000            06479 RAM_BANK = 0
  00002AA6            06480 F11_000013 EQU $ ; in [WRITE_U_H.INC] For Index2 = 0 To 3
002AA6 0103           06481         MOVLB 3
  00000003            06482 RAM_BANK = 3
002AA8 6BEE           06483         CLRF INDEX2
002AAA                06484 FR@LB271
002AAA 0100           06485         MOVLB 0
  00000000            06486 RAM_BANK = 0
002AAC 0E04           06487         MOVLW 4
002AAE 0103           06488         MOVLB 3
  00000003            06489 RAM_BANK = 3
002AB0 5DEE           06490         SUBWF INDEX2,W
002AB2 0100           06491         MOVLB 0
  00000000            06492 RAM_BANK = 0
002AB4 B0D8           06493         BTFSC STATUS,0,0
                      06494         GO@TO NX@LB272
  00002ABA            06495 F11_000014 EQU $ ; in [WRITE_U_H.INC] TV1 = ERead (Index * 4) + Index2 + UHA
002ABA 6A24           06496         CLRF PP7H,0
002ABC C3ED F023      06497         MOVFF INDEX,PP7
002AC0 90D8           06498         BCF STATUS,0,0
002AC2 3623           06499         RLCF PP7,F,0
002AC4 3624           06500         RLCF PP7H,F,0
002AC6 90D8           06501         BCF STATUS,0,0
002AC8 3623           06502         RLCF PP7,F,0
002ACA 3624           06503         RLCF PP7H,F,0
002ACC 0103           06504         MOVLB 3
  00000003            06505 RAM_BANK = 3
002ACE 51EE           06506         MOVF INDEX2,W
002AD0 2623           06507         ADDWF PP7,F,0
002AD2 0E00           06508         MOVLW 0
002AD4 2224           06509         ADDWFC PP7H,F,0
002AD6 0E10           06510         MOVLW 16
002AD8 2423           06511         ADDWF PP7,W,0
002ADA 6EA9           06512         MOVWF EEADR,0
002ADC 0E00           06513         MOVLW 0
002ADE 2024           06514         ADDWFC PP7H,W,0
002AE0 6EAA           06515         MOVWF EEADRH,0
                      06516         F@CALL EE@RD@W
002AE6 6FEF           06517         MOVWF TV1
  00002AE8            06518 F11_000015 EQU $ ; in [WRITE_U_H.INC] EWrite (Index * 4) + Index2 + 4 + UHA,[TV1]
002AE8 6A24           06519         CLRF PP7H,0
002AEA C3ED F023      06520         MOVFF INDEX,PP7
002AEE 90D8           06521         BCF STATUS,0,0
002AF0 3623           06522         RLCF PP7,F,0
002AF2 3624           06523         RLCF PP7H,F,0
002AF4 90D8           06524         BCF STATUS,0,0
002AF6 3623           06525         RLCF PP7,F,0
002AF8 3624           06526         RLCF PP7H,F,0
002AFA 51EE           06527         MOVF INDEX2,W
002AFC 2623           06528         ADDWF PP7,F,0
002AFE 0E00           06529         MOVLW 0
002B00 2224           06530         ADDWFC PP7H,F,0
002B02 0E04           06531         MOVLW 4
002B04 2623           06532         ADDWF PP7,F,0
002B06 0E00           06533         MOVLW 0
002B08 2224           06534         ADDWFC PP7H,F,0
002B0A 0E10           06535         MOVLW 16
002B0C 2423           06536         ADDWF PP7,W,0
002B0E 6EA9           06537         MOVWF EEADR,0
002B10 0E00           06538         MOVLW 0
002B12 2024           06539         ADDWFC PP7H,W,0
002B14 6EAA           06540         MOVWF EEADRH,0
002B16 51EF           06541         MOVF TV1,W
                      06542         F@CALL EE@WR@W
  00002B1C            06543 F11_000016 EQU $ ; in [WRITE_U_H.INC] WOrd_Var = (Index * 4) + Index2 + 4 + UHA
002B1C 6A24           06544         CLRF PP7H,0
002B1E C3ED F023      06545         MOVFF INDEX,PP7
002B22 90D8           06546         BCF STATUS,0,0
002B24 3623           06547         RLCF PP7,F,0
002B26 3624           06548         RLCF PP7H,F,0
002B28 90D8           06549         BCF STATUS,0,0
002B2A 3623           06550         RLCF PP7,F,0
002B2C 3624           06551         RLCF PP7H,F,0
002B2E 51EE           06552         MOVF INDEX2,W
002B30 2623           06553         ADDWF PP7,F,0
002B32 0E00           06554         MOVLW 0
002B34 2224           06555         ADDWFC PP7H,F,0
002B36 0E04           06556         MOVLW 4
002B38 2623           06557         ADDWF PP7,F,0
002B3A 0E00           06558         MOVLW 0
002B3C 2224           06559         ADDWFC PP7H,F,0
002B3E 0E10           06560         MOVLW 16
002B40 2423           06561         ADDWF PP7,W,0
002B42 6FF0           06562         MOVWF WORD_VAR
002B44 0E00           06563         MOVLW 0
002B46 2024           06564         ADDWFC PP7H,W,0
002B48 6FF1           06565         MOVWF WORD_VARH
  00002B4A            06566 F11_000017 EQU $ ; in [WRITE_U_H.INC] Next Index2
002B4A 2BEE           06567         INCF INDEX2,F
002B4C 0100           06568         MOVLB 0
  00000000            06569 RAM_BANK = 0
002B4E A4D8           06570         BTFSS STATUS,2,0
                      06571         GO@TO FR@LB271
002B52                06572 NX@LB272
  00002B52            06573 F11_000018 EQU $ ; in [WRITE_U_H.INC] Next Index
002B52 0E01           06574         MOVLW 1
002B54 0103           06575         MOVLB 3
  00000003            06576 RAM_BANK = 3
002B56 5FED           06577         SUBWF INDEX,F
002B58 0100           06578         MOVLB 0
  00000000            06579 RAM_BANK = 0
002B5A B0D8           06580         BTFSC STATUS,0,0
                      06581         GO@TO FR@LB269
002B5E                06582 NX@LB270
  00002B5E            06583 F11_000020 EQU $ ; in [WRITE_U_H.INC] Cls
                      06584         F@CALL LCD@CLS
  00002B62            06585 F11_000022 EQU $ ; in [WRITE_U_H.INC] For Index = 0 To 3               'Write User # to History
002B62 0103           06586         MOVLB 3
  00000003            06587 RAM_BANK = 3
002B64 6BED           06588         CLRF INDEX
002B66                06589 FR@LB273
002B66 0100           06590         MOVLB 0
  00000000            06591 RAM_BANK = 0
002B68 0E04           06592         MOVLW 4
002B6A 0103           06593         MOVLB 3
  00000003            06594 RAM_BANK = 3
002B6C 5DED           06595         SUBWF INDEX,W
002B6E 0100           06596         MOVLB 0
  00000000            06597 RAM_BANK = 0
002B70 B0D8           06598         BTFSC STATUS,0,0
                      06599         GO@TO NX@LB274
  00002B76            06600 F11_000023 EQU $ ; in [WRITE_U_H.INC] TV1 = UserIn[Index]
002B76 EE03 F0D0      06601         LFSR 0,USERIN
002B7A 0103           06602         MOVLB 3
  00000003            06603 RAM_BANK = 3
002B7C 51ED           06604         MOVF INDEX,W
002B7E 50EB           06605         MOVF PLUSW0,W,0
002B80 6FEF           06606         MOVWF TV1
  00002B82            06607 F11_000024 EQU $ ; in [WRITE_U_H.INC] EWrite UHA + Index, [TV1]
002B82 0E10           06608         MOVLW 16
002B84 25ED           06609         ADDWF INDEX,W
002B86 6AAA           06610         CLRF EEADRH,0
002B88 6EA9           06611         MOVWF EEADR,0
002B8A 36AA           06612         RLCF EEADRH,F,0
002B8C 51EF           06613         MOVF TV1,W
                      06614         F@CALL EE@WR@W
  00002B92            06615 F11_000025 EQU $ ; in [WRITE_U_H.INC] Next 'Index
002B92 2BED           06616         INCF INDEX,F
002B94 0100           06617         MOVLB 0
  00000000            06618 RAM_BANK = 0
002B96 A4D8           06619         BTFSS STATUS,2,0
                      06620         GO@TO FR@LB273
002B9A                06621 NX@LB274
  00002B9A            06622 F11_000026 EQU $ ; in [WRITE_U_H.INC] TV1 = ERead num_UHE
002B9A 0E03           06623         MOVLW 3
                      06624         F@CALL EE@RD
002BA0 0103           06625         MOVLB 3
  00000003            06626 RAM_BANK = 3
002BA2 6FEF           06627         MOVWF TV1
  00002BA4            06628 F11_000027 EQU $ ; in [WRITE_U_H.INC] If TV1 < num_UH Then
002BA4 0EC8           06629         MOVLW 200
002BA6 5DEF           06630         SUBWF TV1,W
002BA8 0100           06631         MOVLB 0
  00000000            06632 RAM_BANK = 0
002BAA B0D8           06633         BTFSC STATUS,0,0
                      06634         GO@TO BC@LL275
  00002BB0            06635 F11_000028 EQU $ ; in [WRITE_U_H.INC] Inc TV1
002BB0 0103           06636         MOVLB 3
  00000003            06637 RAM_BANK = 3
002BB2 2BEF           06638         INCF TV1,F
  00002BB4            06639 F11_000029 EQU $ ; in [WRITE_U_H.INC] EWrite num_UHE, [TV1]
002BB4 6AAA           06640         CLRF EEADRH,0
002BB6 0E03           06641         MOVLW 3
002BB8 6EA9           06642         MOVWF EEADR,0
002BBA 51EF           06643         MOVF TV1,W
                      06644         F@CALL EE@WR@W
  00002BC0            06645 F11_000030 EQU $ ; in [WRITE_U_H.INC] EndIf
002BC0                06646 BC@LL275
002BC0 0100           06647         MOVLB 0
  00000000            06648 RAM_BANK = 0
  00002BC2            06649 F11_000031 EQU $ ; in [WRITE_U_H.INC] Return
002BC2 0012           06650         RETURN 0
  00002BC4            06651 F11_EOF EQU $ ; WRITE_U_H.INC
  00002BC4            06652 F12_SOF EQU $ ; WRITE_M_H.INC
002BC4                06653 WRITE_MANAGER
  00002BC4            06654 F12_000013 EQU $ ; in [WRITE_M_H.INC] For Index = num_MH To 0 Step -1       'Here we move all old 8 digit Manager history down ..
002BC4 0E0A           06655         MOVLW 10
002BC6 0103           06656         MOVLB 3
  00000003            06657 RAM_BANK = 3
002BC8 6FED           06658         MOVWF INDEX
002BCA                06659 FR@LB277
002BCA 0100           06660         MOVLB 0
  00000000            06661 RAM_BANK = 0
  00002BCC            06662 F12_000015 EQU $ ; in [WRITE_M_H.INC] For Index2 = 0 To 7
002BCC 0103           06663         MOVLB 3
  00000003            06664 RAM_BANK = 3
002BCE 6BEE           06665         CLRF INDEX2
002BD0                06666 FR@LB279
002BD0 0100           06667         MOVLB 0
  00000000            06668 RAM_BANK = 0
002BD2 0E08           06669         MOVLW 8
002BD4 0103           06670         MOVLB 3
  00000003            06671 RAM_BANK = 3
002BD6 5DEE           06672         SUBWF INDEX2,W
002BD8 0100           06673         MOVLB 0
  00000000            06674 RAM_BANK = 0
002BDA B0D8           06675         BTFSC STATUS,0,0
                      06676         GO@TO NX@LB280
  00002BE0            06677 F12_000016 EQU $ ; in [WRITE_M_H.INC] TV1 = ERead (Index * 8) + Index2 + MHA
002BE0 6A24           06678         CLRF PP7H,0
002BE2 C3ED F023      06679         MOVFF INDEX,PP7
002BE6 5024           06680         MOVF PP7H,W,0
002BE8 0D08           06681         MULLW 8
002BEA CFF3 F024      06682         MOVFF PRODL,PP7H
002BEE 5023           06683         MOVF PP7,W,0
002BF0 0D08           06684         MULLW 8
002BF2 CFF3 F023      06685         MOVFF PRODL,PP7
002BF6 50F4           06686         MOVF PRODH,W,0
002BF8 2624           06687         ADDWF PP7H,F,0
002BFA 0103           06688         MOVLB 3
  00000003            06689 RAM_BANK = 3
002BFC 51EE           06690         MOVF INDEX2,W
002BFE 2623           06691         ADDWF PP7,F,0
002C00 0E00           06692         MOVLW 0
002C02 2224           06693         ADDWFC PP7H,F,0
002C04 0E90           06694         MOVLW 144
002C06 2423           06695         ADDWF PP7,W,0
002C08 6EA9           06696         MOVWF EEADR,0
002C0A 0E03           06697         MOVLW 3
002C0C 2024           06698         ADDWFC PP7H,W,0
002C0E 6EAA           06699         MOVWF EEADRH,0
                      06700         F@CALL EE@RD@W
002C14 6FEF           06701         MOVWF TV1
  00002C16            06702 F12_000017 EQU $ ; in [WRITE_M_H.INC] EWrite (Index * 8) + Index2 + 8 + MHA,[TV1]
002C16 6A24           06703         CLRF PP7H,0
002C18 C3ED F023      06704         MOVFF INDEX,PP7
002C1C 5024           06705         MOVF PP7H,W,0
002C1E 0D08           06706         MULLW 8
002C20 CFF3 F024      06707         MOVFF PRODL,PP7H
002C24 5023           06708         MOVF PP7,W,0
002C26 0D08           06709         MULLW 8
002C28 CFF3 F023      06710         MOVFF PRODL,PP7
002C2C 50F4           06711         MOVF PRODH,W,0
002C2E 2624           06712         ADDWF PP7H,F,0
002C30 51EE           06713         MOVF INDEX2,W
002C32 2623           06714         ADDWF PP7,F,0
002C34 0E00           06715         MOVLW 0
002C36 2224           06716         ADDWFC PP7H,F,0
002C38 0E08           06717         MOVLW 8
002C3A 2623           06718         ADDWF PP7,F,0
002C3C 0E00           06719         MOVLW 0
002C3E 2224           06720         ADDWFC PP7H,F,0
002C40 0E90           06721         MOVLW 144
002C42 2423           06722         ADDWF PP7,W,0
002C44 6EA9           06723         MOVWF EEADR,0
002C46 0E03           06724         MOVLW 3
002C48 2024           06725         ADDWFC PP7H,W,0
002C4A 6EAA           06726         MOVWF EEADRH,0
002C4C 51EF           06727         MOVF TV1,W
                      06728         F@CALL EE@WR@W
  00002C52            06729 F12_000018 EQU $ ; in [WRITE_M_H.INC] Next Index2
002C52 2BEE           06730         INCF INDEX2,F
002C54 0100           06731         MOVLB 0
  00000000            06732 RAM_BANK = 0
002C56 A4D8           06733         BTFSS STATUS,2,0
                      06734         GO@TO FR@LB279
002C5A                06735 NX@LB280
  00002C5A            06736 F12_000019 EQU $ ; in [WRITE_M_H.INC] Next Index
002C5A 0E01           06737         MOVLW 1
002C5C 0103           06738         MOVLB 3
  00000003            06739 RAM_BANK = 3
002C5E 5FED           06740         SUBWF INDEX,F
002C60 0100           06741         MOVLB 0
  00000000            06742 RAM_BANK = 0
002C62 B0D8           06743         BTFSC STATUS,0,0
                      06744         GO@TO FR@LB277
002C66                06745 NX@LB278
  00002C66            06746 F12_000021 EQU $ ; in [WRITE_M_H.INC] For Index = 0 To 7    'Write Manager ID and date to history file in spot 1
002C66 0103           06747         MOVLB 3
  00000003            06748 RAM_BANK = 3
002C68 6BED           06749         CLRF INDEX
002C6A                06750 FR@LB281
002C6A 0100           06751         MOVLB 0
  00000000            06752 RAM_BANK = 0
002C6C 0E08           06753         MOVLW 8
002C6E 0103           06754         MOVLB 3
  00000003            06755 RAM_BANK = 3
002C70 5DED           06756         SUBWF INDEX,W
002C72 0100           06757         MOVLB 0
  00000000            06758 RAM_BANK = 0
002C74 B0D8           06759         BTFSC STATUS,0,0
                      06760         GO@TO NX@LB282
  00002C7A            06761 F12_000022 EQU $ ; in [WRITE_M_H.INC] Response = SD_Read_Byte_From_File
  000A                06762  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
                      06763         SD_READ_BYTE_FROM_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06764  VARIABLE MAX_PARAMS=10,RETURN_TYPE=2,RETURN_VAR=RESPONSE,SD_READ_BYTE_FROM_FILE_RETURN=1,PRM_COUNT=0
  00002C82            06765 F12_000023 EQU $ ; in [WRITE_M_H.INC] EWrite MHA + Index, [Response]
002C82 0E90           06766         MOVLW 144
002C84 0103           06767         MOVLB 3
  00000003            06768 RAM_BANK = 3
002C86 25ED           06769         ADDWF INDEX,W
002C88 6AAA           06770         CLRF EEADRH,0
002C8A 6EA9           06771         MOVWF EEADR,0
002C8C 0E03           06772         MOVLW 3
002C8E 22AA           06773         ADDWFC EEADRH,F,0
002C90 51EB           06774         MOVF RESPONSE,W
                      06775         F@CALL EE@WR@W
  00002C96            06776 F12_000024 EQU $ ; in [WRITE_M_H.INC] Next 'Index
002C96 2BED           06777         INCF INDEX,F
002C98 0100           06778         MOVLB 0
  00000000            06779 RAM_BANK = 0
002C9A A4D8           06780         BTFSS STATUS,2,0
                      06781         GO@TO FR@LB281
002C9E                06782 NX@LB282
  00002C9E            06783 F12_000026 EQU $ ; in [WRITE_M_H.INC] TV1 = ERead num_MHE   'Get the number of Manager histories.
002C9E 0E04           06784         MOVLW 4
                      06785         F@CALL EE@RD
002CA4 0103           06786         MOVLB 3
  00000003            06787 RAM_BANK = 3
002CA6 6FEF           06788         MOVWF TV1
  00002CA8            06789 F12_000027 EQU $ ; in [WRITE_M_H.INC] If TV1 < num_MH Then    'If number of Manager History entries is less than
002CA8 0E0A           06790         MOVLW 10
002CAA 5DEF           06791         SUBWF TV1,W
002CAC 0100           06792         MOVLB 0
  00000000            06793 RAM_BANK = 0
002CAE B0D8           06794         BTFSC STATUS,0,0
                      06795         GO@TO BC@LL283
  00002CB4            06796 F12_000029 EQU $ ; in [WRITE_M_H.INC] Inc TV1               ' add 1 more to # of manager Histories and...
002CB4 0103           06797         MOVLB 3
  00000003            06798 RAM_BANK = 3
002CB6 2BEF           06799         INCF TV1,F
  00002CB8            06800 F12_000030 EQU $ ; in [WRITE_M_H.INC] EWrite num_MHE, [TV1]  ' write it back to the # of manager History entries.
002CB8 6AAA           06801         CLRF EEADRH,0
002CBA 0E04           06802         MOVLW 4
002CBC 6EA9           06803         MOVWF EEADR,0
002CBE 51EF           06804         MOVF TV1,W
                      06805         F@CALL EE@WR@W
  00002CC4            06806 F12_000031 EQU $ ; in [WRITE_M_H.INC] EndIf
002CC4                06807 BC@LL283
002CC4 0100           06808         MOVLB 0
  00000000            06809 RAM_BANK = 0
  00002CC6            06810 F12_000032 EQU $ ; in [WRITE_M_H.INC] SD_Close_File
  000A                06811  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06812         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06813  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002CCA            06814 F12_000033 EQU $ ; in [WRITE_M_H.INC] Cls
                      06815         F@CALL LCD@CLS
  00002CCE            06816 F12_000034 EQU $ ; in [WRITE_M_H.INC] Print "Manager Done"
002CCE 0E05           06817         MOVLW ((STR@LB19 >> 8) & 255)
002CD0 6EF7           06818         MOVWF TBLPTRLH,0
002CD2 0E42           06819         MOVLW (STR@LB19 & 255)
002CD4 6EF6           06820         MOVWF TBLPTRL,0
                      06821         F@CALL PRINT@MSTR
  00002CDA            06822 F12_000035 EQU $ ; in [WRITE_M_H.INC] Return
002CDA 0012           06823         RETURN 0
  00002CDC            06824 F12_EOF EQU $ ; WRITE_M_H.INC
  00002CDC            06825 F13_SOF EQU $ ; WRITE_M_SD.INC
002CDC                06826 WRITE_M_SD
  00002CDC            06827 F13_000013 EQU $ ; in [WRITE_M_SD.INC] GoSub Read_Mod      'Get module #
                      06828         F@CALL READ_MOD
  00002CE0            06829 F13_000015 EQU $ ; in [WRITE_M_SD.INC] SD_File_Name = Str ModNum          'File Name, upper case only
002CE0 EE02 F091      06830         LFSR 0,SD_FILE_NAME
002CE4 EE13 F0E4      06831         LFSR 1,MODNUM
002CE8 0E07           06832         MOVLW 7
002CEA 6EF3           06833         MOVWF PRODL,0
002CEC 50E6           06834         MOVF POSTINC1,W,0
002CEE E003           06835         BZ $ + 8
002CF0 6EEE           06836         MOVWF POSTINC0,0
002CF2 2EF3           06837         DECFSZ PRODL,F,0
002CF4 D7FB           06838         BRA $ - 8
002CF6 6AEF           06839         CLRF INDF0,0
  00002CF8            06840 F13_000016 EQU $ ; in [WRITE_M_SD.INC] SD_File_Name = SD_File_Name +"M"    'M is for "Manager" file
002CF8 EE02 F091      06841         LFSR 0,SD_FILE_NAME
002CFC 50EE           06842         MOVF POSTINC0,W,0
002CFE E1FE           06843         BNZ $ - 2
002D00 52ED           06844         MOVF POSTDEC0,F,0
002D02 0E4D           06845         MOVLW 77
002D04 6EEE           06846         MOVWF POSTINC0,0
002D06 6AEF           06847         CLRF INDF0,0
  00002D08            06848 F13_000017 EQU $ ; in [WRITE_M_SD.INC] SD_File_Ext = "TXT"                'File Ext, upper case only!
002D08 EE02 F09A      06849         LFSR 0,SD_FILE_EXT
002D0C 0E54           06850         MOVLW 84
002D0E 6EEE           06851         MOVWF POSTINC0,0
002D10 0E58           06852         MOVLW 88
002D12 6EEE           06853         MOVWF POSTINC0,0
002D14 0E54           06854         MOVLW 84
002D16 6EEE           06855         MOVWF POSTINC0,0
002D18 6AEF           06856         CLRF INDF0,0
  00002D1A            06857 F13_000019 EQU $ ; in [WRITE_M_SD.INC] SD_Delete_File          'If file already exists then delete it..If the file does not exist then..
  000A                06858  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
                      06859         SD_DELETE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06860  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
  00002D1E            06861 F13_000022 EQU $ ; in [WRITE_M_SD.INC] SD_New_File
  000A                06862  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
                      06863         SD_NEW_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06864  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
  00002D22            06865 F13_000023 EQU $ ; in [WRITE_M_SD.INC] Index2 = ERead num_MHE   'Load number of Manager History entries into Index2
002D22 0E04           06866         MOVLW 4
                      06867         F@CALL EE@RD
002D28 0103           06868         MOVLB 3
  00000003            06869 RAM_BANK = 3
002D2A 6FEE           06870         MOVWF INDEX2
  00002D2C            06871 F13_000024 EQU $ ; in [WRITE_M_SD.INC] MyNum = Str$ (Dec,Index2) 'Change number into a string to send to SD card
002D2C EE03 F0F2      06872         LFSR 0,MYNUM
002D30 0E02           06873         MOVLW 2
002D32 6E01           06874         MOVWF BPFH,0
002D34 51EE           06875         MOVF INDEX2,W
                      06876         F@CALL OUT@DECB
002D3A 6AEF           06877         CLRF INDF0,0
  00002D3C            06878 F13_000025 EQU $ ; in [WRITE_M_SD.INC] If Index2 = 0 Then  'If there is no Manager History then..
002D3C 53EE           06879         MOVF INDEX2,F
002D3E 0100           06880         MOVLB 0
  00000000            06881 RAM_BANK = 0
002D40 A4D8           06882         BTFSS STATUS,2,0
                      06883         GO@TO BC@LL285
  00002D46            06884 F13_000027 EQU $ ; in [WRITE_M_SD.INC] SD_IO_String = "No Manager History"
002D46 EE02 F0FB      06885         LFSR 0,SD_IO_STRING
002D4A 0E05           06886         MOVLW ((STR@LB20 >> 8) & 255)
002D4C 6EF7           06887         MOVWF TBLPTRLH,0
002D4E 0E50           06888         MOVLW (STR@LB20 & 255)
002D50 6EF6           06889         MOVWF TBLPTRL,0
                      06890         F@CALL LOAD@MSTR
002D56 6AEF           06891         CLRF INDF0,0
  00002D58            06892 F13_000028 EQU $ ; in [WRITE_M_SD.INC] SD_Write_String_To_File
  000A                06893  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
                      06894         SD_WRITE_STRING_TO_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06895  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
  00002D5C            06896 F13_000029 EQU $ ; in [WRITE_M_SD.INC] SD_CLOSE_FILE
  000A                06897  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      06898         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06899  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002D60            06900 F13_000030 EQU $ ; in [WRITE_M_SD.INC] Return
002D60 0012           06901         RETURN 0
  00002D62            06902 F13_000031 EQU $ ; in [WRITE_M_SD.INC] EndIf
002D62                06903 BC@LL285
  00002D62            06904 F13_000032 EQU $ ; in [WRITE_M_SD.INC] SD_IO_String = MyNum   'Write number of Mangager History entries to SD
002D62 EE02 F0FB      06905         LFSR 0,SD_IO_STRING
002D66 EE13 F0F2      06906         LFSR 1,MYNUM
002D6A 0E03           06907         MOVLW 3
002D6C 52E7           06908         MOVF INDF1,F,0
002D6E E004           06909         BZ $ + 10
002D70 CFE6 FFEE      06910         MOVFF POSTINC1,POSTINC0
002D74 2EE8           06911         DECFSZ WREG,F,0
002D76 D7FA           06912         BRA $ - 10
002D78 6AEF           06913         CLRF INDF0,0
  00002D7A            06914 F13_000033 EQU $ ; in [WRITE_M_SD.INC] SD_Write_String_To_File
  000A                06915  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
                      06916         SD_WRITE_STRING_TO_FILE 0,0,0,0,0,0,0,0,0,0
  000A                06917  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
  00002D7E            06918 F13_000034 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File "|"  ' Add a Separator
  0008                06919  VARIABLE PRM_1=8
  0000                06920  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06921  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                06922  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      06923         SD_WRITE_BYTE_TO_FILE 124,0,0,0,0,0,0,0,0,0
  000A                06924  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                06925  VARIABLE PRM_1=8
  0000                06926  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                06927  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002D88            06928 F13_000036 EQU $ ; in [WRITE_M_SD.INC] MyCount = 0
002D88 0103           06929         MOVLB 3
  00000003            06930 RAM_BANK = 3
002D8A 6BEC           06931         CLRF MYCOUNT
  00002D8C            06932 F13_000037 EQU $ ; in [WRITE_M_SD.INC] Repeat
002D8C                06933 BC@LL286
002D8C 0100           06934         MOVLB 0
  00000000            06935 RAM_BANK = 0
  00002D8E            06936 F13_000038 EQU $ ; in [WRITE_M_SD.INC] For Index = 0 To 1    'Here we write the 2 hex digits for each manager history  entry
002D8E 0103           06937         MOVLB 3
  00000003            06938 RAM_BANK = 3
002D90 6BED           06939         CLRF INDEX
002D92                06940 FR@LB289
002D92 0100           06941         MOVLB 0
  00000000            06942 RAM_BANK = 0
002D94 0E02           06943         MOVLW 2
002D96 0103           06944         MOVLB 3
  00000003            06945 RAM_BANK = 3
002D98 5DED           06946         SUBWF INDEX,W
002D9A 0100           06947         MOVLB 0
  00000000            06948 RAM_BANK = 0
002D9C B0D8           06949         BTFSC STATUS,0,0
                      06950         GO@TO NX@LB290
  00002DA2            06951 F13_000039 EQU $ ; in [WRITE_M_SD.INC] TV1 = ERead MHA + MyCount * 8 + Index
002DA2 0E03           06952         MOVLW 3
002DA4 6E24           06953         MOVWF PP7H,0
002DA6 0E90           06954         MOVLW 144
002DA8 6E23           06955         MOVWF PP7,0
002DAA 6A28           06956         CLRF PP8H,0
002DAC C3EC F027      06957         MOVFF MYCOUNT,PP8
002DB0 5028           06958         MOVF PP8H,W,0
002DB2 0D08           06959         MULLW 8
002DB4 CFF3 F028      06960         MOVFF PRODL,PP8H
002DB8 5027           06961         MOVF PP8,W,0
002DBA 0D08           06962         MULLW 8
002DBC CFF3 F027      06963         MOVFF PRODL,PP8
002DC0 50F4           06964         MOVF PRODH,W,0
002DC2 2628           06965         ADDWF PP8H,F,0
002DC4 5027           06966         MOVF PP8,W,0
002DC6 2623           06967         ADDWF PP7,F,0
002DC8 5028           06968         MOVF PP8H,W,0
002DCA 2224           06969         ADDWFC PP7H,F,0
002DCC 0103           06970         MOVLB 3
  00000003            06971 RAM_BANK = 3
002DCE 51ED           06972         MOVF INDEX,W
002DD0 2423           06973         ADDWF PP7,W,0
002DD2 6EA9           06974         MOVWF EEADR,0
002DD4 0E00           06975         MOVLW 0
002DD6 2024           06976         ADDWFC PP7H,W,0
002DD8 6EAA           06977         MOVWF EEADRH,0
                      06978         F@CALL EE@RD@W
002DDE 6FEF           06979         MOVWF TV1
  00002DE0            06980 F13_000040 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File TV1
002DE0 0100           06981         MOVLB 0
  00000000            06982 RAM_BANK = 0
  0002                06983  VARIABLE PRM_1=2
  0000                06984  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                06985  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  000A                06986  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      06987         SD_WRITE_BYTE_TO_FILE TV1,0,0,0,0,0,0,0,0,0
  000A                06988  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0002                06989  VARIABLE PRM_1=2
  0000                06990  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                06991  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  00002DEA            06992 F13_000041 EQU $ ; in [WRITE_M_SD.INC] Next Index
002DEA 0103           06993         MOVLB 3
  00000003            06994 RAM_BANK = 3
002DEC 2BED           06995         INCF INDEX,F
002DEE 0100           06996         MOVLB 0
  00000000            06997 RAM_BANK = 0
002DF0 A4D8           06998         BTFSS STATUS,2,0
                      06999         GO@TO FR@LB289
002DF4                07000 NX@LB290
  00002DF4            07001 F13_000042 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File ":"  ' Add a Separator
  0008                07002  VARIABLE PRM_1=8
  0000                07003  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07004  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                07005  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07006         SD_WRITE_BYTE_TO_FILE 58,0,0,0,0,0,0,0,0,0
  000A                07007  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                07008  VARIABLE PRM_1=8
  0000                07009  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07010  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002DFE            07011 F13_000043 EQU $ ; in [WRITE_M_SD.INC] For Index = 2 To 7          ' Here we write the 6 date digits for each manager history entry
002DFE 0E02           07012         MOVLW 2
002E00 0103           07013         MOVLB 3
  00000003            07014 RAM_BANK = 3
002E02 6FED           07015         MOVWF INDEX
002E04                07016 FR@LB291
002E04 0100           07017         MOVLB 0
  00000000            07018 RAM_BANK = 0
002E06 0E08           07019         MOVLW 8
002E08 0103           07020         MOVLB 3
  00000003            07021 RAM_BANK = 3
002E0A 5DED           07022         SUBWF INDEX,W
002E0C 0100           07023         MOVLB 0
  00000000            07024 RAM_BANK = 0
002E0E B0D8           07025         BTFSC STATUS,0,0
                      07026         GO@TO NX@LB292
  00002E14            07027 F13_000044 EQU $ ; in [WRITE_M_SD.INC] TV1 = ERead MHA + MyCount * 8 + Index
002E14 0E03           07028         MOVLW 3
002E16 6E24           07029         MOVWF PP7H,0
002E18 0E90           07030         MOVLW 144
002E1A 6E23           07031         MOVWF PP7,0
002E1C 6A28           07032         CLRF PP8H,0
002E1E C3EC F027      07033         MOVFF MYCOUNT,PP8
002E22 5028           07034         MOVF PP8H,W,0
002E24 0D08           07035         MULLW 8
002E26 CFF3 F028      07036         MOVFF PRODL,PP8H
002E2A 5027           07037         MOVF PP8,W,0
002E2C 0D08           07038         MULLW 8
002E2E CFF3 F027      07039         MOVFF PRODL,PP8
002E32 50F4           07040         MOVF PRODH,W,0
002E34 2628           07041         ADDWF PP8H,F,0
002E36 5027           07042         MOVF PP8,W,0
002E38 2623           07043         ADDWF PP7,F,0
002E3A 5028           07044         MOVF PP8H,W,0
002E3C 2224           07045         ADDWFC PP7H,F,0
002E3E 0103           07046         MOVLB 3
  00000003            07047 RAM_BANK = 3
002E40 51ED           07048         MOVF INDEX,W
002E42 2423           07049         ADDWF PP7,W,0
002E44 6EA9           07050         MOVWF EEADR,0
002E46 0E00           07051         MOVLW 0
002E48 2024           07052         ADDWFC PP7H,W,0
002E4A 6EAA           07053         MOVWF EEADRH,0
                      07054         F@CALL EE@RD@W
002E50 6FEF           07055         MOVWF TV1
  00002E52            07056 F13_000045 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File TV1
002E52 0100           07057         MOVLB 0
  00000000            07058 RAM_BANK = 0
  0002                07059  VARIABLE PRM_1=2
  0000                07060  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07061  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  000A                07062  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07063         SD_WRITE_BYTE_TO_FILE TV1,0,0,0,0,0,0,0,0,0
  000A                07064  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0002                07065  VARIABLE PRM_1=2
  0000                07066  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07067  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  00002E5C            07068 F13_000046 EQU $ ; in [WRITE_M_SD.INC] Next Index
002E5C 0103           07069         MOVLB 3
  00000003            07070 RAM_BANK = 3
002E5E 2BED           07071         INCF INDEX,F
002E60 0100           07072         MOVLB 0
  00000000            07073 RAM_BANK = 0
002E62 A4D8           07074         BTFSS STATUS,2,0
                      07075         GO@TO FR@LB291
002E66                07076 NX@LB292
  00002E66            07077 F13_000047 EQU $ ; in [WRITE_M_SD.INC] SD_Write_Byte_To_File "/"  ' Add a Separator
  0008                07078  VARIABLE PRM_1=8
  0000                07079  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07080  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                07081  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07082         SD_WRITE_BYTE_TO_FILE 47,0,0,0,0,0,0,0,0,0
  000A                07083  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                07084  VARIABLE PRM_1=8
  0000                07085  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07086  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002E70            07087 F13_000048 EQU $ ; in [WRITE_M_SD.INC] Inc MyCount
002E70 0103           07088         MOVLB 3
  00000003            07089 RAM_BANK = 3
002E72 2BEC           07090         INCF MYCOUNT,F
  00002E74            07091 F13_000049 EQU $ ; in [WRITE_M_SD.INC] Until MyCount = Index2
002E74 51EC           07092         MOVF MYCOUNT,W
002E76 5DEE           07093         SUBWF INDEX2,W
002E78 0100           07094         MOVLB 0
  00000000            07095 RAM_BANK = 0
002E7A A4D8           07096         BTFSS STATUS,2,0
                      07097         GO@TO BC@LL286
002E7E                07098 BC@LL287
  00002E7E            07099 F13_000050 EQU $ ; in [WRITE_M_SD.INC] SD_CLOSE_FILE
  000A                07100  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      07101         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07102  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002E82            07103 F13_000051 EQU $ ; in [WRITE_M_SD.INC] Return
002E82 0012           07104         RETURN 0
  00002E84            07105 F13_EOF EQU $ ; WRITE_M_SD.INC
  00002E84            07106 F14_SOF EQU $ ; WRITE_USERS_SD.INC
002E84                07107 WRITE_USERS_SD
  00002E84            07108 F14_000014 EQU $ ; in [WRITE_USERS_SD.INC] GoSub Read_Mod 'Get the Module # from chip
                      07109         F@CALL READ_MOD
  00002E88            07110 F14_000015 EQU $ ; in [WRITE_USERS_SD.INC] SD_File_Name = Str ModNum          'File Name, upper case only
002E88 EE02 F091      07111         LFSR 0,SD_FILE_NAME
002E8C EE13 F0E4      07112         LFSR 1,MODNUM
002E90 0E07           07113         MOVLW 7
002E92 6EF3           07114         MOVWF PRODL,0
002E94 50E6           07115         MOVF POSTINC1,W,0
002E96 E003           07116         BZ $ + 8
002E98 6EEE           07117         MOVWF POSTINC0,0
002E9A 2EF3           07118         DECFSZ PRODL,F,0
002E9C D7FB           07119         BRA $ - 8
002E9E 6AEF           07120         CLRF INDF0,0
  00002EA0            07121 F14_000016 EQU $ ; in [WRITE_USERS_SD.INC] SD_File_Name = SD_File_Name + "R"
002EA0 EE02 F091      07122         LFSR 0,SD_FILE_NAME
002EA4 50EE           07123         MOVF POSTINC0,W,0
002EA6 E1FE           07124         BNZ $ - 2
002EA8 52ED           07125         MOVF POSTDEC0,F,0
002EAA 0E52           07126         MOVLW 82
002EAC 6EEE           07127         MOVWF POSTINC0,0
002EAE 6AEF           07128         CLRF INDF0,0
  00002EB0            07129 F14_000017 EQU $ ; in [WRITE_USERS_SD.INC] SD_File_Ext = "TXT"
002EB0 EE02 F09A      07130         LFSR 0,SD_FILE_EXT
002EB4 0E54           07131         MOVLW 84
002EB6 6EEE           07132         MOVWF POSTINC0,0
002EB8 0E58           07133         MOVLW 88
002EBA 6EEE           07134         MOVWF POSTINC0,0
002EBC 0E54           07135         MOVLW 84
002EBE 6EEE           07136         MOVWF POSTINC0,0
002EC0 6AEF           07137         CLRF INDF0,0
  00002EC2            07138 F14_000020 EQU $ ; in [WRITE_USERS_SD.INC] SD_Delete_File          'If it does exist then delete it..
  000A                07139  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
                      07140         SD_DELETE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07141  VARIABLE MAX_PARAMS=10,SD_DELETE_FILE_RETURN=0,PRM_COUNT=0
  00002EC6            07142 F14_000023 EQU $ ; in [WRITE_USERS_SD.INC] SD_New_File
  000A                07143  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
                      07144         SD_NEW_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07145  VARIABLE MAX_PARAMS=10,SD_NEW_FILE_RETURN=0,PRM_COUNT=0
  00002ECA            07146 F14_000025 EQU $ ; in [WRITE_USERS_SD.INC] If User_Pointer = BUA Then    'there are no User entries in the table
002ECA 0103           07147         MOVLB 3
  00000003            07148 RAM_BANK = 3
002ECC 51C5           07149         MOVF USER_POINTERH,W
002ECE 0A9C           07150         XORLW 156
002ED0 0E50           07151         MOVLW 80
002ED2 B4D8           07152         BTFSC STATUS,2,0
002ED4 19C4           07153         XORWF USER_POINTER,W
002ED6 0100           07154         MOVLB 0
  00000000            07155 RAM_BANK = 0
002ED8 A4D8           07156         BTFSS STATUS,2,0
                      07157         GO@TO BC@LL293
  00002EDE            07158 F14_000026 EQU $ ; in [WRITE_USERS_SD.INC] Cls
                      07159         F@CALL LCD@CLS
  00002EE2            07160 F14_000027 EQU $ ; in [WRITE_USERS_SD.INC] Print "No Users"
002EE2 0E05           07161         MOVLW ((STR@LB21 >> 8) & 255)
002EE4 6EF7           07162         MOVWF TBLPTRLH,0
002EE6 0E64           07163         MOVLW (STR@LB21 & 255)
002EE8 6EF6           07164         MOVWF TBLPTRL,0
                      07165         F@CALL PRINT@MSTR
  00002EEE            07166 F14_000028 EQU $ ; in [WRITE_USERS_SD.INC] Pause 2000
002EEE 0E07           07167         MOVLW 7
002EF0 6E16           07168         MOVWF PP1H,0
002EF2 0ED0           07169         MOVLW 208
                      07170         F@CALL DLY@W
  00002EF8            07171 F14_000029 EQU $ ; in [WRITE_USERS_SD.INC] SD_IO_String = "No Users Exist"
002EF8 EE02 F0FB      07172         LFSR 0,SD_IO_STRING
002EFC 0E05           07173         MOVLW ((STR@LB22 >> 8) & 255)
002EFE 6EF7           07174         MOVWF TBLPTRLH,0
002F00 0E6E           07175         MOVLW (STR@LB22 & 255)
002F02 6EF6           07176         MOVWF TBLPTRL,0
                      07177         F@CALL LOAD@MSTR
002F08 6AEF           07178         CLRF INDF0,0
  00002F0A            07179 F14_000030 EQU $ ; in [WRITE_USERS_SD.INC] SD_Write_String_To_File
  000A                07180  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
                      07181         SD_WRITE_STRING_TO_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07182  VARIABLE MAX_PARAMS=10,SD_WRITE_STRING_TO_FILE_RETURN=0,PRM_COUNT=0
  00002F0E            07183 F14_000031 EQU $ ; in [WRITE_USERS_SD.INC] SD_CLOSE_FILE
  000A                07184  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      07185         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07186  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002F12            07187 F14_000032 EQU $ ; in [WRITE_USERS_SD.INC] Return
002F12 0012           07188         RETURN 0
  00002F14            07189 F14_000033 EQU $ ; in [WRITE_USERS_SD.INC] EndIf
002F14                07190 BC@LL293
  00002F14            07191 F14_000036 EQU $ ; in [WRITE_USERS_SD.INC] Index2 = ERead NOU    'Read number of users into Index2
002F14 0E02           07192         MOVLW 2
                      07193         F@CALL EE@RD
002F1A 0103           07194         MOVLB 3
  00000003            07195 RAM_BANK = 3
002F1C 6FEE           07196         MOVWF INDEX2
  00002F1E            07197 F14_000037 EQU $ ; in [WRITE_USERS_SD.INC] MyCount = 0
002F1E 6BEC           07198         CLRF MYCOUNT
  00002F20            07199 F14_000038 EQU $ ; in [WRITE_USERS_SD.INC] Word_Var = BUA   ' Start in first user memory spot
002F20 0E9C           07200         MOVLW 156
002F22 6FF1           07201         MOVWF WORD_VARH
002F24 0E50           07202         MOVLW 80
002F26 6FF0           07203         MOVWF WORD_VAR
  00002F28            07204 F14_000039 EQU $ ; in [WRITE_USERS_SD.INC] Repeat
002F28                07205 BC@LL294
002F28 0100           07206         MOVLB 0
  00000000            07207 RAM_BANK = 0
  00002F2A            07208 F14_000040 EQU $ ; in [WRITE_USERS_SD.INC] For Index = 0 To 3     'Repeat until all Tag digits are checked
002F2A 0103           07209         MOVLB 3
  00000003            07210 RAM_BANK = 3
002F2C 6BED           07211         CLRF INDEX
002F2E                07212 FR@LB297
002F2E 0100           07213         MOVLB 0
  00000000            07214 RAM_BANK = 0
002F30 0E04           07215         MOVLW 4
002F32 0103           07216         MOVLB 3
  00000003            07217 RAM_BANK = 3
002F34 5DED           07218         SUBWF INDEX,W
002F36 0100           07219         MOVLB 0
  00000000            07220 RAM_BANK = 0
002F38 B0D8           07221         BTFSC STATUS,0,0
                      07222         GO@TO NX@LB298
  00002F3E            07223 F14_000041 EQU $ ; in [WRITE_USERS_SD.INC] TV1 = CRead Word_Var + Index
002F3E 0103           07224         MOVLB 3
  00000003            07225 RAM_BANK = 3
002F40 51ED           07226         MOVF INDEX,W
002F42 25F0           07227         ADDWF WORD_VAR,W
002F44 6EF6           07228         MOVWF TBLPTRL,0
002F46 0E00           07229         MOVLW 0
002F48 21F1           07230         ADDWFC WORD_VARH,W
002F4A 6EF7           07231         MOVWF TBLPTRLH,0
002F4C 6AA6           07232         CLRF EECON1,0
002F4E 8EA6           07233         BSF EECON1,EEPGD,0
002F50 0008           07234         TBLRD*
002F52 CFF5 F3EF      07235         MOVFF TABLAT,TV1
  00002F56            07236 F14_000042 EQU $ ; in [WRITE_USERS_SD.INC] SD_Write_Byte_To_File TV1 'append to file.
002F56 0100           07237         MOVLB 0
  00000000            07238 RAM_BANK = 0
  0002                07239  VARIABLE PRM_1=2
  0000                07240  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07241  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  000A                07242  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07243         SD_WRITE_BYTE_TO_FILE TV1,0,0,0,0,0,0,0,0,0
  000A                07244  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0002                07245  VARIABLE PRM_1=2
  0000                07246  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0001                07247  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=1,LST_PRM_TYPE=2,LST_PRM_NAME=TV1
  00002F60            07248 F14_000043 EQU $ ; in [WRITE_USERS_SD.INC] Next Index
002F60 0103           07249         MOVLB 3
  00000003            07250 RAM_BANK = 3
002F62 2BED           07251         INCF INDEX,F
002F64 0100           07252         MOVLB 0
  00000000            07253 RAM_BANK = 0
002F66 A4D8           07254         BTFSS STATUS,2,0
                      07255         GO@TO FR@LB297
002F6A                07256 NX@LB298
  00002F6A            07257 F14_000044 EQU $ ; in [WRITE_USERS_SD.INC] SD_Write_Byte_To_File ":"
  0008                07258  VARIABLE PRM_1=8
  0000                07259  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07260  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  000A                07261  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
                      07262         SD_WRITE_BYTE_TO_FILE 58,0,0,0,0,0,0,0,0,0
  000A                07263  VARIABLE MAX_PARAMS=10,SD_WRITE_BYTE_TO_FILE_RETURN=0,PRM_COUNT=1
  0008                07264  VARIABLE PRM_1=8
  0000                07265  VARIABLE PRM_2=0,PRM_3=0,PRM_4=0,PRM_5=0,PRM_6=0,PRM_7=0,PRM_8=0,PRM_9=0,PRM_10=0
  0000                07266  VARIABLE SD_WRITE_BYTE_TO_FILE_LST_PRM=0
  00002F74            07267 F14_000045 EQU $ ; in [WRITE_USERS_SD.INC] Word_Var = Word_Var + 16
002F74 0E10           07268         MOVLW 16
002F76 0103           07269         MOVLB 3
  00000003            07270 RAM_BANK = 3
002F78 27F0           07271         ADDWF WORD_VAR,F
002F7A 0E00           07272         MOVLW 0
002F7C 23F1           07273         ADDWFC WORD_VARH,F
  00002F7E            07274 F14_000046 EQU $ ; in [WRITE_USERS_SD.INC] Inc MyCount
002F7E 2BEC           07275         INCF MYCOUNT,F
  00002F80            07276 F14_000047 EQU $ ; in [WRITE_USERS_SD.INC] Print MyCount
002F80 51EC           07277         MOVF MYCOUNT,W
                      07278         F@CALL PRINT
  00002F86            07279 F14_000048 EQU $ ; in [WRITE_USERS_SD.INC] Until MyCount = Index2
002F86 51EC           07280         MOVF MYCOUNT,W
002F88 5DEE           07281         SUBWF INDEX2,W
002F8A 0100           07282         MOVLB 0
  00000000            07283 RAM_BANK = 0
002F8C A4D8           07284         BTFSS STATUS,2,0
                      07285         GO@TO BC@LL294
002F90                07286 BC@LL295
  00002F90            07287 F14_000051 EQU $ ; in [WRITE_USERS_SD.INC] Cls
                      07288         F@CALL LCD@CLS
  00002F94            07289 F14_000052 EQU $ ; in [WRITE_USERS_SD.INC] Print "Done Users"
002F94 0E05           07290         MOVLW ((STR@LB23 >> 8) & 255)
002F96 6EF7           07291         MOVWF TBLPTRLH,0
002F98 0E7E           07292         MOVLW (STR@LB23 & 255)
002F9A 6EF6           07293         MOVWF TBLPTRL,0
                      07294         F@CALL PRINT@MSTR
  00002FA0            07295 F14_000053 EQU $ ; in [WRITE_USERS_SD.INC] Pause 2000
002FA0 0E07           07296         MOVLW 7
002FA2 6E16           07297         MOVWF PP1H,0
002FA4 0ED0           07298         MOVLW 208
                      07299         F@CALL DLY@W
  00002FAA            07300 F14_000054 EQU $ ; in [WRITE_USERS_SD.INC] SD_CLOSE_FILE
  000A                07301  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
                      07302         SD_CLOSE_FILE 0,0,0,0,0,0,0,0,0,0
  000A                07303  VARIABLE MAX_PARAMS=10,SD_CLOSE_FILE_RETURN=0,PRM_COUNT=0
  00002FAE            07304 F14_000055 EQU $ ; in [WRITE_USERS_SD.INC] Return
002FAE 0012           07305         RETURN 0
  00002FB0            07306 F14_EOF EQU $ ; WRITE_USERS_SD.INC
  00002FB0            07307 F15_SOF EQU $ ; READ_MOD.INC
002FB0                07308 READ_MOD
  00002FB0            07309 F15_000003 EQU $ ; in [READ_MOD.INC] For Index = 0 To 7
002FB0 0103           07310         MOVLB 3
  00000003            07311 RAM_BANK = 3
002FB2 6BED           07312         CLRF INDEX
002FB4                07313 FR@LB299
002FB4 0100           07314         MOVLB 0
  00000000            07315 RAM_BANK = 0
002FB6 0E08           07316         MOVLW 8
002FB8 0103           07317         MOVLB 3
  00000003            07318 RAM_BANK = 3
002FBA 5DED           07319         SUBWF INDEX,W
002FBC 0100           07320         MOVLB 0
  00000000            07321 RAM_BANK = 0
002FBE B0D8           07322         BTFSC STATUS,0,0
                      07323         GO@TO NX@LB300
  00002FC4            07324 F15_000004 EQU $ ; in [READ_MOD.INC] ModNum[Index] = CRead 0X9C40 + Index    'Read the Module number into Variable
002FC4 0E40           07325         MOVLW 64
002FC6 0103           07326         MOVLB 3
  00000003            07327 RAM_BANK = 3
002FC8 25ED           07328         ADDWF INDEX,W
002FCA 6AF7           07329         CLRF TBLPTRLH,0
002FCC 6EF6           07330         MOVWF TBLPTRL,0
002FCE 0E9C           07331         MOVLW 156
002FD0 22F7           07332         ADDWFC TBLPTRLH,F,0
002FD2 6AA6           07333         CLRF EECON1,0
002FD4 8EA6           07334         BSF EECON1,EEPGD,0
002FD6 0008           07335         TBLRD*
002FD8 CFF5 F00C      07336         MOVFF TABLAT,PBP#VAR1
002FDC EE03 F0E4      07337         LFSR 0,MODNUM
002FE0 51ED           07338         MOVF INDEX,W
002FE2 C00C FFEB      07339         MOVFF PBP#VAR1,PLUSW0
  00002FE6            07340 F15_000005 EQU $ ; in [READ_MOD.INC] Next
002FE6 2BED           07341         INCF INDEX,F
002FE8 0100           07342         MOVLB 0
  00000000            07343 RAM_BANK = 0
002FEA A4D8           07344         BTFSS STATUS,2,0
                      07345         GO@TO FR@LB299
002FEE                07346 NX@LB300
  00002FEE            07347 F15_000006 EQU $ ; in [READ_MOD.INC] Return
002FEE 0012           07348         RETURN 0
  00002FF0            07349 F15_EOF EQU $ ; READ_MOD.INC
  00002FF0            07350 F16_SOF EQU $ ; GOSLEEP.INC
002FF0                07351 GOSLEEP
  00002FF0            07352 F16_000003 EQU $ ; in [GOSLEEP.INC] Cls
                      07353         F@CALL LCD@CLS
  00002FF4            07354 F16_000004 EQU $ ; in [GOSLEEP.INC] Print At 1,1, "Going to sleep.."
002FF4 0E80           07355         MOVLW 128
002FF6 6E01           07356         MOVWF BPFH,0
002FF8 0E80           07357         MOVLW 128
                      07358         F@CALL LCD@CRS
002FFE 0E05           07359         MOVLW ((STR@LB24 >> 8) & 255)
003000 6EF7           07360         MOVWF TBLPTRLH,0
003002 0E8A           07361         MOVLW (STR@LB24 & 255)
003004 6EF6           07362         MOVWF TBLPTRL,0
                      07363         F@CALL PRINT@MSTR
  0000300A            07364 F16_000005 EQU $ ; in [GOSLEEP.INC] Pause 2000
00300A 0E07           07365         MOVLW 7
00300C 6E16           07366         MOVWF PP1H,0
00300E 0ED0           07367         MOVLW 208
                      07368         F@CALL DLY@W
  00003014            07369 F16_000006 EQU $ ; in [GOSLEEP.INC] INTCON.4 = 1 'Allow a the pulse on PortB.0 to wake program from sleep
003014 88F2           07370         BSF INTCON,4,0
  00003016            07371 F16_000007 EQU $ ; in [GOSLEEP.INC] INTCON.1 = 0  'Clear the interrupt flag for PortB.0
003016 92F2           07372         BCF INTCON,1,0
  00003018            07373 F16_000010 EQU $ ; in [GOSLEEP.INC] Sleep    'Chip goes into low power until it is triggered by a High to Low pulse on PortB.0
003018 0003           07374         SLEEP
  0000301A            07375 F16_000011 EQU $ ; in [GOSLEEP.INC] INTCON.4 = 0 'Stop any pulse from waking up program cause we just woke up
00301A 98F2           07376         BCF INTCON,4,0
  0000301C            07377 F16_000012 EQU $ ; in [GOSLEEP.INC] Cls
                      07378         F@CALL LCD@CLS
  00003020            07379 F16_000013 EQU $ ; in [GOSLEEP.INC] Print At 1,1, "I just woke up!!"
003020 0E80           07380         MOVLW 128
003022 6E01           07381         MOVWF BPFH,0
003024 0E80           07382         MOVLW 128
                      07383         F@CALL LCD@CRS
00302A 0E05           07384         MOVLW ((STR@LB25 >> 8) & 255)
00302C 6EF7           07385         MOVWF TBLPTRLH,0
00302E 0E9C           07386         MOVLW (STR@LB25 & 255)
003030 6EF6           07387         MOVWF TBLPTRL,0
                      07388         F@CALL PRINT@MSTR
  00003036            07389 F16_000018 EQU $ ; in [GOSLEEP.INC] Pause 2000
003036 0E07           07390         MOVLW 7
003038 6E16           07391         MOVWF PP1H,0
00303A 0ED0           07392         MOVLW 208
                      07393         F@CALL DLY@W
  00003040            07394 F16_000026 EQU $ ; in [GOSLEEP.INC] GoTo GoSleep      'Go back to sleep
                      07395         F@JUMP GOSLEEP
  00003042            07396 F16_EOF EQU $ ; GOSLEEP.INC
009C40                07397         ORG 40000
009C40 3241 4237 3338 07398         DB 65,50,55,66,56,51
009C46 0042           07399         DB 66,0
  00009C48            07400 F1_EOF EQU $ ; V2.41 RFID 2ND GENERATION.BAS
                      07401  LIST
                      07402 ;---------------------------------------------
                      07403 
01 18 1F 81 84 0F C0 007404 CONFIG OSC = XT
       F E0 0F 40 
                      07405 CONFIG PWRT = ON
                      07406 CONFIG BOREN = OFF
                      07407 CONFIG MCLRE = ON
                      07408 CONFIG PBADEN = OFF
                      07409 CONFIG STVREN = OFF
                      07410 CONFIG LVP = ON
                      07411         END
MPASM  5.06                      V241RF~1.ASM   4-3-2010  12:14:57         PAGE  4


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
ADRESLH                           00000FC4
AL@MUL                            00000374
AN10                              00000001
AN11                              00000004
AN12                              00000000
AN4                               00000005
AN8                               00000002
AN9                               00000003
BANK0_END                         255
BANK0_START                       128
BANK10_END                        2815
BANK10_START                      2560
BANK11_END                        3071
BANK11_START                      2816
BANK12_END                        3200
BANK12_START                      3072
BANK13_END                        3583
BANK13_START                      3328
BANK14_END                        3839
BANK14_START                      3584
BANK1_END                         511
BANK1_START                       256
BANK2_END                         767
BANK2_START                       512
BANK3_END                         1023
BANK3_START                       768
BANK4_END                         1279
BANK4_START                       1024
BANK5_END                         1535
BANK5_START                       1280
BANK6_END                         1791
BANK6_START                       1536
BANK7_END                         2047
BANK7_START                       1792
BANK8_END                         2303
BANK8_START                       2048
BANK9_END                         2559
BANK9_START                       2304
BANKA_END                         127
BANKA_START                       0
BANKED                            00000001
BAUDCTL                           00000FB8
BC@LL10                           0000067A
BC@LL100                          00000EC4
BC@LL102                          00000EC4
BC@LL108                          00000F44
BC@LL109                          00000F56
BC@LL110                          00000F80
BC@LL111                          00000FC4
BC@LL113                          00001046
BC@LL115                          000012E8
BC@LL117                          000012DC
BC@LL119                          000011A8
BC@LL120                          000012D6
BC@LL122                          000012C8
BC@LL124                          000011FA
BC@LL125                          000012CE
BC@LL126                          000012E0
BC@LL128                          00001330
BC@LL13                           0000067E
BC@LL130                          00001356
BC@LL131                          00001368
BC@LL133                          0000142E
BC@LL134                          00001430
BC@LL135                          00001468
BC@LL137                          0000147A
BC@LL139                          000014AA
BC@LL14                           00000680
BC@LL140                          000014A0
BC@LL141                          000014AA
BC@LL143                          000015CE
BC@LL145                          000016EE
BC@LL147                          0000178E
BC@LL149                          000017EC
BC@LL15                           000006AC
BC@LL150                          000017F0
BC@LL152                          00001986
BC@LL154                          0000194E
BC@LL156                          00001844
BC@LL157                          00001836
BC@LL158                          00001840
BC@LL160                          00001944
BC@LL162                          00001984
BC@LL164                          000019B2
BC@LL166                          000019D4
BC@LL17                           000006BE
BC@LL174                          00001BC0
BC@LL175                          00001BF2
BC@LL176                          00001D22
BC@LL178                          00001CCE
BC@LL18                           000006C0
BC@LL180                          00001D74
BC@LL181                          00001DB0
BC@LL183                          00001E50
BC@LL185                          00001EE8
BC@LL187                          00001EE8
BC@LL189                          00001F28
BC@LL190                          00001F4C
BC@LL191                          00002070
BC@LL193                          00002028
BC@LL195                          00002004
BC@LL197                          000020DA
BC@LL198                          00002148
BC@LL199                          00002120
BC@LL2                            000005EC
BC@LL20                           00000714
BC@LL200                          0000213A
BC@LL201                          00002146
BC@LL205                          0000238E
BC@LL207                          00002406
BC@LL209                          00002434
BC@LL210                          00002438
BC@LL212                          000024DE
BC@LL215                          000024FA
BC@LL222                          00002582
BC@LL225                          00002606
BC@LL226                          000025D6
BC@LL229                          00002604
BC@LL231                          000026A8
BC@LL232                          000026D2
BC@LL233                          00002878
BC@LL235                          00002760
BC@LL237                          0000271E
BC@LL242                          000027E6
BC@LL248                          000028BE
BC@LL250                          0000291C
BC@LL254                          0000295E
BC@LL256                          000029B6
BC@LL257                          000029C8
BC@LL258                          00002A28
BC@LL26                           00000794
BC@LL260                          00002A12
BC@LL261                          00002A1A
BC@LL263                          00002A76
BC@LL267                          00002A9C
BC@LL275                          00002BC0
BC@LL28                           000007A2
BC@LL283                          00002CC4
BC@LL285                          00002D62
BC@LL286                          00002D8C
BC@LL287                          00002E7E
BC@LL293                          00002F14
BC@LL294                          00002F28
BC@LL295                          00002F90
BC@LL3                            000005FE
BC@LL30                           000007C2
BC@LL32                           00000816
BC@LL34                           0000082E
BC@LL40                           00000898
BC@LL42                           000008DC
BC@LL43                           000008FE
BC@LL49                           00000A28
BC@LL5                            00000638
BC@LL51                           00000A28
BC@LL55                           00000ACC
BC@LL56                           00000AD0
BC@LL6                            00000616
BC@LL60                           00000B48
BC@LL64                           00000BB0
BC@LL7                            00000620
BC@LL72                           00000CAA
BC@LL73                           00000CC6
BC@LL74                           00000EC4
BC@LL75                           00000D0E
BC@LL78                           00000D0A
BC@LL8                            0000063E
BC@LL80                           00000DCE
BC@LL84                           00000D60
BC@LL88                           00000DB0
BC@LL90                           00000DCA
BC@LL92                           00000EC4
BC@LL94                           00000EC4
BC@LL96                           00000EC4
BC@LL98                           00000EC4
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BIT_BIT                           
BIT_BYTE                          
BIT_DWORD                         
BIT_FLOAT                         
BIT_WORD                          
BIT_WREG                          
BOR                               00000000
BOREN_NOSLP_2                     000000FD
BOREN_OFF_2                       000000F9
BOREN_ON_2                        000000FB
BOREN_SBORDIS_2                   000000FF
BORV_25_2                         000000FF
BORV_27_2                         000000F7
BORV_42_2                         000000EF
BORV_45_2                         000000E7
BPF                               00000000
BPFH                              00000001
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BUA                               40016
BUAH                              156
BYTE_BIT                          
BYTE_BYTE                         
BYTE_DWORD                        
BYTE_FLOAT                        
BYTE_WORD                         
BYTE_WREG                         
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
C@WRITE                           00000226
CCP1                              00000002
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2MX_PORTBE_3                   000000FE
CCP2MX_PORTC_3                    000000FF
CCP2X                             00000005
CCP2Y                             00000004
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR1LH                           00000FBF
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CCPR2LH                           00000FBC
CFGS                              00000006
CH@SND                            000001E4
CHECK_TAG                         00002984
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLOSE_FILE                        0000291C
CLRC                              BCF STATUS,C
CLRW                              CLRF WREG
CLRZ                              BCF STATUS,Z
CLS                               0000003A
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CN@EQ                             00000024
CONFIG1H                          00300001
CONFIG2H                          00300003
CONFIG2L                          00300002
CONFIG3H                          00300005
CONFIG4L                          00300006
CONFIG5H                          00300009
CONFIG5L                          00300008
CONFIG6H                          0030000B
CONFIG6L                          0030000A
CONFIG7H                          0030000D
CONFIG7L                          0030000C
CONFIG_REQ                        1
CP0_OFF_5                         000000FF
CP0_ON_5                          000000FE
CP1_OFF_5                         000000FF
CP1_ON_5                          000000FD
CP2_OFF_5                         000000FF
CP2_ON_5                          000000FB
CP@LB18                           00000F9C
CP@LB23                           000017E2
CP@LB25                           00001C3C
CP@LB26                           00001CAA
CP@LB28                           00001ED6
CP@LB29                           00001FBC
CP@LB30                           0000206A
CP@LB31                           000023C6
CP@LB4                            000006A4
CP@LB9                            000009DC
CPB_OFF_5                         000000FF
CPB_ON_5                          000000BF
CPD_OFF_5                         000000FF
CPD_ON_5                          0000007F
CR@EXIT                           00000242
CREN                              00000004
CS                                00000002
CSRC                              00000007
CURS@                             00000054
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
D@DIG                             00000094
D@K                               00000368
D@VD                              00000346
D@VD2                             0000034A
DAD5                              00000005
DAD6                              00000006
DAD7                              00000007
DC                                00000001
DDRA                              00000F92
DDRB                              00000F93
DDRC                              00000F94
DDRD                              00000F95
DDRE                              00000F96
DEBUG                             00000FD4
DEBUG_OFF_4                       000000FF
DEBUG_ON_4                        0000007F
DEVID1                            003FFFFE
DEVID2                            003FFFFF
DIVS@32X32EXIT                    00000324
DIVS@32X32LOOP                    000002D2
DIVS@32X32SKIP1                   000002A4
DIVS@32X32SKIP2                   000002B4
DIVS@32X32SKIP4                   00000308
DIVS@32X32SKIP5                   00000314
DL@H                              00000276
DL@MS                             00000248
DL@US                             00000262
DLUS@D                            0000028A
DLUS@LP                           00000270
DLUS@W                            00000264
DLY@P                             0000024C
DLY@W                             0000024A
DV@LP                             0000034E
DWORD_BIT                         
DWORD_BYTE                        
DWORD_DWORD                       
DWORD_FLOAT                       
DWORD_WORD                        
DWORD_WREG                        
D_A                               00000005
EBTR0_OFF_7                       000000FF
EBTR0_ON_7                        000000FE
EBTR1_OFF_7                       000000FF
EBTR1_ON_7                        000000FD
EBTR2_OFF_7                       000000FF
EBTR2_ON_7                        000000FB
EBTRB_OFF_7                       000000FF
EBTRB_ON_7                        000000BF
ECCP1CON                          00000FBD
ECCPAS                            00000FB6
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
ECIO6_OSC_1                       000000F5
EC_OSC_1                          000000F4
EE@RD                             000001F8
EE@RD@W                           000001FC
EE@WR                             00000208
EE@WR@W                           0000020A
EEADR                             00000FA9
EEADRH                            00000FAA
EECON1                            00000FA6
EECON2                            00000FA7
EEDAT                             00000FA8
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
ENHCPU_OFF_4                      0000009F
ENHCPU_ON_4                       000000FF
EX@SEND@IT                        000000C4
F10_000004                        00002984
F10_000005                        00002988
F10_000006                        0000299A
F10_000007                        0000299E
F10_000008                        000029AA
F10_000009                        000029B4
F10_000010                        000029B6
F10_000011                        000029B6
F10_000012                        000029C2
F10_000013                        000029C6
F10_000014                        000029C8
F10_000015                        000029CA
F10_000016                        000029EE
F10_000017                        00002A04
F10_000018                        00002A0A
F10_000019                        00002A12
F10_000020                        00002A12
F10_000021                        00002A16
F10_000022                        00002A1A
F10_000023                        00002A1C
F10_000024                        00002A28
F10_000025                        00002A36
F10_000026                        00002A4A
F10_000027                        00002A6C
F10_000028                        00002A74
F10_000029                        00002A76
F10_000031                        00002A76
F10_000032                        00002A80
F10_000034                        00002A9C
F10_EOF                           00002A9E
F10_SOF                           00002984
F11_000012                        00002A9E
F11_000013                        00002AA6
F11_000014                        00002ABA
F11_000015                        00002AE8
F11_000016                        00002B1C
F11_000017                        00002B4A
F11_000018                        00002B52
F11_000020                        00002B5E
F11_000022                        00002B62
F11_000023                        00002B76
F11_000024                        00002B82
F11_000025                        00002B92
F11_000026                        00002B9A
F11_000027                        00002BA4
F11_000028                        00002BB0
F11_000029                        00002BB4
F11_000030                        00002BC0
F11_000031                        00002BC2
F11_EOF                           00002BC4
F11_SOF                           00002A9E
F12_000013                        00002BC4
F12_000015                        00002BCC
F12_000016                        00002BE0
F12_000017                        00002C16
F12_000018                        00002C52
F12_000019                        00002C5A
F12_000021                        00002C66
F12_000022                        00002C7A
F12_000023                        00002C82
F12_000024                        00002C96
F12_000026                        00002C9E
F12_000027                        00002CA8
F12_000029                        00002CB4
F12_000030                        00002CB8
F12_000031                        00002CC4
F12_000032                        00002CC6
F12_000033                        00002CCA
F12_000034                        00002CCE
F12_000035                        00002CDA
F12_EOF                           00002CDC
F12_SOF                           00002BC4
F13_000013                        00002CDC
F13_000015                        00002CE0
F13_000016                        00002CF8
F13_000017                        00002D08
F13_000019                        00002D1A
F13_000022                        00002D1E
F13_000023                        00002D22
F13_000024                        00002D2C
F13_000025                        00002D3C
F13_000027                        00002D46
F13_000028                        00002D58
F13_000029                        00002D5C
F13_000030                        00002D60
F13_000031                        00002D62
F13_000032                        00002D62
F13_000033                        00002D7A
F13_000034                        00002D7E
F13_000036                        00002D88
F13_000037                        00002D8C
F13_000038                        00002D8E
F13_000039                        00002DA2
F13_000040                        00002DE0
F13_000041                        00002DEA
F13_000042                        00002DF4
F13_000043                        00002DFE
F13_000044                        00002E14
F13_000045                        00002E52
F13_000046                        00002E5C
F13_000047                        00002E66
F13_000048                        00002E70
F13_000049                        00002E74
F13_000050                        00002E7E
F13_000051                        00002E82
F13_EOF                           00002E84
F13_SOF                           00002CDC
F14_000014                        00002E84
F14_000015                        00002E88
F14_000016                        00002EA0
F14_000017                        00002EB0
F14_000020                        00002EC2
F14_000023                        00002EC6
F14_000025                        00002ECA
F14_000026                        00002EDE
F14_000027                        00002EE2
F14_000028                        00002EEE
F14_000029                        00002EF8
F14_000030                        00002F0A
F14_000031                        00002F0E
F14_000032                        00002F12
F14_000033                        00002F14
F14_000036                        00002F14
F14_000037                        00002F1E
F14_000038                        00002F20
F14_000039                        00002F28
F14_000040                        00002F2A
F14_000041                        00002F3E
F14_000042                        00002F56
F14_000043                        00002F60
F14_000044                        00002F6A
F14_000045                        00002F74
F14_000046                        00002F7E
F14_000047                        00002F80
F14_000048                        00002F86
F14_000051                        00002F90
F14_000052                        00002F94
F14_000053                        00002FA0
F14_000054                        00002FAA
F14_000055                        00002FAE
F14_EOF                           00002FB0
F14_SOF                           00002E84
F15_000003                        00002FB0
F15_000004                        00002FC4
F15_000005                        00002FE6
F15_000006                        00002FEE
F15_EOF                           00002FF0
F15_SOF                           00002FB0
F16_000003                        00002FF0
F16_000004                        00002FF4
F16_000005                        0000300A
F16_000006                        00003014
F16_000007                        00003016
F16_000010                        00003018
F16_000011                        0000301A
F16_000012                        0000301C
F16_000013                        00003020
F16_000018                        00003036
F16_000026                        00003040
F16_EOF                           00003042
F16_SOF                           00002FF0
F1_000048                         000023A2
F1_000050                         000023A8
F1_000051                         000023AA
F1_000053                         000023AE
F1_000054                         000023B8
F1_000056                         000023C0
F1_000057                         000023CE
F1_000058                         000023D8
F1_000059                         000023E2
F1_000060                         000023EE
F1_000061                         000023FA
F1_000062                         00002406
F1_000066                         00002408
F1_000067                         0000240E
F1_000068                         00002412
F1_000069                         0000241E
F1_000070                         00002428
F1_000071                         0000242C
F1_000072                         00002434
F1_000073                         00002434
F1_000074                         00002438
F1_000078                         00002438
F1_000079                         0000243C
F1_000080                         00002440
F1_000084                         00002458
F1_000091                         00002462
F1_000093                         00002466
F1_000094                         0000246A
F1_000096                         00002476
F1_000097                         0000247A
F1_000098                         00002488
F1_000099                         0000248C
F1_000100                         000024A2
F1_000101                         000024BA
F1_000102                         000024BE
F1_000103                         000024C2
F1_000104                         000024CE
F1_000105                         000024D8
F1_000106                         000024DE
F1_000107                         000024DE
F1_000108                         000024E2
F1_000109                         000024EE
F1_000110                         000024F8
F1_000111                         000024FA
F1_000112                         000024FA
F1_EOF                            00009C48
F1_SOF                            0000239A
F2_EOF                            0000239A
F2_SOF                            000005C2
F3_EOF                            000005C2
F3_SOF                            000005C2
F4_000001                         000005C2
F4_000109                         000005C6
F4_000110                         000005D4
F4_000111                         000005EC
F4_000112                         000005EC
F4_000113                         000005FE
F4_000114                         00000600
F4_000115                         00000606
F4_000116                         00000616
F4_000117                         00000616
F4_000118                         0000061A
F4_000119                         00000620
F4_000120                         00000624
F4_000121                         00000628
F4_000122                         00000638
F4_000123                         00000638
F4_000124                         0000063E
F4_000125                         00000640
F4_000128                         00000642
F4_000129                         00000648
F4_000130                         00000652
F4_000131                         00000654
F4_000132                         00000662
F4_000133                         00000670
F4_000134                         0000067A
F4_000135                         0000067A
F4_000136                         0000067E
F4_000137                         0000067E
F4_000151                         00000680
F4_000152                         00000680
F4_000153                         00000684
F4_000154                         0000068A
F4_000155                         000006AC
F4_000156                         000006B6
F4_000157                         000006BE
F4_000158                         000006BE
F4_000159                         000006C0
F4_000160                         000006C0
F4_000163                         000006C2
F4_000164                         000006C6
F4_000166                         000006CC
F4_000168                         000006DC
F4_000169                         000006E0
F4_000170                         000006E6
F4_000171                         000006EA
F4_000172                         000006EE
F4_000173                         000006F2
F4_000174                         000006F6
F4_000175                         000006F8
F4_000176                         000006FA
F4_000177                         000006FE
F4_000178                         00000704
F4_000179                         00000706
F4_000181                         00000714
F4_000182                         0000071A
F4_000184                         00000720
F4_000185                         00000722
F4_000186                         00000734
F4_000187                         0000073A
F4_000188                         00000740
F4_000189                         00000742
F4_000190                         00000754
F4_000191                         0000075A
F4_000193                         00000760
F4_000194                         00000764
F4_000195                         0000076A
F4_000197                         0000076E
F4_000198                         00000770
F4_000199                         00000774
F4_000200                         00000778
F4_000201                         0000077C
F4_000202                         0000077E
F4_000203                         00000784
F4_000204                         00000794
F4_000205                         000007A2
F4_000206                         000007A4
F4_000207                         000007A8
F4_000209                         000007AC
F4_000210                         000007B0
F4_000211                         000007B4
F4_000212                         000007C0
F4_000213                         000007C2
F4_000215                         000007C2
F4_000218                         000007C4
F4_000219                         000007C8
F4_000221                         000007CE
F4_000223                         000007DE
F4_000224                         000007E2
F4_000225                         000007E8
F4_000226                         000007EC
F4_000227                         000007F0
F4_000228                         000007F4
F4_000229                         000007F8
F4_000230                         000007FA
F4_000231                         00000800
F4_000232                         00000802
F4_000233                         00000806
F4_000234                         00000808
F4_000236                         00000816
F4_000237                         0000081A
F4_000238                         0000081E
F4_000239                         00000820
F4_000241                         0000082E
F4_000242                         00000830
F4_000243                         00000834
F4_000244                         00000844
F4_000245                         0000084A
F4_000246                         0000084C
F4_000247                         00000850
F4_000248                         00000860
F4_000250                         00000866
F4_000251                         0000086A
F4_000252                         0000086E
F4_000253                         00000872
F4_000254                         00000876
F4_000255                         0000087C
F4_000256                         0000087E
F4_000258                         00000882
F4_000259                         00000886
F4_000260                         0000088A
F4_000261                         00000896
F4_000262                         00000898
F4_000264                         00000898
F4_000267                         0000089A
F4_000268                         000008A8
F4_000269                         000008BA
F4_000270                         000008DC
F4_000271                         000008DC
F4_000272                         000008EE
F4_000273                         000008FE
F4_000274                         00000900
F4_000277                         00000902
F4_000278                         00000932
F4_000279                         0000096E
F4_000280                         0000097E
F4_000281                         00000984
F4_000283                         00000988
F4_000284                         0000099E
F4_000285                         00000A14
F4_000286                         00000A16
F4_000287                         00000A28
F4_000288                         00000A28
F4_000289                         00000A3E
F4_000290                         00000A50
F4_000291                         00000A56
F4_000293                         00000A5A
F4_000294                         00000A74
F4_000295                         00000A7C
F4_000296                         00000A82
F4_000297                         00000A94
F4_000298                         00000A98
F4_000299                         00000AB0
F4_000300                         00000AB2
F4_000301                         00000AC0
F4_000302                         00000ACC
F4_000303                         00000ACC
F4_000304                         00000AD0
F4_000305                         00000AD0
F4_000307                         00000AE6
F4_000308                         00000AEE
F4_000309                         00000AF0
F4_000312                         00000AF4
F4_000313                         00000AF8
F4_000314                         00000B0A
F4_000315                         00000B34
F4_000316                         00000B44
F4_000317                         00000B48
F4_000318                         00000B4A
F4_000319                         00000B54
F4_000320                         00000B58
F4_000321                         00000B6C
F4_000322                         00000B98
F4_000323                         00000BAC
F4_000324                         00000BB0
F4_000325                         00000BB2
F4_000326                         00000BBC
F4_000329                         00000BBE
F4_000330                         00000BC0
F4_000331                         00000BC6
F4_000332                         00000BF4
F4_000333                         00000C28
F4_000334                         00000C38
F4_000335                         00000C3E
F4_000337                         00000C44
F4_000338                         00000C5A
F4_000339                         00000C6E
F4_000340                         00000C7C
F4_000341                         00000C88
F4_000342                         00000CAA
F4_000343                         00000CAA
F4_000344                         00000CC6
F4_000345                         00000CC8
F4_000346                         00000CD2
F4_000347                         00000CD2
F4_000348                         00000CDE
F4_000349                         00000D06
F4_000350                         00000D0A
F4_000351                         00000D0E
F4_000352                         00000D1C
F4_000353                         00000D20
F4_000354                         00000D32
F4_000355                         00000D54
F4_000356                         00000D5A
F4_000357                         00000D60
F4_000358                         00000D60
F4_000359                         00000D6A
F4_000360                         00000D80
F4_000361                         00000DA4
F4_000362                         00000DAA
F4_000363                         00000DB0
F4_000364                         00000DB0
F4_000365                         00000DBA
F4_000366                         00000DCE
F4_000367                         00000DDC
F4_000368                         00000DF8
F4_000369                         00000E08
F4_000370                         00000E1A
F4_000371                         00000E34
F4_000372                         00000E3A
F4_000373                         00000E54
F4_000374                         00000E68
F4_000375                         00000E7E
F4_000376                         00000E86
F4_000377                         00000E9C
F4_000378                         00000EB8
F4_000379                         00000EC0
F4_000380                         00000EC4
F4_000381                         00000EC4
F4_000382                         00000EC4
F4_000383                         00000EC4
F4_000384                         00000EC4
F4_000385                         00000EC4
F4_000386                         00000EC4
F4_000387                         00000EDA
F4_000388                         00000EEC
F4_000389                         00000EF2
F4_000391                         00000EF6
F4_000392                         00000F10
F4_000393                         00000F18
F4_000394                         00000F1A
F4_000397                         00000F1E
F4_000398                         00000F2C
F4_000399                         00000F44
F4_000400                         00000F44
F4_000401                         00000F56
F4_000402                         00000F58
F4_000405                         00000F5A
F4_000406                         00000F62
F4_000407                         00000F6A
F4_000408                         00000F7C
F4_000409                         00000F80
F4_000410                         00000F9C
F4_000411                         00000FA0
F4_000412                         00000FA2
F4_000413                         00000FA8
F4_000414                         00000FAC
F4_000415                         00000FB0
F4_000416                         00000FB6
F4_000417                         00000FBA
F4_000418                         00000FC0
F4_000419                         00000FC4
F4_000422                         00000FC6
F4_000423                         00000FCE
F4_000424                         00000FE0
F4_000425                         00000FE4
F4_000426                         00000FE8
F4_000427                         00000FEE
F4_000428                         00000FF2
F4_000429                         00000FF6
F4_000432                         00000FF8
F4_000433                         00000FFC
F4_000434                         00001000
F4_000435                         00001006
F4_000436                         0000100A
F4_000439                         0000100C
F4_000440                         00001018
F4_000441                         00001038
F4_000442                         00001044
F4_000443                         00001046
F4_000444                         00001048
F4_000445                         0000104E
F4_000446                         0000105E
F4_000447                         0000106A
F4_000448                         0000106C
F4_000449                         00001078
F4_000450                         00001088
F4_000451                         000010B2
F4_000452                         000010BA
F4_000453                         000010C0
F4_000454                         000010D8
F4_000455                         000010DC
F4_000456                         000010E2
F4_000457                         000010EA
F4_000458                         000010EE
F4_000459                         000010F6
F4_000460                         0000113C
F4_000461                         0000114C
F4_000462                         0000115C
F4_000463                         00001160
F4_000464                         00001166
F4_000466                         0000116C
F4_000467                         00001196
F4_000468                         0000119C
F4_000470                         000011A8
F4_000471                         000011A8
F4_000472                         000011AE
F4_000473                         000011BE
F4_000474                         000011C6
F4_000475                         000011D6
F4_000476                         000011DE
F4_000478                         000011E6
F4_000479                         000011EA
F4_000480                         000011FA
F4_000481                         00001214
F4_000482                         00001224
F4_000483                         00001228
F4_000485                         0000122E
F4_000486                         00001230
F4_000487                         00001232
F4_000488                         00001236
F4_000489                         00001250
F4_000490                         00001256
F4_000491                         0000129C
F4_000492                         000012AC
F4_000493                         000012BC
F4_000494                         000012BE
F4_000496                         000012C8
F4_000497                         000012C8
F4_000498                         000012CE
F4_000499                         000012D0
F4_000500                         000012D6
F4_000501                         000012DC
F4_000502                         000012DC
F4_000503                         000012E0
F4_000504                         000012E0
F4_000505                         000012E8
F4_000506                         000012EA
F4_000507                         000012EE
F4_000508                         000012F2
F4_000509                         000012F6
F4_000512                         000012FA
F4_000513                         00001300
F4_000514                         00001306
F4_000517                         00001308
F4_000524                         00001316
F4_000525                         0000131C
F4_000526                         00001326
F4_000527                         0000132A
F4_000528                         00001330
F4_000529                         00001330
F4_000530                         0000133E
F4_000531                         00001356
F4_000532                         00001356
F4_000533                         00001368
F4_000534                         0000136A
F4_000535                         00001370
F4_000541                         00001374
F4_000580                         00001374
F4_000581                         00001378
F4_000582                         0000137A
F4_000583                         0000137C
F4_000584                         00001380
F4_000585                         00001384
F4_000586                         00001386
F4_000587                         00001388
F4_000588                         0000138C
F4_000589                         00001390
F4_000590                         00001392
F4_000591                         00001394
F4_000592                         00001398
F4_000593                         0000139C
F4_000594                         0000139E
F4_000595                         000013A0
F4_000596                         000013A4
F4_000597                         000013A8
F4_000598                         000013AA
F4_000599                         000013AC
F4_000601                         000013B0
F4_000602                         000013B4
F4_000603                         000013B6
F4_000604                         000013B8
F4_000605                         000013BC
F4_000608                         000013BE
F4_000609                         000013C0
F4_000610                         000013C2
F4_000611                         000013C4
F4_000612                         000013C8
F4_000616                         000013CA
F4_000617                         000013CE
F4_000618                         000013D6
F4_000619                         000013DA
F4_000620                         000013DE
F4_000621                         000013E0
F4_000622                         000013E2
F4_000623                         000013E4
F4_000624                         000013E6
F4_000625                         000013E8
F4_000626                         000013EC
F4_000628                         000013EE
F4_000629                         000013F4
F4_000630                         000013F8
F4_000631                         000013FE
F4_000632                         00001400
F4_000633                         00001402
F4_000634                         00001404
F4_000635                         00001406
F4_000636                         0000140A
F4_000637                         0000140E
F4_000638                         00001412
F4_000639                         00001416
F4_000640                         0000141A
F4_000641                         00001424
F4_000642                         00001428
F4_000643                         0000142C
F4_000644                         0000142E
F4_000646                         0000142E
F4_000647                         00001430
F4_000648                         00001430
F4_000649                         00001436
F4_000650                         00001438
F4_000651                         0000143A
F4_000652                         0000143C
F4_000653                         0000143E
F4_000654                         00001440
F4_000655                         00001444
F4_000656                         00001446
F4_000657                         0000144A
F4_000658                         0000144E
F4_000659                         00001450
F4_000660                         00001468
F4_000661                         00001470
F4_000662                         00001474
F4_000663                         00001478
F4_000664                         0000147A
F4_000665                         0000147A
F4_000666                         0000147E
F4_000667                         00001482
F4_000668                         00001486
F4_000669                         0000148C
F4_000670                         0000148E
F4_000676                         00001492
F4_000698                         00001492
F4_000699                         000014A0
F4_000700                         000014A0
F4_000701                         000014A4
F4_000702                         000014AA
F4_000703                         000014AA
F4_000704                         000014C4
F4_000705                         000014D4
F4_000706                         000014D8
F4_000708                         000014DE
F4_000709                         000014EC
F4_000710                         000014F0
F4_000711                         000014F6
F4_000712                         000014FC
F4_000713                         00001500
F4_000714                         00001506
F4_000715                         0000150C
F4_000716                         00001510
F4_000717                         00001516
F4_000718                         0000151C
F4_000719                         00001520
F4_000720                         00001526
F4_000721                         00001534
F4_000722                         0000153A
F4_000723                         0000153E
F4_000724                         0000154E
F4_000725                         00001556
F4_000726                         00001566
F4_000727                         00001580
F4_000728                         00001590
F4_000729                         00001594
F4_000731                         0000159A
F4_000732                         000015A2
F4_000733                         000015A6
F4_000734                         000015AA
F4_000735                         000015AE
F4_000736                         000015C8
F4_000737                         000015CE
F4_000738                         000015CE
F4_000742                         000015D0
F4_000743                         000015FE
F4_000744                         00001604
F4_000746                         0000160C
F4_000747                         00001632
F4_000748                         00001638
F4_000749                         0000163E
F4_000750                         0000166C
F4_000751                         00001672
F4_000752                         00001678
F4_000753                         00001692
F4_000754                         00001698
F4_000755                         0000169E
F4_000756                         000016CE
F4_000757                         000016D4
F4_000763                         000016D6
F4_000787                         000016D6
F4_000788                         000016D8
F4_000789                         000016E4
F4_000790                         000016EA
F4_000791                         000016EE
F4_000792                         000016EE
F4_000793                         000016F4
F4_000794                         000016F8
F4_000795                         000016FC
F4_000796                         00001700
F4_000797                         00001704
F4_000798                         00001708
F4_000799                         0000174C
F4_000800                         0000175C
F4_000801                         00001760
F4_000802                         00001770
F4_000803                         00001774
F4_000805                         0000177A
F4_000806                         00001784
F4_000807                         0000178A
F4_000808                         0000178E
F4_000809                         0000178E
F4_000810                         00001794
F4_000811                         0000179C
F4_000812                         000017E2
F4_000813                         000017EC
F4_000814                         000017EC
F4_000815                         000017F0
F4_000816                         000017F2
F4_000817                         000017F6
F4_000818                         000017FC
F4_000819                         000017FE
F4_000825                         00001802
F4_000853                         00001802
F4_000854                         00001812
F4_000855                         00001818
F4_000856                         00001828
F4_000857                         00001836
F4_000858                         00001836
F4_000859                         0000183A
F4_000860                         00001840
F4_000861                         00001844
F4_000862                         00001846
F4_000863                         00001852
F4_000864                         00001854
F4_000865                         00001860
F4_000866                         0000188A
F4_000867                         00001892
F4_000868                         00001898
F4_000869                         000018B0
F4_000870                         000018B4
F4_000872                         000018BA
F4_000873                         000018C2
F4_000874                         000018C6
F4_000875                         000018CE
F4_000876                         00001914
F4_000877                         00001924
F4_000878                         00001934
F4_000879                         00001938
F4_000881                         0000193E
F4_000882                         00001944
F4_000883                         00001946
F4_000884                         0000194E
F4_000885                         00001950
F4_000886                         00001954
F4_000887                         00001960
F4_000888                         00001986
F4_000889                         00001986
F4_000895                         00001988
F4_000924                         00001988
F4_000949                         00001988
F4_000950                         0000198C
F4_000951                         00001994
F4_000952                         00001998
F4_000953                         0000199C
F4_000954                         000019A2
F4_000955                         000019B2
F4_000956                         000019B6
F4_000957                         000019BC
F4_000958                         000019CA
F4_000959                         000019D0
F4_000960                         000019D4
F4_000961                         000019D4
F4_000962                         000019EE
F4_000963                         000019FE
F4_000964                         00001A02
F4_000966                         00001A08
F4_000967                         00001A1C
F4_000968                         00001A2A
F4_000969                         00001A2C
F4_000970                         00001A32
F4_000971                         00001A3C
F4_000972                         00001A40
F4_000973                         00001A54
F4_000974                         00001A62
F4_000975                         00001A6C
F4_000976                         00001A72
F4_000977                         00001A7C
F4_000978                         00001A92
F4_000979                         00001AA0
F4_000980                         00001AAC
F4_000981                         00001AB2
F4_000982                         00001ABC
F4_000983                         00001ACA
F4_000984                         00001ACE
F4_000985                         00001AD4
F4_000986                         00001AE2
F4_000987                         00001AE8
F4_000988                         00001AF6
F4_000989                         00001AFA
F4_000990                         00001B00
F4_000991                         00001B06
F4_000992                         00001B0A
F4_000993                         00001B10
F4_000994                         00001B14
F4_000995                         00001B5A
F4_000996                         00001B6A
F4_000997                         00001B6E
F4_000998                         00001B7E
F4_000999                         00001B80
F4_001001                         00001B86
F4_001002                         00001B8C
F4_001003                         00001B94
F4_001004                         00001B9C
F4_001005                         00001B9E
F4_001006                         00001BA2
F4_001012                         00001BA6
F4_001030                         00001BA6
F4_001031                         00001BAA
F4_001032                         00001BB6
F4_001033                         00001BBC
F4_001034                         00001BC0
F4_001035                         00001BC0
F4_001036                         00001BC6
F4_001037                         00001BCA
F4_001038                         00001BCE
F4_001039                         00001BD2
F4_001040                         00001BD6
F4_001041                         00001BDA
F4_001042                         00001BEA
F4_001043                         00001BF2
F4_001044                         00001C3C
F4_001045                         00001C66
F4_001046                         00001C6E
F4_001047                         00001C74
F4_001048                         00001CAA
F4_001049                         00001CC4
F4_001050                         00001CC8
F4_001052                         00001CCE
F4_001053                         00001CCE
F4_001054                         00001CD6
F4_001055                         00001CDA
F4_001056                         00001CE2
F4_001057                         00001D1E
F4_001058                         00001D22
F4_001059                         00001D4C
F4_001060                         00001D54
F4_001061                         00001D5A
F4_001062                         00001D6A
F4_001063                         00001D74
F4_001064                         00001D74
F4_001065                         00001DB0
F4_001066                         00001DB2
F4_001067                         00001DF8
F4_001068                         00001E10
F4_001069                         00001E20
F4_001070                         00001E22
F4_001071                         00001E32
F4_001072                         00001E36
F4_001074                         00001E3C
F4_001075                         00001E46
F4_001076                         00001E4C
F4_001077                         00001E50
F4_001078                         00001E50
F4_001079                         00001E78
F4_001080                         00001E80
F4_001081                         00001E8E
F4_001082                         00001ED6
F4_001083                         00001EDE
F4_001084                         00001EE8
F4_001085                         00001EE8
F4_001086                         00001EE8
F4_001087                         00001EF0
F4_001088                         00001EF6
F4_001089                         00001EF8
F4_001090                         00001F08
F4_001091                         00001F0A
F4_001097                         00001F0E
F4_001108                         00001F0E
F4_001109                         00001F12
F4_001110                         00001F1E
F4_001111                         00001F24
F4_001112                         00001F28
F4_001113                         00001F28
F4_001114                         00001F2E
F4_001115                         00001F32
F4_001116                         00001F3A
F4_001117                         00001F3E
F4_001118                         00001F44
F4_001119                         00001F48
F4_001120                         00001F4C
F4_001121                         00001F4E
F4_001122                         00001F78
F4_001123                         00001F80
F4_001124                         00001F86
F4_001125                         00001FBC
F4_001126                         00001FC8
F4_001127                         00001FCC
F4_001128                         00001FFE
F4_001129                         00002004
F4_001130                         00002004
F4_001131                         0000201E
F4_001132                         00002022
F4_001134                         00002028
F4_001135                         00002028
F4_001136                         00002030
F4_001137                         00002034
F4_001138                         0000203C
F4_001139                         00002044
F4_001140                         00002048
F4_001141                         0000204E
F4_001142                         0000205C
F4_001143                         00002062
F4_001144                         00002070
F4_001145                         00002074
F4_001146                         000020A6
F4_001147                         000020AC
F4_001148                         000020B0
F4_001154                         000020B4
F4_001193                         000020B4
F4_001194                         000020C2
F4_001195                         000020D0
F4_001196                         000020D6
F4_001197                         000020DA
F4_001198                         000020DA
F4_001199                         000020E2
F4_001200                         000020E8
F4_001202                         000020EE
F4_001204                         00002114
F4_001205                         00002120
F4_001207                         0000212E
F4_001208                         0000213A
F4_001210                         0000213A
F4_001211                         00002146
F4_001212                         00002148
F4_001213                         00002154
F4_001214                         0000215A
F4_001216                         00002160
F4_001217                         00002166
F4_001218                         0000216A
F4_001219                         0000216E
F4_001220                         00002172
F4_001221                         00002176
F4_001222                         0000217A
F4_001223                         0000217E
F4_001224                         00002182
F4_001225                         00002186
F4_001226                         0000218A
F4_001227                         0000218E
F4_001228                         00002192
F4_001229                         00002196
F4_001230                         0000219A
F4_001231                         000021AE
F4_001232                         000021DA
F4_001233                         00002204
F4_001234                         00002228
F4_001235                         0000223C
F4_001236                         00002256
F4_001238                         0000226E
F4_001239                         0000229C
F4_001240                         000022CA
F4_001241                         000022F8
F4_001243                         00002304
F4_001244                         00002316
F4_001245                         00002324
F4_001246                         00002328
F4_001247                         0000232C
F4_001248                         0000232E
F4_001249                         00002330
F4_001250                         00002332
F4_001251                         00002334
F4_001252                         00002336
F4_001253                         0000233A
F4_001254                         0000233C
F4_001260                         00002340
F4_001318                         00002340
F4_001345                         00002340
F4_001346                         00002352
F4_001347                         00002354
F4_001348                         00002366
F4_001349                         00002378
F4_001350                         0000237E
F4_001351                         0000238E
F4_001352                         00002398
F4_EOF                            0000239A
F4_SOF                            000005C2
F5_000036                         0000239A
F5_EOF                            000023A2
F5_SOF                            0000239A
F6_000012                         000024FC
F6_000013                         00002500
F6_000014                         00002516
F6_000017                         0000252C
F6_000018                         00002530
F6_000020                         00002536
F6_000023                         00002568
F6_000024                         00002570
F6_000025                         00002574
F6_000031                         00002582
F6_000032                         00002596
F6_000033                         000025A2
F6_000034                         000025B8
F6_000035                         000025C4
F6_000036                         000025C6
F6_000038                         000025D6
F6_000039                         000025EA
F6_000040                         000025F6
F6_000041                         000025F8
F6_000042                         000025FA
F6_000044                         00002604
F6_000045                         00002606
F6_000048                         00002610
F6_000049                         00002614
F6_000050                         00002620
F6_000052                         00002622
F6_000054                         00002626
F6_000055                         0000262A
F6_000056                         00002640
F6_000057                         0000264A
F6_EOF                            0000264C
F6_SOF                            000024FC
F7_000012                         0000264C
F7_000014                         00002650
F7_000016                         00002656
F7_000017                         0000266E
F7_000018                         00002680
F7_000021                         00002688
F7_000022                         00002696
F7_000023                         0000269A
F7_000025                         000026A6
F7_000026                         000026A8
F7_000030                         000026A8
F7_000031                         000026B2
F7_000032                         000026BC
F7_000033                         000026C8
F7_000035                         000026D2
F7_000037                         000026E4
F7_000039                         000026EC
F7_000040                         000026FA
F7_000043                         00002708
F7_000044                         00002716
F7_000045                         0000271C
F7_000046                         0000271E
F7_000048                         0000271E
F7_000049                         00002722
F7_000050                         00002738
F7_000051                         0000274E
F7_000052                         00002758
F7_000053                         0000275C
F7_000054                         0000275E
F7_000056                         00002760
F7_000060                         00002760
F7_000061                         00002774
F7_000062                         00002788
F7_000064                         00002790
F7_000066                         00002798
F7_000067                         000027A6
F7_000068                         000027AA
F7_000069                         000027C0
F7_000070                         000027D6
F7_000071                         000027E0
F7_000072                         000027E4
F7_000073                         000027E6
F7_000075                         000027E6
F7_000076                         000027FC
F7_000077                         00002810
F7_000081                         00002818
F7_000082                         0000281C
F7_000083                         0000281E
F7_000084                         00002830
F7_000086                         0000284A
F7_000087                         00002852
F7_000088                         0000285C
F7_000089                         00002866
F7_000090                         00002872
F7_000092                         00002874
F7_EOF                            00002878
F7_SOF                            0000264C
F8_000016                         00002878
F8_000017                         00002894
F8_000018                         000028A6
F8_000019                         000028AE
F8_000020                         000028BA
F8_000021                         000028BE
F8_000022                         000028BE
F8_000023                         000028C2
F8_000025                         000028C6
F8_000026                         000028E2
F8_000027                         000028F4
F8_000028                         000028FC
F8_000029                         0000290A
F8_000030                         0000290E
F8_000032                         0000291A
F8_000033                         0000291C
F8_000039                         0000291C
F8_000040                         00002920
F8_EOF                            00002922
F8_SOF                            00002878
F9_000013                         00002922
F9_000015                         00002936
F9_000016                         00002950
F9_000017                         0000295C
F9_000018                         0000295E
F9_000019                         0000295E
F9_000022                         00002968
F9_000023                         0000296C
F9_000024                         00002978
F9_000025                         00002982
F9_EOF                            00002984
F9_SOF                            00002922
F@CALL                            
F@JUMP                            
FAST                              00000001
FCMEN_OFF_1                       000000BF
FCMEN_ON_1                        000000FF
FERR                              00000002
FLOAT_BIT                         
FLOAT_BYTE                        
FLOAT_DWORD                       
FLOAT_FLOAT                       
FLOAT_WORD                        
FLOAT_WREG                        
FLTS                              00000002
FR@LB104                          00000E58
FR@LB106                          00000E8C
FR@LB12                           00000654
FR@LB168                          00001A0C
FR@LB170                          00001A44
FR@LB172                          00001A82
FR@LB203                          00002356
FR@LB22                           00000722
FR@LB224                          00002586
FR@LB24                           00000742
FR@LB240                          00002764
FR@LB244                          000027EC
FR@LB246                          00002820
FR@LB252                          00002926
FR@LB265                          00002A3A
FR@LB269                          00002AA4
FR@LB271                          00002AAA
FR@LB273                          00002B66
FR@LB277                          00002BCA
FR@LB279                          00002BD0
FR@LB281                          00002C6A
FR@LB289                          00002D92
FR@LB291                          00002E04
FR@LB297                          00002F2E
FR@LB299                          00002FB4
FR@LB36                           00000830
FR@LB38                           0000084C
FR@LB45                           0000094A
FR@LB47                           0000098E
FR@LB53                           00000AA0
FR@LB58                           00000AFA
FR@LB62                           00000B5C
FR@LB66                           00000C04
FR@LB68                           00000C4A
FR@LB70                           00000C5E
FR@LB82                           00000D22
FR@LB86                           00000D70
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR0LH                            00000FEA
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR1LH                            00000FE2
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FSR2LH                            00000FDA
FTO@I_1                           000003F6
FTO@I_2                           0000040C
FTO@I_3                           0000040E
FTO@I_4                           00000412
FTO@I_5                           00000422
FTO@I_6                           00000440
FTO@I_ASSIGNW                     0000045A
FTO@I_OVERFLOW                    00000456
FTO@I_RES0                        00000452
FTO@I_RETURN                      00000464
G@OTO                             
GCEN                              00000007
GEN                               00000002
GEN3H                             00000003
GEN4                              00000004
GEN4H                             00000005
GENH                              00000006
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GO                                00000001
GO@TO                             
GOSLEEP                           00002FF0
GO_DONE                           00000001
GPR                               00000007
H@RSIN                            000001DE
HLVDCON                           00000FD2
HRI@L                             000001B2
HRI@L0                            000001AE
HRSIN                             000001D4
HRSIN2                            0000019C
HSERIAL_BAUD                      00002580
HSERIAL_RCSTA                     00000090
HSERIAL_SPBRG                     00000006
HSERIAL_TXSTA                     00000020
HSPLL_OSC_1                       000000F6
HS_OSC_1                          000000F2
IBF                               00000007
IBOV                              00000005
IDLEN                             00000007
IDLOC0                            00200000
IDLOC1                            00200001
IDLOC2                            00200002
IDLOC3                            00200003
IDLOC4                            00200004
IDLOC5                            00200005
IDLOC6                            00200006
IDLOC7                            00200007
IESO_OFF_1                        0000007F
IESO_ON_1                         000000FF
INDEX                             000003ED
INDEX2                            000003EE
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT_SD                           00002922
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INT@3232                          000003C8
INT@3232_REQ                      00000001
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTIO67_OSC_1                     000000F8
INTIO7_OSC_1                      000000F9
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
JUMP                              
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L@DIV                             0000028C
L@MOD                             0000028C
LABEL_WORD                        
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LCD#DTPIN                         0
LCD#DTPORT                        PORTD
LCD#ENPIN                         6
LCD#ENPORT                        PORTD
LCD#INTERFACE                     4
LCD#LINES                         2
LCD#RSPIN                         7
LCD#RSPORT                        PORTD
LCD#TYPE                          0
LCD@CLS                           00000036
LCD@CRS                           00000050
LOAD@MSTR                         000003B8
LOAD@MSTRL                        000003B8
LP_OSC_1                          000000F0
LST_PRM_NAME                      000003EF
LST_PRM_TYPE                      00000002
LVDCON                            HLVDCON
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVP_OFF_4                         000000FB
LVP_ON_4                          000000FF
MAIN@PROG@START                   000005C2
MAX_PARAMS                        0000000A
MCLRE_OFF_3                       0000007F
MCLRE_ON_3                        000000FF
MHA                               912
MHAH                              3
MLT32@BR                          000003A2
MLT32@LP                          00000380
MODNUM                            000003E4
MODNUM#0                          000003E4
MODNUM#1                          000003E5
MODNUM#2                          000003E6
MODNUM#3                          000003E7
MODNUM#4                          000003E8
MODNUM#5                          000003E9
MODNUM#6                          000003EA
MOVFW                             
MYCOUNT                           000003EC
MYNUM                             000003F2
MYNUM#0                           000003F2
MYNUM#1                           000003F3
MYNUM#2                           000003F4
MYNUM#3                           000003F5
N                                 00000004
NEGW                              NEGF WREG
NEXTTAG                           000029C0
NOT_A                             00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOU                               2
NUM_BIT                           
NUM_BYTE                          
NUM_DWORD                         
NUM_FLOAT                         
NUM_FSR0                          
NUM_FSR1                          
NUM_FSR2                          
NUM_MH                            10
NUM_MHE                           4
NUM_UH                            200
NUM_UHE                           3
NUM_WORD                          
NUM_WREG                          
NX@LB105                          00000E86
NX@LB107                          00000EC0
NX@LB13                           00000676
NX@LB169                          00001A3C
NX@LB171                          00001A7C
NX@LB173                          00001ABC
NX@LB204                          00002398
NX@LB225                          00002610
NX@LB23                           00000740
NX@LB241                          00002790
NX@LB245                          00002818
NX@LB247                          00002852
NX@LB25                           00000760
NX@LB253                          00002968
NX@LB266                          00002A74
NX@LB270                          00002B5E
NX@LB272                          00002B52
NX@LB274                          00002B9A
NX@LB278                          00002C66
NX@LB280                          00002C5A
NX@LB282                          00002C9E
NX@LB290                          00002DF4
NX@LB292                          00002E66
NX@LB298                          00002F6A
NX@LB300                          00002FEE
NX@LB37                           0000084A
NX@LB39                           00000866
NX@LB46                           00000A50
NX@LB48                           00000A3E
NX@LB54                           00000AE6
NX@LB59                           00000B54
NX@LB63                           00000BBC
NX@LB67                           00000EEC
NX@LB69                           00000EDA
NX@LB71                           00000CD2
NX@LB83                           00000D6A
NX@LB87                           00000DBA
OBF                               00000006
OERR                              00000001
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OUT@DEC                           00000068
OUT@DECB                          00000062
OUT@DECC                          00000064
OV                                00000003
OVERLIBCODE                       0000239A
P                                 00000004
P1B                               00000005
P1C                               00000006
P1D                               00000007
P1M0                              00000006
P1M1                              00000007
PB@LB217                          000024FA
PB@LB218                          0000253E
PB@LB221                          00002556
PB@LB239                          0000275C
PBADEN_OFF_3                      000000FD
PBADEN_ON_3                       000000FF
PBP#VAR0                          00000008
PBP#VAR0H                         00000009
PBP#VAR0HH                        0000000A
PBP#VAR0HHH                       0000000B
PBP#VAR1                          0000000C
PBP_AARG                          0000000D
PBP_AARGH                         0000000E
PBP_AARGHH                        0000000F
PBP_AARGHHH                       00000010
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PP0                               00000011
PP0H                              00000012
PP0HH                             00000013
PP0HHH                            00000014
PP1                               00000015
PP1H                              00000016
PP1HH                             00000017
PP1HHH                            00000018
PP2                               00000019
PP2H                              0000001A
PP2HH                             0000001B
PP2HHH                            0000001C
PP3                               0000001D
PP3H                              0000001E
PP4                               0000001F
PP5                               00000020
PP6                               00000021
PP6H                              00000022
PP7                               00000023
PP7H                              00000024
PP7HH                             00000025
PP7HHH                            00000026
PP8                               00000027
PP8H                              00000028
PPZ                               00000029
PPZH                              0000002A
PPZHH                             0000002B
PPZHHH                            0000002C
PR2                               00000FCB
PR@CC                             0000016E
PR@CM                             00000150
PR@EX                             00000198
PR@LP                             0000017A
PR@SD                             00000176
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PRINT                             000000F8
PRINT@MSTR                        000000E8
PRINT@MSTRL                       000000E8
PRM_1                             00000008
PRM_10                            00000000
PRM_2                             00000000
PRM_3                             00000000
PRM_4                             00000000
PRM_5                             00000000
PRM_6                             00000000
PRM_7                             00000000
PRM_8                             00000000
PRM_9                             00000000
PRM_COUNT                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRODLH                            00000FF4
PRSEN                             00000007
PRT@1                             00000152
PRT@MTEXT                         000000F6
PRT@MTL1                          000000EC
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PWM1CON                           00000FB7
PWRT_OFF_2                        000000FF
PWRT_ON_2                         000000FE
R                                 00000002
R@B                               
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANK                          00000000
RAM_BANKS                         15
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIO6_OSC_1                       000000F7
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RC_OSC_1                          000000F3
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_MOD                          00002FB0
READ_SD                           0000264C
READ_TAG                          000024FC
RESPONSE                          000003EB
RETURN_TYPE                       00000002
RETURN_VAR                        000003EB
RFIDENABLE                        PORTD,4
RI                                00000004
RLF                               
RRF                               
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
S@B                               
SB@STROUT                         000000C6
SB@STROUTLP                       000000C8
SBOREN                            00000006
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDI                               00000004
SDO                               00000005
SD_ADDRESS                        00000038
SD_ADDRESSH                       00000039
SD_ADDRESSHH                      0000003A
SD_ADDRESSHHH                     0000003B
SD_APPEND_FILE                    
SD_APPEND_FILE#REQ                1
SD_APPEND_FILE_RETURN             00000001
SD_APPEND_FILE_SUB                00001BA6
SD_ASSEMBLE_FAT_SECTOR            00000F5A
SD_ASSEMBLE_FAT_SECTOR_END_CLOSE  00000FF8
SD_ASSEMBLE_FAT_SECTOR_END_CONT   00000FC6
SD_BOOT_RECORD                    00000265
SD_BOOT_RECORDH                   00000266
SD_BUFFER0                        00000041
SD_BUFFER0#0                      00000041
SD_BUFFER0#1                      00000042
SD_BUFFER0#10                     0000004B
SD_BUFFER0#100                    000000A5
SD_BUFFER0#101                    000000A6
SD_BUFFER0#102                    000000A7
SD_BUFFER0#103                    000000A8
SD_BUFFER0#104                    000000A9
SD_BUFFER0#105                    000000AA
SD_BUFFER0#106                    000000AB
SD_BUFFER0#107                    000000AC
SD_BUFFER0#108                    000000AD
SD_BUFFER0#109                    000000AE
SD_BUFFER0#11                     0000004C
SD_BUFFER0#110                    000000AF
SD_BUFFER0#111                    000000B0
SD_BUFFER0#112                    000000B1
SD_BUFFER0#113                    000000B2
SD_BUFFER0#114                    000000B3
SD_BUFFER0#115                    000000B4
SD_BUFFER0#116                    000000B5
SD_BUFFER0#117                    000000B6
SD_BUFFER0#118                    000000B7
SD_BUFFER0#119                    000000B8
SD_BUFFER0#12                     0000004D
SD_BUFFER0#120                    000000B9
SD_BUFFER0#121                    000000BA
SD_BUFFER0#122                    000000BB
SD_BUFFER0#123                    000000BC
SD_BUFFER0#124                    000000BD
SD_BUFFER0#125                    000000BE
SD_BUFFER0#126                    000000BF
SD_BUFFER0#127                    000000C0
SD_BUFFER0#128                    000000C1
SD_BUFFER0#129                    000000C2
SD_BUFFER0#13                     0000004E
SD_BUFFER0#130                    000000C3
SD_BUFFER0#131                    000000C4
SD_BUFFER0#132                    000000C5
SD_BUFFER0#133                    000000C6
SD_BUFFER0#134                    000000C7
SD_BUFFER0#135                    000000C8
SD_BUFFER0#136                    000000C9
SD_BUFFER0#137                    000000CA
SD_BUFFER0#138                    000000CB
SD_BUFFER0#139                    000000CC
SD_BUFFER0#14                     0000004F
SD_BUFFER0#140                    000000CD
SD_BUFFER0#141                    000000CE
SD_BUFFER0#142                    000000CF
SD_BUFFER0#143                    000000D0
SD_BUFFER0#144                    000000D1
SD_BUFFER0#145                    000000D2
SD_BUFFER0#146                    000000D3
SD_BUFFER0#147                    000000D4
SD_BUFFER0#148                    000000D5
SD_BUFFER0#149                    000000D6
SD_BUFFER0#15                     00000050
SD_BUFFER0#150                    000000D7
SD_BUFFER0#151                    000000D8
SD_BUFFER0#152                    000000D9
SD_BUFFER0#153                    000000DA
SD_BUFFER0#154                    000000DB
SD_BUFFER0#155                    000000DC
SD_BUFFER0#156                    000000DD
SD_BUFFER0#157                    000000DE
SD_BUFFER0#158                    000000DF
SD_BUFFER0#159                    000000E0
SD_BUFFER0#16                     00000051
SD_BUFFER0#160                    000000E1
SD_BUFFER0#161                    000000E2
SD_BUFFER0#162                    000000E3
SD_BUFFER0#163                    000000E4
SD_BUFFER0#164                    000000E5
SD_BUFFER0#165                    000000E6
SD_BUFFER0#166                    000000E7
SD_BUFFER0#167                    000000E8
SD_BUFFER0#168                    000000E9
SD_BUFFER0#169                    000000EA
SD_BUFFER0#17                     00000052
SD_BUFFER0#170                    000000EB
SD_BUFFER0#171                    000000EC
SD_BUFFER0#172                    000000ED
SD_BUFFER0#173                    000000EE
SD_BUFFER0#174                    000000EF
SD_BUFFER0#175                    000000F0
SD_BUFFER0#176                    000000F1
SD_BUFFER0#177                    000000F2
SD_BUFFER0#178                    000000F3
SD_BUFFER0#179                    000000F4
SD_BUFFER0#18                     00000053
SD_BUFFER0#180                    000000F5
SD_BUFFER0#181                    000000F6
SD_BUFFER0#182                    000000F7
SD_BUFFER0#183                    000000F8
SD_BUFFER0#184                    000000F9
SD_BUFFER0#185                    000000FA
SD_BUFFER0#186                    000000FB
SD_BUFFER0#187                    000000FC
SD_BUFFER0#188                    000000FD
SD_BUFFER0#189                    000000FE
SD_BUFFER0#19                     00000054
SD_BUFFER0#190                    000000FF
SD_BUFFER0#191                    00000100
SD_BUFFER0#192                    00000101
SD_BUFFER0#193                    00000102
SD_BUFFER0#194                    00000103
SD_BUFFER0#195                    00000104
SD_BUFFER0#196                    00000105
SD_BUFFER0#197                    00000106
SD_BUFFER0#198                    00000107
SD_BUFFER0#199                    00000108
SD_BUFFER0#2                      00000043
SD_BUFFER0#20                     00000055
SD_BUFFER0#200                    00000109
SD_BUFFER0#201                    0000010A
SD_BUFFER0#202                    0000010B
SD_BUFFER0#203                    0000010C
SD_BUFFER0#204                    0000010D
SD_BUFFER0#205                    0000010E
SD_BUFFER0#206                    0000010F
SD_BUFFER0#207                    00000110
SD_BUFFER0#208                    00000111
SD_BUFFER0#209                    00000112
SD_BUFFER0#21                     00000056
SD_BUFFER0#210                    00000113
SD_BUFFER0#211                    00000114
SD_BUFFER0#212                    00000115
SD_BUFFER0#213                    00000116
SD_BUFFER0#214                    00000117
SD_BUFFER0#215                    00000118
SD_BUFFER0#216                    00000119
SD_BUFFER0#217                    0000011A
SD_BUFFER0#218                    0000011B
SD_BUFFER0#219                    0000011C
SD_BUFFER0#22                     00000057
SD_BUFFER0#220                    0000011D
SD_BUFFER0#221                    0000011E
SD_BUFFER0#222                    0000011F
SD_BUFFER0#223                    00000120
SD_BUFFER0#224                    00000121
SD_BUFFER0#225                    00000122
SD_BUFFER0#226                    00000123
SD_BUFFER0#227                    00000124
SD_BUFFER0#228                    00000125
SD_BUFFER0#229                    00000126
SD_BUFFER0#23                     00000058
SD_BUFFER0#230                    00000127
SD_BUFFER0#231                    00000128
SD_BUFFER0#232                    00000129
SD_BUFFER0#233                    0000012A
SD_BUFFER0#234                    0000012B
SD_BUFFER0#235                    0000012C
SD_BUFFER0#236                    0000012D
SD_BUFFER0#237                    0000012E
SD_BUFFER0#238                    0000012F
SD_BUFFER0#239                    00000130
SD_BUFFER0#24                     00000059
SD_BUFFER0#240                    00000131
SD_BUFFER0#241                    00000132
SD_BUFFER0#242                    00000133
SD_BUFFER0#243                    00000134
SD_BUFFER0#244                    00000135
SD_BUFFER0#245                    00000136
SD_BUFFER0#246                    00000137
SD_BUFFER0#247                    00000138
SD_BUFFER0#248                    00000139
SD_BUFFER0#249                    0000013A
SD_BUFFER0#25                     0000005A
SD_BUFFER0#250                    0000013B
SD_BUFFER0#251                    0000013C
SD_BUFFER0#252                    0000013D
SD_BUFFER0#253                    0000013E
SD_BUFFER0#254                    0000013F
SD_BUFFER0#255                    00000140
SD_BUFFER0#26                     0000005B
SD_BUFFER0#27                     0000005C
SD_BUFFER0#28                     0000005D
SD_BUFFER0#29                     0000005E
SD_BUFFER0#3                      00000044
SD_BUFFER0#30                     0000005F
SD_BUFFER0#31                     00000060
SD_BUFFER0#32                     00000061
SD_BUFFER0#33                     00000062
SD_BUFFER0#34                     00000063
SD_BUFFER0#35                     00000064
SD_BUFFER0#36                     00000065
SD_BUFFER0#37                     00000066
SD_BUFFER0#38                     00000067
SD_BUFFER0#39                     00000068
SD_BUFFER0#4                      00000045
SD_BUFFER0#40                     00000069
SD_BUFFER0#41                     0000006A
SD_BUFFER0#42                     0000006B
SD_BUFFER0#43                     0000006C
SD_BUFFER0#44                     0000006D
SD_BUFFER0#45                     0000006E
SD_BUFFER0#46                     0000006F
SD_BUFFER0#47                     00000070
SD_BUFFER0#48                     00000071
SD_BUFFER0#49                     00000072
SD_BUFFER0#5                      00000046
SD_BUFFER0#50                     00000073
SD_BUFFER0#51                     00000074
SD_BUFFER0#52                     00000075
SD_BUFFER0#53                     00000076
SD_BUFFER0#54                     00000077
SD_BUFFER0#55                     00000078
SD_BUFFER0#56                     00000079
SD_BUFFER0#57                     0000007A
SD_BUFFER0#58                     0000007B
SD_BUFFER0#59                     0000007C
SD_BUFFER0#6                      00000047
SD_BUFFER0#60                     0000007D
SD_BUFFER0#61                     0000007E
SD_BUFFER0#62                     0000007F
SD_BUFFER0#63                     00000080
SD_BUFFER0#64                     00000081
SD_BUFFER0#65                     00000082
SD_BUFFER0#66                     00000083
SD_BUFFER0#67                     00000084
SD_BUFFER0#68                     00000085
SD_BUFFER0#69                     00000086
SD_BUFFER0#7                      00000048
SD_BUFFER0#70                     00000087
SD_BUFFER0#71                     00000088
SD_BUFFER0#72                     00000089
SD_BUFFER0#73                     0000008A
SD_BUFFER0#74                     0000008B
SD_BUFFER0#75                     0000008C
SD_BUFFER0#76                     0000008D
SD_BUFFER0#77                     0000008E
SD_BUFFER0#78                     0000008F
SD_BUFFER0#79                     00000090
SD_BUFFER0#8                      00000049
SD_BUFFER0#80                     00000091
SD_BUFFER0#81                     00000092
SD_BUFFER0#82                     00000093
SD_BUFFER0#83                     00000094
SD_BUFFER0#84                     00000095
SD_BUFFER0#85                     00000096
SD_BUFFER0#86                     00000097
SD_BUFFER0#87                     00000098
SD_BUFFER0#88                     00000099
SD_BUFFER0#89                     0000009A
SD_BUFFER0#9                      0000004A
SD_BUFFER0#90                     0000009B
SD_BUFFER0#91                     0000009C
SD_BUFFER0#92                     0000009D
SD_BUFFER0#93                     0000009E
SD_BUFFER0#94                     0000009F
SD_BUFFER0#95                     000000A0
SD_BUFFER0#96                     000000A1
SD_BUFFER0#97                     000000A2
SD_BUFFER0#98                     000000A3
SD_BUFFER0#99                     000000A4
SD_BUFFER1                        00000141
SD_BUFFER1#0                      00000141
SD_BUFFER1#1                      00000142
SD_BUFFER1#10                     0000014B
SD_BUFFER1#100                    000001A5
SD_BUFFER1#101                    000001A6
SD_BUFFER1#102                    000001A7
SD_BUFFER1#103                    000001A8
SD_BUFFER1#104                    000001A9
SD_BUFFER1#105                    000001AA
SD_BUFFER1#106                    000001AB
SD_BUFFER1#107                    000001AC
SD_BUFFER1#108                    000001AD
SD_BUFFER1#109                    000001AE
SD_BUFFER1#11                     0000014C
SD_BUFFER1#110                    000001AF
SD_BUFFER1#111                    000001B0
SD_BUFFER1#112                    000001B1
SD_BUFFER1#113                    000001B2
SD_BUFFER1#114                    000001B3
SD_BUFFER1#115                    000001B4
SD_BUFFER1#116                    000001B5
SD_BUFFER1#117                    000001B6
SD_BUFFER1#118                    000001B7
SD_BUFFER1#119                    000001B8
SD_BUFFER1#12                     0000014D
SD_BUFFER1#120                    000001B9
SD_BUFFER1#121                    000001BA
SD_BUFFER1#122                    000001BB
SD_BUFFER1#123                    000001BC
SD_BUFFER1#124                    000001BD
SD_BUFFER1#125                    000001BE
SD_BUFFER1#126                    000001BF
SD_BUFFER1#127                    000001C0
SD_BUFFER1#128                    000001C1
SD_BUFFER1#129                    000001C2
SD_BUFFER1#13                     0000014E
SD_BUFFER1#130                    000001C3
SD_BUFFER1#131                    000001C4
SD_BUFFER1#132                    000001C5
SD_BUFFER1#133                    000001C6
SD_BUFFER1#134                    000001C7
SD_BUFFER1#135                    000001C8
SD_BUFFER1#136                    000001C9
SD_BUFFER1#137                    000001CA
SD_BUFFER1#138                    000001CB
SD_BUFFER1#139                    000001CC
SD_BUFFER1#14                     0000014F
SD_BUFFER1#140                    000001CD
SD_BUFFER1#141                    000001CE
SD_BUFFER1#142                    000001CF
SD_BUFFER1#143                    000001D0
SD_BUFFER1#144                    000001D1
SD_BUFFER1#145                    000001D2
SD_BUFFER1#146                    000001D3
SD_BUFFER1#147                    000001D4
SD_BUFFER1#148                    000001D5
SD_BUFFER1#149                    000001D6
SD_BUFFER1#15                     00000150
SD_BUFFER1#150                    000001D7
SD_BUFFER1#151                    000001D8
SD_BUFFER1#152                    000001D9
SD_BUFFER1#153                    000001DA
SD_BUFFER1#154                    000001DB
SD_BUFFER1#155                    000001DC
SD_BUFFER1#156                    000001DD
SD_BUFFER1#157                    000001DE
SD_BUFFER1#158                    000001DF
SD_BUFFER1#159                    000001E0
SD_BUFFER1#16                     00000151
SD_BUFFER1#160                    000001E1
SD_BUFFER1#161                    000001E2
SD_BUFFER1#162                    000001E3
SD_BUFFER1#163                    000001E4
SD_BUFFER1#164                    000001E5
SD_BUFFER1#165                    000001E6
SD_BUFFER1#166                    000001E7
SD_BUFFER1#167                    000001E8
SD_BUFFER1#168                    000001E9
SD_BUFFER1#169                    000001EA
SD_BUFFER1#17                     00000152
SD_BUFFER1#170                    000001EB
SD_BUFFER1#171                    000001EC
SD_BUFFER1#172                    000001ED
SD_BUFFER1#173                    000001EE
SD_BUFFER1#174                    000001EF
SD_BUFFER1#175                    000001F0
SD_BUFFER1#176                    000001F1
SD_BUFFER1#177                    000001F2
SD_BUFFER1#178                    000001F3
SD_BUFFER1#179                    000001F4
SD_BUFFER1#18                     00000153
SD_BUFFER1#180                    000001F5
SD_BUFFER1#181                    000001F6
SD_BUFFER1#182                    000001F7
SD_BUFFER1#183                    000001F8
SD_BUFFER1#184                    000001F9
SD_BUFFER1#185                    000001FA
SD_BUFFER1#186                    000001FB
SD_BUFFER1#187                    000001FC
SD_BUFFER1#188                    000001FD
SD_BUFFER1#189                    000001FE
SD_BUFFER1#19                     00000154
SD_BUFFER1#190                    000001FF
SD_BUFFER1#191                    00000200
SD_BUFFER1#192                    00000201
SD_BUFFER1#193                    00000202
SD_BUFFER1#194                    00000203
SD_BUFFER1#195                    00000204
SD_BUFFER1#196                    00000205
SD_BUFFER1#197                    00000206
SD_BUFFER1#198                    00000207
SD_BUFFER1#199                    00000208
SD_BUFFER1#2                      00000143
SD_BUFFER1#20                     00000155
SD_BUFFER1#200                    00000209
SD_BUFFER1#201                    0000020A
SD_BUFFER1#202                    0000020B
SD_BUFFER1#203                    0000020C
SD_BUFFER1#204                    0000020D
SD_BUFFER1#205                    0000020E
SD_BUFFER1#206                    0000020F
SD_BUFFER1#207                    00000210
SD_BUFFER1#208                    00000211
SD_BUFFER1#209                    00000212
SD_BUFFER1#21                     00000156
SD_BUFFER1#210                    00000213
SD_BUFFER1#211                    00000214
SD_BUFFER1#212                    00000215
SD_BUFFER1#213                    00000216
SD_BUFFER1#214                    00000217
SD_BUFFER1#215                    00000218
SD_BUFFER1#216                    00000219
SD_BUFFER1#217                    0000021A
SD_BUFFER1#218                    0000021B
SD_BUFFER1#219                    0000021C
SD_BUFFER1#22                     00000157
SD_BUFFER1#220                    0000021D
SD_BUFFER1#221                    0000021E
SD_BUFFER1#222                    0000021F
SD_BUFFER1#223                    00000220
SD_BUFFER1#224                    00000221
SD_BUFFER1#225                    00000222
SD_BUFFER1#226                    00000223
SD_BUFFER1#227                    00000224
SD_BUFFER1#228                    00000225
SD_BUFFER1#229                    00000226
SD_BUFFER1#23                     00000158
SD_BUFFER1#230                    00000227
SD_BUFFER1#231                    00000228
SD_BUFFER1#232                    00000229
SD_BUFFER1#233                    0000022A
SD_BUFFER1#234                    0000022B
SD_BUFFER1#235                    0000022C
SD_BUFFER1#236                    0000022D
SD_BUFFER1#237                    0000022E
SD_BUFFER1#238                    0000022F
SD_BUFFER1#239                    00000230
SD_BUFFER1#24                     00000159
SD_BUFFER1#240                    00000231
SD_BUFFER1#241                    00000232
SD_BUFFER1#242                    00000233
SD_BUFFER1#243                    00000234
SD_BUFFER1#244                    00000235
SD_BUFFER1#245                    00000236
SD_BUFFER1#246                    00000237
SD_BUFFER1#247                    00000238
SD_BUFFER1#248                    00000239
SD_BUFFER1#249                    0000023A
SD_BUFFER1#25                     0000015A
SD_BUFFER1#250                    0000023B
SD_BUFFER1#251                    0000023C
SD_BUFFER1#252                    0000023D
SD_BUFFER1#253                    0000023E
SD_BUFFER1#254                    0000023F
SD_BUFFER1#255                    00000240
SD_BUFFER1#26                     0000015B
SD_BUFFER1#27                     0000015C
SD_BUFFER1#28                     0000015D
SD_BUFFER1#29                     0000015E
SD_BUFFER1#3                      00000144
SD_BUFFER1#30                     0000015F
SD_BUFFER1#31                     00000160
SD_BUFFER1#32                     00000161
SD_BUFFER1#33                     00000162
SD_BUFFER1#34                     00000163
SD_BUFFER1#35                     00000164
SD_BUFFER1#36                     00000165
SD_BUFFER1#37                     00000166
SD_BUFFER1#38                     00000167
SD_BUFFER1#39                     00000168
SD_BUFFER1#4                      00000145
SD_BUFFER1#40                     00000169
SD_BUFFER1#41                     0000016A
SD_BUFFER1#42                     0000016B
SD_BUFFER1#43                     0000016C
SD_BUFFER1#44                     0000016D
SD_BUFFER1#45                     0000016E
SD_BUFFER1#46                     0000016F
SD_BUFFER1#47                     00000170
SD_BUFFER1#48                     00000171
SD_BUFFER1#49                     00000172
SD_BUFFER1#5                      00000146
SD_BUFFER1#50                     00000173
SD_BUFFER1#51                     00000174
SD_BUFFER1#52                     00000175
SD_BUFFER1#53                     00000176
SD_BUFFER1#54                     00000177
SD_BUFFER1#55                     00000178
SD_BUFFER1#56                     00000179
SD_BUFFER1#57                     0000017A
SD_BUFFER1#58                     0000017B
SD_BUFFER1#59                     0000017C
SD_BUFFER1#6                      00000147
SD_BUFFER1#60                     0000017D
SD_BUFFER1#61                     0000017E
SD_BUFFER1#62                     0000017F
SD_BUFFER1#63                     00000180
SD_BUFFER1#64                     00000181
SD_BUFFER1#65                     00000182
SD_BUFFER1#66                     00000183
SD_BUFFER1#67                     00000184
SD_BUFFER1#68                     00000185
SD_BUFFER1#69                     00000186
SD_BUFFER1#7                      00000148
SD_BUFFER1#70                     00000187
SD_BUFFER1#71                     00000188
SD_BUFFER1#72                     00000189
SD_BUFFER1#73                     0000018A
SD_BUFFER1#74                     0000018B
SD_BUFFER1#75                     0000018C
SD_BUFFER1#76                     0000018D
SD_BUFFER1#77                     0000018E
SD_BUFFER1#78                     0000018F
SD_BUFFER1#79                     00000190
SD_BUFFER1#8                      00000149
SD_BUFFER1#80                     00000191
SD_BUFFER1#81                     00000192
SD_BUFFER1#82                     00000193
SD_BUFFER1#83                     00000194
SD_BUFFER1#84                     00000195
SD_BUFFER1#85                     00000196
SD_BUFFER1#86                     00000197
SD_BUFFER1#87                     00000198
SD_BUFFER1#88                     00000199
SD_BUFFER1#89                     0000019A
SD_BUFFER1#9                      0000014A
SD_BUFFER1#90                     0000019B
SD_BUFFER1#91                     0000019C
SD_BUFFER1#92                     0000019D
SD_BUFFER1#93                     0000019E
SD_BUFFER1#94                     0000019F
SD_BUFFER1#95                     000001A0
SD_BUFFER1#96                     000001A1
SD_BUFFER1#97                     000001A2
SD_BUFFER1#98                     000001A3
SD_BUFFER1#99                     000001A4
SD_BUFFER_IDX                     00000247
SD_BUFFER_IDXH                    00000248
SD_BUFFER_POS                     0000024E
SD_BUFFER_POSH                    0000024F
SD_BYTE0                          00000241
SD_BYTE1                          00000242
SD_BYTE2                          00000243
SD_BYTE3                          00000244
SD_BYTE4                          00000245
SD_BYTE5                          00000246
SD_BYTER                          00000032
SD_BYTES_PER_SEC                  0000025F
SD_BYTES_PER_SECH                 00000260
SD_BYTES_READ                     000002E1
SD_BYTES_READH                    000002E2
SD_BYTES_READHH                   000002E3
SD_BYTES_READHHH                  000002E4
SD_BYTE_RW                        00000249
SD_CHECK_FOR_FILE                 
SD_CHECK_FOR_FILE#REQ             1
SD_CHECK_FOR_FILE_RETURN          00000001
SD_CHECK_FOR_FILE_SUB             000012FA
SD_CLK                            PORTC,3
SD_CLOSE_FILE                     
SD_CLOSE_FILE#REQ                 1
SD_CLOSE_FILE_RETURN              00000000
SD_CLOSE_FILE_SUB                 00001492
SD_CLUSTER_NUM                    000002C5
SD_CLUSTER_NUMH                   000002C6
SD_CLUSTER_NUM_PREV               000002C7
SD_CLUSTER_NUM_PREVH              000002C8
SD_CLUSTER_SEQ_IDX                000002DA
SD_CLUSTER_SEQ_IDXH               000002DB
SD_CLUSTER_SEQ_IDX_PREV           000002DE
SD_CLUSTER_SEQ_IDX_PREVH          000002DF
SD_CLUSTER_SEQ_NUM                000002D8
SD_CLUSTER_SEQ_NUMH               000002D9
SD_CLUSTER_SEQ_NUM_PREV           000002DC
SD_CLUSTER_SEQ_NUM_PREVH          000002DD
SD_CS                             PORTC,2
SD_DATA_AREA                      00000273
SD_DATA_AREAH                     00000274
SD_DATA_AREAHH                    00000275
SD_DATA_AREAHHH                   00000276
SD_DATA_BUFFER_POS                0000028F
SD_DATA_BUFFER_POSH               00000290
SD_DATA_IO                        0000024D
SD_DATA_SEC                       0000028B
SD_DATA_SECH                      0000028C
SD_DATA_SECHH                     0000028D
SD_DATA_SECHHH                    0000028E
SD_DAY                            000002EF
SD_DELETE_FILE                    
SD_DELETE_FILE#REQ                1
SD_DELETE_FILE_RETURN             00000000
SD_DELETE_FILE_SUB                00001F0E
SD_DETECT                         PORTA,1
SD_DI                             PORTC,5
SD_DIR_DIRECTION                  000002E8
SD_DISK_SIZE_KB                   SD_BYTES_READ
SD_DISK_SIZE_KBH                  SD_BYTES_READH
SD_DISK_SIZE_KBHH                 SD_BYTES_READHH
SD_DISK_SIZE_KBHHH                SD_BYTES_READHHH
SD_DO                             PORTC,4
SD_EOF                            _B#VR1,0
SD_EXTENDED_RETURN                0000024B
SD_EXTENDED_RETURN_INT            000002E9
SD_EXTENDED_RETURN_ROOT_DIR       0000024C
SD_FAT1                           00000267
SD_FAT1H                          00000268
SD_FAT1HH                         00000269
SD_FAT1HHH                        0000026A
SD_FAT2                           0000026B
SD_FAT2H                          0000026C
SD_FAT2HH                         0000026D
SD_FAT2HHH                        0000026E
SD_FAT_BUFFER_POS                 0000027D
SD_FAT_BUFFER_POSH                0000027E
SD_FAT_BUFFER_POS_PREV            00000283
SD_FAT_BUFFER_POS_PREVH           00000284
SD_FAT_ENTRY                      00000277
SD_FAT_ENTRYH                     00000278
SD_FAT_SEC                        00000279
SD_FAT_SECH                       0000027A
SD_FAT_SECHH                      0000027B
SD_FAT_SECHHH                     0000027C
SD_FAT_SEC_PREV                   0000027F
SD_FAT_SEC_PREVH                  00000280
SD_FAT_SEC_PREVHH                 00000281
SD_FAT_SEC_PREVHHH                00000282
SD_FILE_EXT                       0000029A
SD_FILE_EXT#0                     0000029A
SD_FILE_EXT#1                     0000029B
SD_FILE_EXT#2                     0000029C
SD_FILE_EXT#3                     0000029D
SD_FILE_NAME                      00000291
SD_FILE_NAME#0                    00000291
SD_FILE_NAME#1                    00000292
SD_FILE_NAME#2                    00000293
SD_FILE_NAME#3                    00000294
SD_FILE_NAME#4                    00000295
SD_FILE_NAME#5                    00000296
SD_FILE_NAME#6                    00000297
SD_FILE_NAME#7                    00000298
SD_FILE_NAME#8                    00000299
SD_FILE_NUM                       000002E6
SD_FILE_NUMH                      000002E7
SD_FILE_SIZE                      000002CC
SD_FILE_SIZEH                     000002CD
SD_FILE_SIZEHH                    000002CE
SD_FILE_SIZEHHH                   000002CF
SD_FILE_SIZE_LEFT                 000002EA
SD_FILE_SIZE_LEFTH                000002EB
SD_FILE_SIZE_LEFTHH               000002EC
SD_FILE_SIZE_LEFTHHH              000002ED
SD_FIND_FREE_CLUSTER              00000902
SD_FIND_ROOT_DIR_ENTRY            00000BBE
SD_FIND_ROOT_DIR_ENTRY_F          000002E0
SD_FIRST                          0
SD_FREE_CLUSTER_NUM               SD_CLUSTER_SEQ_NUM
SD_FREE_CLUSTER_NUMH              SD_CLUSTER_SEQ_NUMH
SD_FREE_SPACE_KB                  SD_BYTES_READ
SD_FREE_SPACE_KBH                 SD_BYTES_READH
SD_FREE_SPACE_KBHH                SD_BYTES_READHH
SD_FREE_SPACE_KBHHH               SD_BYTES_READHHH
SD_HOURS                          000002F5
SD_IDX                            00000033
SD_INIT_FS_MSSP                   
SD_INIT_FS_MSSP#REQ               1
SD_INIT_FS_MSSP_LST_PRM           00000000
SD_INIT_FS_MSSP_RETURN            00000001
SD_INIT_FS_MSSP_SUB               000020B4
SD_INIT_MSSP                      
SD_INIT_MSSP#REQ                  1
SD_INIT_MSSP_LST_PRM              00000001
SD_INIT_MSSP_RETURN               00000001
SD_INIT_MSSP_SUB                  000013CA
SD_INSERT_BYTE_INTO_BUFFER        00000F1E
SD_IO_BYTE                        000002D0
SD_IO_STRING                      000002FB
SD_IO_STRING#0                    000002FB
SD_IO_STRING#1                    000002FC
SD_IO_STRING#10                   00000305
SD_IO_STRING#100                  0000035F
SD_IO_STRING#101                  00000360
SD_IO_STRING#102                  00000361
SD_IO_STRING#103                  00000362
SD_IO_STRING#104                  00000363
SD_IO_STRING#105                  00000364
SD_IO_STRING#106                  00000365
SD_IO_STRING#107                  00000366
SD_IO_STRING#108                  00000367
SD_IO_STRING#109                  00000368
SD_IO_STRING#11                   00000306
SD_IO_STRING#110                  00000369
SD_IO_STRING#111                  0000036A
SD_IO_STRING#112                  0000036B
SD_IO_STRING#113                  0000036C
SD_IO_STRING#114                  0000036D
SD_IO_STRING#115                  0000036E
SD_IO_STRING#116                  0000036F
SD_IO_STRING#117                  00000370
SD_IO_STRING#118                  00000371
SD_IO_STRING#119                  00000372
SD_IO_STRING#12                   00000307
SD_IO_STRING#120                  00000373
SD_IO_STRING#121                  00000374
SD_IO_STRING#122                  00000375
SD_IO_STRING#123                  00000376
SD_IO_STRING#124                  00000377
SD_IO_STRING#125                  00000378
SD_IO_STRING#126                  00000379
SD_IO_STRING#127                  0000037A
SD_IO_STRING#128                  0000037B
SD_IO_STRING#129                  0000037C
SD_IO_STRING#13                   00000308
SD_IO_STRING#130                  0000037D
SD_IO_STRING#131                  0000037E
SD_IO_STRING#132                  0000037F
SD_IO_STRING#133                  00000380
SD_IO_STRING#134                  00000381
SD_IO_STRING#135                  00000382
SD_IO_STRING#136                  00000383
SD_IO_STRING#137                  00000384
SD_IO_STRING#138                  00000385
SD_IO_STRING#139                  00000386
SD_IO_STRING#14                   00000309
SD_IO_STRING#140                  00000387
SD_IO_STRING#141                  00000388
SD_IO_STRING#142                  00000389
SD_IO_STRING#143                  0000038A
SD_IO_STRING#144                  0000038B
SD_IO_STRING#145                  0000038C
SD_IO_STRING#146                  0000038D
SD_IO_STRING#147                  0000038E
SD_IO_STRING#148                  0000038F
SD_IO_STRING#149                  00000390
SD_IO_STRING#15                   0000030A
SD_IO_STRING#150                  00000391
SD_IO_STRING#151                  00000392
SD_IO_STRING#152                  00000393
SD_IO_STRING#153                  00000394
SD_IO_STRING#154                  00000395
SD_IO_STRING#155                  00000396
SD_IO_STRING#156                  00000397
SD_IO_STRING#157                  00000398
SD_IO_STRING#158                  00000399
SD_IO_STRING#159                  0000039A
SD_IO_STRING#16                   0000030B
SD_IO_STRING#160                  0000039B
SD_IO_STRING#161                  0000039C
SD_IO_STRING#162                  0000039D
SD_IO_STRING#163                  0000039E
SD_IO_STRING#164                  0000039F
SD_IO_STRING#165                  000003A0
SD_IO_STRING#166                  000003A1
SD_IO_STRING#167                  000003A2
SD_IO_STRING#168                  000003A3
SD_IO_STRING#169                  000003A4
SD_IO_STRING#17                   0000030C
SD_IO_STRING#170                  000003A5
SD_IO_STRING#171                  000003A6
SD_IO_STRING#172                  000003A7
SD_IO_STRING#173                  000003A8
SD_IO_STRING#174                  000003A9
SD_IO_STRING#175                  000003AA
SD_IO_STRING#176                  000003AB
SD_IO_STRING#177                  000003AC
SD_IO_STRING#178                  000003AD
SD_IO_STRING#179                  000003AE
SD_IO_STRING#18                   0000030D
SD_IO_STRING#180                  000003AF
SD_IO_STRING#181                  000003B0
SD_IO_STRING#182                  000003B1
SD_IO_STRING#183                  000003B2
SD_IO_STRING#184                  000003B3
SD_IO_STRING#185                  000003B4
SD_IO_STRING#186                  000003B5
SD_IO_STRING#187                  000003B6
SD_IO_STRING#188                  000003B7
SD_IO_STRING#189                  000003B8
SD_IO_STRING#19                   0000030E
SD_IO_STRING#190                  000003B9
SD_IO_STRING#191                  000003BA
SD_IO_STRING#192                  000003BB
SD_IO_STRING#193                  000003BC
SD_IO_STRING#194                  000003BD
SD_IO_STRING#195                  000003BE
SD_IO_STRING#196                  000003BF
SD_IO_STRING#197                  000003C0
SD_IO_STRING#198                  000003C1
SD_IO_STRING#199                  000003C2
SD_IO_STRING#2                    000002FD
SD_IO_STRING#20                   0000030F
SD_IO_STRING#200                  000003C3
SD_IO_STRING#21                   00000310
SD_IO_STRING#22                   00000311
SD_IO_STRING#23                   00000312
SD_IO_STRING#24                   00000313
SD_IO_STRING#25                   00000314
SD_IO_STRING#26                   00000315
SD_IO_STRING#27                   00000316
SD_IO_STRING#28                   00000317
SD_IO_STRING#29                   00000318
SD_IO_STRING#3                    000002FE
SD_IO_STRING#30                   00000319
SD_IO_STRING#31                   0000031A
SD_IO_STRING#32                   0000031B
SD_IO_STRING#33                   0000031C
SD_IO_STRING#34                   0000031D
SD_IO_STRING#35                   0000031E
SD_IO_STRING#36                   0000031F
SD_IO_STRING#37                   00000320
SD_IO_STRING#38                   00000321
SD_IO_STRING#39                   00000322
SD_IO_STRING#4                    000002FF
SD_IO_STRING#40                   00000323
SD_IO_STRING#41                   00000324
SD_IO_STRING#42                   00000325
SD_IO_STRING#43                   00000326
SD_IO_STRING#44                   00000327
SD_IO_STRING#45                   00000328
SD_IO_STRING#46                   00000329
SD_IO_STRING#47                   0000032A
SD_IO_STRING#48                   0000032B
SD_IO_STRING#49                   0000032C
SD_IO_STRING#5                    00000300
SD_IO_STRING#50                   0000032D
SD_IO_STRING#51                   0000032E
SD_IO_STRING#52                   0000032F
SD_IO_STRING#53                   00000330
SD_IO_STRING#54                   00000331
SD_IO_STRING#55                   00000332
SD_IO_STRING#56                   00000333
SD_IO_STRING#57                   00000334
SD_IO_STRING#58                   00000335
SD_IO_STRING#59                   00000336
SD_IO_STRING#6                    00000301
SD_IO_STRING#60                   00000337
SD_IO_STRING#61                   00000338
SD_IO_STRING#62                   00000339
SD_IO_STRING#63                   0000033A
SD_IO_STRING#64                   0000033B
SD_IO_STRING#65                   0000033C
SD_IO_STRING#66                   0000033D
SD_IO_STRING#67                   0000033E
SD_IO_STRING#68                   0000033F
SD_IO_STRING#69                   00000340
SD_IO_STRING#7                    00000302
SD_IO_STRING#70                   00000341
SD_IO_STRING#71                   00000342
SD_IO_STRING#72                   00000343
SD_IO_STRING#73                   00000344
SD_IO_STRING#74                   00000345
SD_IO_STRING#75                   00000346
SD_IO_STRING#76                   00000347
SD_IO_STRING#77                   00000348
SD_IO_STRING#78                   00000349
SD_IO_STRING#79                   0000034A
SD_IO_STRING#8                    00000303
SD_IO_STRING#80                   0000034B
SD_IO_STRING#81                   0000034C
SD_IO_STRING#82                   0000034D
SD_IO_STRING#83                   0000034E
SD_IO_STRING#84                   0000034F
SD_IO_STRING#85                   00000350
SD_IO_STRING#86                   00000351
SD_IO_STRING#87                   00000352
SD_IO_STRING#88                   00000353
SD_IO_STRING#89                   00000354
SD_IO_STRING#9                    00000304
SD_IO_STRING#90                   00000355
SD_IO_STRING#91                   00000356
SD_IO_STRING#92                   00000357
SD_IO_STRING#93                   00000358
SD_IO_STRING#94                   00000359
SD_IO_STRING#95                   0000035A
SD_IO_STRING#96                   0000035B
SD_IO_STRING#97                   0000035C
SD_IO_STRING#98                   0000035D
SD_IO_STRING#99                   0000035E
SD_IO_STRING_LENGTH               000002F9
SD_IO_STRING_POS                  000002FA
SD_IS_DIRTY                       000002F6
SD_LAST_CLUSTER                   000002C9
SD_LAST_CLUSTERH                  000002CA
SD_MINUTES                        000002F4
SD_MODIFY_FILE_NAME               00000AF4
SD_MONTH                          000002F0
SD_MSECONDS                       000002F2
SD_NEW_FILE                       
SD_NEW_FILE#REQ                   1
SD_NEW_FILE_RETURN                00000000
SD_NEW_FILE_SUB                   00001988
SD_NEXT                           1
SD_NULL_F                         000002C4
SD_NUM_OF_FATS                    0000025A
SD_NUM_OF_ROOT_ENTRIES            00000261
SD_NUM_OF_ROOT_ENTRIESH           00000262
SD_NUM_OF_SECS                    0000025B
SD_NUM_OF_SECSH                   0000025C
SD_NUM_OF_SECSHH                  0000025D
SD_NUM_OF_SECSHHH                 0000025E
SD_OPEN_FILE                      
SD_OPEN_FILE#REQ                  1
SD_OPEN_FILE_RETURN               00000001
SD_OPEN_FILE_SUB                  000016D6
SD_PREVIOUS                       2
SD_READ_BYTE_FROM_FILE            
SD_READ_BYTE_FROM_FILE#REQ        1
SD_READ_BYTE_FROM_FILE_RETURN     00000001
SD_READ_BYTE_FROM_FILE_SUB        00001802
SD_READ_FAT_ENTRY                 0000089A
SD_READ_SECTOR                    000007C4
SD_READ_SECTOR_END                00000898
SD_READ_SECTOR_ERROR              00000882
SD_READ_SECTOR_START              000007CC
SD_READ_SUB                       00001308
SD_RECEIVE_BYTE                   000013BE
SD_RESERVED_SECS                  00000256
SD_RESERVED_SECSH                 00000257
SD_RETURN                         00000040
SD_RETURN_F                       000002F8
SD_ROOT_DIR                       0000026F
SD_ROOT_DIRH                      00000270
SD_ROOT_DIRHH                     00000271
SD_ROOT_DIRHHH                    00000272
SD_ROOT_DIR_FILE                  0000029E
SD_ROOT_DIR_FILE#0                0000029E
SD_ROOT_DIR_FILE#1                0000029F
SD_ROOT_DIR_FILE#10               000002A8
SD_ROOT_DIR_FILE#11               000002A9
SD_ROOT_DIR_FILE#12               000002AA
SD_ROOT_DIR_FILE#13               000002AB
SD_ROOT_DIR_FILE#14               000002AC
SD_ROOT_DIR_FILE#15               000002AD
SD_ROOT_DIR_FILE#16               000002AE
SD_ROOT_DIR_FILE#17               000002AF
SD_ROOT_DIR_FILE#18               000002B0
SD_ROOT_DIR_FILE#19               000002B1
SD_ROOT_DIR_FILE#2                000002A0
SD_ROOT_DIR_FILE#20               000002B2
SD_ROOT_DIR_FILE#21               000002B3
SD_ROOT_DIR_FILE#22               000002B4
SD_ROOT_DIR_FILE#23               000002B5
SD_ROOT_DIR_FILE#24               000002B6
SD_ROOT_DIR_FILE#25               000002B7
SD_ROOT_DIR_FILE#26               000002B8
SD_ROOT_DIR_FILE#27               000002B9
SD_ROOT_DIR_FILE#28               000002BA
SD_ROOT_DIR_FILE#29               000002BB
SD_ROOT_DIR_FILE#3                000002A1
SD_ROOT_DIR_FILE#30               000002BC
SD_ROOT_DIR_FILE#31               000002BD
SD_ROOT_DIR_FILE#4                000002A2
SD_ROOT_DIR_FILE#5                000002A3
SD_ROOT_DIR_FILE#6                000002A4
SD_ROOT_DIR_FILE#7                000002A5
SD_ROOT_DIR_FILE#8                000002A6
SD_ROOT_DIR_FILE#9                000002A7
SD_ROOT_DIR_FILE_POS              00000250
SD_ROOT_DIR_POS                   00000289
SD_ROOT_DIR_POSH                  0000028A
SD_ROOT_DIR_SEC                   00000285
SD_ROOT_DIR_SECH                  00000286
SD_ROOT_DIR_SECHH                 00000287
SD_ROOT_DIR_SECHHH                00000288
SD_RW_OPTION                      0000024A
SD_RW_PTR                         SD_BYTES_READ
SD_RW_PTRH                        SD_BYTES_READH
SD_RW_PTRHH                       SD_BYTES_READHH
SD_RW_PTRHHH                      SD_BYTES_READHHH
SD_SECONDS                        000002F3
SD_SECS_IN_ROOT                   00000263
SD_SECS_IN_ROOTH                  00000264
SD_SECS_PER_CLUSTER               00000255
SD_SECS_PER_FAT                   00000258
SD_SECS_PER_FATH                  00000259
SD_SECTOR_NUM                     00000034
SD_SECTOR_NUMH                    00000035
SD_SECTOR_NUMHH                   00000036
SD_SECTOR_NUMHHH                  00000037
SD_SECTOR_SUB                     00000642
SD_SEC_IN_CLUSTER                 000002CB
SD_SEC_NUM                        00000251
SD_SEC_NUMH                       00000252
SD_SEC_NUMHH                      00000253
SD_SEC_NUMHHH                     00000254
SD_SEEK_RESPONSE                  00000680
SD_SEEK_RESPONSE_IDX              0000003C
SD_SEEK_RESPONSE_IDXH             0000003D
SD_SEEK_RESPONSE_REQD             0000003E
SD_SEEK_RESPONSE_RETURN           0000003F
SD_SEND_BYTE                      000013B0
SD_SEND_CMD                       00001374
SD_SET_FILE_TIME_CREATE           000015D0
SD_SET_FILE_TIME_MODIFIED         0000160A
SD_SPI_BF                         SSPSTAT,0
SD_SPI_FOSC_04                    0
SD_SPI_FOSC_16                    1
SD_SPI_FOSC_64                    2
SD_SPI_IF                         PIR1,3
SD_SSPSTAT                        000002F7
SD_STORE_CLUSTER_SEQ              00000AE6
SD_STORE_FAT_POSITION             00000A5A
SD_STORE_ROOT_DIRECT_POSITION     00000EF6
SD_TEMP                           000002D2
SD_TEMPH                          000002D3
SD_TEMP_BYTE                      000002D1
SD_TEMP_DWORD                     000002D4
SD_TEMP_DWORDH                    000002D5
SD_TEMP_DWORDHH                   000002D6
SD_TEMP_DWORDHHH                  000002D7
SD_TIMEOUT                        000002EE
SD_WRITE_BUFFER_POS               000002C2
SD_WRITE_BUFFER_POSH              000002C3
SD_WRITE_BYTE_TO_FILE             
SD_WRITE_BYTE_TO_FILE#REQ         1
SD_WRITE_BYTE_TO_FILE_LST_PRM     00000000
SD_WRITE_BYTE_TO_FILE_RETURN      00000000
SD_WRITE_BYTE_TO_FILE_SUB         0000100C
SD_WRITE_SECTOR                   000006C2
SD_WRITE_SECTOR_END               000007C2
SD_WRITE_SECTOR_ERROR             000007AC
SD_WRITE_SECTOR_START             000006CA
SD_WRITE_SEC_NUM                  000002BE
SD_WRITE_SEC_NUMH                 000002BF
SD_WRITE_SEC_NUMHH                000002C0
SD_WRITE_SEC_NUMHHH               000002C1
SD_WRITE_STRING_TO_FILE           
SD_WRITE_STRING_TO_FILE#REQ       1
SD_WRITE_STRING_TO_FILE_RETURN    00000000
SD_WRITE_STRING_TO_FILE_SUB       00002340
SD_WRITE_SUB                      000005C6
SD_YEAR                           000002F1
SEN                               00000000
SEND@IT                           000000A4
SETC                              BSF STATUS,C
SETZ                              BSF STATUS,Z
SKPC                              BTFSS STATUS,C
SKPNC                             BTFSC STATUS,C
SKPNZ                             BTFSC STATUS,Z
SKPZ                              BTFSS STATUS,Z
SL@LB32                           00001620
SL@LB33                           0000165C
SMP                               00000007
SP#P9                             0000002D
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
START                             00002462
START2                            00002462
START@                            000005AE
STATUS                            00000FD8
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
STR@LB1                           00000468
STR@LB10                          000004D4
STR@LB11                          000004E4
STR@LB12                          000004F4
STR@LB13                          000004FE
STR@LB14                          00000508
STR@LB15                          00000514
STR@LB16                          0000051E
STR@LB17                          0000052E
STR@LB18                          00000538
STR@LB19                          00000542
STR@LB2                           00000472
STR@LB20                          00000550
STR@LB21                          00000564
STR@LB22                          0000056E
STR@LB23                          0000057E
STR@LB24                          0000058A
STR@LB25                          0000059C
STR@LB3                           0000047C
STR@LB4                           0000048A
STR@LB5                           00000496
STR@LB6                           000004A4
STR@LB7                           000004AE
STR@LB8                           000004BC
STR@LB9                           000004CA
STVR_OFF_4                        000000FE
STVR_ON_4                         000000FF
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T016BIT                           00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3SYNC                            00000002
T@E                               0000000C
T@EB                              00000008
T@EW                              0000000A
T@GE                              00000012
T@ST                              00000018
TABLAT                            00000FF5
TAGIN                             000003C6
TAGIN#0                           000003C6
TAGIN#1                           000003C7
TAGIN#2                           000003C8
TAGIN#3                           000003C9
TAGIN#4                           000003CA
TAGIN#5                           000003CB
TAGIN#6                           000003CC
TAGIN#7                           000003CD
TAGIN#8                           000003CE
TAGIN#9                           000003CF
TAGOFFSET                         4
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRLH                          00000FF7
TBLPTRU                           00000FF8
TIMEOUT                           00002622
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0LH                            00000FD7
TMR0ON                            00000007
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1LH                            00000FCF
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3LH                            00000FB3
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSLH                             00000FFE
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE4                            00000004
TRISE5                            00000005
TRISE6                            00000006
TRISE7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TV1                               000003EF
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
UHA                               16
UPA_H                             1
UPA_L                             0
USERIN                            000003D0
USERIN#0                          000003D0
USERIN#1                          000003D1
USERIN#2                          000003D2
USERIN#3                          000003D3
USER_POINTER                      000003C4
USER_POINTERH                     000003C5
UTAG                              000003D4
UTAG#0                            000003D4
UTAG#1                            000003D5
UTAG#10                           000003DE
UTAG#11                           000003DF
UTAG#12                           000003E0
UTAG#13                           000003E1
UTAG#14                           000003E2
UTAG#15                           000003E3
UTAG#2                            000003D6
UTAG#3                            000003D7
UTAG#4                            000003D8
UTAG#5                            000003D9
UTAG#6                            000003DA
UTAG#7                            000003DB
UTAG#8                            000003DC
UTAG#9                            000003DD
VCFG0                             00000004
VCFG1                             00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WDTPS_1024_2                      000000F5
WDTPS_128_2                       000000EF
WDTPS_16384_2                     000000FD
WDTPS_16_2                        000000E9
WDTPS_1_2                         000000E1
WDTPS_2048_2                      000000F7
WDTPS_256_2                       000000F1
WDTPS_2_2                         000000E3
WDTPS_32768_2                     000000FF
WDTPS_32_2                        000000EB
WDTPS_4096_2                      000000F9
WDTPS_4_2                         000000E5
WDTPS_512_2                       000000F3
WDTPS_64_2                        000000ED
WDTPS_8192_2                      000000FB
WDTPS_8_2                         000000E7
WDT_OFF_2                         000000FE
WDT_ON_2                          000000FF
WORD_BIT                          
WORD_BYTE                         
WORD_DWORD                        
WORD_FLOAT                        
WORD_VAR                          000003F0
WORD_VARH                         000003F1
WORD_WORD                         
WORD_WREG                         
WR                                00000001
WREG                              00000FE8
WREG_BIT                          
WREG_BYTE                         
WREG_DWORD                        
WREG_FLOAT                        
WREG_WORD                         
WREN                              00000002
WRERR                             00000003
WRITEH                            00002A9E
WRITE_MANAGER                     00002BC4
WRITE_M_SD                        00002CDC
WRITE_SD                          00002878
WRITE_USERS_SD                    00002E84
WRT0_OFF_6                        000000FF
WRT0_ON_6                         000000FE
WRT1_OFF_6                        000000FF
WRT1_ON_6                         000000FD
WRT2_OFF_6                        000000FF
WRT2_ON_6                         000000FB
WRTB_OFF_6                        000000FF
WRTB_ON_6                         000000BF
WRTC_OFF_6                        000000FF
WRTC_ON_6                         000000DF
WRTD_OFF_6                        000000FF
WRTD_ON_6                         0000007F
WUE                               00000001
XTAL                              4
XT_OSC_1                          000000F1
Z                                 00000002
_ADC                              13
_ADC_RES                          10
_AEXP                             0000002E
_B#VR1                            000002E5
_CORE                             16
_CWRITE_BLOCK                     8
_EEPROM                           1024
_FLASH                            1
_FP_FLAGS                         0000002F
_FP_TEMP                          00000030
_I2C_SCL_PIN                      00000003
_I2C_SCL_PORT                     00000F94
_I2C_SDA_PIN                      00000004
_I2C_SDA_PORT                     00000F94
_MAXMEM                           49152
_MAXRAM                           3968
_NOT_ADDRESS                      00000005
_NOT_WRITE                        00000002
_RAM_END                          3839
_SIGN                             00000031
_SYSTEM_VARIABLE_COUNT            50
_USART                            1
_USB                              0
_USELFSR                          1
__18F4525                         1
__HSERIAL_BAUD                    00002580
__HSERIAL_RCSTA                   00000090
__HSERIAL_TXSTA                   00000020
__KEYPAD_PORT                     PORTB
__LCD_DTPIN                       00000000
__LCD_DTPORT                      PORTD
__LCD_ENPIN                       00000006
__LCD_ENPORT                      PORTD
__LCD_INTERFACE                   00000004
__LCD_LINES                       00000002
__LCD_RSPIN                       00000007
__LCD_RSPORT                      PORTD
__LCD_TYPE                        00000000
__XTAL                            00000004


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXX----XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
20C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
21C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
22C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
23C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
24C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
25C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
26C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
27C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
28C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
29C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
3000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
3040 : XX-------------- ---------------- ---------------- ----------------
9C40 : XXXXXXXX-------- ---------------- ---------------- ----------------
0000 : -XXX-XX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used: 12369
Program Memory Bytes Free: 36783


Errors   :     0
Warnings :     0 reported,   199 suppressed
Messages :     1 reported,     1 suppressed


